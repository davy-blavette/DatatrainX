{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../src/stores.js","../src/utils/cnn.js","../src/detail-view/DetailviewUtils.js","../src/detail-view/Dataview.svelte","../src/detail-view/KernelMathView.svelte","../src/detail-view/ConvolutionAnimator.svelte","../src/detail-view/Convolutionview.svelte","../src/detail-view/ActivationAnimator.svelte","../src/detail-view/Activationview.svelte","../src/detail-view/PoolAnimator.svelte","../src/detail-view/Poolview.svelte","../src/detail-view/Softmaxview.svelte","../src/overview/Modal.svelte","../node_modules/svelte-scrollto/src/helper.js","../node_modules/svelte-scrollto/src/index.js","../node_modules/svelte/easing/index.mjs","../src/datatrainx/article/Article.svelte","../src/utils/cnn-tf.js","../src/config.js","../src/overview/draw-utils.js","../src/overview/overview-draw.js","../src/overview/intermediate-utils.js","../src/overview/intermediate-draw.js","../src/overview/flatten-draw.js","../src/datatrainx/Cnn.svelte","../node_modules/@tensorflow/tfjs-core/dist/backends/backend.js","../node_modules/@tensorflow/tfjs-core/dist/util_base.js","../node_modules/@tensorflow/tfjs-core/dist/environment.js","../node_modules/@tensorflow/tfjs-core/dist/global_util.js","../node_modules/@tensorflow/tfjs-core/dist/log.js","../node_modules/@tensorflow/tfjs-core/dist/kernel_registry.js","../node_modules/@tensorflow/tfjs-core/dist/util.js","../node_modules/@tensorflow/tfjs-core/dist/profiler.js","../node_modules/@tensorflow/tfjs-core/dist/tensor_format.js","../node_modules/@tensorflow/tfjs-core/dist/tensor.js","../node_modules/@tensorflow/tfjs-core/dist/types.js","../node_modules/@tensorflow/tfjs-core/dist/tensor_util.js","../node_modules/@tensorflow/tfjs-core/dist/engine.js","../node_modules/@tensorflow/tfjs-core/dist/kernel_names.js","../node_modules/@tensorflow/tfjs-core/dist/tape.js","../node_modules/@tensorflow/tfjs-core/dist/flags.js","../node_modules/@tensorflow/tfjs-core/dist/tensor_util_env.js","../node_modules/@tensorflow/tfjs-core/dist/device_util.js","../node_modules/@tensorflow/tfjs-core/dist/ops/operation.js","../node_modules/@tensorflow/tfjs-core/dist/ops/complex.js","../node_modules/@tensorflow/tfjs-core/dist/ops/tensor_ops_util.js","../node_modules/@tensorflow/tfjs-core/dist/ops/tensor.js","../node_modules/@tensorflow/tfjs-core/dist/io/types.js","../node_modules/@tensorflow/tfjs-core/dist/io/io_utils.js","../node_modules/@tensorflow/tfjs-core/dist/io/router_registry.js","../node_modules/@tensorflow/tfjs-core/dist/io/indexed_db.js","../node_modules/@tensorflow/tfjs-core/dist/io/local_storage.js","../node_modules/@tensorflow/tfjs-core/dist/io/model_management.js","../node_modules/@tensorflow/tfjs-core/dist/platforms/platform_browser.js","../node_modules/@tensorflow/tfjs-core/dist/platforms/platform_node.js","../node_modules/@tensorflow/tfjs-core/dist/ops/cast.js","../node_modules/@tensorflow/tfjs-core/dist/ops/clone.js","../node_modules/@tensorflow/tfjs-core/dist/base_side_effects.js","../node_modules/@tensorflow/tfjs-core/dist/io/progress.js","../node_modules/@tensorflow/tfjs-core/dist/io/weights_loader.js","../node_modules/@tensorflow/tfjs-core/dist/ops/buffer.js","../node_modules/@tensorflow/tfjs-core/dist/ops/print.js","../node_modules/@tensorflow/tfjs-core/dist/ops/mat_mul.js","../node_modules/@tensorflow/tfjs-core/dist/ops/transpose.js","../node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_util.js","../node_modules/@tensorflow/tfjs-core/dist/ops/tensor3d.js","../node_modules/@tensorflow/tfjs-core/dist/ops/browser.js","../node_modules/@tensorflow/tfjs-core/dist/globals.js","../node_modules/@tensorflow/tfjs-core/dist/ops/add.js","../node_modules/@tensorflow/tfjs-core/dist/ops/floorDiv.js","../node_modules/@tensorflow/tfjs-core/dist/ops/div.js","../node_modules/@tensorflow/tfjs-core/dist/ops/mul.js","../node_modules/@tensorflow/tfjs-core/dist/ops/conv_util.js","../node_modules/@tensorflow/tfjs-core/dist/ops/reshape.js","../node_modules/@tensorflow/tfjs-core/dist/ops/avg_pool.js","../node_modules/@tensorflow/tfjs-core/dist/ops/concat.js","../node_modules/@tensorflow/tfjs-core/dist/ops/sigmoid.js","../node_modules/@tensorflow/tfjs-core/dist/ops/slice.js","../node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm.js","../node_modules/@tensorflow/tfjs-core/dist/ops/batchnorm_util.js","../node_modules/@tensorflow/tfjs-core/dist/ops/bincount.js","../node_modules/@tensorflow/tfjs-core/dist/ops/broadcast_to.js","../node_modules/@tensorflow/tfjs-core/dist/ops/clip_by_value.js","../node_modules/@tensorflow/tfjs-core/dist/ops/conv2d.js","../node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d.js","../node_modules/@tensorflow/tfjs-core/dist/ops/where.js","../node_modules/@tensorflow/tfjs-core/dist/ops/exp.js","../node_modules/@tensorflow/tfjs-core/dist/ops/expand_dims.js","../node_modules/@tensorflow/tfjs-core/dist/ops/tile.js","../node_modules/@tensorflow/tfjs-core/dist/ops/fill.js","../node_modules/@tensorflow/tfjs-core/dist/ops/greater.js","../node_modules/@tensorflow/tfjs-core/dist/ops/less_equal.js","../node_modules/@tensorflow/tfjs-core/dist/ops/neg.js","../node_modules/@tensorflow/tfjs-core/dist/ops/max.js","../node_modules/@tensorflow/tfjs-core/dist/ops/sub.js","../node_modules/@tensorflow/tfjs-core/dist/ops/sum.js","../node_modules/@tensorflow/tfjs-core/dist/ops/max_pool.js","../node_modules/@tensorflow/tfjs-core/dist/ops/zeros.js","../node_modules/@tensorflow/tfjs-core/dist/ops/pad.js","../node_modules/@tensorflow/tfjs-core/dist/ops/range.js","../node_modules/@tensorflow/tfjs-core/dist/ops/relu.js","../node_modules/@tensorflow/tfjs-core/dist/ops/round.js","../node_modules/@tensorflow/tfjs-core/dist/ops/scalar.js","../node_modules/@tensorflow/tfjs-core/dist/ops/separable_conv2d.js","../node_modules/@tensorflow/tfjs-core/dist/ops/slice3d.js","../node_modules/@tensorflow/tfjs-core/dist/ops/softmax.js","../node_modules/@tensorflow/tfjs-core/dist/ops/split.js","../node_modules/@tensorflow/tfjs-core/dist/ops/stack.js","../node_modules/@tensorflow/tfjs-core/dist/ops/tensor1d.js","../node_modules/@tensorflow/tfjs-core/dist/ops/tensor2d.js","../node_modules/@tensorflow/tfjs-core/dist/ops/tensor4d.js","../node_modules/@tensorflow/tfjs-core/dist/ops/unstack.js","../node_modules/@tensorflow/tfjs-core/dist/ops/image/crop_and_resize.js","../node_modules/@tensorflow/tfjs-core/dist/ops/image/flip_left_right.js","../node_modules/@tensorflow/tfjs-core/dist/ops/image/grayscale_to_rgb.js","../node_modules/@tensorflow/tfjs-core/dist/ops/image/rotate_with_offset.js","../node_modules/@tensorflow/tfjs-core/dist/ops/nonmax_util.js","../node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression.js","../node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_util.js","../node_modules/@tensorflow/tfjs-core/dist/backends/non_max_suppression_impl.js","../node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_async.js","../node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_with_score.js","../node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_with_score_async.js","../node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_padded.js","../node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression_padded_async.js","../node_modules/@tensorflow/tfjs-core/dist/ops/image/resize_bilinear.js","../node_modules/@tensorflow/tfjs-core/dist/ops/image/transform.js","../node_modules/@tensorflow/tfjs-core/dist/ops/ops.js","../node_modules/@tensorflow/tfjs-core/dist/ops/image/resize_nearest_neighbor.js","../node_modules/@tensorflow/tfjs-core/dist/ops/image/threshold.js","../node_modules/tslib/tslib.es6.js","../packages/datatrainx/build/es6/classes/Dimensions.js","../packages/datatrainx/build/es6/utils/index.js","../packages/datatrainx/build/es6/classes/Point.js","../packages/datatrainx/build/es6/classes/Box.js","../packages/datatrainx/build/es6/classes/BoundingBox.js","../packages/datatrainx/build/es6/classes/ObjectDetection.js","../packages/datatrainx/build/es6/classes/FaceDetection.js","../packages/datatrainx/build/es6/ops/iou.js","../packages/datatrainx/build/es6/ops/nonMaxSuppression.js","../packages/datatrainx/build/es6/ops/normalize.js","../packages/datatrainx/build/es6/ops/index.js","../packages/datatrainx/build/es6/classes/Rect.js","../packages/datatrainx/build/es6/env/index.js","../packages/datatrainx/build/es6/classes/FaceLandmarks.js","../packages/datatrainx/build/es6/ops/minBbox.js","../packages/datatrainx/build/es6/classes/FaceLandmarks5.js","../packages/datatrainx/build/es6/classes/FaceLandmarks68.js","../packages/datatrainx/build/es6/classes/FaceMatch.js","../packages/datatrainx/build/es6/classes/LabeledBox.js","../packages/datatrainx/build/es6/classes/LabeledFaceDescriptors.js","../packages/datatrainx/build/es6/classes/PredictedBox.js","../packages/datatrainx/build/es6/factories/WithFaceDetection.js","../packages/datatrainx/build/es6/env/createBrowserEnv.js","../packages/datatrainx/build/es6/env/createFileSystem.js","../packages/datatrainx/build/es6/env/createNodejsEnv.js","../packages/datatrainx/build/es6/env/isBrowser.js","../packages/datatrainx/build/es6/env/isNodejs.js","../packages/datatrainx/build/es6/draw/DrawTextField.js","../packages/datatrainx/build/es6/dom/resolveInput.js","../packages/datatrainx/build/es6/dom/getContext2dOrThrow.js","../packages/datatrainx/build/es6/draw/DrawBox.js","../packages/datatrainx/build/es6/dom/isMediaLoaded.js","../packages/datatrainx/build/es6/dom/getMediaDimensions.js","../packages/datatrainx/build/es6/dom/createCanvas.js","../packages/datatrainx/build/es6/dom/imageTensorToCanvas.js","../packages/datatrainx/build/es6/dom/isMediaElement.js","../packages/datatrainx/build/es6/dom/NetInput.js","../packages/datatrainx/build/es6/ops/padToSquare.js","../packages/datatrainx/build/es6/dom/imageToSquare.js","../packages/datatrainx/build/es6/dom/toNetInput.js","../packages/datatrainx/build/es6/dom/awaitMediaLoaded.js","../packages/datatrainx/build/es6/dom/extractFaces.js","../packages/datatrainx/build/es6/dom/extractFaceTensors.js","../packages/datatrainx/build/es6/dom/fetchOrThrow.js","../packages/datatrainx/build/es6/dom/fetchJson.js","../packages/datatrainx/build/es6/common/getModelUris.js","../packages/datatrainx/build/es6/dom/loadWeightMap.js","../packages/datatrainx/build/es6/NeuralNetwork.js","../packages/datatrainx/build/es6/common/depthwiseSeparableConv.js","../packages/datatrainx/build/es6/faceFeatureExtractor/denseBlock.js","../packages/datatrainx/build/es6/common/convLayer.js","../packages/datatrainx/build/es6/common/disposeUnusedWeightTensors.js","../packages/datatrainx/build/es6/common/extractConvParamsFactory.js","../packages/datatrainx/build/es6/common/extractFCParamsFactory.js","../packages/datatrainx/build/es6/common/types.js","../packages/datatrainx/build/es6/common/extractSeparableConvParamsFactory.js","../packages/datatrainx/build/es6/common/extractWeightEntryFactory.js","../packages/datatrainx/build/es6/common/extractWeightsFactory.js","../packages/datatrainx/build/es6/faceFeatureExtractor/extractorsFactory.js","../packages/datatrainx/build/es6/common/loadConvParamsFactory.js","../packages/datatrainx/build/es6/faceFeatureExtractor/loadParamsFactory.js","../packages/datatrainx/build/es6/faceFeatureExtractor/FaceFeatureExtractor.js","../packages/datatrainx/build/es6/faceFeatureExtractor/extractParamsFromWeigthMap.js","../packages/datatrainx/build/es6/faceFeatureExtractor/extractParams.js","../packages/datatrainx/build/es6/common/fullyConnectedLayer.js","../packages/datatrainx/build/es6/faceProcessor/util.js","../packages/datatrainx/build/es6/faceProcessor/FaceProcessor.js","../packages/datatrainx/build/es6/faceProcessor/extractParams.js","../packages/datatrainx/build/es6/faceProcessor/extractParamsFromWeigthMap.js","../packages/datatrainx/build/es6/faceExpressionNet/FaceExpressions.js","../packages/datatrainx/build/es6/faceExpressionNet/FaceExpressionNet.js","../packages/datatrainx/build/es6/factories/WithFaceExpressions.js","../packages/datatrainx/build/es6/draw/drawFaceExpressions.js","../packages/datatrainx/build/es6/factories/WithFaceLandmarks.js","../packages/datatrainx/build/es6/xception/extractParams.js","../packages/datatrainx/build/es6/xception/extractParamsFromWeigthMap.js","../packages/datatrainx/build/es6/xception/TinyXception.js","../packages/datatrainx/build/es6/ageGenderNet/types.js","../packages/datatrainx/build/es6/ageGenderNet/AgeGenderNet.js","../packages/datatrainx/build/es6/ageGenderNet/extractParams.js","../packages/datatrainx/build/es6/ageGenderNet/extractParamsFromWeigthMap.js","../packages/datatrainx/build/es6/faceLandmarkNet/FaceLandmark68NetBase.js","../packages/datatrainx/build/es6/faceLandmarkNet/FaceLandmark68Net.js","../packages/datatrainx/build/es6/faceFeatureExtractor/TinyFaceFeatureExtractor.js","../packages/datatrainx/build/es6/faceFeatureExtractor/extractParamsFromWeigthMapTiny.js","../packages/datatrainx/build/es6/faceFeatureExtractor/extractParamsTiny.js","../packages/datatrainx/build/es6/faceLandmarkNet/FaceLandmark68TinyNet.js","../packages/datatrainx/build/es6/faceLandmarkNet/index.js","../packages/datatrainx/build/es6/faceRecognitionNet/convLayer.js","../packages/datatrainx/build/es6/faceRecognitionNet/scaleLayer.js","../packages/datatrainx/build/es6/faceRecognitionNet/extractParams.js","../packages/datatrainx/build/es6/faceRecognitionNet/extractParamsFromWeigthMap.js","../packages/datatrainx/build/es6/faceRecognitionNet/residualLayer.js","../packages/datatrainx/build/es6/faceRecognitionNet/FaceRecognitionNet.js","../packages/datatrainx/build/es6/factories/WithFaceDescriptor.js","../packages/datatrainx/build/es6/factories/WithAge.js","../packages/datatrainx/build/es6/factories/WithGender.js","../packages/datatrainx/build/es6/mtcnn/MtcnnOptions.js","../packages/datatrainx/build/es6/ssdMobilenetv1/extractParams.js","../packages/datatrainx/build/es6/ssdMobilenetv1/extractParamsFromWeigthMap.js","../packages/datatrainx/build/es6/ssdMobilenetv1/pointwiseConvLayer.js","../packages/datatrainx/build/es6/ssdMobilenetv1/mobileNetV1.js","../packages/datatrainx/build/es6/ssdMobilenetv1/nonMaxSuppression.js","../packages/datatrainx/build/es6/ssdMobilenetv1/outputLayer.js","../packages/datatrainx/build/es6/ssdMobilenetv1/boxPredictionLayer.js","../packages/datatrainx/build/es6/ssdMobilenetv1/SsdMobilenetv1Options.js","../packages/datatrainx/build/es6/tinyYolov2/TinyYolov2Options.js","../packages/datatrainx/build/es6/ssdMobilenetv1/SsdMobilenetv1.js","../packages/datatrainx/build/es6/ssdMobilenetv1/predictionLayer.js","../packages/datatrainx/build/es6/tinyYolov2/const.js","../packages/datatrainx/build/es6/ssdMobilenetv1/index.js","../packages/datatrainx/build/es6/tinyYolov2/config.js","../packages/datatrainx/build/es6/tinyYolov2/leaky.js","../packages/datatrainx/build/es6/tinyYolov2/convWithBatchNorm.js","../packages/datatrainx/build/es6/tinyYolov2/depthwiseSeparableConv.js","../packages/datatrainx/build/es6/tinyYolov2/extractParams.js","../packages/datatrainx/build/es6/tinyYolov2/extractParamsFromWeigthMap.js","../packages/datatrainx/build/es6/tinyYolov2/TinyYolov2Base.js","../packages/datatrainx/build/es6/tinyYolov2/TinyYolov2.js","../packages/datatrainx/build/es6/tinyFaceDetector/TinyFaceDetectorOptions.js","../packages/datatrainx/build/es6/globalApi/ComposableTask.js","../packages/datatrainx/build/es6/globalApi/extractFacesAndComputeResults.js","../packages/datatrainx/build/es6/mtcnn/extractParams.js","../packages/datatrainx/build/es6/mtcnn/extractParamsFromWeigthMap.js","../packages/datatrainx/build/es6/mtcnn/getSizesForScale.js","../packages/datatrainx/build/es6/mtcnn/MtcnnBox.js","../packages/datatrainx/build/es6/mtcnn/normalize.js","../packages/datatrainx/build/es6/mtcnn/prelu.js","../packages/datatrainx/build/es6/mtcnn/sharedLayers.js","../packages/datatrainx/build/es6/mtcnn/stage1.js","../packages/datatrainx/build/es6/mtcnn/PNet.js","../packages/datatrainx/build/es6/mtcnn/config.js","../packages/datatrainx/build/es6/mtcnn/extractImagePatches.js","../packages/datatrainx/build/es6/mtcnn/stage2.js","../packages/datatrainx/build/es6/mtcnn/RNet.js","../packages/datatrainx/build/es6/mtcnn/stage3.js","../packages/datatrainx/build/es6/mtcnn/ONet.js","../packages/datatrainx/build/es6/mtcnn/Mtcnn.js","../packages/datatrainx/build/es6/mtcnn/bgrToRgbTensor.js","../packages/datatrainx/build/es6/mtcnn/pyramidDown.js","../packages/datatrainx/build/es6/tinyFaceDetector/const.js","../packages/datatrainx/build/es6/tinyFaceDetector/TinyFaceDetector.js","../packages/datatrainx/build/es6/globalApi/nets.js","../packages/datatrainx/build/es6/globalApi/PredictFaceExpressionsTask.js","../packages/datatrainx/build/es6/globalApi/PredictAgeAndGenderTask.js","../packages/datatrainx/build/es6/globalApi/ComputeFaceDescriptorsTasks.js","../packages/datatrainx/build/es6/globalApi/DetectFaceLandmarksTasks.js","../packages/datatrainx/build/es6/globalApi/DetectFacesTasks.js","../packages/datatrainx/build/es6/globalApi/FaceMatcher.js","../packages/datatrainx/build/es6/euclideanDistance.js","../src/datatrainx/Faceapi.svelte","../packages/datatrainx/build/es6/globalApi/detectFaces.js","../packages/datatrainx/build/es6/resizeResults.js","../packages/datatrainx/build/es6/dom/matchDimensions.js","../packages/datatrainx/build/es6/draw/drawDetections.js","../src/datatrainx/Presentation.svelte","../src/datatrainx/Datatrainx.svelte","../src/datatrainx/Header.svelte","../src/datatrainx/Footer.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.47.0' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    if (tag && typeof tag !== 'string') {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\n\nexport const cnnStore = writable([]);\nexport const svgStore = writable(undefined);\n\nexport const vSpaceAroundGapStore = writable(undefined);\nexport const hSpaceAroundGapStore = writable(undefined);\n\nexport const nodeCoordinateStore = writable([]);\nexport const selectedScaleLevelStore = writable(undefined);\n\nexport const cnnLayerRangesStore = writable({});\nexport const cnnLayerMinMaxStore = writable([]);\n\nexport const needRedrawStore = writable([undefined, undefined]);\n\nexport const detailedModeStore = writable(true);\n\nexport const shouldIntermediateAnimateStore = writable(false);\n\nexport const isInSoftmaxStore = writable(false);\nexport const softmaxDetailViewStore = writable({});\nexport const allowsSoftmaxAnimationStore = writable(false);\n\nexport const hoverInfoStore = writable({});\n\nexport const modalStore = writable({});\n\nexport const intermediateLayerPositionStore = writable({});\n\nexport const leftStartStore = writable(0);\n\nexport const layoutStore = writable(\"Presentation\");","// Enum of node types\nconst nodeType = {\n  INPUT: 'input',\n  CONV: 'conv',\n  POOL: 'pool',\n  RELU: 'relu',\n  FC: 'fc',\n  FLATTEN: 'flatten'\n}\n\nclass Node {\n  /**\n   * Class structure for each neuron node.\n   * \n   * @param {string} layerName Name of the node's layer.\n   * @param {int} index Index of this node in its layer.\n   * @param {string} type Node type {input, conv, pool, relu, fc}. \n   * @param {number} bias The bias assocated to this node.\n   * @param {[[number]]} output Output of this node.\n   */\n  constructor(layerName, index, type, bias, output) {\n    this.layerName = layerName;\n    this.index = index;\n    this.type = type;\n    this.bias = bias;\n    this.output = output;\n\n    // Weights are stored in the links\n    this.inputLinks = [];\n    this.outputLinks = [];\n  }\n}\n\nclass Link {\n  constructor(source, dest, weight) {\n    this.source = source;\n    this.dest = dest;\n    this.weight = weight;\n  }\n}\n\nconst constructNNFromJSON = (nnJSON, inputImageArray) => {\n  console.log(nnJSON);\n  console.log(inputImageArray);\n  let nn = [];\n\n  // Add the first layer (input layer)\n  let inputLayer = [];\n  let inputShape = nnJSON[0].input_shape;\n\n  // First layer's three nodes' outputs are the channels of inputImageArray\n  for (let i = 0; i < inputShape[2]; i++) {\n    let node = new Node('input', i, nodeType.INPUT, 0, inputImageArray[i]);\n    inputLayer.push(node);\n  }\n                                                                                                                   \n  nn.push(inputLayer);\n  let curLayerIndex = 1;\n\n  nnJSON.forEach(layer => {\n    let curLayerNodes = [];\n    let curLayerType;\n\n    if (layer.name.includes('conv')) {\n      curLayerType = nodeType.CONV;\n    } else if (layer.name.includes('pool')) {\n      curLayerType = nodeType.POOL;\n    } else if (layer.name.includes('relu')) {\n      curLayerType = nodeType.RELU;\n    } else if (layer.name.includes('output')) {\n      curLayerType = nodeType.FC;\n    } else if (layer.name.includes('flatten')) {\n      curLayerType = nodeType.FLATTEN;\n    } else {\n      console.log('Find unknown type');\n    }\n\n    let shape = layer.output_shape.slice(0, 2);\n    let bias = 0;\n    let output;\n    if (curLayerType === nodeType.FLATTEN || curLayerType === nodeType.FC) {\n      output = 0;\n    } else {\n      output = init2DArray(shape[0], shape[1], 0);\n    }\n\n    // Add neurons into this layer\n    for (let i = 0; i < layer.num_neurons; i++) {\n      if (curLayerType === nodeType.CONV || curLayerType === nodeType.FC) {\n        bias = layer.weights[i].bias;\n      }\n      let node = new Node(layer.name, i, curLayerType, bias, output)\n\n      // Connect this node to all previous nodes (create links)\n      if (curLayerType === nodeType.CONV || curLayerType === nodeType.FC) {\n        // CONV and FC layers have weights in links. Links are one-to-multiple\n        for (let j = 0; j < nn[curLayerIndex - 1].length; j++) {\n          let preNode = nn[curLayerIndex - 1][j];\n          let curLink = new Link(preNode, node, layer.weights[i].weights[j]);\n          preNode.outputLinks.push(curLink);\n          node.inputLinks.push(curLink);\n        }\n      } else if (curLayerType === nodeType.RELU || curLayerType === nodeType.POOL) {\n        // RELU and POOL layers have no weights. Links are one-to-one\n        let preNode = nn[curLayerIndex - 1][i];\n        let link = new Link(preNode, node, null);\n        preNode.outputLinks.push(link);\n        node.inputLinks.push(link);\n      } else if (curLayerType === nodeType.FLATTEN) {\n        // Flatten layer has no weights. Links are multiple-to-one.\n        // Use dummy weights to store the corresponding entry in the previsou\n        // node as (row, column)\n        // The flatten() in tf2.keras has order: channel -> row -> column\n        let preNodeWidth = nn[curLayerIndex - 1][0].output.length,\n          preNodeNum = nn[curLayerIndex - 1].length,\n          preNodeIndex = i % preNodeNum,\n          preNodeRow = Math.floor(Math.floor(i / preNodeNum) / preNodeWidth),\n          preNodeCol = Math.floor(i / preNodeNum) % preNodeWidth,\n          link = new Link(nn[curLayerIndex - 1][preNodeIndex],\n            node, [preNodeRow, preNodeCol]);\n\n        nn[curLayerIndex - 1][preNodeIndex].outputLinks.push(link);\n        node.inputLinks.push(link);\n      }\n      curLayerNodes.push(node);\n    }\n\n    // Add current layer to the NN\n    nn.push(curLayerNodes);\n    curLayerIndex++;\n  });\n\n  return nn;\n}\n\nexport const constructNN = (inputImageFile) => {\n  // Load the saved model file\n  return new Promise((resolve, reject) => {\n    fetch('PUBLIC_URL/assets/data/nn_10.json')\n      .then(response => {\n        response.json().then(nnJSON => {\n          getInputImageArray(inputImageFile)\n            .then(inputImageArray => {\n              let nn = constructNNFromJSON(nnJSON, inputImageArray);\n              resolve(nn);\n            })\n        });\n      })\n      .catch(error => {\n        reject(error);\n      });\n  });\n}\n\n// Helper functions\n\n/**\n * Create datatrainx 2D array (matrix) with given size and default value.\n * \n * @param {int} height Height (number of rows) for the matrix\n * @param {int} width Width (number of columns) for the matrix\n * @param {int} fill Default value to fill this matrix\n */\nexport const init2DArray = (height, width, fill) => {\n  let array = [];\n  // Itereate through rows\n  for (let r = 0; r < height; r++) {\n    let row = new Array(width).fill(fill);\n    array.push(row);\n  }\n  return array;\n}\n\n/**\n * Dot product of two matrices.\n * @param {[[number]]} mat1 Matrix 1\n * @param {[[number]]} mat2 Matrix 2\n */\nconst matrixDot = (mat1, mat2) => {\n  console.assert(mat1.length === mat2.length, 'Dimension not matching');\n  console.assert(mat1[0].length === mat2[0].length, 'Dimension not matching');\n\n  let result = 0;\n  for (let i = 0; i < mat1.length; i++){\n    for (let j = 0; j < mat1[0].length; j++){\n      result += mat1[i][j] * mat2[i][j];\n    }\n  }\n  \n  return result;\n}\n\n/**\n * Matrix elementwise addition.\n * @param {[[number]]} mat1 Matrix 1\n * @param {[[number]]} mat2 Matrix 2\n */\nexport const matrixAdd = (mat1, mat2) => {\n  console.assert(mat1.length === mat2.length, 'Dimension not matching');\n  console.assert(mat1[0].length === mat2[0].length, 'Dimension not matching');\n\n  let result = init2DArray(mat1.length, mat1.length, 0);\n\n  for (let i = 0; i < mat1.length; i++) {\n    for (let j = 0; j < mat1.length; j++) {\n      result[i][j] = mat1[i][j] + mat2[i][j];\n    }\n  }\n\n  return result;\n}\n\n/**\n * 2D slice on datatrainx matrix.\n * @param {[[number]]} mat Matrix\n * @param {int} xs First dimension (row) starting index\n * @param {int} xe First dimension (row) ending index\n * @param {int} ys Second dimension (column) starting index\n * @param {int} ye Second dimension (column) ending index\n */\nexport const matrixSlice = (mat, xs, xe, ys, ye) => {\n  return mat.slice(xs, xe).map(s => s.slice(ys, ye));\n}\n\n/**\n * Compute the maximum of datatrainx matrix.\n * @param {[[number]]} mat Matrix\n */\nconst matrixMax = (mat) => {\n  let curMax = -Infinity;\n  for (let i = 0; i < mat.length; i++) {\n    for (let j = 0; j < mat[0].length; j++) {\n      if (mat[i][j] > curMax) {\n        curMax = mat[i][j];\n      }\n    }\n  }\n  return curMax;\n}\n\n/**\n * Convert canvas image data into datatrainx 3D array with dimension [height, width, 3].\n * Each pixel is in 0-255 scale.\n * @param {[int8]} imageData Canvas image data\n */\nconst imageDataTo3DArray = (imageData) => {\n  // Get image dimension (assume square image)\n  let width = Math.sqrt(imageData.length / 4);\n\n  // Create array placeholder for each channel\n  let imageArray = [init2DArray(width, width, 0), init2DArray(width, width, 0),\n    init2DArray(width, width, 0)];\n  \n  // Iterate through the data to fill out channel arrays above\n  for (let i = 0; i < imageData.length; i++) {\n    let pixelIndex = Math.floor(i / 4),\n      channelIndex = i % 4,\n      row = Math.floor(pixelIndex / width),\n      column = pixelIndex % width;\n    \n    if (channelIndex < 3) {\n      imageArray[channelIndex][row][column] = imageData[i];\n    }\n  }\n\n  return imageArray;\n}\n\n/**\n * Get the 3D pixel value array of the given image file.\n * @param {string} imgFile File path to the image file\n * @returns A promise with the corresponding 3D array\n */\nconst getInputImageArray = (imgFile) => {\n  let canvas = document.createElement('canvas');\n  canvas.style.cssText = 'display:none;';\n  document.getElementsByTagName('body')[0].appendChild(canvas);\n  let context = canvas.getContext('2d');\n\n  return new Promise((resolve, reject) => {\n    let inputImage = new Image();\n    inputImage.src = imgFile;\n    inputImage.onload = () => {\n      context.drawImage(inputImage, 0, 0,);\n      // Get image data and convert it to datatrainx 3D array\n      let imageData = context.getImageData(0, 0, inputImage.width,\n        inputImage.height).data;\n\n      // Remove this newly created canvas element\n      canvas.parentNode.removeChild(canvas);\n\n      console.log(imageDataTo3DArray(imageData));\n      resolve(imageDataTo3DArray(imageData));\n    }\n    inputImage.onerror = reject;\n  })\n}\n\n/**\n * Compute convolutions of one kernel on one matrix (one slice of datatrainx tensor).\n * @param {[[number]]} input Input, square matrix\n * @param {[[number]]} kernel Kernel weights, square matrix\n * @param {int} stride Stride size\n * @param {int} padding Padding size\n */\nexport const singleConv = (input, kernel, stride=1, padding=0) => {\n  // TODO: implement padding\n\n  // Only support square input and kernel\n  console.assert(input.length === input[0].length,\n     'Conv input is not square');\n  console.assert(kernel.length === kernel[0].length,\n    'Conv kernel is not square');\n\n  let stepSize = (input.length - kernel.length) / stride + 1;\n\n  let result = init2DArray(stepSize, stepSize, 0);\n\n  // Window sliding\n  for (let r = 0; r < stepSize; r++) {\n    for (let c = 0; c < stepSize; c++) {\n      let curWindow = matrixSlice(input, r * stride, r * stride + kernel.length,\n        c * stride, c * stride + kernel.length);\n      let dot = matrixDot(curWindow, kernel);\n      result[r][c] = dot;\n    }\n  }\n  return result;\n}\n\n/**\n * Convolution operation. This function update the outputs property of all nodes\n * in the given layer. Previous layer is accessed by the reference in nodes'\n * links.\n * @param {[Node]} curLayer Conv layer.\n */\nconst convolute = (curLayer) => {\n  console.assert(curLayer[0].type === 'conv', 'Wrong layer type');\n\n  // Itereate through all nodes in curLayer to update their outputs\n  curLayer.forEach(node => {\n    /*\n     * Accumulate the single conv result matrices from previous channels.\n     * Previous channels (node) are accessed by the reference in Link objects.\n     */\n    let newOutput = init2DArray(node.output.length, node.output.length, 0);\n\n    for (let i = 0; i < node.inputLinks.length; i++) {\n      let curLink = node.inputLinks[i];\n      let curConvResult = singleConv(curLink.source.output, curLink.weight);\n      newOutput = matrixAdd(newOutput, curConvResult);\n    }\n\n    // Add bias to all element in the output\n    let biasMatrix = init2DArray(newOutput.length, newOutput.length, node.bias);\n    newOutput = matrixAdd(newOutput, biasMatrix);\n\n    node.output = newOutput;\n  })\n}\n\n/**\n * Activate matrix mat using ReLU (max(0, x)).\n * @param {[[number]]} mat Matrix\n */\nconst singleRelu = (mat) => {\n  // Only support square matrix\n  console.assert(mat.length === mat[0].length, 'Activating non-square matrix!');\n\n  let width = mat.length;\n  let result = init2DArray(width, width, 0);\n\n  for (let i = 0; i < width; i++) {\n    for (let j = 0; j < width; j++) {\n      result[i][j] = Math.max(0, mat[i][j]);\n    }\n  }\n  return result;\n}\n\n/**\n * Update outputs of all nodes in the current ReLU layer. Values of previous\n * layer nodes are accessed by the links stored in the current layer.\n * @param {[Node]} curLayer ReLU layer\n */\nconst relu = (curLayer) => {\n  console.assert(curLayer[0].type === 'relu', 'Wrong layer type');\n\n  // Itereate through all nodes in curLayer to update their outputs\n  for (let i = 0; i < curLayer.length; i++) {\n    let curNode = curLayer[i];\n    let preNode = curNode.inputLinks[0].source;\n    curNode.output = singleRelu(preNode.output);\n  }\n}\n\n/**\n * Max pool one matrix.\n * @param {[[number]]} mat Matrix\n * @param {int} kernelWidth Pooling kernel length (only supports 2)\n * @param {int} stride Pooling sliding stride (only supports 2)\n * @param {string} padding Pading method when encountering odd number mat,\n * currently this function only supports 'VALID'\n */\nexport const singleMaxPooling = (mat, kernelWidth=2, stride=2, padding='VALID') => {\n  console.assert(kernelWidth === 2, 'Only supports kernen = [2,2]');\n  console.assert(stride === 2, 'Only supports stride = 2');\n  console.assert(padding === 'VALID', 'Only support valid padding');\n\n  // Handle odd length mat\n  // 'VALID': ignore edge rows and columns\n  // 'SAME': add zero padding to make the mat have even length\n  if (mat.length % 2 === 1 && padding === 'VALID') {\n    mat = matrixSlice(mat, 0, mat.length - 1, 0, mat.length - 1);\n  }\n\n  let stepSize = (mat.length - kernelWidth) / stride + 1;\n  let result = init2DArray(stepSize, stepSize, 0);\n\n  for (let r = 0; r < stepSize; r++) {\n    for (let c = 0; c < stepSize; c++) {\n      let curWindow = matrixSlice(mat, r * stride, r * stride + kernelWidth,\n        c * stride, c * stride + kernelWidth);\n      result[r][c] = matrixMax(curWindow);\n    }\n }\n return result;\n}\n\n/**\n * Max pooling one layer.\n * @param {[Node]} curLayer MaxPool layer\n */\nconst maxPooling = (curLayer) => {\n  console.assert(curLayer[0].type === 'pool', 'Wrong layer type');\n\n  // Itereate through all nodes in curLayer to update their outputs\n  for (let i = 0; i < curLayer.length; i++) {\n    let curNode = curLayer[i];\n    let preNode = curNode.inputLinks[0].source;\n    curNode.output = singleMaxPooling(preNode.output);\n  }\n}\n\n/**\n * Flatten datatrainx previous 2D layer (conv2d or maxpool2d). The flatten order matches\n * tf2.keras' implementation: channel -> row -> column.\n * @param {[Node]} curLayer Flatten layer\n */\nconst flatten = (curLayer) => {\n  console.assert(curLayer[0].type === 'flatten', 'Wrong layer type');\n\n  // Itereate through all nodes in curLayer to update their outputs\n  for (let i = 0; i < curLayer.length; i++) {\n    let curNode = curLayer[i];\n    let preNode = curNode.inputLinks[0].source;\n    let coordinate = curNode.inputLinks[0].weight;\n    // Take advantage of the dummy weights\n    curNode.output = preNode.output[coordinate[0]][coordinate[1]];\n  }\n}\n\nconst fullyConnect = (curLayer) => {\n  console.assert(curLayer[0].type === 'fc', 'Wrong layer type');\n  // TODO\n}\n\nexport const tempMain = async () => {\n  let nn = await constructNN('PUBLIC_URL/assets/img/koala.jpeg');\n  convolute(nn[1]);\n  relu(nn[2])\n  convolute(nn[3]);\n  relu(nn[4]);\n  maxPooling(nn[5]);\n  convolute(nn[6]);\n  relu(nn[7])\n  convolute(nn[8]);\n  relu(nn[9]);\n  maxPooling(nn[10]);\n  convolute(nn[11]);\n  relu(nn[12])\n  convolute(nn[13]);\n  relu(nn[14]);\n  maxPooling(nn[15]);\n  flatten(nn[16]);\n  console.log(nn[16].map(d => d.output));\n}","import { matrixSlice } from '../utils/cnn.js';\n\nexport function array1d(length, f) {\n  return Array.from({length: length}, f ? ((v, i) => f(i)) : undefined);\n}\n\nfunction array2d(height, width, f) {\n  return Array.from({length: height}, (v, i) => Array.from({length: width}, f ? ((w, j) => f(i, j)) : undefined));\n}\n\nexport function generateOutputMappings(stride, output, kernelLength, padded_input_size, dilation) {\n  const outputMapping = array2d(output.length, output.length, (i, j) => array2d(kernelLength, kernelLength));\n  for (let h_out = 0; h_out < output.length; h_out++) {\n    for (let w_out = 0; w_out < output.length; w_out++) {\n      for (let h_kern = 0; h_kern < kernelLength; h_kern++) {\n        for (let w_kern = 0; w_kern < kernelLength; w_kern++) {\n          const h_im = h_out * stride + h_kern * dilation;\n          const w_im = w_out * stride + w_kern * dilation;\n          outputMapping[h_out][w_out][h_kern][w_kern] = h_im * padded_input_size + w_im;\n        }\n      }\n    }\n  }\n  return outputMapping;\n}\n\nexport function compute_input_multiplies_with_weight(hoverH, hoverW, \n                                              padded_input_size, weight_dims, outputMappings, kernelLength) {\n  \n  const [h_weight, w_weight] = weight_dims;\n  const input_multiplies_with_weight = array1d(padded_input_size * padded_input_size);\n  for (let h_weight = 0; h_weight < kernelLength; h_weight++) {\n    for (let w_weight = 0; w_weight < kernelLength; w_weight++) {\n      const flat_input = outputMappings[hoverH][hoverW][h_weight][w_weight];\n      if (typeof flat_input === \"undefined\") continue;\n      input_multiplies_with_weight[flat_input] = [h_weight, w_weight];\n    }\n  }\n  return input_multiplies_with_weight;\n}\n\nexport function getMatrixSliceFromInputHighlights(matrix, highlights, kernelLength) {\n  var indices = highlights.reduce((total, value, index) => {\n  if (value != undefined) total.push(index);\n    return total;\n  }, []);\n  return matrixSlice(matrix, Math.floor(indices[0] / matrix.length), Math.floor(indices[0] / matrix.length) + kernelLength, indices[0] % matrix.length, indices[0] % matrix.length + kernelLength);\n}\n\nexport function getMatrixSliceFromOutputHighlights(matrix, highlights) {\n  var indices = highlights.reduce((total, value, index) => {\n  if (value != false) total.push(index);\n    return total;\n  }, []);\n  return matrixSlice(matrix, Math.floor(indices[0] / matrix.length), Math.floor(indices[0] / matrix.length) + 1, indices[0] % matrix.length, indices[0] % matrix.length + 1);\n}\n\n// Edit these values to change size of low-level conv visualization.\nexport function getVisualizationSizeConstraint(imageLength) {\n  let sizeOfGrid = 150;\n  let maxSizeOfGridCell = 20;\n  return sizeOfGrid / imageLength > maxSizeOfGridCell ? maxSizeOfGridCell : sizeOfGrid / imageLength;\n}\n\nexport function getDataRange(image) {\n  let maxRow = image.map(function(row){ return Math.max.apply(Math, row); });\n  let max = Math.max.apply(null, maxRow);\n  let minRow = image.map(function(row){ return Math.min.apply(Math, row); });\n  let min = Math.min.apply(null, minRow);\n  let range = {\n    range: 2 * Math.max(Math.abs(min), Math.abs(max)),\n    min: min,\n    max: max\n  };\n  return range;\n}\n\nexport function gridData(image, constraint=getVisualizationSizeConstraint(image.length)) {\n  // Constrain grids based on input image size.\n  var data = new Array();\n  var xpos = 1;\n  var ypos = 1;\n  var width = constraint;\n  var height = constraint;\n  for (var row = 0; row < image.length; row++) {\n    data.push( new Array() );\n    for (var column = 0; column < image[0].length; column++) {\n      data[row].push({\n        text: Math.round(image[row][column] * 100) / 100,\n        row: row,\n        col: column,\n        x: xpos,\n        y: ypos,\n        width: width,\n        height: height\n      })\n      xpos += width;\n    }\n    xpos = 1;\n    ypos += height; \n  }\n  return data;\n}","<script>\n  export let data;\n  export let highlights;\n  export let isKernelMath;\n  export let constraint;\n  export let dataRange;\n  export let outputLength = undefined;\n  export let stride = undefined;\n  export let colorScale = d3.interpolateRdBu;\n  export let isInputLayer = false;\n\n  import { onMount } from 'svelte';\n  import { onDestroy } from 'svelte';\n  import { beforeUpdate, afterUpdate } from 'svelte';\n  import { createEventDispatcher } from 'svelte';\n\n  let grid_final;\n  const textConstraintDivisor = 2.6;\n  const standardCellColor = \"ddd\";\n  const dispatch = createEventDispatcher();\n\n  let oldHighlight = highlights;\n  let oldData = data;\n\n  const redraw = () => {\n    d3.select(grid_final).selectAll(\"#grid > *\").remove();\n    const constrainedSvgSize = data.length * constraint + 2;\n    var grid = d3.select(grid_final).select(\"#grid\")\n      .attr(\"width\", constrainedSvgSize + \"px\")\n      .attr(\"height\", constrainedSvgSize + \"px\")\n      .append(\"svg\")\n      .attr(\"width\", constrainedSvgSize + \"px\")\n      .attr(\"height\", constrainedSvgSize + \"px\")\n    var row = grid.selectAll(\".row\")\n      .data(data)\n      .enter().append(\"g\")\n      .attr(\"class\", \"row\");\n    var column = row.selectAll(\".square\")\n      .data(function(d) { return d; })\n      .enter().append(\"rect\")\n      .attr(\"class\",\"square\")\n      .attr(\"x\", function(d) { return d.x; })\n      .attr(\"y\", function(d) { return d.y; })\n      .attr(\"width\", function(d) { return d.width; })\n      .attr(\"height\", function(d) { return d.height; })\n      .style(\"opacity\", 0.8)\n      .style(\"fill\", function(d) {\n        let normalizedValue = d.text;\n        if (isInputLayer){\n          normalizedValue = 1 - d.text;\n        } else {\n          normalizedValue = (d.text + dataRange / 2) / dataRange;\n        }\n        return colorScale(normalizedValue);\n      })\n      .on('mouseover', function(d) {\n        if (data.length != outputLength) {\n          dispatch('message', {\n            hoverH: Math.min(Math.floor(d.row / stride), outputLength - 1),\n            hoverW: Math.min(Math.floor(d.col / stride), outputLength - 1)\n          });\n        } else {\n          dispatch('message', {\n            hoverH: Math.min(Math.floor(d.row / 1), outputLength - 1),\n            hoverW: Math.min(Math.floor(d.col / 1), outputLength - 1)\n          });\n        }\n      });\n    if (isKernelMath) {\n      var text = row.selectAll(\".text\")\n        .data(function(d) { return d; })\n        .enter().append(\"text\")\n        .attr(\"class\",\"text\")\n        .style(\"font-size\", Math.floor(constraint / textConstraintDivisor) + \"px\")\n        .attr(\"x\", function(d) { return d.x + d.width / 2; })\n        .attr(\"y\", function(d) { return d.y + d.height / 2; })\n        .style(\"fill\", function(d) {\n        let normalizedValue = d.text;\n          if (isInputLayer){\n            normalizedValue = 1 - d.text;\n          } else {\n            normalizedValue = (d.text + dataRange / 2) / dataRange;\n          }\n          if (normalizedValue < 0.2 || normalizedValue > 0.8) {\n            return 'white';\n          } else {\n            return 'black';\n          }\n        })\n        .style(\"text-anchor\", \"middle\")\n        .style(\"dominant-baseline\", \"middle\")\n        .text(function(d) {\n          return d.text.toString().replace('-', '－');\n        })\n    }\n  }\n\n  afterUpdate(() => {\n    if (data != oldData) {\n      redraw();\n      oldData = data;\n    }\n\n    if (highlights != oldHighlight) {\n      var grid = d3.select(grid_final).select('#grid').select(\"svg\")\n      grid.selectAll(\".square\")\n        .style(\"stroke\", (d) => isKernelMath || (highlights.length && highlights[d.row * data.length + d.col]) ? \"black\" : null )\n      oldHighlight = highlights;\n    }\n\n  });\n\n  onMount(() => {\n    redraw();\n  });\n\n</script>\n\n<div style=\"display: inline-block; vertical-align: middle;\" class=\"grid\"\n  bind:this={grid_final}>\n  <svg id=\"grid\" width=100% height=100%></svg>\n</div>","<script>\n  export let data;\n  export let kernel;\n  export let constraint;\n  export let dataRange;\n  export let kernelRange;\n  export let colorScale = d3.interpolateRdBu;\n  export let kernelColorScale = d3.interpolateBrBG;\n  export let isInputLayer = false;\n\n  import { onMount } from 'svelte';\n  import { afterUpdate } from 'svelte';\n\n  let gridFinal;\n  let legendFinal;\n  const textConstraintDivisor = 2.6;\n  const multiplicationSymbolPadding = Math.floor(constraint / 3);\n\n  let oldData = data;\n  let oldKernel = kernel;\n\n  // Legend drawn similarly to legends in overview/intermediate-view.\n  const addOverlayGradient = (gradientID, stops, group) => {\n    if (group === undefined) {\n      group = svg;\n    }\n\n    // Create datatrainx gradient\n    let defs = group.append(\"defs\")\n      .attr('class', 'overlay-gradient');\n\n    let gradient = defs.append(\"linearGradient\")\n      .attr(\"id\", gradientID)\n      .attr(\"x1\", \"0%\")\n      .attr(\"x2\", \"100%\")\n      .attr(\"y1\", \"100%\")\n      .attr(\"y2\", \"100%\");\n    \n    stops.forEach(s => {\n      gradient.append('stop')\n        .attr('offset', s.offset)\n        .attr('stop-color', s.color)\n        .attr('stop-opacity', s.opacity);\n    })\n  }\n\n  // Draw the legend for intermediate layer\n  const redrawDetailedConvViewLegend = (arg) => {\n    let legendHeight = arg.legendHeight,\n      range = arg.range,\n      minMax = arg.minMax,\n      width = arg.width,\n      colorScale = arg.colorScale,\n      gradientGap = arg.gradientGap;\n\n    d3.select(legendFinal).selectAll(\"#legend > *\").remove();\n    let legend = d3.select(legendFinal).select(\"#legend\")\n      .attr(\"width\", 150 + \"px\")\n      .attr(\"height\", 25 + \"px\")\n      .attr(\"align\",\"center\")\n      .style(\"dominant-baseline\", \"middle\");\n    let detailedViewKernel = legend.append('g')\n      .attr('transform', `translate(10, 0)`);\n    \n    if (colorScale === undefined) { colorScale = layerColorScales.conv; }\n    if (gradientGap === undefined) { gradientGap = 0; }\n    \n    // Add datatrainx legend color gradient\n    let gradientName = `url(#detailed-kernel-gradient)`;\n    let normalizedColor = v => colorScale(v * (1 - 2 * gradientGap) + gradientGap);\n\n    let leftValue = (minMax.min + range / 2) / range,\n      zeroValue = (0 + range / 2) / range,\n      rightValue = (minMax.max + range / 2) / range,\n      totalRange = minMax.max - minMax.min,\n      zeroLocation = (0 - minMax.min) / totalRange,\n      leftMidValue = leftValue + (zeroValue - leftValue)/2,\n      rightMidValue = zeroValue + (rightValue - zeroValue)/2;\n\n    let stops = [\n      {offset: 0, color: normalizedColor(leftValue), opacity: 1},\n      {offset: zeroLocation / 2,\n        color: normalizedColor(leftMidValue),\n        opacity: 1},\n      {offset: zeroLocation,\n        color: normalizedColor(zeroValue),\n        opacity: 1},\n      {offset: zeroLocation + (1 - zeroValue) / 2,\n        color: normalizedColor(rightMidValue),\n        opacity: 1},\n      {offset: 1, color: normalizedColor(rightValue), opacity: 1}\n    ];\n\n    addOverlayGradient(`detailed-kernel-gradient`, stops, detailedViewKernel);\n\n    let legendScale = d3.scaleLinear()\n      .range([0, width - 1.2])\n      .domain([minMax.min, minMax.max]);\n\n    let legendAxis = d3.axisBottom()\n      .scale(legendScale)\n      .tickFormat(d3.format('.2f'))\n      .tickValues([minMax.min, 0, minMax.max]);\n    \n    let detailedLegend = detailedViewKernel.append('g')\n      .attr('id', `detailed-legend-0`)\n    \n    let legendGroup = detailedLegend.append('g')\n      .attr('transform', `translate(0, ${legendHeight - 3})`)\n      .call(legendAxis);\n    \n    legendGroup.selectAll('text')\n      .style('font-size', '9px')\n      .style('fill', \"black\");\n    \n    legendGroup.selectAll('path, line')\n      .style('stroke', \"black\");\n\n    detailedLegend.append('rect')\n      .attr('width', width)\n      .attr('height', legendHeight)\n      .style('fill', gradientName);\n  }\n\n  // Draw the elementwise dot-product math.\n  const redraw = () => {\n    d3.select(gridFinal).selectAll(\"#grid > *\").remove();\n    const constrainedSvgSize = kernel ? 2 * (data.length * constraint) + 2 : data.length * constraint + 2;\n    var grid = d3.select(gridFinal).select(\"#grid\")\n      .attr(\"width\", constrainedSvgSize + \"px\")\n      .attr(\"height\", constrainedSvgSize + \"px\")\n      .append(\"svg\")\n      .attr(\"width\", constrainedSvgSize + \"px\")\n      .attr(\"height\", constrainedSvgSize + \"px\")\n    var row = grid.selectAll(\".row\")\n      .data(data)\n      .enter().append(\"g\")\n      .attr(\"class\", \"row\");\n    \n    var columns = row.selectAll(\".square\")\n      .data(function(d) { return d; })\n      .enter();\n    // Draw cells for slice from input matrix.\n    columns.append(\"rect\")\n      .attr(\"class\",\"square\")\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + multiplicationSymbolPadding : d.x * 2 + multiplicationSymbolPadding})\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y : d.y * 2 })\n      .attr(\"width\", function(d) { return d.width; })\n      .attr(\"height\", function(d) { return d.height; })\n      .style(\"opacity\", 0.5)\n      .style(\"fill\", function(d) { \n        let normalizedValue = d.text;\n        if (isInputLayer){\n          normalizedValue = 1 - d.text;\n        } else {\n          normalizedValue = (d.text + dataRange / 2) / dataRange;\n        }\n        return colorScale(normalizedValue); \n      })\n      .style(\"stroke\", \"black\");\n    // Draw cells for the kernel.\n    columns.append(\"rect\")\n      .attr(\"class\",\"square\")\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + multiplicationSymbolPadding: d.x * 2 + multiplicationSymbolPadding})\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y + d.height : d.y * 2 + d.height })\n      .attr(\"width\", function(d) { return d.width; })\n      .attr(\"height\", function(d) { return d.height / 2; })\n      .style(\"opacity\", 0.5)\n      // Same colorscale as is used for the flatten layers.\n      .style(\"fill\", function(d) { \n        let normalizedValue = (kernel[d.row][d.col].text + kernelRange.range / 2) / kernelRange.range;\n        const gap = 0.2;\n        let normalizedValueWithGap = normalizedValue * (1 - 2 * gap) + gap;\n        return kernelColorScale(normalizedValueWithGap); \n      })\n\n    var texts = row.selectAll(\".text\")\n      .data(function(d) { return d; })\n      .enter();\n    // Draw numbers from input matrix slice.\n    texts.append(\"text\")\n      .attr(\"class\",\"text\")\n      .style(\"font-size\", Math.floor(constraint / textConstraintDivisor) + \"px\")\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + d.width / 2 + multiplicationSymbolPadding: d.x * 2 + d.width / 2 + multiplicationSymbolPadding})\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y + d.height / 2 : d.y * 2 + d.height / 2 })\n      .style(\"fill\", function(d) { \n        let normalizedValue = d.text;\n        if (isInputLayer){\n          normalizedValue = 1 - d.text;\n        } else {\n          normalizedValue = (d.text + dataRange / 2) / dataRange;\n        }\n        if (normalizedValue < 0.2 || normalizedValue > 0.8) {\n          if (isInputLayer && normalizedValue < 0.2) {\n            return 'black';\n          } \n          return 'white';\n        } else {\n          return 'black';\n        }\n      })\n      .style(\"text-anchor\", \"middle\")\n      .style(\"dominant-baseline\", \"middle\")\n      .text(function(d) { return d.text; })\n    // Attempted to use FontAwesome icons for the 'x', '+', and '=', but none of these strategies work: https://github.com/FortAwesome/Font-Awesome/issues/12268\n    // Draw 'x' to signify multiplication.\n    texts.append(\"text\")\n      .attr(\"class\",\"text\")\n      .style(\"font-size\", Math.floor(constraint / (textConstraintDivisor)) + \"px\")\n      .attr('font-weight', 600)\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + multiplicationSymbolPadding / 2: d.x * 2 + multiplicationSymbolPadding / 2})\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y + d.height + (d.height / 4) : d.y * 2 + d.height + (d.height / 4) })\n      .style(\"fill\", \"black\")\n      .style(\"text-anchor\", \"middle\")\n      .style(\"dominant-baseline\", \"middle\")\n      .text(function(d) { return '×' })\n    // Draw kernel values.\n    texts.append(\"text\")\n      .attr(\"class\",\"text\")\n      .style(\"font-size\", Math.floor(constraint / textConstraintDivisor) + \"px\")\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + d.width / 2 + multiplicationSymbolPadding: d.x * 2 + d.width / 2 + multiplicationSymbolPadding})\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y + d.height + (d.height / 4) : d.y * 2 + d.height + (d.height / 4) })\n      .style(\"fill\", function(d) { \n        let normalizedValue = (kernel[d.row][d.col].text + kernelRange.range / 2) / kernelRange.range;\n        const gap = 0.2;\n        let normalizedValueWithGap = normalizedValue * (1 - 2 * gap) + gap;\n        if (normalizedValueWithGap < 0.2 || normalizedValueWithGap > 0.8) {\n          return 'white';\n        } else {\n          return 'black';\n        }\n      })\n      .style(\"text-anchor\", \"middle\")\n      .style(\"dominant-baseline\", \"middle\")\n      .text(function(d) { return kernel[d.row][d.col].text; })\n    // Draw '+' to signify the summing of products except for the last kernel cell where '=' is drawn.\n    texts.append(\"text\")\n      .attr(\"class\",\"text\")\n      .style(\"font-size\", Math.floor(constraint / (textConstraintDivisor - 1)) + \"px\")\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + d.width + d.width / 2 + multiplicationSymbolPadding: d.x * 2 + d.width + d.width / 2 + multiplicationSymbolPadding})\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y + d.height / 2 : d.y * 2 + d.height / 2 })\n      .style(\"text-anchor\", \"middle\")\n      .style(\"dominant-baseline\", \"middle\")\n      .text(function(d) { return d.row == kernel.length - 1 && d.col == kernel.length - 1 ? '=' : '+'; })\n    }\n\n  afterUpdate(() => {\n    if (data != oldData) {\n      redraw();\n      oldData = data;\n    }\n    if (kernel != oldKernel) {\n      /*\n      redrawDetailedConvViewLegend({\n          legendHeight: 5,\n          range: kernelRange.range,\n          minMax: {min: kernelRange.min, max: kernelRange.max},\n          width: 130,\n          colorScale: kernelColorScale,\n          gradientGap: 0.35,\n      });\n      */\n      oldKernel = kernel;\n    }\n  });\n\n  onMount(() => {\n    redraw();\n    /*\n    redrawDetailedConvViewLegend({\n          legendHeight: 5,\n          range: kernelRange.range,\n          minMax: {min: kernelRange.min, max: kernelRange.max},\n          width: 130,\n          colorScale: kernelColorScale,\n          gradientGap: 0.35,\n    });\n    */\n  });\n\n</script>\n\n<div class=\"legend\"\n  bind:this={legendFinal}>\n  <!-- <svg id=\"legend\" width=100% height=100%></svg> -->\n</div>\n\n<div class=\"grid\"\n  bind:this={gridFinal}>\n  <svg id=\"grid\" width=100% height=100%></svg>\n</div>","<script>\n  import { createEventDispatcher } from 'svelte';\n  import { array1d, getMatrixSliceFromOutputHighlights,\n    compute_input_multiplies_with_weight, getDataRange,\n    getVisualizationSizeConstraint, generateOutputMappings,\n    getMatrixSliceFromInputHighlights, gridData\n  } from './DetailviewUtils.js';\n  import Dataview from './Dataview.svelte';\n  import KernelMathView from './KernelMathView.svelte';\n  // image: nxn array -- prepadded.\n  // kernel: mxm array.\n  // stride: int\n  export let stride;\n  export let dilation\n  export let kernel;\n  export let image;\n  export let output;\n  export let isPaused;\n  export let dataRange;\n  export let colorScale;\n  export let isInputInputLayer = false;\n\n  const dispatch = createEventDispatcher();\n  const padding = 0;\n  let padded_input_size = image.length + padding * 2;\n  $: padded_input_size = image.length + padding * 2;\n\n  // Dummy data for original state of component.\n  let testInputMatrixSlice = [];\n  for (let i = 0; i < kernel.length; i++) {\n    testInputMatrixSlice.push([]);\n    for (let j = 0; j < kernel.length; j++) {\n      testInputMatrixSlice[i].push(0)\n    }\n  }\n  testInputMatrixSlice = gridData(testInputMatrixSlice)\n  let testOutputMatrixSlice = gridData([0]);\n\n  let inputHighlights = [];\n  let outputHighlights = array1d(output.length * output.length, (i) => true);\n  let interval;\n  $ : {\n    let inputHighlights = [];\n    let outputHighlights = array1d(output.length * output.length, (i) => true);\n    let interval;\n  }\n\n  let counter;\n  // lots of replication between mouseover and start-conv. TODO: fix this.\n  function startConvolution(stride) {\n    counter = 0;\n    let outputMappings = generateOutputMappings(stride, output, kernel.length, padded_input_size, dilation);\n    if (stride <= 0) return;\n    if (interval) clearInterval(interval);\n    interval = setInterval(() => {\n      if (isPaused) return;\n      const flat_animated = counter % (output.length * output.length);\n      outputHighlights = array1d(output.length * output.length, (i) => false);\n      const animatedH = Math.floor(flat_animated / output.length);\n      const animatedW = flat_animated % output.length;\n      outputHighlights[animatedH * output.length + animatedW] = true;\n      inputHighlights = compute_input_multiplies_with_weight(animatedH, animatedW, padded_input_size, kernel.length, outputMappings, kernel.length)\n      const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, kernel.length);\n      testInputMatrixSlice = gridData(inputMatrixSlice);\n      const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\n      testOutputMatrixSlice = gridData(outputMatrixSlice);\n      counter++;\n    }, 250)\n  }\n\n  function handleMouseover(event) {\n    let outputMappings = generateOutputMappings(stride, output, kernel.length, padded_input_size, dilation);\n    outputHighlights = array1d(output.length * output.length, (i) => false);\n    const animatedH = event.detail.hoverH;\n    const animatedW = event.detail.hoverW;\n    outputHighlights[animatedH * output.length + animatedW] = true;\n    inputHighlights = compute_input_multiplies_with_weight(animatedH, animatedW, padded_input_size, kernel.length, outputMappings, kernel.length)\n    const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, kernel.length);\n    testInputMatrixSlice = gridData(inputMatrixSlice);\n    const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\n    testOutputMatrixSlice = gridData(outputMatrixSlice);\n    isPaused = true;\n    dispatch('message', {\n      text: isPaused\n    });\n  }\n\n  startConvolution(stride);\n  let testImage = gridData(image)\n  let testOutput = gridData(output)\n  let testKernel = gridData(kernel)\n  $ : {\n    startConvolution(stride);\n    testImage = gridData(image)\n    testOutput = gridData(output)\n    testKernel = gridData(kernel)\n  }\n</script>\n\n<style>\n  .column {\n    padding: 5px;\n  }\n</style>\n\n<div class=\"column has-text-centered\">\n  <div class=\"header-text\">\n    Input ({image.length}, {image[0].length})\n  </div>\n  <Dataview on:message={handleMouseover} data={testImage} highlights={inputHighlights} outputLength={output.length}\n      isKernelMath={false} constraint={getVisualizationSizeConstraint(image.length)}\n      dataRange={dataRange} stride={stride} colorScale={colorScale}\n      isInputLayer={isInputInputLayer}/>\n</div>\n<div class=\"column has-text-centered\">\n  <KernelMathView data={testInputMatrixSlice} kernel={testKernel} constraint={getVisualizationSizeConstraint(kernel.length)}\n                  dataRange={dataRange} kernelRange={getDataRange(kernel)} colorScale={colorScale}\n                  isInputLayer={isInputInputLayer}/>\n  <Dataview data={testOutputMatrixSlice} highlights={outputHighlights} isKernelMath={true} \n      constraint={getVisualizationSizeConstraint(kernel.length)} dataRange={dataRange}/>\n</div>\n<div class=\"column has-text-centered\">\n  <div class=\"header-text\">\n    Output ({output.length}, {output[0].length})\n  </div>\n  <Dataview on:message={handleMouseover} data={testOutput} highlights={outputHighlights} isKernelMath={false}\n      outputLength={output.length} constraint={getVisualizationSizeConstraint(output.length)} dataRange={dataRange} stride={stride}/>\n</div>","<script>\n\timport ConvolutionAnimator from './ConvolutionAnimator.svelte';\n  import { singleConv } from '../utils/cnn.js';\n  import { createEventDispatcher } from 'svelte';\n\n  export let input;\n  export let kernel;\n  export let dataRange;\n  export let colorScale = d3.interpolateRdBu;\n  export let isInputInputLayer = false;\n  export let isExited = false;\n  // export let output;\n  \n  const dispatch = createEventDispatcher();\n\tlet stride = 1;\n  const dilation = 1;\n  var isPaused = false;\n  var outputFinal = singleConv(input, kernel, stride);\n  $: if (stride > 0) {\n    try { \n      outputFinal = singleConv(input, kernel, stride);\n    } catch {\n      console.log(\"Cannot handle stride of \" + stride);\n    }\n  }\n  \n  function handleClickPause() {\n    isPaused = !isPaused;\n  }\n\n  function handleScroll() {\n    //let svgHeight = Number(d3.select('#cnn-svg').style('height').replace('px', '')) + 150;\n    //let scroll = new SmoothScroll('datatrainx[href*=\"#\"]', {offset: -svgHeight});\n    //let anchor = document.querySelector(`#article-convolution`);\n    //scroll.animateScroll(anchor);\n  }\n\n  function handlePauseFromInteraction(event) {\n    isPaused = event.detail.text;\n  }\n\n  function handleClickX() {\n    isExited = true;\n    dispatch('message', {\n      text: isExited\n    });\n  }\n</script>\n\n<style>\n  .control-pannel {\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .buttons {\n    cursor: pointer;\n    position: absolute;\n    top: 0px;\n    right: 0px;\n  }\n\n  .control-button {\n    color: gray;\n    font-size: 15px;\n    opacity: 0.4;\n    cursor: pointer;\n  }\n\n  .control-button:not(:first-child) {\n    margin-left: 5px;\n  }\n\n  .annotation {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-left : 10px;\n    font-size: 12px;\n  }\n\n  .annotation > img {\n    width: 17px;\n    margin-right: 5px;\n  }\n\n  .control-button:hover {\n    opacity: 0.8;\n  }\n\n  .box {\n    padding: 5px 15px 10px 15px;\n  }\n\n  .container {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n  }\n\n  .title-text {\n    font-size: 1.2em;\n    font-weight: 500;\n    color: #4a4a4a;\n  }\n</style>\n\n{#if !isExited}\n  <div class=\"container\" id=\"detailview-container\">\n\n    <!-- old stride input -->\n    <!-- <div class=\"columns is-mobile\">\n      <div class=\"column is-half is-offset-one-quarter\">\n        <div class=\"field is-grouped\">\n          <p class=\"control is-expanded\">\n            <input class=\"input\" type=\"text\" placeholder=\"Stride\" bind:value={stride} />\n          </p>\n          <p class=\"control\">\n            <button class=\"button is-success\" on:click={handleClickPause}>\n              Toggle Movement\n            </button>\n          </p>\n        </div>\n      </div>\n    </div> -->\n\n    <div class=\"box\">\n\n      <div class=\"control-pannel\">\n\n        <div class=\"title-text\">\n          Convolution\n        </div>\n\n        <div class=\"buttons\">\n          <div class=\"control-button\" on:click={handleScroll} title=\"Jump to article section\">\n            <i class=\"fas fa-info-circle\"></i>\n          </div>\n\n          <div class=\"play-button control-button\" on:click={handleClickPause} title=\"Play animation\">\n            {@html isPaused ?\n              '<i class=\"fas fa-play-circle play-icon\"></i>' :\n              '<i class=\"fas fa-pause-circle\"></i>'}\n          </div>\n\n          <div class=\"delete-button control-button\" on:click={handleClickX} title=\"Close\">\n            <i class=\"fas control-icon fa-times-circle\"></i>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"container is-centered\">\n        <ConvolutionAnimator on:message={handlePauseFromInteraction} \n          kernel={kernel} image={input} output={outputFinal} \n          stride={stride} dilation={dilation} isPaused={isPaused}\n          dataRange={dataRange} colorScale={colorScale}\n          isInputInputLayer={isInputInputLayer} />\n      </div>\n\n      <div class=\"annotation\">\n        <img src='PUBLIC_URL/assets/img/pointer.svg' alt='pointer icon'>\n        <div class=\"annotation-text\">\n          <span style=\"font-weight:600\">Hover over</span> the matrices to change kernel position.\n        </div>\n      </div>\n\n    </div>\n  </div>\n{/if}","<script>\n  import { createEventDispatcher } from 'svelte';\n  import { array1d, getMatrixSliceFromOutputHighlights,\n    getVisualizationSizeConstraint, getMatrixSliceFromInputHighlights, gridData\n  } from './DetailviewUtils.js';\n  import Dataview from './Dataview.svelte';\n\n  export let image;\n  export let output;\n  export let isPaused;\n  export let dataRange;\n\n  const dispatch = createEventDispatcher();\n  const padding = 0;\n  let padded_input_size = image.length + padding * 2;\n  $: padded_input_size = image.length + padding * 2;\n\n  let gridInputMatrixSlice = gridData([[0]]);\n  let gridOutputMatrixSlice = gridData([[0]]);\n  let inputHighlights = array1d(image.length * image.length, (i) => true);\n  let outputHighlights = array1d(output.length * output.length, (i) => true);\n  let interval;\n  $ : {\n    let inputHighlights = array1d(image.length * image.length, (i) => true);\n    let outputHighlights = array1d(output.length * output.length, (i) => true);\n    let interval;\n  }\n\n  let counter;\n\n  // lots of replication between mouseover and start-relu. TODO: fix this.\n  function startRelu() {\n    counter = 0;\n    if (interval) clearInterval(interval);\n    interval = setInterval(() => {\n      if (isPaused) return;\n      const flat_animated = counter % (output.length * output.length);\n      outputHighlights = array1d(output.length * output.length, (i) => false);\n      inputHighlights = array1d(image.length * image.length, (i) => undefined);\n      const animatedH = Math.floor(flat_animated / output.length);\n      const animatedW = flat_animated % output.length;\n      outputHighlights[animatedH * output.length + animatedW] = true;\n      inputHighlights[animatedH * output.length + animatedW] = true;\n      const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, 1);\n      gridInputMatrixSlice = gridData(inputMatrixSlice);\n      const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\n      gridOutputMatrixSlice = gridData(outputMatrixSlice);\n      counter++;\n    }, 250)\n  }\n\n  function handleMouseover(event) {\n    outputHighlights = array1d(output.length * output.length, (i) => false);\n    const animatedH = event.detail.hoverH;\n    const animatedW = event.detail.hoverW;\n    outputHighlights[animatedH * output.length + animatedW] = true;\n    inputHighlights = array1d(image.length * image.length, (i) => undefined);\n    inputHighlights[animatedH * output.length + animatedW] = true;\n    const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, 1);\n    gridInputMatrixSlice = gridData(inputMatrixSlice);\n    const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\n    gridOutputMatrixSlice = gridData(outputMatrixSlice);\n    isPaused = true;\n    dispatch('message', {\n      text: isPaused\n    });\n  }\n\n  startRelu();\n  let gridImage = gridData(image)\n  let gridOutput = gridData(output)\n  $ : {\n    startRelu();\n    gridImage = gridData(image)\n    gridOutput = gridData(output)\n  }\n</script>\n\n<style>\n  .column {\n    padding: 5px;\n  }\n</style>\n\n<div class=\"column has-text-centered\">\n  <div class=\"header-text\">\n    Input ({image.length}, {image[0].length})\n  </div>\n  <Dataview on:message={handleMouseover} data={gridImage} highlights={inputHighlights} outputLength={output.length}\n      isKernelMath={false} constraint={getVisualizationSizeConstraint(image.length)} dataRange={dataRange} stride={1}/>  \n</div>\n<div class=\"column has-text-centered\">\n  <span>\n    max(\n    <Dataview data={gridData([[0]])} highlights={outputHighlights} isKernelMath={true} \n    constraint={20} dataRange={dataRange}/>\n    ,\n    <Dataview data={gridInputMatrixSlice} highlights={outputHighlights} isKernelMath={true} \n    constraint={20} dataRange={dataRange}/>\n    )\n    =\n    <Dataview data={gridOutputMatrixSlice} highlights={outputHighlights} isKernelMath={true} \n      constraint={20} dataRange={dataRange}/>\n  </span> \n</div>\n<div class=\"column has-text-centered\">\n  <div class=\"header-text\">\n    Output ({output.length}, {output[0].length})\n  </div>\n  <Dataview on:message={handleMouseover} data={gridOutput} highlights={outputHighlights} isKernelMath={false} \n      outputLength={output.length} constraint={getVisualizationSizeConstraint(output.length)} dataRange={dataRange} stride={1}/>\n</div>","<script>\n\timport ActivationAnimator from './ActivationAnimator.svelte';\n  import { createEventDispatcher } from 'svelte';\n\n  export let input;\n  export let output;\n  export let dataRange;\n  export let isExited;\n\n  const dispatch = createEventDispatcher();\n  let isPaused = false;\n  \n  function handleClickPause() {\n    isPaused = !isPaused;\n  }\n\n  function handlePauseFromInteraction(event) {\n    isPaused = event.detail.text;\n  }\n\n  function handleClickX() {\n    dispatch('message', {\n      text: true\n    });\n  }\n\n  function handleScroll() {\n    //let svgHeight = Number(d3.select('#cnn-svg').style('height').replace('px', '')) + 150;\n    //let scroll = new SmoothScroll('datatrainx[href*=\"#\"]', {offset: -svgHeight});\n    //let anchor = document.querySelector(`#article-relu`);\n    //scroll.animateScroll(anchor);\n  }\n</script>\n\n<style>\n  .control-pannel {\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .buttons {\n    cursor: pointer;\n    position: absolute;\n    top: 0px;\n    right: 0px;\n  }\n\n  .control-button {\n    color: gray;\n    font-size: 15px;\n    opacity: 0.4;\n    cursor: pointer;\n  }\n\n  .control-button:not(:first-child) {\n    margin-left: 5px;\n  }\n\n  .annotation {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-left : 10px;\n    font-size: 12px;\n  }\n\n  .annotation > img {\n    width: 17px;\n    margin-right: 5px;\n  }\n\n  .control-button:hover {\n    opacity: 0.8;\n  }\n\n  .box {\n    padding: 5px 15px 10px 15px;\n  }\n\n  .container {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .title-text {\n    font-size: 1.2em;\n    font-weight: 500;\n    color: #4a4a4a;\n  }\n</style>\n\n{#if !isExited}\n  <div class=\"container\">\n    <div class=\"box\">\n\n      <div class=\"control-pannel\">\n\n        <div class=\"title-text\">\n          ReLU Activation\n        </div>\n\n        <div class=\"buttons\">\n\n          <div class=\"control-button\" on:click={handleScroll} title=\"Jump to article section\">\n            <i class=\"fas fa-info-circle\"></i>\n          </div>\n\n          <div class=\"play-button control-button\" on:click={handleClickPause} title=\"Play animation\">\n            {@html isPaused ?\n              '<i class=\"fas fa-play-circle play-icon\"></i>' :\n              '<i class=\"fas fa-pause-circle\"></i>'}\n          </div>\n\n          <div class=\"delete-button control-button\" on:click={handleClickX} title=\"Close\">\n              <i class=\"fas control-icon fa-times-circle\"></i>\n          </div>\n        </div>\n\n      </div>\n\n      <div class=\"container is-centered is-vcentered\">\n        <ActivationAnimator on:message={handlePauseFromInteraction} \n          image={input} output={output} isPaused={isPaused}\n          dataRange={dataRange}/>\n      </div>\n\n      <div class=\"annotation\">\n        <img src='PUBLIC_URL/assets/img/pointer.svg' alt='pointer icon'>\n        <div class=\"annotation-text\">\n          <span style=\"font-weight:600\">Hover over</span> the matrices to change pixel.\n        </div>\n      </div>\n\n    </div>\n  </div>\n{/if}","<script>\n  import { createEventDispatcher } from 'svelte';\n  import { array1d, getMatrixSliceFromOutputHighlights,\n    compute_input_multiplies_with_weight, getVisualizationSizeConstraint,\n    generateOutputMappings, getMatrixSliceFromInputHighlights, gridData\n  } from './DetailviewUtils.js';\n  import Dataview from './Dataview.svelte';\n\n  export let stride;\n  export let dilation\n  export let kernelLength;\n  export let image;\n  export let output;\n  export let isPaused;\n  export let dataRange;\n\n  const dispatch = createEventDispatcher();\n  const padding = 0;\n  let padded_input_size = image.length + padding * 2;\n  $: padded_input_size = image.length + padding * 2;\n\n  // Dummy data for original state of component.\n  let testInputMatrixSlice = [];\n  for (let i = 0; i < kernelLength; i++) {\n    testInputMatrixSlice.push([]);\n    for (let j = 0; j < kernelLength; j++) {\n      testInputMatrixSlice[i].push(0)\n    }\n  }\n  testInputMatrixSlice = gridData(testInputMatrixSlice)\n  let testOutputMatrixSlice = gridData([[0]]);\n\n  let inputHighlights = [];\n  let outputHighlights = array1d(output.length * output.length, (i) => true);\n  let interval;\n  $ : {\n    let inputHighlights = [];\n    let outputHighlights = array1d(output.length * output.length, (i) => true);\n    let interval;\n  }\n  \n  let counter;\n\n  // lots of replication between mouseover and start-pool. TODO: fix this.\n  function startMaxPool(stride) {\n    counter = 0;\n    let outputMappings = generateOutputMappings(stride, output, kernelLength, padded_input_size, dilation);\n    if (stride <= 0) return;\n    if (interval) clearInterval(interval);\n    interval = setInterval(() => {\n      if (isPaused) return;\n      const flat_animated = counter % (output.length * output.length);\n      outputHighlights = array1d(output.length * output.length, (i) => false);\n      const animatedH = Math.floor(flat_animated / output.length);\n      const animatedW = flat_animated % output.length;\n      outputHighlights[animatedH * output.length + animatedW] = true;\n      inputHighlights = compute_input_multiplies_with_weight(animatedH, animatedW, padded_input_size, kernelLength, outputMappings, kernelLength)\n      const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, kernelLength);\n      testInputMatrixSlice = gridData(inputMatrixSlice);\n      const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\n      testOutputMatrixSlice = gridData(outputMatrixSlice);\n      counter++;\n    }, 250)\n  }\n\n  function handleMouseover(event) {\n    let outputMappings = generateOutputMappings(stride, output, kernelLength, padded_input_size, dilation);\n    outputHighlights = array1d(output.length * output.length, (i) => false);\n    const animatedH = event.detail.hoverH;\n    const animatedW = event.detail.hoverW;\n    outputHighlights[animatedH * output.length + animatedW] = true;\n    inputHighlights = compute_input_multiplies_with_weight(animatedH, animatedW, padded_input_size, kernelLength, outputMappings, kernelLength)\n    const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, kernelLength);\n    testInputMatrixSlice = gridData(inputMatrixSlice);\n    const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\n    testOutputMatrixSlice = gridData(outputMatrixSlice);\n    isPaused = true;\n    dispatch('message', {\n      text: isPaused\n    });\n  }\n\n  startMaxPool(stride);\n  let testImage = gridData(image)\n  let testOutput = gridData(output)\n  $ : {\n    startMaxPool(stride);\n    testImage = gridData(image)\n    testOutput = gridData(output)\n  }\n</script>\n\n<style>\n  .column {\n    padding: 5px;\n  }\n</style>\n\n<div class=\"column has-text-centered\">\n  <div class=\"header-text\">\n    Input ({testImage.length}, {testImage[0].length})\n  </div>\n\n  <Dataview on:message={handleMouseover} data={testImage} highlights={inputHighlights} outputLength={output.length}\n      isKernelMath={false} constraint={getVisualizationSizeConstraint(image.length)} dataRange={dataRange} stride={stride}/>  \n</div>\n<div class=\"column has-text-centered\">\n  <span>\n    max(\n    <Dataview data={testInputMatrixSlice} highlights={outputHighlights} isKernelMath={true} \n      constraint={getVisualizationSizeConstraint(kernelLength)} dataRange={dataRange}/>\n    )\n    =\n    <Dataview data={testOutputMatrixSlice} highlights={outputHighlights} isKernelMath={true} \n      constraint={getVisualizationSizeConstraint(kernelLength)} dataRange={dataRange}/>\n  </span> \n</div>\n<div class=\"column has-text-centered\">\n  <div class=\"header-text\">\n    Output ({testOutput.length}, {testOutput[0].length})\n  </div>\n  <Dataview on:message={handleMouseover} data={testOutput} highlights={outputHighlights} isKernelMath={false} \n      outputLength={output.length} constraint={getVisualizationSizeConstraint(output.length)} dataRange={dataRange} stride={stride}/>\n</div>","<script>\n\timport PoolAnimator from './PoolAnimator.svelte';\n  import { singleMaxPooling } from '../utils/cnn.js';\n  import { createEventDispatcher } from 'svelte';\n\n  export let input;\n  export let kernelLength;\n  export let dataRange;\n  export let isExited;\n  \n  const dispatch = createEventDispatcher();\n  // let isExited = false;\n\tlet stride = 2;\n  const dilation = 1;\n  var isPaused = false;\n  var outputFinal = singleMaxPooling(input);\n  // let dragging = false;\n  // let dragInfo = {x1: 0, x2: 0, y1: 0, y2: 0};\n  // let detailView = d3.select('#detailview').node();\n  $: if (stride > 0) {\n    try { \n      outputFinal = singleMaxPooling(input);\n    } catch {\n      console.log(\"Cannot handle stride of \" + stride);\n    }\n  }\n  \n  function handleClickPause() {\n    isPaused = !isPaused;\n    console.log(isPaused)\n  }\n\n  function handlePauseFromInteraction(event) {\n    isPaused = event.detail.text;\n  }\n\n  function handleClickX() {\n    dispatch('message', {\n      text: true\n    });\n  }\n\n  function handleScroll() {\n    //let svgHeight = Number(d3.select('#cnn-svg').style('height').replace('px', '')) + 150;\n    //let scroll = new SmoothScroll('datatrainx[href*=\"#\"]', {offset: -svgHeight});\n    //let anchor = document.querySelector(`#article-pooling`);\n    //scroll.animateScroll(anchor);\n  }\n\n  // Test dragging detail view, need more work\n  // const detailViewDragStart = (e) => {\n  //   // Record the starting pos\n  //   dragInfo.x1 = 0;\n  //   dragInfo.y1 = 0;\n  //   dragInfo.x2 = e.clientX;\n  //   dragInfo.y2 = e.clientY;\n  \n  //   dragging = true;\n  // }\n\n  // const detailViewDragEnd = (e) => {\n  //   dragging = false;\n  // }\n\n  // const detailViewDragMove = (e) => {\n  //   // Add up move to the starting pos\n  //   dragInfo.x1 = dragInfo.x2 - e.clientX;\n  //   dragInfo.y1 = dragInfo.y2 - e.clientY;\n  //   dragInfo.x2 = e.clientX;\n  //   dragInfo.y2 = e.clientY;\n\n  //   // Move detail view\n  //   detailView.style.top = (detailView.offsetTop - dragInfo.y1) + 'px';\n  //   detailView.style.left = (detailView.offsetLeft - dragInfo.x1) + 'px';\n  // }\n</script>\n\n<style>\n  .control-pannel {\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .buttons {\n    cursor: pointer;\n    position: absolute;\n    top: 0px;\n    right: 0px;\n  }\n\n  .control-button {\n    color: gray;\n    font-size: 15px;\n    opacity: 0.4;\n    cursor: pointer;\n  }\n\n  .control-button:not(:first-child) {\n    margin-left: 5px;\n  }\n\n  .annotation {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-left : 10px;\n    font-size: 12px;\n  }\n\n  .annotation > img {\n    width: 17px;\n    margin-right: 5px;\n  }\n\n\n  .control-button:hover {\n    opacity: 0.8;\n  }\n\n  .box {\n    padding: 5px 15px 10px 15px;\n  }\n\n  .container {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .title-text {\n    font-size: 1.2em;\n    font-weight: 500;\n    color: #4a4a4a;\n  }\n</style>\n\n{#if !isExited}\n  <div class=\"container\">\n\n    <!-- old stride input -->\n    <!-- <div class=\"columns is-mobile\">\n      <div class=\"column is-half is-offset-one-quarter\">\n        <div class=\"field is-grouped\">\n          <p class=\"control is-expanded\">\n            <input class=\"input\" type=\"text\" placeholder=\"Stride\" bind:value={stride} />\n          </p>\n          <p class=\"control\">\n            <button class=\"button is-success\" on:click={handleClickPause}>\n              Toggle Movement\n            </button>\n          </p>\n        </div>\n      </div>\n    </div> -->\n    <div class=\"box\">\n\n      <div class=\"control-pannel\">\n      \n        <div class=\"title-text\">\n          Max Pooling\n        </div>\n\n        <div class=\"buttons\">\n\n          <div class=\"control-button\" on:click={handleScroll} title=\"Jump to article section\">\n            <i class=\"fas fa-info-circle\"></i>\n          </div>\n\n          <div class=\"play-button control-button\" on:click={handleClickPause} title=\"Play animation\">\n            {@html isPaused ?\n              '<i class=\"fas fa-play-circle play-icon\"></i>' :\n              '<i class=\"fas fa-pause-circle\"></i>'}\n          </div>\n\n          <div class=\"delete-button control-button\" on:click={handleClickX} title=\"Close\">\n            <i class=\"fas control-icon fa-times-circle\"></i>\n          </div>\n        </div>\n\n      </div>\n\n      <div class=\"container is-centered is-vcentered\">\n        <PoolAnimator on:message={handlePauseFromInteraction} \n          kernelLength={kernelLength} image={input} output={outputFinal} \n          stride={stride} dilation={dilation} isPaused={isPaused}\n          dataRange={dataRange} />\n      </div>\n\n      <div class=\"annotation\">\n        <img src='PUBLIC_URL/assets/img/pointer.svg' alt='pointer icon'>\n          <div class=\"annotation-text\">\n            <span style=\"font-weight:600\">Hover over</span> the matrices to change kernel position.\n          </div>\n      </div>\n\n    </div>\n  </div>\n{/if}","<script>\n  import { onMount, afterUpdate, createEventDispatcher } from 'svelte';\n  export let logits;\n  export let logitColors;\n  export let selectedI;\n  export let highlightI = -1;\n  export let outputName;\n  export let outputValue;\n  export let startAnimation;\n\n  let softmaxViewComponent;\n  let svg = null;\n  const dispatch = createEventDispatcher();\n  const formater = (n, d) => {\n    if (d === undefined) {\n      return d3.format('.2f')(n);\n    } else {\n      return d3.format(`.${d}f`)(n);\n    }\n  }\n\n  $: highlightI, (() => {\n    if (svg !== null) {\n      svg.selectAll(`.formula-term`)\n        .style('text-decoration', 'none')\n        .style('font-weight', 'normal');\n\n      svg.selectAll(`.formula-term-${highlightI}`)\n      .style('font-weight', 'bold')\n      .style('text-decoration', 'underline');\n    }\n  })();\n\n  $: startAnimation, (() => {\n    if (svg !== null) {\n      svg.select(`.formula-term-${startAnimation.i}`)\n        .transition('softmax-edge')\n        .duration(startAnimation.duration)\n        .style('fill-opacity', 1);\n    }\n  })();\n\n  const mouseOverHandler = (d, i, g, curI) => {\n    highlightI = curI;\n    dispatch('mouseOver', {curI: curI});\n  }\n\n  const mouseLeaveHandler = (d, i, g, curI) => {\n    highlightI = -1;\n    dispatch('mouseLeave', {curI: curI});\n  }\n\n  const handleClickX = () => {\n    dispatch('xClicked', {});\n  }\n\n  function handleScroll() {\n    //let svgHeight = Number(d3.select('#cnn-svg').style('height').replace('px', '')) + 150;\n    //let scroll = new SmoothScroll('datatrainx[href*=\"#\"]', {offset: -svgHeight});\n    //let anchor = document.querySelector(`#article-softmax`);\n    //scroll.animateScroll(anchor);\n  }\n\n  onMount(() => {\n    svg = d3.select(softmaxViewComponent)\n      .select('#softmax-svg');\n\n    let formulaRightGroup = svg.append('g')\n      .attr('class', 'formula-right')\n      .attr('transform', `translate(${10}, ${0})`)\n      .style('font-size', '15px');\n\n    // Denominator\n    let denominatorGroup = formulaRightGroup.append('g')\n      .attr('class', 'denominator')\n      .attr('transform', `translate(${0}, ${58})`);\n      \n    // Add the left (\n    denominatorGroup.append('text')\n      .attr('x', 0)\n      .attr('y', 0)\n      .style('fill', 'gray')\n      .text('(');\n\n    // Need to loop through the logits array instead of data-binding because\n    // we want dynamic positioning based on prior '-' occurance\n    let curX = 8;\n    let numOfRows = 4;\n\n    logits.forEach((d, i) => {\n      if (i / numOfRows >= 1 && i % numOfRows === 0) {\n          curX = 8;\n      }\n\n      let curText = denominatorGroup.append('text')\n        .attr('x', curX)\n        .attr('y', Math.floor(i / numOfRows) * 20)\n        .style('cursor', 'crosshair')\n        .style('pointer-events', 'all')\n        .on('mouseover', (d, n, g) => mouseOverHandler(d, n, g, i))\n        .on('mouseleave', (d, n, g) => mouseLeaveHandler(d, n, g, i))\n        .text(`exp(`);\n      \n      curText.append('tspan')\n        .attr('class', `formula-term-${i} formula-term`)\n        .attr('dx', '1')\n        .style('fill', logitColors[i])\n        .style('fill-opacity', (i === selectedI) || startAnimation.hasInitialized ? 1 : 0)\n        .text(formater(d));\n      \n      curText.append('tspan')\n        .attr('dx', '1')\n        .text(')');\n      \n      let curBBox = curText.node().getBBox();\n      curX += curBBox.width + 4;\n\n      if (i !== logits.length - 1) {\n        denominatorGroup.append('text')\n          .attr('x', curX)\n          .attr('y', Math.floor(i / numOfRows) * 20)\n          .text('+');\n        curX += 14;\n      } else {\n        denominatorGroup.append('text')\n          .attr('x', curX-2)\n          .attr('y', Math.floor(i / numOfRows) * 20)\n          .style('fill', 'gray')\n          .text(')');\n      }\n    })\n\n    denominatorGroup.selectAll('text')\n      .data(logits)\n      .enter()\n      .append('text')\n      .attr('x', (d, i) => 40 * i)\n      .attr('y', 0)\n      .text(d => formater(d));\n    \n    // Calculate the dynamic denominator group width\n    let denominatorGroupBBox = denominatorGroup.node().getBBox();\n\n    // Draw the fraction line\n    formulaRightGroup.append('line')\n      .attr('class', 'separation-line')\n      .attr('x1', -5)\n      .attr('x2', denominatorGroupBBox.width + 5)\n      .attr('y1', 32)\n      .attr('y2', 32)\n      .style('stroke-width', 1.2)\n      .style('stroke', 'gray');\n    \n    // Draw the numerator\n    let numeratorGroup = formulaRightGroup.append('g')\n      .attr('class', 'numerator-group')\n      .attr('transform', `translate(${0}, ${20})`);\n    \n    let numeratorText = numeratorGroup.append('text')\n      .attr('x', denominatorGroupBBox.x + denominatorGroupBBox.width / 2)\n      .attr('y', 0)\n      .on('mouseover', (d, n, g) => mouseOverHandler(d, n, g, selectedI))\n      .on('mouseleave', (d, n, g) => mouseLeaveHandler(d, n, g, selectedI))\n      .style('pointer-events', 'all')\n      .style('cursor', 'crosshair')\n      .style('text-anchor', 'middle')\n      .text('exp(');\n\n    numeratorText.append('tspan')\n      .attr('class', `formula-term-${selectedI} formula-term`)\n      .attr('dx', 1)\n      .style('fill', logitColors[selectedI])\n      .text(`${formater(logits[selectedI])}`);\n\n    numeratorText.append('tspan')\n       .attr('dx', 1)\n      .text(')');\n    \n    // Draw the left part of the formula\n    let formulaLeftGroup = svg.append('g')\n      .attr('class', 'formula-left')\n      .attr('transform', `translate(${395}, ${32})`);\n    \n    let softmaxText = formulaLeftGroup.append('text')\n      .attr('x', 20)\n      .attr('dominant-baseline', 'middle')\n      .text(`${formater(outputValue, 4)}`);\n    \n    let softmaxTextBBox = softmaxText.node().getBBox();\n    \n    formulaLeftGroup.append('text')\n      .attr('dominant-baseline', 'middle')\n      .attr('x', 0)\n      .attr('y', 0)\n      .style('fill', 'gray')\n      .style('font-weight', 'bold')\n      .text('=');\n\n  })\n\n</script>\n\n<style>\n  .buttons {\n    cursor: pointer;\n    position: absolute;\n    top: 6px;\n    right: 10px;\n  }\n\n  .control-button {\n    color: gray;\n    font-size: 15px;\n    opacity: 0.4;\n  }\n\n  .control-button:hover {\n    opacity: 0.8;\n  }\n\n  .control-button:not(:first-child) {\n    margin-left: 5px;\n  }\n\n  .title-text {\n    font-size: 1.2em;\n    font-weight: 500;\n    color: #4a4a4a;\n  }\n\n  .annotation {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-left : 10px;\n    font-size: 12px;\n  }\n\n  .annotation > img {\n    width: 17px;\n    margin-right: 5px;\n  }\n\n  .box {\n    padding: 5px 10px 15px 10px;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  svg {\n    margin: 10px 0 12px 0;\n  }\n</style>\n\n<div class=\"container\" bind:this={softmaxViewComponent}>\n  <div class=\"box\">\n\n    <div class=\"buttons\">\n      <div class=\"control-button\" on:click={handleScroll} title=\"Jump to article section\">\n        <i class=\"fas fa-info-circle\"></i>\n      </div>\n\n      <div class=\"delete-button control-button\" on:click={handleClickX} title=\"Close\">\n        <i class=\"fas control-icon fa-times-circle\"></i>\n      </div>\n    </div>\n\n    <div class=\"title-text\">\n      Softmax Score for <i>\"{outputName}\"</i>\n    </div>\n\n    <svg id=\"softmax-svg\" width=\"470\" height=\"105\"/>\n\n    <div class=\"annotation\">\n      <img src='PUBLIC_URL/assets/img/pointer.svg' alt='pointer icon'>\n      <div class=\"annotation-text\">\n        <span style=\"font-weight:600\">Hover over</span> the numbers to highlight logit circles.\n      </div>\n    </div>\n\n  </div>\n</div>\n\n","<script>\n  /* global d3 */\n\n  import { onMount, createEventDispatcher } from 'svelte';\n  import { modalStore } from '../stores.js';\n\n  let modalComponent;\n  let valiImg;\n  let inputValue = '';\n  let showLoading = false;\n  let files;\n  let usingURL = true;\n  let errorInfo = {\n    show: false,\n    error: ''\n  };\n  const dispatch = createEventDispatcher();\n\n  let modalInfo = {\n    show: false\n  };\n  modalStore.set(modalInfo);\n  modalStore.subscribe(value => {modalInfo = value});\n\n  const errorCallback = () => {\n    // The URL is invalid, show an error message on the UI\n    showLoading = false;\n    errorInfo.show = true;\n    errorInfo.error = usingURL ? \"We can't find the image at that URL.\" :\n      \"Not datatrainx valid image file.\";\n  }\n\n  const loadCallback = () => {\n    // The URL is valid, but we are not sure if loading it to canvas would be\n    // blocked by crossOrigin setting. Try it here before dispatch to parent.\n\n    // https://stackoverflow.com/questions/13674835/canvas-tainted-by-cross-origin-data\n    let canvas = document.createElement(\"canvas\");\n    let context = canvas.getContext(\"2d\");\n\n    canvas.width = valiImg.width;\n    canvas.height = valiImg.height;\n    context.drawImage(valiImg, 0, 0);\n\n    try {\n      context.getImageData(0, 0, valiImg.width, valiImg.height);\n      // If the foreign image does support CORS -> use this image\n      // dispatch to parent component to use the input image\n      showLoading = false;\n      modalInfo.show = false;\n      modalStore.set(modalInfo);\n      dispatch('urlTyped', {url: valiImg.src});\n      inputValue = null;\n    } catch(err) {\n      // If the foreign image does not support CORS -> use this image\n      showLoading = false;\n      errorInfo.show = true;\n      errorInfo.error = \"No permission to load this image.\"\n    }\n  }\n\n  const imageUpload = () => {\n    usingURL = false;\n    let reader = new FileReader();\n    reader.onload = (event) => {\n      valiImg.src = event.target.result;\n    }\n    reader.readAsDataURL(files[0]);\n  }\n\n  const crossClicked = () => {\n    modalInfo.show = false;\n    modalStore.set(modalInfo);\n    // Dispatch the parent component\n    dispatch('xClicked', {preImage: modalInfo.preImage});\n  }\n\n  const addClicked = () => {\n    // Validate the input URL\n    showLoading = true;\n    errorInfo.show = false;\n    valiImg.crossOrigin = \"Anonymous\";\n    valiImg.src = inputValue;\n  }\n\n  onMount(() => {\n    let modal = d3.select(modalComponent)\n      .select('#input-modal');\n  })\n\n</script>\n\n<style>\n  .modal-card {\n    max-width: 500px;\n  }\n\n  .modal-card-title {\n    font-size: 20px;\n  }\n\n  .modal-card-head {\n    padding: 15px 20px;\n  }\n\n  .modal-card-foot {\n    padding: 12px 20px;\n    justify-content: space-between;\n  }\n\n  .is-smaller {\n    font-size: 15px;\n    padding: 0.5em 0.8em;\n    max-height: 2.2em;\n  }\n\n  .small-font {\n    font-size: 15px;\n  }\n\n  .error-message {\n    font-size: 15px;\n    padding: 0.5em 0;\n    color: #F22B61;\n  }\n\n  .control {\n    width: 100%;\n  }\n\n  .or-label {\n    font-size: 15px;\n    margin: 0 10px;\n    padding: 0.5em 0;\n  }\n\n  .field {\n    display: flex;\n    justify-content: space-between;\n  }\n\n</style>\n\n\n<div class=\"modal-component\"\n  bind:this={modalComponent}>\n\n  <div class=\"modal\"\n    id=\"input-modal\"\n    class:is-active={modalInfo.show}>\n\n    <div class=\"modal-background\" on:click={crossClicked}></div>\n\n    <div class=\"modal-card\">\n      <header class=\"modal-card-head\">\n        <p class=\"modal-card-title\">Add Input Image</p>\n        <button class=\"delete\" aria-label=\"close\" on:click={crossClicked}></button>\n      </header>\n\n      <section class=\"modal-card-body\">\n        <div class=\"field\">\n          <div class=\"control has-icons-left\"\n            class:is-loading={showLoading}>\n\n            <input class=\"input small-font\" type=\"url\"\n              bind:value={inputValue}\n              placeholder=\"Paste URL of image...\">\n\n            <span class=\"icon small-font is-left\">\n              <i class=\"fas fa-link\"></i>\n            </span>\n\n          </div>\n\n          <div class=\"or-label\">or</div>\n\n          <div class=\"file\">\n            <label class=\"file-label\">\n              <input class=\"file-input\" type=\"file\" name=\"image\"\n                accept=\".png,.jpeg,.tiff,.jpg,.png\"\n                bind:files={files}\n                on:change={imageUpload}>\n              <span class=\"file-cta small-font\">\n                <span class=\"file-icon\">\n                  <i class=\"fas fa-upload\"></i>\n                </span>\n                <span class=\"file-label\">\n                  Upload\n                </span>\n              </span>\n            </label>\n          </div>\n\n        </div>\n\n      </section>\n\n      <footer class=\"modal-card-foot\">\n\n        <div class=\"error-message\"\n          class:hidden={!errorInfo.show}>\n          {errorInfo.error}\n        </div>\n\n        <div class=\"button-container\">\n          <button class=\"button is-smaller\"\n            on:click={crossClicked}>\n            Cancel\n          </button>\n\n          <button class=\"button is-success is-smaller\"\n            on:click={addClicked}>\n            Add\n          </button>\n        </div>\n\n\n      </footer>\n    </div>\n\n  </div>\n\n  <!-- An invisible image to check if the user input URL is valid -->\n  <img style=\"display: none\"\n    id=\"vali-image\"\n    alt=\"hidden image\"\n    bind:this={valiImg}\n    on:error={errorCallback}\n    on:load={loadCallback} />\n\n</div>\n","export default {\n  $(selector) {\n    if (typeof selector === \"string\") {\n      return document.querySelector(selector);\n    }\n    return selector;\n  },\n  extend(...args) {\n    return Object.assign(...args);\n  },\n  cumulativeOffset(element) {\n    let top = 0;\n    let left = 0;\n\n    do {\n      top += element.offsetTop || 0;\n      left += element.offsetLeft || 0;\n      element = element.offsetParent;\n    } while (element);\n\n    return {\n      top: top,\n      left: left\n    };\n  },\n  directScroll(element) {\n    return element && element !== document && element !== document.body;\n  },\n  scrollTop(element, value) {\n    let inSetter = value !== undefined;\n    if (this.directScroll(element)) {\n      return inSetter ? (element.scrollTop = value) : element.scrollTop;\n    } else {\n      return inSetter\n        ? (document.documentElement.scrollTop = document.body.scrollTop = value)\n        : window.pageYOffset ||\n            document.documentElement.scrollTop ||\n            document.body.scrollTop ||\n            0;\n    }\n  },\n  scrollLeft(element, value) {\n    let inSetter = value !== undefined;\n    if (this.directScroll(element)) {\n      return inSetter ? (element.scrollLeft = value) : element.scrollLeft;\n    } else {\n      return inSetter\n        ? (document.documentElement.scrollLeft = document.body.scrollLeft = value)\n        : window.pageXOffset ||\n            document.documentElement.scrollLeft ||\n            document.body.scrollLeft ||\n            0;\n    }\n  }\n};\n","import { cubicInOut } from \"svelte/easing\";\nimport { noop, loop, now } from \"svelte/internal\";\nimport _ from \"./helper\";\n\nconst defaultOptions = {\n  container: \"body\",\n  duration: 500,\n  delay: 0,\n  offset: 0,\n  easing: cubicInOut,\n  onStart: noop,\n  onDone: noop,\n  onAborting: noop,\n  scrollX: false,\n  scrollY: true\n};\n\nconst _scrollTo = options => {\n  let {\n    offset,\n    duration,\n    delay,\n    easing,\n    x=0,\n    y=0,\n    scrollX,\n    scrollY,\n    onStart,\n    onDone,\n    container,\n    onAborting,\n    element\n  } = options;\n\n  if (typeof offset === \"function\") {\n    offset = offset();\n  }\n\n  var cumulativeOffsetContainer = _.cumulativeOffset(container);\n  var cumulativeOffsetTarget = element\n    ? _.cumulativeOffset(element)\n    : { top: y, left: x };\n\n  var initialX = _.scrollLeft(container);\n  var initialY = _.scrollTop(container);\n\n  var targetX =\n    cumulativeOffsetTarget.left - cumulativeOffsetContainer.left + offset;\n  var targetY =\n    cumulativeOffsetTarget.top - cumulativeOffsetContainer.top + offset;\n\n  var diffX = targetX - initialX;\n\tvar diffY = targetY - initialY;\n\n  let scrolling = true;\n  let started = false;\n  let start_time = now() + delay;\n  let end_time = start_time + duration;\n\n  function scrollToTopLeft(element, top, left) {\n    if (scrollX) _.scrollLeft(element, left);\n    if (scrollY) _.scrollTop(element, top);\n  }\n\n  function start(delayStart) {\n    if (!delayStart) {\n      started = true;\n      onStart(element, {x, y});\n    }\n  }\n\n  function tick(progress) {\n    scrollToTopLeft(\n      container,\n      initialY + diffY * progress,\n      initialX + diffX * progress\n    );\n  }\n\n  function stop() {\n    scrolling = false;\n  }\n\n  loop(now => {\n    if (!started && now >= start_time) {\n      start(false)\n    }\n\n    if (started && now >= end_time) {\n      tick(1);\n      stop();\n      onDone(element, {x, y});\n    }\n\n    if (!scrolling) {\n      onAborting(element, {x, y});\n      return false;\n    }\n    if (started) {\n      const p = now - start_time;\n      const t = 0 + 1 * easing(p / duration);\n      tick(t);\n    }\n\n    return true;\n  });\n\n  start(delay);\n\n  tick(0);\n\n  return stop;\n};\n\nconst proceedOptions = options => {\n\tlet opts = _.extend({}, defaultOptions, options);\n  opts.container = _.$(opts.container);\n  opts.element = _.$(opts.element);\n  return opts;\n};\n\nconst scrollContainerHeight = containerElement => {\n  if (\n    containerElement &&\n    containerElement !== document &&\n    containerElement !== document.body\n  ) {\n    return containerElement.scrollHeight - containerElement.offsetHeight;\n  } else {\n    let body = document.body;\n    let html = document.documentElement;\n\n    return Math.max(\n      body.scrollHeight,\n      body.offsetHeight,\n      html.clientHeight,\n      html.scrollHeight,\n      html.offsetHeight\n    );\n  }\n};\n\nexport const setGlobalOptions = options => {\n\t_.extend(defaultOptions, options || {});\n};\n\nexport const scrollTo = options => {\n  return _scrollTo(proceedOptions(options));\n};\n\nexport const scrollToBottom = options => {\n  options = proceedOptions(options);\n\n  return _scrollTo(\n    _.extend(options, {\n      element: null,\n      y: scrollContainerHeight(options.container)\n    })\n  );\n};\n\nexport const scrollToTop = options => {\n  options = proceedOptions(options);\n\n  return _scrollTo(\n    _.extend(options, {\n      element: null,\n      y: 0\n    })\n  );\n};\n\nexport const makeScrollToAction = scrollToFunc => {\n  return (node, options) => {\n    let current = options;\n    const handle = e => {\n      e.preventDefault();\n      scrollToFunc(\n        typeof current === \"string\" ? { element: current } : current\n      );\n    };\n    node.addEventListener(\"click\", handle);\n    node.addEventListener(\"touchstart\", handle);\n    return {\n      update(options) {\n        current = options;\n      },\n      destroy() {\n        node.removeEventListener(\"click\", handle);\n        node.removeEventListener(\"touchstart\", handle);\n      }\n    };\n  };\n};\n\nexport const scrollto = makeScrollToAction(scrollTo);\nexport const scrolltotop = makeScrollToAction(scrollToTop);\nexport const scrolltobottom = makeScrollToAction(scrollToBottom);\n","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","<script>\n    import * as animateScroll from \"svelte-scrollto\";\n    import {leftStartStore} from \"../../stores\";\n\n    let leftStartValue;\n\n    leftStartStore.subscribe(value => {\n        leftStartValue = value;\n    });\n\n</script>\n\n<style>\n    .figure {\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        margin: 2em 0;\n    }\n    .figure-caption {\n        font-size: 13px;\n        margin-top: 5px;\n    }\n</style>\n\n<div class=\"container\">\n    <div class=\"tile is-parent\">\n        <div class=\"tile is-child\">\n            <h1 class=\"title\">DataTrainX c'est quoi ?</h1>\n            <p class=\"subtitle\">Outil de recherche des singularités cognitives d’un étudiant!</p>\n            <article class=\"content\">\n                <p>Dans l’apprentissage, une logique de la restitution qui prévaut encore sur une logique de la compréhension serait à l’origine de nombreux échecs de l’apprenant. Pour se comprendre, comprendre le monde et autrui, tout apprenant produit et met en œuvre des ressources métacognitives.</p>\n                <p>On observera que cela fait appel à de nombreuses disciplines, comme la psychologie, la pédagogie, les neurosciences mais aussi le management, qui demandera à l’équipe enseignante une formation continue pour s’appuyer sur de tels dispositifs.</p>\n                <p>DataTrainX est un prototype de reconnaissance facial des émotions (REF) qui a pour objectif principal de s’intéresser à l’analyse des comportements de l'apprenant dans un but de neuropédagogie.</p>\n                <p>Cela peut être très utile dans l'adaptation des modèles d’apprentissage où, en analysant les comportements, on serait en mesure de s’adapter à l’apprenant (adaptive-learning).</p>\n                <p>DataTrainX est un agent intelligent capable de reconnaître les émotions traduites par les expressions faciales couplées au test de Kolb sur le style d’apprentissage.</p>\n                <p>Pour ce faire, nous utiliserons des algorithmes de deep-Learning et plus particulièrement les réseaux de neurones convolutifs (CNN) dans la reconnaissance des émotions de bases défini par le psychologue P. Ekman ('Colère', 'Dégoût', 'Peur', 'Joyeux', 'Triste', 'Surprise', 'Neutre').</p>\n                <h3>Principe d'un réseau de neurones convolutifs - Deep Learning</h3>\n                <p>Les réseaux de neurones convolutifs ont une méthodologie similaire à celle des méthodes traditionnelles d'apprentissage supervisé, ils détectent les caractéristiques, puis entraînent un classifieur dessus, à la différence près que les caractéristiques sont apprises automatiquement. Un CNN applique généralement 5 types de couches différentes à une image afin d’en extraire les informations pertinentes, la couche de convolution, la couche de pooling, la couche de correction ReLU et la couche fully-connected (figure 1).</p>\n                <div class=\"figure\">\n                    <img src=\"PUBLIC_URL/assets/figures/cnn.gif\" alt=\"Principe d'une architecture CNN\" />\n                    <div class=\"figure-caption\">\n                        Figure 1. Principe d'une architecture CNN\n                    </div>\n                </div>\n                <p>La couche de convolution permet de trouver des caractéristiques, elle est donc la composante la plus importante. Elle est assez proche de la mécanique sur les caractéristiques pseudo-Haar. Le principe est le même, faire \"glisser\" une fenêtre représentant un filtre sur l'image. La différence ici, c’est que l’on cherche une convolution calculée et non une corrélation croisée (comme la recherche d’une caractéristiques pseudo-haar).</p>\n                <p>Le filtre, sera la caractéristique à étudier, cette caractéristique est trouvée par convolution, pour comprendre l’application nous simplifions l’image du visage par une croix noirs et blanche (figure 2). La caractéristique (feature) dans cet exemple prend la taille de 3x3 puis recherche des points communs par balayage de l’image. Dans la démonstration nous avons pris la valeur d’un pixel en 2D, 1 pour blanc et -1 pour noir, ainsi entre deux caractéristiques comparées nous réalisons un calcul d’addition entre les 9 pixels ce qui nous permet d’obtenir un score de similarité, ici 80%. Ce même calcul est réalisé sur l’ensemble  de l’image avec un stride de 1 (la zone comparée bouge d’un seul pixel entre chaque comparaison).</p>\n                <div class=\"figure\">\n                    <img src=\"PUBLIC_URL/assets/figures/relu.gif\" alt=\"Principe de convolution est de l'activation ReLU\" />\n                    <div class=\"figure-caption\">\n                        Figure 2. Principe de convolution est de l'activation ReLU, ici la comparaison entre les deux images permettent de trouver trois caractéristiques, l'une des caractéristiques (en vert) est nettoyer ensuite des valeurs négatives (ReLU)\n                    </div>\n                </div>\n                <p>Nous avons adaptés le projet <a href=\"https://poloclub.github.io/cnn-explainer/\" target=\"_blank\">CNN Explainer</a> pour en comprendre le principe sur un dataset fer2013.</p>\n                <div class=\"buttons\">\n\n                    <button class=\"button is-primary\" id=\"explain-button\" on:click={() => animateScroll.scrollTo({element: \"#header\", onDone: (element, offset) => {leftStartStore.set(-innerWidth)}})}>\n                            <span class=\"icon\">\n                              <i class=\"fas fa-eye\"></i>\n                            </span>\n                        <span>Comment ça marche ?</span>\n                    </button>\n                </div>\n                <p>L’idée est de se concentrer sur la démarche que privilégie chaque individu pour appréhender l’acte d’apprendre. Certains styles seraient plus adaptés dans certains contextes que d’autres. Tout dépend du point de vue de l’apprenant face à la situation d’apprentissage et de sa motivation.</p>\n                <p>Bien que des auteurs comme Jean Houssaye démontrent que ce qui semble essentiel c’est de différencier la pédagogie bien plus que des typologies destinées à connaître individuellement les apprenants et à dresser leur profil, il parait néanmoins intéressant de les utiliser comme complémentarité à un panel d’outil diversifié que peut utiliser le formateur.</p>\n                <h3>Le modèle de l’apprentissage expérientiel de Kolb</h3>\n                <p>Les modèles de styles d’apprentissage individualisés ont donc pour objectif de définir un type d’apprenant afin de permettre aux enseignants d’adapter leurs méthodes d’apprentissage. Peu d’études ont réussi à valider le concept de styles d’apprentissage en éducation.</p>\n                <p>Peu d’études ont réussi à valider le concept de styles d’apprentissage en éducation. L’étude de Pashler et al indique bien une corrélation entre typologies et les préférences exprimées par certains individus sur la façon dont ils préfèrent recevoir de l’information mais contredit le fait selon laquelle l’apprenant apprendrait mieux en apprenant avec une méthode jugée comme appropriée à son style d’apprentissage</p>\n                <p>Nombreux sont les scientifiques qui parle de mythe ou invitent les professionnels de l’éducation et d’apprentissage à faire preuve de scepticisme devant ces concepts. Le modèle de Kolb n’échappe pas non plus aux critiques mais il est de loin celui qui a connu la plus large diffusion et celui qui est à la base de modèle d’autres chercheurs.</p>\n                <p>Il est inspiré des travaux de psychologue reconnu comme John Dewey, Kurt Lewin et Jean Piaget. Il est plutôt approprié pour les apprentissages de disciplines académiques relativement abstraites, mais moins adaptés pour la plupart des apprentissages professionnels.</p>\n                <p>D’un autre côté, notre cible d’étude est réalisée sur des universitaires en informatique, ce test nous semble donc plutôt approprié.</p>\n                <p>Ce qu’il faut retenir des principales critiques, c’est qu’étiqueter un apprenant et le cantonner dans une posture est strictement contre-productif et va à l’inverse de l’objectif recherché. Néanmoins, ce qu’il ressort aussi, ce sont des concepts génériques qui fonctionnent.</p>\n                <p>Par exemple, un profil « indépendants » a tendance à questionner les novices alors que le profil « socialisant » propose des aides, les « socialisants » s’adaptent à leur interlocuteur, quel que soit le style du novice, ceux qui travaillent avec un expert « socialisant » progressent le plus.</p>\n                <p>On peut donc constater que les styles d’apprentissage, nous ouvre une voie pour des recherches sur les interactions sociales entre formateurs et apprenants. Pour des raisons à la fois pratiques et théoriques, il faut retenir la « maniabilité » des styles mais que cependant ils paraissent suffisamment stables pour qu’on puisse les prendre en compte dans une situation donnée afin de contribuer à expliquer ses comportements d’apprentissage. Puis enfin, garder à l’esprit qu’en modifiant de façon significative la situation d’apprentissage, il est possible qu’un individu modifie son style préférentiel d’apprentissage. Enfin, le facteur que l’on souhaite ajouter à notre projet et l’expression de l’émotion corrélé au type d’apprentissage.</p>\n                <h3>Typologie d’apprentissage et émotions</h3>\n                <p>Il y aura donc une phase de saisie d’un questionnaire afin de déterminer un profil d’apprenant de type Kolb dans le projet DataTrainx. L’utilisateur sera enregistré en vidéo et une comparaison sera effectuée entre la typologie trouvée par le questionnaire et les émotions qu’il aura exprimées. Comme l’illustre la figure ci-dessous, l’objectif est de trouver une corrélation entre la typologie d’apprentissage et l’émotion de l’utilisateur.</p>\n                <div class=\"figure\">\n                    <img src=\"PUBLIC_URL/assets/figures/style.gif\" alt=\"Exemple de restitution des résultats de l’application DataTrainX.\" />\n                    <div class=\"figure-caption\">\n                        Figure 3. Exemple de restitution des résultats de l’application DataTrainX. Obtenir un profil d’apprenant, analyser l’émotion dans une mise en situation, trouver une corrélation.\n                    </div>\n                </div>\n                <p>Dans l’hypothèse où nous aurions des résultats significatifs entre expression et typologie, nous pourrions considérer que le profil émotionnel même de l’émotion détermine la typologie d’apprentissage et donc envisager, par exemple, une orientation du logiciel vers l’adaptative learning, c’est-à-dire une interaction entre l’IA et l’utilisateur dans la proposition des supports pédagogique.</p>\n                <p>L’objet de ce projet, a pour orientation de se focaliser concrètement sur les moyens fonctionnels informatique à mettre en œuvre pour ce type d’application. Nous n’approfondirons pas l’aspect psychologique, qui se limitera au test de Kolb et à la résolution d’un Puzzle, l’objectif étant de démontrer comment mettre en place l’architecture fonctionnelle, logicielle et matérielle pour arriver à un résultat applicatif de la reconnaissance faciale de l’émotion.</p>\n                <p>Les résultats d’ordre psychologique à prendre en considération sur l’objectif de cette application auront donc une part importante de subjectivité clairement assumé.</p>\n            </article>\n        </div>\n    </div>\n</div>\n","/* global tf */\n\n// Network input image size\nconst networkInputSize = 48;\n\n//mode RGB = 3, Gray = 1\nconst inputShape = 1;\n\n// Enum of node types\nconst nodeType = {\n  INPUT: 'input',\n  CONV: 'conv',\n  POOL: 'pool',\n  RELU: 'relu',\n  FC: 'fc',\n  FLATTEN: 'flatten'\n}\n\nclass Node {\n  /**\n   * Class structure for each neuron node.\n   *\n   * @param {string} layerName Name of the node's layer.\n   * @param {int} index Index of this node in its layer.\n   * @param {string} type Node type {input, conv, pool, relu, fc}.\n   * @param {number} bias The bias assocated to this node.\n   * @param {number[]} output Output of this node.\n   */\n  constructor(layerName, index, type, bias, output) {\n    this.layerName = layerName;\n    this.index = index;\n    this.type = type;\n    this.bias = bias;\n    this.output = output;\n\n    // Weights are stored in the links\n    this.inputLinks = [];\n    this.outputLinks = [];\n  }\n}\n\nclass Link {\n  /**\n   * Class structure for each link between two nodes.\n   *\n   * @param {Node} source Source node.\n   * @param {Node} dest Target node.\n   * @param {number} weight Weight associated to this link. It can be datatrainx number,\n   *  1D array, or 2D array.\n   */\n  constructor(source, dest, weight) {\n    this.source = source;\n    this.dest = dest;\n    this.weight = weight;\n  }\n}\n\n/**\n * Construct datatrainx CNN with given extracted outputs from every layer.\n *\n * @param {number[][]} allOutputs Array of outputs for each layer.\n *  allOutputs[i][j] is the output for layer i node j.\n * @param {Model} model Loaded tf.js model.\n * @param {Tensor} inputImageTensor Loaded input image tensor.\n */\nconst constructCNNFromOutputs = (allOutputs, model, inputImageTensor) => {\n  let cnn = [];\n  // Add the first layer (input layer)\n  let inputLayer = [];\n  let inputShape = model.layers[0].batchInputShape.slice(1);\n  let inputImageArray = inputImageTensor.transpose([2, 0, 1]).arraySync();\n\n  // First layer's three nodes' outputs are the channels of inputImageArray\n  for (let i = 0; i < inputShape[2]; i++) {\n    let node = new Node('input', i, nodeType.INPUT, 0, inputImageArray[i]);\n    inputLayer.push(node);\n  }\n\n  cnn.push(inputLayer);\n  let curLayerIndex = 1;\n  for (let l = 0; l < model.layers.length; l++) {\n    let layer = model.layers[l];\n    // Get the current output\n    let outputs = allOutputs[l].squeeze();\n    outputs = outputs.arraySync();\n\n    let curLayerNodes = [];\n    let curLayerType;\n\n    console.log(\"name >> \" + layer.name);\n    // Identify layer type based on the layer name\n    if (layer.name.includes('conv')) {\n      curLayerType = nodeType.CONV;\n    } else if (layer.name.includes('pool')) {\n      curLayerType = nodeType.POOL;\n    } else if (layer.name.includes('relu')) {\n      curLayerType = nodeType.RELU;\n    } else if (layer.name.includes('output')) {\n      curLayerType = nodeType.FC;\n    } else if (layer.name.includes('flatten')) {\n      curLayerType = nodeType.FLATTEN;\n    } else if (layer.name.includes('batch')) {\n      //curLayerType = nodeType.RELU;\n    } else if (layer.name.includes('dropout')) {\n      //curLayerType = nodeType.RELU;\n    } else if (layer.name.includes('dense')) {\n      //curLayerType = nodeType.FC;\n    } else if (layer.name.includes('activation')) {\n      //curLayerType = nodeType.RELU;\n    } else {\n      console.log('Find unknown type');\n    }\n\n    //ignore if layer is undefined\n    if(curLayerType){\n\n      // Construct this layer based on its layer type\n      switch (curLayerType) {\n        case nodeType.CONV: {\n          let biases = layer.bias.val.arraySync();\n          // The new order is [output_depth, input_depth, height, width]\n          let weights = layer.kernel.val.transpose([3, 2, 0, 1]).arraySync();\n\n          // Add nodes into this layer\n          for (let i = 0; i < outputs.length; i++) {\n            let node = new Node(layer.name, i, curLayerType, biases[i],\n                outputs[i]);\n\n            // Connect this node to all previous nodes (create links)\n            // CONV layers have weights in links. Links are one-to-multiple.\n            for (let j = 0; j < cnn[curLayerIndex - 1].length; j++) {\n              let preNode = cnn[curLayerIndex - 1][j];\n              let curLink = new Link(preNode, node, weights[i][j]);\n              preNode.outputLinks.push(curLink);\n              node.inputLinks.push(curLink);\n            }\n            curLayerNodes.push(node);\n          }\n          break;\n        }\n        case nodeType.FC: {\n          let biases = layer.bias.val.arraySync();\n          // The new order is [output_depth, input_depth]\n          let weights = layer.kernel.val.transpose([1, 0]).arraySync();\n\n          // Add nodes into this layer\n          for (let i = 0; i < outputs.length; i++) {\n            let node = new Node(layer.name, i, curLayerType, biases[i],\n                outputs[i]);\n\n            // Connect this node to all previous nodes (create links)\n            // FC layers have weights in links. Links are one-to-multiple.\n\n            // Since we are visualizing the logit values, we need to track\n            // the raw value before softmax\n            let curLogit = 0;\n            for (let j = 0; j < cnn[curLayerIndex - 1].length; j++) {\n              let preNode = cnn[curLayerIndex - 1][j];\n              let curLink = new Link(preNode, node, weights[i][j]);\n              preNode.outputLinks.push(curLink);\n              node.inputLinks.push(curLink);\n              curLogit += preNode.output * weights[i][j];\n            }\n            curLogit += biases[i];\n            node.logit = curLogit;\n            curLayerNodes.push(node);\n          }\n\n          // Sort flatten layer based on the node TF index\n          cnn[curLayerIndex - 1].sort((a, b) => a.realIndex - b.realIndex);\n          break;\n        }\n        case nodeType.RELU:\n        case nodeType.POOL: {\n          // RELU and POOL have no bias nor weight\n          let bias = 0;\n          let weight = null;\n\n          // Add nodes into this layer\n          for (let i = 0; i < outputs.length; i++) {\n            let node = new Node(layer.name, i, curLayerType, bias, outputs[i]);\n\n            // RELU and POOL layers have no weights. Links are one-to-one\n            let preNode = cnn[curLayerIndex - 1][i];\n            let link = new Link(preNode, node, weight);\n            preNode.outputLinks.push(link);\n            node.inputLinks.push(link);\n            curLayerNodes.push(node);\n          }\n          break;\n        }\n        case nodeType.FLATTEN: {\n          // Flatten layer has no bias nor weights.\n          let bias = 0;\n\n          for (let i = 0; i < outputs.length; i++) {\n            // Flatten layer has no weights. Links are multiple-to-one.\n            // Use dummy weights to store the corresponding entry in the previsou\n            // node as (row, column)\n            // The flatten() in tf2.keras has order: channel -> row -> column\n            let preNodeWidth = cnn[curLayerIndex - 1][0].output.length,\n                preNodeNum = cnn[curLayerIndex - 1].length,\n                preNodeIndex = i % preNodeNum,\n                preNodeRow = Math.floor(Math.floor(i / preNodeNum) / preNodeWidth),\n                preNodeCol = Math.floor(i / preNodeNum) % preNodeWidth,\n                // Use channel, row, colume to compute the real index with order\n                // row -> column -> channel\n                curNodeRealIndex = preNodeIndex * (preNodeWidth * preNodeWidth) +\n                    preNodeRow * preNodeWidth + preNodeCol;\n\n            let node = new Node(layer.name, i, curLayerType,\n                bias, outputs[i]);\n\n            // TF uses the (i) index for computation, but the real order should\n            // be (curNodeRealIndex). We will sort the nodes using the real order\n            // after we compute the logits in the output layer.\n            node.realIndex = curNodeRealIndex;\n\n            let link = new Link(cnn[curLayerIndex - 1][preNodeIndex],\n                node, [preNodeRow, preNodeCol]);\n\n            cnn[curLayerIndex - 1][preNodeIndex].outputLinks.push(link);\n            node.inputLinks.push(link);\n\n            curLayerNodes.push(node);\n          }\n\n          // Sort flatten layer based on the node TF index\n          curLayerNodes.sort((a, b) => a.index - b.index);\n          break;\n        }\n        default:\n          console.error('Encounter unknown layer type');\n          break;\n      }\n\n      // Add current layer to the NN\n      cnn.push(curLayerNodes);\n      curLayerIndex++;\n    }\n  }\n  return cnn;\n}\n\n/**\n * Construct datatrainx CNN with given model and input.\n *\n * @param {string} inputImageFile filename of input image.\n * @param {Model} model Loaded tf.js model.\n */\nexport const constructCNN = async (inputImageFile, model) => {\n\n  // Load the image file\n  let inputImageTensor = await getInputImageArray(inputImageFile, true);\n  // Need to feed the model with datatrainx batch\n  let inputImageTensorBatch = tf.stack([inputImageTensor]);\n\n  // To get intermediate layer outputs, we will iterate through all layers in\n  // the model, and sequencially apply transformations.\n  let preTensor = inputImageTensorBatch;\n  let outputs = [];\n  // Iterate through all layers, and build one model with that layer as output\n  for (let l = 0; l < model.layers.length; l++) {\n    let curTensor = model.layers[l].apply(preTensor);\n    // Record the output tensor\n    // Because there is only one element in the batch, we use squeeze()\n    // We also want to use CHW order here\n\n    let output = curTensor.squeeze();\n    if (output.shape.length === 3) {\n      output = output.transpose([2, 0, 1]);\n    }\n    outputs.push(output);\n\n    // Update preTensor for next nesting iteration\n    preTensor = curTensor;\n  }\n\n  let cnn = constructCNNFromOutputs(outputs, model, inputImageTensor);\n  return cnn;\n}\n\n// Helper functions\n\n/**\n * Crop the largest central square of size 64x64x3 of datatrainx 3d array.\n *\n * @param {[int8]} arr array that requires cropping and padding (if datatrainx 64x64 crop\n * is not present)\n * @returns 64x64x3 array\n */\nconst cropCentralSquare = (arr) => {\n  let width = arr.length;\n  let height = arr[0].length;\n  let croppedArray;\n\n  // Crop largest square from image if the image is smaller than 64x64 and pad the\n  // cropped image.\n  if (width < networkInputSize || height < networkInputSize) {\n    // TODO(robert): Finish the padding logic.  Pushing now for Omar to work on when he is ready.\n    let cropDimensions = Math.min(width, height);\n    let startXIdx = Math.floor(width / 2) - (cropDimensions / 2);\n    let startYIdx = Math.floor(height / 2) - (cropDimensions / 2);\n    let unpaddedSubarray = arr.slice(startXIdx, startXIdx + cropDimensions).map(i => i.slice(startYIdx, startYIdx + cropDimensions));\n  } else {\n    let startXIdx = Math.floor(width / 2) - Math.floor(networkInputSize / 2);\n    let startYIdx = Math.floor(height / 2) - Math.floor(networkInputSize / 2);\n    croppedArray = arr.slice(startXIdx, startXIdx + networkInputSize).map(i => i.slice(startYIdx, startYIdx + networkInputSize));\n  }\n  return croppedArray;\n}\n\n/**\n * Convert canvas image data into datatrainx 3D tensor with dimension [height, width, 3].\n * Recall that tensorflow uses NHWC order (batch, height, width, channel).\n * Each pixel is in 0-255 scale.\n *\n * @param {[int8]} imageData Canvas image data\n * @param {int} width Canvas image width\n * @param {int} height Canvas image height\n */\nconst imageDataTo3DTensor = (imageData, width, height, normalize=true) => {\n  // Create array placeholder for the 3d array [width, height, 3] for rgb\n  let imageArray = tf.fill([width, height, inputShape], 0).arraySync();\n\n  // Iterate through the data to fill out channel arrays above\n  for (let i = 0; i < imageData.length; i++) {\n    let pixelIndex = Math.floor(i / 4),\n        channelIndex = i % 4,\n        row = width === height ? Math.floor(pixelIndex / width)\n            : pixelIndex % width,\n        column = width === height ? pixelIndex % width\n            : Math.floor(pixelIndex / width);\n\n    if (channelIndex < inputShape) {\n      let curEntry  = imageData[i];\n      // Normalize the original pixel value from [0, 255] to [0, 1]\n      if (normalize) {\n        curEntry /= 255;\n      }\n      imageArray[row][column][channelIndex] = curEntry;\n    }\n  }\n\n  // If the image is not 64x64, crop and or pad the image appropriately.\n  if (width != networkInputSize && height != networkInputSize) {\n    imageArray = cropCentralSquare(imageArray)\n  }\n\n  let tensor = tf.tensor3d(imageArray);\n  return tensor;\n}\n\n/**\n * Get the 3D pixel value array of the given image file.\n *\n * @param {string} imgFile File path to the image file\n * @returns A promise with the corresponding 3D array\n */\nconst getInputImageArray = (imgFile, normalize=true) => {\n  let canvas = document.createElement('canvas');\n  canvas.style.cssText = 'display:none;';\n  document.getElementsByTagName('body')[0].appendChild(canvas);\n  let context = canvas.getContext('2d');\n\n  return new Promise((resolve, reject) => {\n    let inputImage = new Image();\n    inputImage.crossOrigin = \"Anonymous\";\n    inputImage.src = imgFile;\n    let canvasImage;\n    inputImage.onload = () => {\n      canvas.width = inputImage.width;\n      canvas.height = inputImage.height;\n      // Resize the input image of the network if it is too large to simply crop\n      // the center 64x64 portion in order to still provide datatrainx representative\n      // input image into the network.\n      if (inputImage.width > networkInputSize || inputImage.height > networkInputSize) {\n        // Step 1 - Resize using smaller dimension to scale the image down. \n        let resizeCanvas = document.createElement('canvas'),\n            resizeContext = resizeCanvas.getContext('2d');\n        let smallerDimension = Math.min(inputImage.width, inputImage.height);\n        const resizeFactor = (networkInputSize + 1) / smallerDimension;\n        resizeCanvas.width = inputImage.width * resizeFactor;\n        resizeCanvas.height = inputImage.height * resizeFactor;\n        resizeContext.drawImage(inputImage, 0, 0, resizeCanvas.width,\n            resizeCanvas.height);\n\n        // Step 2 - Flip non-square images horizontally and rotate them 90deg since\n        // non-square images are not stored upright.\n        if (inputImage.width != inputImage.height) {\n          context.translate(resizeCanvas.width, 0);\n          context.scale(-1, 1);\n          context.translate(resizeCanvas.width / 2, resizeCanvas.height / 2);\n          context.rotate(90 * Math.PI / 180);\n        }\n\n        // Step 3 - Draw resized image on original canvas.\n        if (inputImage.width != inputImage.height) {\n          context.drawImage(resizeCanvas, -resizeCanvas.width / 2, -resizeCanvas.height / 2);\n        } else {\n          context.drawImage(resizeCanvas, 0, 0);\n        }\n        canvasImage = context.getImageData(0, 0, resizeCanvas.width,\n            resizeCanvas.height);\n\n      } else {\n        context.drawImage(inputImage, 0, 0);\n        canvasImage = context.getImageData(0, 0, inputImage.width,\n            inputImage.height);\n      }\n      // Get image data and convert it to datatrainx 3D array\n      let imageData = canvasImage.data;\n      let imageWidth = canvasImage.width;\n      let imageHeight = canvasImage.height;\n\n      // Remove this newly created canvas element\n      canvas.parentNode.removeChild(canvas);\n\n      resolve(imageDataTo3DTensor(imageData, imageWidth, imageHeight, normalize));\n    }\n    inputImage.onerror = reject;\n  })\n}\n\n/**\n * Wrapper to load datatrainx model.\n *\n * @param {string} modelFile Filename of converted (through tensorflowjs.py)\n *  model json file.\n */\nexport const loadTrainedModel = (modelFile) => {\n  return tf.loadLayersModel(modelFile);\n}\n","/* global d3 */\n\nconst layerColorScales = {\n  input: [d3.interpolateGreys, d3.interpolateGreys, d3.interpolateGreys],\n  conv: d3.interpolateRdBu,\n  relu: d3.interpolateRdBu,\n  pool: d3.interpolateRdBu,\n  fc: d3.interpolateGreys,\n  weight: d3.interpolateBrBG,\n  logit: d3.interpolateOranges\n};\n\nlet nodeLength = 40;\n\nexport const overviewConfig = {\n  nodeLength : nodeLength,\n  plusSymbolRadius : nodeLength / 5,\n  numLayers : 12,\n  edgeOpacity : 0.8,\n  edgeInitColor : 'rgb(230, 230, 230)',\n  edgeHoverColor : 'rgb(130, 130, 130)',\n  edgeHoverOuting : false,\n  edgeStrokeWidth : 0.7,\n  intermediateColor : 'gray',\n  layerColorScales: layerColorScales,\n  svgPaddings: {top: 25, bottom: 25, left: 50, right: 50},\n  kernelRectLength: 8/3,\n  gapRatio: 4,\n  modeImg: 1, // 1 for gray or 3 rgb\n  overlayRectOffset: 12,\n  classLists: ['Colère', 'Dégoût', 'Peur', 'Joyeux', 'Triste', 'Surprise', 'Neutre']\n};","import { overviewConfig } from '../config.js';\n\n// Configs\nconst nodeLength = overviewConfig.nodeLength;\n\n/**\n * Compute the [minimum, maximum] of datatrainx 1D or 2D array.\n * @param {[number]} array \n */\nexport  const getExtent = (array) => {\n  let min = Infinity;\n  let max = -Infinity;\n\n  // Scalar\n  if (array.length === undefined) {\n    return [array, array];\n  }\n\n  // 1D array\n  if (array[0].length === undefined) {\n    for (let i = 0; i < array[0].length; i++) {\n      if (array[i] < min) {\n        min = array[i];\n      } else if (array[i] > max) {\n        max = array[i];\n      }\n    }\n    return [min, max];\n  }\n\n  // 2D array\n  for (let i = 0; i < array.length; i++) {\n    for (let j = 0; j < array[0].length; j++) {\n      if (array[i][j] < min) {\n        min = array[i][j];\n      } else if (array[i][j] > max) {\n        max = array[i][j];\n      }\n    }\n  }\n  return [min, max];\n}\n\n/**\n * Convert the svg element center coord to document absolute value\n * // Inspired by https://github.com/caged/d3-tip/blob/master/index.js#L286\n * @param {elem} elem \n */\nexport const getMidCoords = (svg, elem) => {\n  if (svg !== undefined) {\n    let targetel = elem;\n    while (targetel.getScreenCTM == null && targetel.parentNode != null) {\n      targetel = targetel.parentNode;\n    }\n    // Get the absolute coordinate of the E point of element bbox\n    let point = svg.node().ownerSVGElement.createSVGPoint();\n    let matrix = targetel.getScreenCTM();\n    let tbbox = targetel.getBBox();\n    // let width = tbbox.width;\n    let height = tbbox.height;\n\n    point.x += 0;\n    point.y -= height / 2;\n    let bbox = point.matrixTransform(matrix);\n    return {\n      top: bbox.y,\n      left: bbox.x\n    };\n  }\n}\n\n/**\n * Return the output knot (right boundary center)\n * @param {object} point {x: x, y:y}\n */\nexport const getOutputKnot = (point) => {\n  return {\n    x: point.x + nodeLength,\n    y: point.y + nodeLength / 2\n  };\n}\n\n/**\n * Return the output knot (left boundary center)\n * @param {object} point {x: x, y:y}\n */\nexport const getInputKnot = (point) => {\n  return {\n    x: point.x,\n    y: point.y + nodeLength / 2\n  }\n}\n\n/**\n * Compute edge data\n * @param {[[[number, number]]]} nodeCoordinate Constructed neuron svg locations\n * @param {[object]} cnn Constructed CNN model\n */\nexport const getLinkData = (nodeCoordinate, cnn) => {\n  let linkData = [];\n  // Create links backward (starting for the first conv layer)\n  for (let l = 1; l < cnn.length; l++) {\n    for (let n = 0; n < cnn[l].length; n++) {\n      let isOutput = cnn[l][n].layerName === 'output';\n      let curTarget = getInputKnot(nodeCoordinate[l][n]);\n      for (let p = 0; p < cnn[l][n].inputLinks.length; p++) {\n        // Specially handle output layer (since we are ignoring the flatten)\n        let inputNodeIndex = cnn[l][n].inputLinks[p].source.index;\n        \n        if (isOutput) {\n          let flattenDimension = cnn[l-1][0].output.length *\n            cnn[l-1][0].output.length;\n          if (inputNodeIndex % flattenDimension !== 0){\n              continue;\n          }\n          inputNodeIndex = Math.floor(inputNodeIndex / flattenDimension);\n        }\n        let curSource = getOutputKnot(nodeCoordinate[l-1][inputNodeIndex]);\n        let curWeight = cnn[l][n].inputLinks[p].weight;\n        linkData.push({\n          source: curSource,\n          target: curTarget,\n          weight: curWeight,\n          targetLayerIndex: l,\n          targetNodeIndex: n,\n          sourceNodeIndex: inputNodeIndex\n        });\n      }\n    }\n  }\n  return linkData;\n}\n\n\n/**\n * Color scale wrapper (support artificially lighter color!)\n * @param {function} colorScale D3 color scale function\n * @param {number} range Color range (max - min)\n * @param {number} value Color value\n * @param {number} gap Tail of the color scale to skip\n */\nexport const gappedColorScale = (colorScale, range, value, gap) => {\n  if (gap === undefined) { gap = 0; }\n  let normalizedValue = (value + range / 2) / range;\n  return colorScale(normalizedValue * (1 - 2 * gap) + gap);\n}","/* global d3, SmoothScroll */\n\nimport {\n  svgStore, vSpaceAroundGapStore, hSpaceAroundGapStore, cnnStore,\n  nodeCoordinateStore, selectedScaleLevelStore, cnnLayerRangesStore,\n  detailedModeStore, cnnLayerMinMaxStore, hoverInfoStore\n} from '../stores.js';\nimport {\n  getExtent, getLinkData\n} from './draw-utils.js';\nimport { overviewConfig } from '../config.js';\n\n// Configs\nconst layerColorScales = overviewConfig.layerColorScales;\nconst nodeLength = overviewConfig.nodeLength;\nconst numLayers = overviewConfig.numLayers;\nconst edgeOpacity = overviewConfig.edgeOpacity;\nconst edgeInitColor = overviewConfig.edgeInitColor;\nconst edgeStrokeWidth = overviewConfig.edgeStrokeWidth;\nconst svgPaddings = overviewConfig.svgPaddings;\nconst gapRatio = overviewConfig.gapRatio;\nconst classLists = overviewConfig.classLists;\nconst formater = d3.format('.4f');\n\n// Shared variables\nlet svg = undefined;\nsvgStore.subscribe( value => {svg = value;} )\n\nlet vSpaceAroundGap = undefined;\nvSpaceAroundGapStore.subscribe( value => {vSpaceAroundGap = value;} )\n\nlet hSpaceAroundGap = undefined;\nhSpaceAroundGapStore.subscribe( value => {hSpaceAroundGap = value;} )\n\nlet cnn = undefined;\ncnnStore.subscribe( value => {cnn = value;} )\n\nlet nodeCoordinate = undefined;\nnodeCoordinateStore.subscribe( value => {nodeCoordinate = value;} )\n\nlet selectedScaleLevel = undefined;\nselectedScaleLevelStore.subscribe( value => {selectedScaleLevel = value;} )\n\nlet cnnLayerRanges = undefined;\ncnnLayerRangesStore.subscribe( value => {cnnLayerRanges = value;} )\n\nlet cnnLayerMinMax = undefined;\ncnnLayerMinMaxStore.subscribe( value => {cnnLayerMinMax = value;} )\n\nlet detailedMode = undefined;\ndetailedModeStore.subscribe( value => {detailedMode = value;} )\n\n/**\n * Use bounded d3 data to draw one canvas\n * @param {object} d d3 data\n * @param {index} i d3 data index\n * @param {[object]} g d3 group\n * @param {number} range color range map (max - min)\n */\nexport const drawOutput = (d, i, g, range) => {\n  let image = g[i];\n  let colorScale = layerColorScales[d.type];\n\n  if (d.type === 'input') {\n    colorScale = colorScale[d.index];\n  }\n\n  // Set up datatrainx second convas in order to resize image\n  let imageLength = d.output.length === undefined ? 1 : d.output.length;\n  let bufferCanvas = document.createElement(\"canvas\");\n  let bufferContext = bufferCanvas.getContext(\"2d\");\n  bufferCanvas.width = imageLength;\n  bufferCanvas.height = imageLength;\n\n  // Fill image pixel array\n  let imageSingle = bufferContext.getImageData(0, 0, imageLength, imageLength);\n  let imageSingleArray = imageSingle.data;\n\n  if (imageLength === 1) {\n    imageSingleArray[0] = d.output;\n  } else {\n    for (let i = 0; i < imageSingleArray.length; i+=4) {\n      let pixeIndex = Math.floor(i / 4);\n      let row = Math.floor(pixeIndex / imageLength);\n      let column = pixeIndex % imageLength;\n      let color = undefined;\n      if (d.type === 'input' || d.type === 'fc' ) {\n        color = d3.rgb(colorScale(1 - d.output[row][column]))\n      } else {\n        color = d3.rgb(colorScale((d.output[row][column] + range / 2) / range));\n      }\n\n      imageSingleArray[i] = color.r;\n      imageSingleArray[i + 1] = color.g;\n      imageSingleArray[i + 2] = color.b;\n      imageSingleArray[i + 3] = 255;\n    }\n  }\n\n  // canvas.toDataURL() only exports image in 96 DPI, so we can hack it to have\n  // higher DPI by rescaling the image using canvas magic\n  let largeCanvas = document.createElement('canvas');\n  largeCanvas.width = nodeLength * 3;\n  largeCanvas.height = nodeLength * 3;\n  let largeCanvasContext = largeCanvas.getContext('2d');\n\n  // Use drawImage to resize the original pixel array, and put the new image\n  // (canvas) into corresponding canvas\n  bufferContext.putImageData(imageSingle, 0, 0);\n  largeCanvasContext.drawImage(bufferCanvas, 0, 0, imageLength, imageLength,\n      0, 0, nodeLength * 3, nodeLength * 3);\n\n  let imageDataURL = largeCanvas.toDataURL();\n  d3.select(image).attr('xlink:href', imageDataURL);\n\n  // Destory the buffer canvas\n  bufferCanvas.remove();\n  largeCanvas.remove();\n}\n\n/**\n * Draw bar chart to encode the output value\n * @param {object} d d3 data\n * @param {index} i d3 data index\n * @param {[object]} g d3 group\n * @param {function} scale map value to length\n */\nconst drawOutputScore = (d, i, g, scale) => {\n  let group = d3.select(g[i]);\n  group.select('rect.output-rect')\n      .transition('output')\n      .delay(500)\n      .duration(800)\n      .ease(d3.easeCubicIn)\n      .attr('width', scale(d.output))\n}\n\nexport const drawCustomImage = (image, inputLayer) => {\n\n  let imageWidth = image.width;\n  // Set up datatrainx second convas in order to resize image\n  let imageLength = inputLayer[0].output.length;\n  let bufferCanvas = document.createElement(\"canvas\");\n  let bufferContext = bufferCanvas.getContext(\"2d\");\n  bufferCanvas.width = imageLength;\n  bufferCanvas.height = imageLength;\n\n  // Fill image pixel array\n  let imageSingle = bufferContext.getImageData(0, 0, imageLength, imageLength);\n  let imageSingleArray = imageSingle.data;\n\n  for (let i = 0; i < imageSingleArray.length; i+=4) {\n    let pixeIndex = Math.floor(i / 4);\n    let row = Math.floor(pixeIndex / imageLength);\n    let column = pixeIndex % imageLength;\n\n\n      let red = inputLayer[0].output[row][column];\n      imageSingleArray[i] = red * 255;\n      imageSingleArray[i] = red * 255;\n\n    if(overviewConfig.modeImg == 3){\n      let green = inputLayer[1].output[row][column];\n      let blue = inputLayer[2].output[row][column];\n      imageSingleArray[i + 1] = green * 255;\n      imageSingleArray[i + 2] = blue * 255;\n      imageSingleArray[i + 3] = 255;\n    }\n\n\n\n  }\n\n  // canvas.toDataURL() only exports image in 96 DPI, so we can hack it to have\n  // higher DPI by rescaling the image using canvas magic\n  let largeCanvas = document.createElement('canvas');\n  largeCanvas.width = imageWidth * 3;\n  largeCanvas.height = imageWidth * 3;\n  let largeCanvasContext = largeCanvas.getContext('2d');\n\n  // Use drawImage to resize the original pixel array, and put the new image\n  // (canvas) into corresponding canvas\n  bufferContext.putImageData(imageSingle, 0, 0);\n  largeCanvasContext.drawImage(bufferCanvas, 0, 0, imageLength, imageLength,\n      0, 0, imageWidth * 3, imageWidth * 3);\n\n  let imageDataURL = largeCanvas.toDataURL();\n  // d3.select(image).attr('xlink:href', imageDataURL);\n  image.src = imageDataURL;\n\n  // Destory the buffer canvas\n  bufferCanvas.remove();\n  largeCanvas.remove();\n}\n\n/**\n * Create color gradient for the legend\n * @param {[object]} g d3 group\n * @param {function} colorScale Colormap\n * @param {string} gradientName Label for gradient def\n * @param {number} min Min of legend value\n * @param {number} max Max of legend value\n */\nconst getLegendGradient = (g, colorScale, gradientName, min, max) => {\n  if (min === undefined) { min = 0; }\n  if (max === undefined) { max = 1; }\n  let gradient = g.append('defs')\n      .append('svg:linearGradient')\n      .attr('id', `${gradientName}`)\n      .attr('x1', '0%')\n      .attr('y1', '100%')\n      .attr('x2', '100%')\n      .attr('y2', '100%')\n      .attr('spreadMethod', 'pad');\n  let interpolation = 10\n  for (let i = 0; i < interpolation; i++) {\n    let curProgress = i / (interpolation - 1);\n    let curColor = colorScale(curProgress * (max - min) + min);\n    gradient.append('stop')\n        .attr('offset', `${curProgress * 100}%`)\n        .attr('stop-color', curColor)\n        .attr('stop-opacity', 1);\n  }\n}\n\n/**\n * Draw all legends\n * @param {object} legends Parent group\n * @param {number} legendHeight Height of the legend element\n */\nconst drawLegends = (legends, legendHeight) => {\n  // Add local legends\n  for (let i = 0; i < 2; i++){\n    let start = 1 + i * 5;\n    let range1 = cnnLayerRanges.local[start];\n    let range2 = cnnLayerRanges.local[start + 2];\n\n    let localLegendScale1 = d3.scaleLinear()\n        .range([0, 2 * nodeLength + hSpaceAroundGap - 1.2])\n        .domain([-range1 / 2, range1 / 2]);\n\n    let localLegendScale2 = d3.scaleLinear()\n        .range([0, 3 * nodeLength + 2 * hSpaceAroundGap - 1.2])\n        .domain([-range2 / 2, range2 / 2]);\n\n    let localLegendAxis1 = d3.axisBottom()\n        .scale(localLegendScale1)\n        .tickFormat(d3.format('.2f'))\n        .tickValues([-range1 / 2, 0, range1 / 2]);\n\n    let localLegendAxis2 = d3.axisBottom()\n        .scale(localLegendScale2)\n        .tickFormat(d3.format('.2f'))\n        .tickValues([-range2 / 2, 0, range2 / 2]);\n\n    let localLegend1 = legends.append('g')\n        .attr('class', 'legend local-legend')\n        .attr('id', `local-legend-${i}-1`)\n        .classed('hidden', !detailedMode || selectedScaleLevel !== 'local')\n        .attr('transform', `translate(${nodeCoordinate[start][0].x}, ${0})`);\n\n    localLegend1.append('g')\n        .attr('transform', `translate(0, ${legendHeight - 3})`)\n        .call(localLegendAxis1)\n\n    localLegend1.append('rect')\n        .attr('width', 2 * nodeLength + hSpaceAroundGap)\n        .attr('height', legendHeight)\n        .style('fill', 'url(#convGradient)');\n\n    let localLegend2 = legends.append('g')\n        .attr('class', 'legend local-legend')\n        .attr('id', `local-legend-${i}-2`)\n        .classed('hidden', !detailedMode || selectedScaleLevel !== 'local')\n        .attr('transform', `translate(${nodeCoordinate[start + 2][0].x}, ${0})`);\n\n    localLegend2.append('g')\n        .attr('transform', `translate(0, ${legendHeight - 3})`)\n        .call(localLegendAxis2)\n\n    localLegend2.append('rect')\n        .attr('width', 3 * nodeLength + 2 * hSpaceAroundGap)\n        .attr('height', legendHeight)\n        .style('fill', 'url(#convGradient)');\n  }\n\n  // Add module legends\n  for (let i = 0; i < 2; i++){\n    let start = 1 + i * 5;\n    let range = cnnLayerRanges.module[start];\n\n    let moduleLegendScale = d3.scaleLinear()\n        .range([0, 5 * nodeLength + 3 * hSpaceAroundGap +\n        1 * hSpaceAroundGap * gapRatio - 1.2])\n        .domain([-range / 2, range / 2]);\n\n    let moduleLegendAxis = d3.axisBottom()\n        .scale(moduleLegendScale)\n        .tickFormat(d3.format('.2f'))\n        .tickValues([-range / 2, -(range / 4), 0, range / 4, range / 2]);\n\n    let moduleLegend = legends.append('g')\n        .attr('class', 'legend module-legend')\n        .attr('id', `module-legend-${i}`)\n        .classed('hidden', !detailedMode || selectedScaleLevel !== 'module')\n        .attr('transform', `translate(${nodeCoordinate[start][0].x}, ${0})`);\n\n    moduleLegend.append('g')\n        .attr('transform', `translate(0, ${legendHeight - 3})`)\n        .call(moduleLegendAxis)\n\n    moduleLegend.append('rect')\n        .attr('width', 5 * nodeLength + 3 * hSpaceAroundGap +\n            1 * hSpaceAroundGap * gapRatio)\n        .attr('height', legendHeight)\n        .style('fill', 'url(#convGradient)');\n  }\n\n  // Add global legends\n  let start = 1;\n  let range = cnnLayerRanges.global[start];\n\n  let globalLegendScale = d3.scaleLinear()\n      .range([0, 10 * nodeLength + 6 * hSpaceAroundGap +\n      3 * hSpaceAroundGap * gapRatio - 1.2])\n      .domain([-range / 2, range / 2]);\n\n  let globalLegendAxis = d3.axisBottom()\n      .scale(globalLegendScale)\n      .tickFormat(d3.format('.2f'))\n      .tickValues([-range / 2, -(range / 4), 0, range / 4, range / 2]);\n\n  let globalLegend = legends.append('g')\n      .attr('class', 'legend global-legend')\n      .attr('id', 'global-legend')\n      .classed('hidden', !detailedMode || selectedScaleLevel !== 'global')\n      .attr('transform', `translate(${nodeCoordinate[start][0].x}, ${0})`);\n\n  globalLegend.append('g')\n      .attr('transform', `translate(0, ${legendHeight - 3})`)\n      .call(globalLegendAxis)\n\n  globalLegend.append('rect')\n      .attr('width', 10 * nodeLength + 6 * hSpaceAroundGap +\n          3 * hSpaceAroundGap * gapRatio)\n      .attr('height', legendHeight)\n      .style('fill', 'url(#convGradient)');\n\n\n  // Add output legend\n  let outputRectScale = d3.scaleLinear()\n      .domain(cnnLayerRanges.output)\n      .range([0, nodeLength - 1.2]);\n\n  let outputLegendAxis = d3.axisBottom()\n      .scale(outputRectScale)\n      .tickFormat(d3.format('.1f'))\n      .tickValues([0, cnnLayerRanges.output[1]]);\n\n  let outputLegend = legends.append('g')\n      .attr('class', 'legend output-legend')\n      .attr('id', 'output-legend')\n      .classed('hidden', !detailedMode)\n      .attr('transform', `translate(${nodeCoordinate[11][0].x}, ${0})`);\n\n  outputLegend.append('g')\n      .attr('transform', `translate(0, ${legendHeight - 3})`)\n      .call(outputLegendAxis);\n\n  outputLegend.append('rect')\n      .attr('width', nodeLength)\n      .attr('height', legendHeight)\n      .style('fill', 'gray');\n\n  // Add input image legend\n  let inputScale = d3.scaleLinear()\n      .range([0, nodeLength - 1.2])\n      .domain([0, 1]);\n\n  let inputLegendAxis = d3.axisBottom()\n      .scale(inputScale)\n      .tickFormat(d3.format('.1f'))\n      .tickValues([0, 0.5, 1]);\n\n  let inputLegend = legends.append('g')\n      .attr('class', 'legend input-legend')\n      .classed('hidden', !detailedMode)\n      .attr('transform', `translate(${nodeCoordinate[0][0].x}, ${0})`);\n\n  inputLegend.append('g')\n      .attr('transform', `translate(0, ${legendHeight - 3})`)\n      .call(inputLegendAxis);\n\n  inputLegend.append('rect')\n      .attr('x', 0.3)\n      .attr('width', nodeLength - 0.3)\n      .attr('height', legendHeight)\n      .attr('transform', `rotate(180, ${nodeLength/2}, ${legendHeight/2})`)\n      .style('stroke', 'rgb(20, 20, 20)')\n      .style('stroke-width', 0.3)\n      .style('fill', 'url(#inputGradient)');\n}\n\n/**\n * Draw the overview\n * @param {number} width Width of the cnn group\n * @param {number} height Height of the cnn group\n * @param {object} cnnGroup Group to appen cnn elements to\n * @param {function} nodeMouseOverHandler Callback func for mouseOver\n * @param {function} nodeMouseLeaveHandler Callback func for mouseLeave\n * @param {function} nodeClickHandler Callback func for click\n */\nexport const drawCNN = (width, height, cnnGroup, nodeMouseOverHandler,\n                        nodeMouseLeaveHandler, nodeClickHandler) => {\n  // Draw the CNN\n  // There are 8 short gaps and 5 long gaps\n  hSpaceAroundGap = (width - nodeLength * numLayers) / (8 + 5 * gapRatio);\n  hSpaceAroundGapStore.set(hSpaceAroundGap);\n  let leftAccuumulatedSpace = 0;\n\n  // Iterate through the cnn to draw nodes in each layer\n  for (let l = 0; l < cnn.length; l++) {\n    let curLayer = cnn[l];\n    let isOutput = curLayer[0].layerName === 'output';\n\n    nodeCoordinate.push([]);\n\n    // Compute the x coordinate of the whole layer\n    // Output layer and conv layer has long gaps\n    if (isOutput || curLayer[0].type === 'conv') {\n      leftAccuumulatedSpace += hSpaceAroundGap * gapRatio;\n    } else {\n      leftAccuumulatedSpace += hSpaceAroundGap;\n    }\n\n    // All nodes share the same x coordiante (left in div style)\n    let left = leftAccuumulatedSpace;\n\n    let layerGroup = cnnGroup.append('g')\n        .attr('class', 'cnn-layer-group')\n        .attr('id', `cnn-layer-group-${l}`);\n\n    vSpaceAroundGap = (height - nodeLength * curLayer.length) /\n        (curLayer.length + 1);\n    vSpaceAroundGapStore.set(vSpaceAroundGap);\n\n    let nodeGroups = layerGroup.selectAll('g.node-group')\n        .data(curLayer, d => d.index)\n        .enter()\n        .append('g')\n        .attr('class', 'node-group')\n        .style('cursor', 'pointer')\n        .style('pointer-events', 'all')\n        .on('click', nodeClickHandler)\n        .on('mouseover', nodeMouseOverHandler)\n        .on('mouseleave', nodeMouseLeaveHandler)\n        .classed('node-output', isOutput)\n        .attr('id', (d, i) => {\n          // Compute the coordinate\n          // Not using transform on the group object because of datatrainx decade old\n          // bug on webkit (safari)\n          // https://bugs.webkit.org/show_bug.cgi?id=23113\n          let top = i * nodeLength + (i + 1) * vSpaceAroundGap;\n          top += svgPaddings.top;\n          nodeCoordinate[l].push({x: left, y: top});\n          return `layer-${l}-node-${i}`\n        });\n\n    // Overwrite the mouseover and mouseleave function for output nodes to show\n    // hover info in the UI\n    layerGroup.selectAll('g.node-output')\n        .on('mouseover', (d, i, g) => {\n          nodeMouseOverHandler(d, i, g);\n          hoverInfoStore.set( {show: true, text: `Output value: ${formater(d.output)}`} );\n        })\n        .on('mouseleave', (d, i, g) => {\n          nodeMouseLeaveHandler(d, i, g);\n          hoverInfoStore.set( {show: false, text: `Output value: ${formater(d.output)}`} );\n        });\n\n    if (curLayer[0].layerName !== 'output') {\n      // Embed raster image in these groups\n      nodeGroups.append('image')\n          .attr('class', 'node-image')\n          .attr('width', nodeLength)\n          .attr('height', nodeLength)\n          .attr('x', left)\n          .attr('y', (d, i) => nodeCoordinate[l][i].y);\n\n      // Add datatrainx rectangle to show the border\n      nodeGroups.append('rect')\n          .attr('class', 'bounding')\n          .attr('width', nodeLength)\n          .attr('height', nodeLength)\n          .attr('x', left)\n          .attr('y', (d, i) => nodeCoordinate[l][i].y)\n          .style('fill', 'none')\n          .style('stroke', 'gray')\n          .style('stroke-width', 1)\n          .classed('hidden', true);\n    } else {\n      nodeGroups.append('rect')\n          .attr('class', 'output-rect')\n          .attr('x', left)\n          .attr('y', (d, i) => nodeCoordinate[l][i].y + nodeLength / 2 + 8)\n          .attr('height', nodeLength / 4)\n          .attr('width', 0)\n          .style('fill', 'gray');\n      nodeGroups.append('text')\n          .attr('class', 'output-text')\n          .attr('x', left)\n          .attr('y', (d, i) => nodeCoordinate[l][i].y + nodeLength / 2)\n          .style('dominant-baseline', 'middle')\n          .style('font-size', '11px')\n          .style('fill', 'black')\n          .style('opacity', 0.5)\n          .text((d, i) => classLists[i]);\n\n      // Add annotation text to tell readers the exact output probability\n      // nodeGroups.append('text')\n      //   .attr('class', 'annotation-text')\n      //   .attr('id', (d, i) => `output-prob-${i}`)\n      //   .attr('x', left)\n      //   .attr('y', (d, i) => nodeCoordinate[l][i].y + 10)\n      //   .text(d => `(${d3.format('.4f')(d.output)})`);\n    }\n    leftAccuumulatedSpace += nodeLength;\n  }\n\n  // Share the nodeCoordinate\n  nodeCoordinateStore.set(nodeCoordinate)\n\n  // Compute the scale of the output score width (mapping the the node\n  // width to the max output score)\n  let outputRectScale = d3.scaleLinear()\n      .domain(cnnLayerRanges.output)\n      .range([0, nodeLength]);\n\n  // Draw the canvas\n  for (let l = 0; l < cnn.length; l++) {\n    let range = cnnLayerRanges[selectedScaleLevel][l];\n    svg.select(`g#cnn-layer-group-${l}`)\n        .selectAll('image.node-image')\n        .each((d, i, g) => drawOutput(d, i, g, range));\n  }\n\n  svg.selectAll('g.node-output').each(\n      (d, i, g) => drawOutputScore(d, i, g, outputRectScale)\n  );\n\n  // Add layer label\n  let layerNames = cnn.map(d => {\n    if (d[0].layerName === 'output') {\n      return {\n        name: d[0].layerName,\n        dimension: `(${d.length})`\n      }\n    } else {\n      return {\n        name: d[0].layerName,\n        dimension: `(${d[0].output.length}, ${d[0].output.length}, ${d.length})`\n      }\n    }\n  });\n\n  //let svgHeight = Number(d3.select('#cnn-svg').style('height').replace('px', '')) + 150;\n  //let scroll = new SmoothScroll('datatrainx[href*=\"#\"]', {offset: -svgHeight});\n\n  let detailedLabels = svg.selectAll('g.layer-detailed-label')\n      .data(layerNames)\n      .enter()\n      .append('g')\n      .attr('class', 'layer-detailed-label')\n      .attr('id', (d, i) => `layer-detailed-label-${i}`)\n      .classed('hidden', !detailedMode)\n      .attr('transform', (d, i) => {\n        let x = nodeCoordinate[i][0].x + nodeLength / 2;\n        let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 6;\n        return `translate(${x}, ${y})`;\n      })\n      .style('cursor', d => d.name.includes('output') ? 'default' : 'help')\n      .on('click', (d) => {\n        let target = '';\n        if (d.name.includes('conv')) { target = 'convolution' }\n        if (d.name.includes('relu')) { target = 'relu' }\n        if (d.name.includes('max_pool')) { target = 'pooling'}\n        if (d.name.includes('input')) { target = 'input'}\n\n        // Scroll to datatrainx article element\n        let anchor = document.querySelector(`#article-${target}`);\n        //scroll.animateScroll(anchor);\n      });\n\n  detailedLabels.append('title')\n      .text('Move to article section');\n\n  detailedLabels.append('text')\n      .style('opacity', 0.7)\n      .style('dominant-baseline', 'middle')\n      .append('tspan')\n      .style('font-size', '12px')\n      .text(d => d.name)\n      .append('tspan')\n      .style('font-size', '8px')\n      .style('font-weight', 'normal')\n      .attr('x', 0)\n      .attr('dy', '1.5em')\n      .text(d => d.dimension);\n\n  let labels = svg.selectAll('g.layer-label')\n      .data(layerNames)\n      .enter()\n      .append('g')\n      .attr('class', 'layer-label')\n      .attr('id', (d, i) => `layer-label-${i}`)\n      .classed('hidden', detailedMode)\n      .attr('transform', (d, i) => {\n        let x = nodeCoordinate[i][0].x + nodeLength / 2;\n        let y = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n        return `translate(${x}, ${y})`;\n      })\n      .style('cursor', d => d.name.includes('output') ? 'default' : 'help')\n      .on('click', (d) => {\n        let target = '';\n        if (d.name.includes('conv')) { target = 'convolution' }\n        if (d.name.includes('relu')) { target = 'relu' }\n        if (d.name.includes('max_pool')) { target = 'pooling'}\n        if (d.name.includes('input')) { target = 'input'}\n\n        // Scroll to datatrainx article element\n        let anchor = document.querySelector(`#article-${target}`);\n        //scroll.animateScroll(anchor);\n      });\n\n  labels.append('title')\n      .text('Move to article section');\n\n  labels.append('text')\n      .style('dominant-baseline', 'middle')\n      .style('opacity', 0.8)\n      .text(d => {\n        if (d.name.includes('conv')) { return 'conv' }\n        if (d.name.includes('relu')) { return 'relu' }\n        if (d.name.includes('max_pool')) { return 'max_pool'}\n        return d.name\n      });\n\n  // Add layer color scale legends\n  getLegendGradient(svg, layerColorScales.conv, 'convGradient');\n  getLegendGradient(svg, layerColorScales.input[0], 'inputGradient');\n\n  let legendHeight = 5;\n  let legends = svg.append('g')\n      .attr('class', 'color-legend')\n      .attr('transform', `translate(${0}, ${\n          svgPaddings.top + vSpaceAroundGap * (classLists.length) + vSpaceAroundGap +\n          nodeLength * classLists.length\n      })`);\n\n  drawLegends(legends, legendHeight);\n\n  // Add edges between nodes\n  let linkGen = d3.linkHorizontal()\n      .x(d => d.x)\n      .y(d => d.y);\n\n  let linkData = getLinkData(nodeCoordinate, cnn);\n\n  let edgeGroup = cnnGroup.append('g')\n      .attr('class', 'edge-group');\n\n  edgeGroup.selectAll('path.edge')\n      .data(linkData)\n      .enter()\n      .append('path')\n      .attr('class', d =>\n          `edge edge-${d.targetLayerIndex} edge-${d.targetLayerIndex}-${d.targetNodeIndex}`)\n      .attr('id', d =>\n          `edge-${d.targetLayerIndex}-${d.targetNodeIndex}-${d.sourceNodeIndex}`)\n      .attr('d', d => linkGen({source: d.source, target: d.target}))\n      .style('fill', 'none')\n      .style('stroke-width', edgeStrokeWidth)\n      .style('opacity', edgeOpacity)\n      .style('stroke', edgeInitColor);\n\n  // Add input channel annotations\n  let inputAnnotation = cnnGroup.append('g')\n      .attr('class', 'input-annotation');\n\n  let redChannel = inputAnnotation.append('text')\n      .attr('x', nodeCoordinate[0][0].x + nodeLength / 2)\n      .attr('y', nodeCoordinate[0][0].y + nodeLength + 5)\n      .attr('class', 'annotation-text')\n      .style('dominant-baseline', 'hanging')\n      .style('text-anchor', 'middle');\n\n  let color1 = \"Red\";\n\n  if(overviewConfig.modeImg < 3){\n\n    color1 = \"Gray\";\n\n  }\n  redChannel.append('tspan')\n      .style('dominant-baseline', 'hanging')\n      .style('fill', '#C95E67')\n      .text(color1);\n\n  redChannel.append('tspan')\n      .style('dominant-baseline', 'hanging')\n      .text(' channel');\n\n  if(overviewConfig.modeImg == 3){\n    inputAnnotation.append('text')\n        .attr('x', nodeCoordinate[0][1].x + nodeLength / 2)\n        .attr('y', nodeCoordinate[0][1].y + nodeLength + 5)\n        .attr('class', 'annotation-text')\n        .style('dominant-baseline', 'hanging')\n        .style('text-anchor', 'middle')\n        .style('fill', '#3DB665')\n        .text('Green');\n\n    inputAnnotation.append('text')\n        .attr('x', nodeCoordinate[0][2].x + nodeLength / 2)\n        .attr('y', nodeCoordinate[0][2].y + nodeLength + 5)\n        .attr('class', 'annotation-text')\n        .style('dominant-baseline', 'hanging')\n        .style('text-anchor', 'middle')\n        .style('fill', '#3F7FBC')\n        .text('Blue');\n  }\n}\n\n/**\n * Update canvas values when user changes input image\n */\nexport const updateCNN = () => {\n  // Compute the scale of the output score width (mapping the the node\n  // width to the max output score)\n  let outputRectScale = d3.scaleLinear()\n      .domain(cnnLayerRanges.output)\n      .range([0, nodeLength]);\n\n  // Rebind the cnn data to layer groups layer by layer\n  for (let l = 0; l < cnn.length; l++) {\n    let curLayer = cnn[l];\n    let range = cnnLayerRanges[selectedScaleLevel][l];\n    let layerGroup = svg.select(`g#cnn-layer-group-${l}`);\n\n    let nodeGroups = layerGroup.selectAll('g.node-group')\n        .data(curLayer);\n\n    if (l < cnn.length - 1) {\n      // Redraw the canvas and output node\n      nodeGroups.transition('disappear')\n          .duration(300)\n          .ease(d3.easeCubicOut)\n          .style('opacity', 0)\n          .on('end', function() {\n            d3.select(this)\n                .select('image.node-image')\n                .each((d, i, g) => drawOutput(d, i, g, range));\n            d3.select(this).transition('appear')\n                .duration(700)\n                .ease(d3.easeCubicIn)\n                .style('opacity', 1);\n          });\n    } else {\n      nodeGroups.each(\n          (d, i, g) => drawOutputScore(d, i, g, outputRectScale)\n      );\n    }\n  }\n\n  // Update the color scale legend\n  // Local legends\n  for (let i = 0; i < 2; i++){\n    let start = 1 + i * 5;\n    let range1 = cnnLayerRanges.local[start];\n    let range2 = cnnLayerRanges.local[start + 2];\n\n    let localLegendScale1 = d3.scaleLinear()\n        .range([0, 2 * nodeLength + hSpaceAroundGap])\n        .domain([-range1 / 2, range1 / 2]);\n\n    let localLegendScale2 = d3.scaleLinear()\n        .range([0, 3 * nodeLength + 2 * hSpaceAroundGap])\n        .domain([-range2 / 2, range2 / 2]);\n\n    let localLegendAxis1 = d3.axisBottom()\n        .scale(localLegendScale1)\n        .tickFormat(d3.format('.2f'))\n        .tickValues([-range1 / 2, 0, range1 / 2]);\n\n    let localLegendAxis2 = d3.axisBottom()\n        .scale(localLegendScale2)\n        .tickFormat(d3.format('.2f'))\n        .tickValues([-range2 / 2, 0, range2 / 2]);\n\n    svg.select(`g#local-legend-${i}-1`).select('g').call(localLegendAxis1);\n    svg.select(`g#local-legend-${i}-2`).select('g').call(localLegendAxis2);\n  }\n\n  // Module legend\n  for (let i = 0; i < 2; i++){\n    let start = 1 + i * 5;\n    let range = cnnLayerRanges.local[start];\n\n    let moduleLegendScale = d3.scaleLinear()\n        .range([0, 5 * nodeLength + 3 * hSpaceAroundGap +\n        1 * hSpaceAroundGap * gapRatio - 1.2])\n        .domain([-range, range]);\n\n    let moduleLegendAxis = d3.axisBottom()\n        .scale(moduleLegendScale)\n        .tickFormat(d3.format('.2f'))\n        .tickValues([-range, -(range / 2), 0, range/2, range]);\n\n    svg.select(`g#module-legend-${i}`).select('g').call(moduleLegendAxis);\n  }\n\n  // Global legend\n  let start = 1;\n  let range = cnnLayerRanges.global[start];\n\n  let globalLegendScale = d3.scaleLinear()\n      .range([0, 10 * nodeLength + 6 * hSpaceAroundGap +\n      3 * hSpaceAroundGap * gapRatio - 1.2])\n      .domain([-range, range]);\n\n  let globalLegendAxis = d3.axisBottom()\n      .scale(globalLegendScale)\n      .tickFormat(d3.format('.2f'))\n      .tickValues([-range, -(range / 2), 0, range/2, range]);\n\n  svg.select(`g#global-legend`).select('g').call(globalLegendAxis);\n\n  // Output legend\n  let outputLegendAxis = d3.axisBottom()\n      .scale(outputRectScale)\n      .tickFormat(d3.format('.1f'))\n      .tickValues([0, cnnLayerRanges.output[1]]);\n\n  svg.select('g#output-legend').select('g').call(outputLegendAxis);\n}\n\n/**\n * Update the ranges for current CNN layers\n */\nexport const updateCNNLayerRanges = () => {\n  // Iterate through all nodes to find datatrainx output ranges for each layer\n  let cnnLayerRangesLocal = [1];\n  let curRange = undefined;\n\n  // Also track the min/max of each layer (avoid computing during intermediate\n  // layer)\n  cnnLayerMinMax = [];\n\n  for (let l = 0; l < cnn.length - 1; l++) {\n    let curLayer = cnn[l];\n\n    // Compute the min max\n    let outputExtents = curLayer.map(l => getExtent(l.output));\n    let aggregatedExtent = outputExtents.reduce((acc, cur) => {\n      return [Math.min(acc[0], cur[0]), Math.max(acc[1], cur[1])];\n    })\n    cnnLayerMinMax.push({min: aggregatedExtent[0], max: aggregatedExtent[1]});\n\n    // conv layer refreshes curRange counting\n    if (curLayer[0].type === 'conv' || curLayer[0].type === 'fc') {\n      aggregatedExtent = aggregatedExtent.map(Math.abs);\n      // Plus 0.1 to offset the rounding error (avoid black color)\n      curRange = 2 * (0.1 +\n          Math.round(Math.max(...aggregatedExtent) * 1000) / 1000);\n    }\n\n    if (curRange !== undefined){\n      cnnLayerRangesLocal.push(curRange);\n    }\n  }\n\n  // Finally, add the output layer range\n  cnnLayerRangesLocal.push(1);\n  cnnLayerMinMax.push({min: 0, max: 1});\n\n  // Support different levels of scales (1) lcoal, (2) component, (3) global\n  let cnnLayerRangesComponent = [1];\n  let numOfComponent = (numLayers - 2) / 5;\n  for (let i = 0; i < numOfComponent; i++) {\n    let curArray = cnnLayerRangesLocal.slice(1 + 5 * i, 1 + 5 * i + 5);\n    let maxRange = Math.max(...curArray);\n    for (let j = 0; j < 5; j++) {\n      cnnLayerRangesComponent.push(maxRange);\n    }\n  }\n  cnnLayerRangesComponent.push(1);\n\n  let cnnLayerRangesGlobal = [1];\n  let maxRange = Math.max(...cnnLayerRangesLocal.slice(1,\n      cnnLayerRangesLocal.length - 1));\n  for (let i = 0; i < numLayers - 2; i++) {\n    cnnLayerRangesGlobal.push(maxRange);\n  }\n  cnnLayerRangesGlobal.push(1);\n\n  // Update the ranges dictionary\n  cnnLayerRanges.local = cnnLayerRangesLocal;\n  cnnLayerRanges.module = cnnLayerRangesComponent;\n  cnnLayerRanges.global = cnnLayerRangesGlobal;\n  cnnLayerRanges.output = [0, d3.max(cnn[cnn.length - 1].map(d => d.output))];\n\n  cnnLayerRangesStore.set(cnnLayerRanges);\n  cnnLayerMinMaxStore.set(cnnLayerMinMax);\n}","/* global d3 */\n\nimport { svgStore, vSpaceAroundGapStore } from '../stores.js';\nimport { overviewConfig } from '../config.js';\n\n// Configs\nconst layerColorScales = overviewConfig.layerColorScales;\nconst nodeLength = overviewConfig.nodeLength;\nconst intermediateColor = overviewConfig.intermediateColor;\nconst svgPaddings = overviewConfig.svgPaddings;\n\n// Shared variables\nlet svg = undefined;\nsvgStore.subscribe( value => {svg = value;} )\n\nlet vSpaceAroundGap = undefined;\nvSpaceAroundGapStore.subscribe( value => {vSpaceAroundGap = value;} )\n\n/**\n * Move one layer horizontally\n * @param {object} arg Multiple arguments {\n *   layerIndex: current layer index\n *   targetX: destination x\n *   disable: make this layer unresponsible\n *   delay: animation delay\n *   opacity: change the current layer's opacity\n *   specialIndex: avoid manipulating `specialIndex`th node\n *   onEndFunc: call this function when animation finishes\n *   transitionName: animation ID\n * }\n */\nexport const moveLayerX = (arg) => {\n  let layerIndex = arg.layerIndex;\n  let targetX = arg.targetX;\n  let disable = arg.disable;\n  let delay = arg.delay;\n  let opacity = arg.opacity;\n  let specialIndex = arg.specialIndex;\n  let onEndFunc = arg.onEndFunc;\n  let transitionName = arg.transitionName === undefined ? 'move' : arg.transitionName;\n  let duration = arg.duration === undefined ? 500 : arg.duration;\n\n  // Move the selected layer\n  let curLayer = svg.select(`g#cnn-layer-group-${layerIndex}`);\n  curLayer.selectAll('g.node-group').each((d, i, g) => {\n    d3.select(g[i])\n      .style('cursor', disable && i !== specialIndex ? 'default' : 'pointer')\n      .style('pointer-events', disable && i !== specialIndex ? 'none' : 'all')\n      .select('image')\n      .transition(transitionName)\n      .ease(d3.easeCubicInOut)\n      .delay(delay)\n      .duration(duration)\n      .attr('x', targetX);\n    \n    d3.select(g[i])\n      .select('rect.bounding')\n      .transition(transitionName)\n      .ease(d3.easeCubicInOut)\n      .delay(delay)\n      .duration(duration)\n      .attr('x', targetX);\n    \n    if (opacity !== undefined && i !== specialIndex) {\n      d3.select(g[i])\n        .select('image')\n        .style('opacity', opacity);\n    }\n  });\n  \n  // Also move the layer labels\n  svg.selectAll(`g#layer-label-${layerIndex}`)\n    .transition(transitionName)\n    .ease(d3.easeCubicInOut)\n    .delay(delay)\n    .duration(duration)\n    .attr('transform', () => {\n      let x = targetX + nodeLength / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n      return `translate(${x}, ${y})`;\n    })\n    .on('end', onEndFunc);\n\n  svg.selectAll(`g#layer-detailed-label-${layerIndex}`)\n    .transition(transitionName)\n    .ease(d3.easeCubicInOut)\n    .delay(delay)\n    .duration(duration)\n    .attr('transform', () => {\n      let x = targetX + nodeLength / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 6;\n      return `translate(${x}, ${y})`;\n    })\n    .on('end', onEndFunc);\n}\n\n/**\n * Append datatrainx gradient definition to `group`\n * @param {string} gradientID CSS ID for the gradient def\n * @param {[{offset: number, color: string, opacity: number}]} stops Gradient stops\n * @param {element} group Element to append def to\n */\nexport const addOverlayGradient = (gradientID, stops, group) => {\n  if (group === undefined) {\n    group = svg;\n  }\n\n  // Create datatrainx gradient\n  let defs = group.append(\"defs\")\n    .attr('class', 'overlay-gradient');\n\n  let gradient = defs.append(\"linearGradient\")\n    .attr(\"id\", gradientID)\n    .attr(\"x1\", \"0%\")\n    .attr(\"x2\", \"100%\")\n    .attr(\"y1\", \"100%\")\n    .attr(\"y2\", \"100%\");\n  \n  stops.forEach(s => {\n    gradient.append('stop')\n      .attr('offset', s.offset)\n      .attr('stop-color', s.color)\n      .attr('stop-opacity', s.opacity);\n  })\n}\n\n/**\n * Draw the legend for intermediate layer\n * @param {object} arg \n * {\n *   legendHeight: height of the legend rectangle\n *   curLayerIndex: the index of selected layer\n *   range: colormap range\n *   group: group to append the legend\n *   minMax: {min: min value, max: max value}\n *   width: width of the legend\n *   x: x position of the legend\n *   y: y position of the legend\n *   isInput: if the legend is for the input layer (special handle black to\n *      white color scale)\n *   colorScale: d3 color scale\n *   gradientAppendingName: name of the appending gradient\n *   gradientGap: gap to make the color lighter\n * }\n */\nexport const drawIntermediateLayerLegend = (arg) => {\n  let legendHeight = arg.legendHeight,\n    curLayerIndex = arg.curLayerIndex,\n    range = arg.range,\n    group = arg.group,\n    minMax = arg.minMax,\n    width = arg.width,\n    x = arg.x,\n    y = arg.y,\n    isInput = arg.isInput,\n    colorScale = arg.colorScale,\n    gradientAppendingName = arg.gradientAppendingName,\n    gradientGap = arg.gradientGap;\n  \n  if (colorScale === undefined) { colorScale = layerColorScales.conv; }\n  if (gradientGap === undefined) { gradientGap = 0; }\n  \n  // Add datatrainx legend color gradient\n  let gradientName = 'url(#inputGradient)';\n  let normalizedColor = v => colorScale(v * (1 - 2 * gradientGap) + gradientGap);\n\n  if (!isInput) {\n    let leftValue = (minMax.min + range / 2) / range,\n      zeroValue = (0 + range / 2) / range,\n      rightValue = (minMax.max + range / 2) / range,\n      totalRange = minMax.max - minMax.min,\n      zeroLocation = (0 - minMax.min) / totalRange,\n      leftMidValue = leftValue + (zeroValue - leftValue)/2,\n      rightMidValue = zeroValue + (rightValue - zeroValue)/2;\n\n    let stops = [\n      {offset: 0, color: normalizedColor(leftValue), opacity: 1},\n      {offset: zeroLocation / 2,\n        color: normalizedColor(leftMidValue),\n        opacity: 1},\n      {offset: zeroLocation,\n        color: normalizedColor(zeroValue),\n        opacity: 1},\n      {offset: zeroLocation + (1 - zeroValue) / 2,\n        color: normalizedColor(rightMidValue),\n        opacity: 1},\n      {offset: 1, color: normalizedColor(rightValue), opacity: 1}\n    ];\n\n    if (gradientAppendingName === undefined) {\n      addOverlayGradient('intermediate-legend-gradient', stops, group);\n      gradientName = 'url(#intermediate-legend-gradient)';\n    } else {\n      addOverlayGradient(`${gradientAppendingName}`, stops, group);\n      gradientName = `url(#${gradientAppendingName})`;\n    }\n  }\n\n  let legendScale = d3.scaleLinear()\n    .range([0, width - 1.2])\n    .domain(isInput ? [0, range] : [minMax.min, minMax.max]);\n\n  let legendAxis = d3.axisBottom()\n    .scale(legendScale)\n    .tickFormat(d3.format(isInput ? 'd' : '.2f'))\n    .tickValues(isInput ? [0, range] : [minMax.min, 0, minMax.max]);\n  \n  let intermediateLegend = group.append('g')\n    .attr('class', `intermediate-legend-${curLayerIndex - 1}`)\n    .attr('transform', `translate(${x}, ${y})`);\n  \n  let legendGroup = intermediateLegend.append('g')\n    .attr('transform', `translate(0, ${legendHeight - 3})`)\n    .call(legendAxis);\n  \n  legendGroup.selectAll('text')\n    .style('font-size', '9px')\n    .style('fill', intermediateColor);\n  \n  legendGroup.selectAll('path, line')\n    .style('stroke', intermediateColor);\n\n  intermediateLegend.append('rect')\n    .attr('width', width)\n    .attr('height', legendHeight)\n    .attr('transform', `rotate(${isInput ? 180 : 0},\n      ${width / 2}, ${legendHeight / 2})`)\n    .style('fill', gradientName);\n}\n\n/**\n * Draw an very neat arrow!\n * @param {object} arg \n * {\n *   group: element to append this arrow to\n *   sx: source x\n *   sy: source y\n *   tx: target x\n *   ty: target y\n *   dr: radius of curve (I'm using datatrainx circle)\n *   hFlip: the direction to choose the circle (there are always two ways)\n * }\n */\nexport const drawArrow = (arg) => {\n  let group = arg.group,\n    sx = arg.sx,\n    sy = arg.sy,\n    tx = arg.tx,\n    ty = arg.ty,\n    dr = arg.dr,\n    hFlip = arg.hFlip,\n    marker = arg.marker === undefined ? 'marker' : arg.marker;\n\n  /* Cool graphics trick -> merge translate and scale together\n  translateX = (1 - scaleX) * tx,\n  translateY = (1 - scaleY) * ty;\n  */\n  \n  let arrow = group.append('g')\n    .attr('class', 'arrow-group');\n\n  arrow.append('path')\n    .attr(\"d\", `M${sx},${sy}A${dr},${dr} 0 0,${hFlip ? 0 : 1} ${tx},${ty}`)\n    .attr('marker-end', `url(#${marker})`)\n    .style('stroke', 'gray')\n    .style('fill', 'none');\n}\n","/* global d3 */\n\nimport {\n  svgStore, vSpaceAroundGapStore, hSpaceAroundGapStore, cnnStore,\n  nodeCoordinateStore, selectedScaleLevelStore, cnnLayerRangesStore,\n  needRedrawStore, cnnLayerMinMaxStore, shouldIntermediateAnimateStore,\n  hoverInfoStore, detailedModeStore, intermediateLayerPositionStore\n} from '../stores.js';\nimport {\n  getExtent, getOutputKnot, getInputKnot, gappedColorScale\n} from './draw-utils.js';\nimport {\n  drawOutput\n} from './overview-draw.js';\nimport {\n  drawIntermediateLayerLegend, moveLayerX, addOverlayGradient,\n  drawArrow\n} from './intermediate-utils.js';\nimport { singleConv } from '../utils/cnn.js';\nimport { overviewConfig } from '../config.js';\n\n// Configs\nconst layerColorScales = overviewConfig.layerColorScales;\nconst nodeLength = overviewConfig.nodeLength;\nconst plusSymbolRadius = overviewConfig.plusSymbolRadius;\nconst numLayers = overviewConfig.numLayers;\nconst intermediateColor = overviewConfig.intermediateColor;\nconst kernelRectLength = overviewConfig.kernelRectLength;\nconst svgPaddings = overviewConfig.svgPaddings;\nconst gapRatio = overviewConfig.gapRatio;\nconst overlayRectOffset = overviewConfig.overlayRectOffset;\nconst formater = d3.format('.4f');\nlet isEndOfAnimation = false;\n\n// Shared variables\nlet svg = undefined;\nsvgStore.subscribe( value => {svg = value;} )\n\nlet vSpaceAroundGap = undefined;\nvSpaceAroundGapStore.subscribe( value => {vSpaceAroundGap = value;} )\n\nlet hSpaceAroundGap = undefined;\nhSpaceAroundGapStore.subscribe( value => {hSpaceAroundGap = value;} )\n\nlet cnn = undefined;\ncnnStore.subscribe( value => {cnn = value;} )\n\nlet nodeCoordinate = undefined;\nnodeCoordinateStore.subscribe( value => {nodeCoordinate = value;} )\n\nlet selectedScaleLevel = undefined;\nselectedScaleLevelStore.subscribe( value => {selectedScaleLevel = value;} )\n\nlet cnnLayerRanges = undefined;\ncnnLayerRangesStore.subscribe( value => {cnnLayerRanges = value;} )\n\nlet cnnLayerMinMax = undefined;\ncnnLayerMinMaxStore.subscribe( value => {cnnLayerMinMax = value;} )\n\nlet needRedraw = [undefined, undefined];\nneedRedrawStore.subscribe( value => {needRedraw = value;} )\n\nlet shouldIntermediateAnimate = undefined;\nshouldIntermediateAnimateStore.subscribe(value => {\n  shouldIntermediateAnimate = value;\n})\n\nlet detailedMode = undefined;\ndetailedModeStore.subscribe( value => {detailedMode = value;} )\n\nlet intermediateLayerPosition = undefined;\nintermediateLayerPositionStore.subscribe ( value => {intermediateLayerPosition = value;} )\n\n// let curRightX = 0;\n\n/**\n * Draw the intermediate layer activation heatmaps\n * @param {element} image Neuron heatmap image\n * @param {number} range Colormap range\n * @param {function} colorScale Colormap\n * @param {number} length Image length\n * @param {[[number]]} dataMatrix Heatmap matrix\n */\nconst drawIntermidiateImage = (image, range, colorScale, length,\n  dataMatrix) => {\n  // Set up datatrainx buffer convas in order to resize image\n  let imageLength = length;\n  let bufferCanvas = document.createElement(\"canvas\");\n  let bufferContext = bufferCanvas.getContext(\"2d\");\n  bufferCanvas.width = imageLength;\n  bufferCanvas.height = imageLength;\n\n  // Fill image pixel array\n  let imageSingle = bufferContext.getImageData(0, 0, imageLength, imageLength);\n  let imageSingleArray = imageSingle.data;\n\n  for (let i = 0; i < imageSingleArray.length; i+=4) {\n    let pixeIndex = Math.floor(i / 4);\n    let row = Math.floor(pixeIndex / imageLength);\n    let column = pixeIndex % imageLength;\n\n    imageSingleArray[i] = 255;\n    if(overviewConfig.modeImg > 1){\n      let color = d3.rgb(colorScale((dataMatrix[row][column] + range / 2) / range));\n      imageSingleArray[i] = color.r;\n      imageSingleArray[i + 1] = color.g;\n      imageSingleArray[i + 2] = color.b;\n      imageSingleArray[i + 3] = 255;\n    }\n  }\n\n  // canvas.toDataURL() only exports image in 96 DPI, so we can hack it to have\n  // higher DPI by rescaling the image using canvas magic\n  let largeCanvas = document.createElement('canvas');\n  largeCanvas.width = nodeLength * 3;\n  largeCanvas.height = nodeLength * 3;\n  let largeCanvasContext = largeCanvas.getContext('2d');\n\n  // Use drawImage to resize the original pixel array, and put the new image\n  // (canvas) into corresponding canvas\n  bufferContext.putImageData(imageSingle, 0, 0);\n  largeCanvasContext.drawImage(bufferCanvas, 0, 0, imageLength, imageLength,\n    0, 0, nodeLength * 3, nodeLength * 3);\n  \n  let imageDataURL = largeCanvas.toDataURL();\n  image.attr('xlink:href', imageDataURL);\n\n  // Destory the buffer canvas\n  bufferCanvas.remove();\n  largeCanvas.remove();\n}\n\n/**\n * Create datatrainx node group for the intermediate layer\n * @param {number} curLayerIndex Intermediate layer index\n * @param {number} selectedI Clicked node index\n * @param {element} groupLayer Group element\n * @param {number} x Node's x\n * @param {number} y Node's y\n * @param {number} nodeIndex Node's index\n * @param {function} intermediateNodeMouseOverHandler Mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler Mouse leave handler\n * @param {function} intermediateNodeClicked Mouse click handler\n * @param {bool} interaction Whether support interaction\n */\nconst createIntermediateNode = (curLayerIndex, selectedI, groupLayer, x, y,\n  nodeIndex, stride, intermediateNodeMouseOverHandler,\n  intermediateNodeMouseLeaveHandler, intermediateNodeClicked, interaction) => {\n  let newNode = groupLayer.append('g')\n    .datum(cnn[curLayerIndex - 1][nodeIndex])\n    .attr('class', 'intermediate-node')\n    .attr('cursor', interaction ? 'pointer': 'default')\n    .attr('pointer-events', interaction ? 'all': 'none')\n    .attr('node-index', nodeIndex)\n    .on('mouseover', intermediateNodeMouseOverHandler)\n    .on('mouseleave', intermediateNodeMouseLeaveHandler)\n    .on('click', (d, g, i) => intermediateNodeClicked(d, g, i, selectedI,\n      curLayerIndex));\n  \n  newNode.append('image')\n    .attr('width', nodeLength)\n    .attr('height', nodeLength)\n    .attr('x', x)\n    .attr('y', y);\n\n  // Overlay the image with datatrainx mask of many small rectangles\n  let strideTime = Math.floor(nodeLength / stride);\n  let overlayGroup = newNode.append('g')\n    .attr('class', 'overlay-group')\n    .attr('transform', `translate(${x}, ${y})`);\n  \n  for (let i = 0; i < strideTime; i++) {\n    for (let j = 0; j < strideTime; j++) {\n      overlayGroup.append('rect')\n        .attr('class', `mask-overlay mask-${i}-${j}`)\n        .attr('width', stride)\n        .attr('height', stride)\n        .attr('x', i * stride)\n        .attr('y', j * stride)\n        .style('fill', 'var(--light-gray)')\n        .style('stroke', 'var(--light-gray)')\n        .style('opacity', 1);\n    }\n  }\n\n  // Add datatrainx rectangle to show the border\n  newNode.append('rect')\n    .attr('class', 'bounding')\n    .attr('width', nodeLength)\n    .attr('height', nodeLength)\n    .attr('x', x)\n    .attr('y', y)\n    .style('fill', 'none')\n    .style('stroke', intermediateColor)\n    .style('stroke-width', 1);\n  \n  return newNode;\n}\n\nconst startOutputAnimation = (kernelGroup, tickTime1D, stride, delay,\n  curLayerIndex) => {\n  const slidingAnimation = () => {\n    let originX = +kernelGroup.attr('data-origin-x');\n    let originY = +kernelGroup.attr('data-origin-y');\n    let oldTick = +kernelGroup.attr('data-tick');\n    let i = (oldTick) % tickTime1D;\n    let j = Math.floor((oldTick) / tickTime1D);\n    let x = originX + i * stride;\n    let y = originY + j * stride;\n    let newTick = (oldTick + 1) % (tickTime1D * tickTime1D);\n\n    // Remove one mask rect at each tick\n    svg.selectAll(`rect.mask-${i}-${j}`)\n      .transition('window-sliding-mask')\n      .delay(delay + 100)\n      .duration(300)\n      .style('opacity', 0);\n\n      kernelGroup.attr('data-tick', newTick)\n      .transition('window-sliding-input')\n      .delay(delay)\n      .duration(200)\n      .attr('transform', `translate(${x}, ${y})`)\n      .on('end', () => {\n        if (newTick === 0) {\n          /* Uncomment to wrap the sliding\n          svg.selectAll(`rect.mask-overlay`)\n            .transition('window-sliding-mask')\n            .delay(delay - 200)\n            .duration(300)\n            .style('opacity', 1);\n          */\n\n          // Stop the animation\n          // Be careful with animation racing so call this function here instead\n          // of under selectALL\n          if (!isEndOfAnimation) {\n            animationButtonClicked(curLayerIndex);\n          }\n        }\n        if (shouldIntermediateAnimate) {\n          slidingAnimation();\n        }\n      });\n  }\n  slidingAnimation();\n}\n\nconst startIntermediateAnimation = (kernelGroupInput, kernelGroupResult,\n  tickTime1D, stride) => {\n  let delay = 200;\n  const slidingAnimation = () => {\n    let originX = +kernelGroupInput.attr('data-origin-x');\n    let originY = +kernelGroupInput.attr('data-origin-y');\n    let originXResult = +kernelGroupResult.attr('data-origin-x');\n    let oldTick = +kernelGroupInput.attr('data-tick');\n    let i = (oldTick) % tickTime1D;\n    let j = Math.floor((oldTick) / tickTime1D);\n    let x = originX + i * stride;\n    let y = originY + j * stride;\n    let xResult = originXResult + (oldTick % tickTime1D) * stride;\n    let newTick = (oldTick + 1) % (tickTime1D * tickTime1D);\n\n    // Remove one mask rect at each tick\n    svg.selectAll(`rect.mask-${i}-${j}`)\n      .transition('window-sliding-mask')\n      .delay(delay + 100)\n      .duration(300)\n      .style('opacity', 0);\n\n    kernelGroupInput.attr('data-tick', newTick)\n      .transition('window-sliding-input')\n      .delay(delay)\n      .duration(200)\n      .attr('transform', `translate(${x}, ${y})`);\n\n    kernelGroupResult.attr('data-tick', newTick)\n      .transition('window-sliding-result')\n      .delay(delay)\n      .duration(200)\n      .attr('transform', `translate(${xResult}, ${y})`)\n      .on('end', () => {\n        /* Uncomment to wrap the sliding\n        if (newTick === 0) {\n          svg.selectAll(`rect.mask-overlay`)\n            .transition('window-sliding-mask')\n            .delay(delay - 200)\n            .duration(300)\n            .style('opacity', 1);\n        }\n        */\n        if (shouldIntermediateAnimate) {\n          slidingAnimation();\n        }\n      });\n  }\n  slidingAnimation();\n}\n\nconst animationButtonClicked = (curLayerIndex) => {\n  if (d3.event !== null) {\n    d3.event.stopPropagation();\n  }\n  \n  let delay = 200;\n  let tickTime1D = nodeLength / (kernelRectLength * 3);\n  let stride = kernelRectLength * 3; \n\n  if (isEndOfAnimation) {\n    // Start the animation\n    shouldIntermediateAnimateStore.set(true);\n\n    // Show kernel\n    svg.selectAll('.kernel-clone')\n      .transition()\n      .duration(300)\n      .style('opacity', 1)\n\n    // Restore the mask\n    svg.selectAll(`rect.mask-overlay`)\n      .transition()\n      .duration(300)\n      .style('opacity', 1);\n\n    // Start the intermediate animation\n    for (let i  = 0; i < nodeCoordinate[curLayerIndex - 1].length; i++) {\n      startIntermediateAnimation(d3.select(`.kernel-input-${i}`),\n        d3.select(`.kernel-result-${i}`), tickTime1D, stride);\n    }\n\n    // Start the output animation\n    startOutputAnimation(d3.select('.kernel-output'),\n      tickTime1D, stride, delay, curLayerIndex);\n    \n    // Change the flow edge style\n    svg.selectAll('path.flow-edge')\n      .attr('stroke-dasharray', '4 2')\n      .attr('stroke-dashoffset', 0)\n      .each((d, i, g) => animateEdge(d, i, g, 0 - 1000));\n\n    // Change button icon\n    svg.select('.animation-control-button')\n      .attr('xlink:href', 'PUBLIC_URL/assets/img/fast_forward.svg');\n    \n    isEndOfAnimation = false;\n\n  } else {\n    // End the animation\n    shouldIntermediateAnimateStore.set(false);\n    \n    // Show all intermediate and output results\n    svg.selectAll(`rect.mask-overlay`)\n      .transition('skip')\n      .duration(600)\n      .style('opacity', 0);\n    \n    // Move kernel to the beginning to prepare for the next animation\n    let kernelClones = svg.selectAll('.kernel-clone');\n    kernelClones.attr('data-tick', 0)\n      .transition('skip')\n      .duration(300)\n      .style('opacity', 0)\n      .on('end', (d, i, g) => {\n        let element = d3.select(g[i]);\n        let originX = +element.attr('data-origin-x');\n        let originY = +element.attr('data-origin-y');\n        element.attr('transform', `translate(${originX}, ${originY})`);\n      });\n    \n    // Change flow edge style\n    svg.selectAll('path.flow-edge')\n      .interrupt()\n      .attr('stroke-dasharray', '0 0');\n    \n    // Change button icon\n    svg.select('.animation-control-button')\n      .attr('xlink:href', 'PUBLIC_URL/assets/img/redo.svg');\n    \n    isEndOfAnimation = true;\n  }\n}\n\nconst animateEdge = (d, i, g, dashoffset) => {\n  let curPath = d3.select(g[i]);\n  curPath.transition()\n    .duration(60000)\n    .ease(d3.easeLinear)\n    .attr('stroke-dashoffset', dashoffset)\n    .on('end', (d, i, g) => {\n      if (shouldIntermediateAnimate) {\n        animateEdge(d, i, g, dashoffset - 2000);\n      }\n    });\n}\n\n/**\n * Draw one intermediate layer\n * @param {number} curLayerIndex \n * @param {number} leftX X value of intermediate layer left border\n * @param {number} rightX X value of intermediate layer right border\n * @param {number} rightStart X value of right component starting anchor\n * @param {number} intermediateGap The inner gap\n * @param {number} d Clicked node bounded data\n * @param {number} i Clicked node index\n * @param {function} intermediateNodeMouseOverHandler Mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler Mouse leave handler\n * @param {function} intermediateNodeClicked Mouse click handler\n */\nconst drawIntermediateLayer = (curLayerIndex, leftX, rightX, rightStart,\n  intermediateGap, d, i, intermediateNodeMouseOverHandler,\n  intermediateNodeMouseLeaveHandler, intermediateNodeClicked) => {\n  \n  // curRightX = rightStart;\n\n  // Add the intermediate layer\n  let intermediateLayer = svg.append('g')\n    .attr('class', 'intermediate-layer')\n    .style('opacity', 0);\n  \n  // Recovert the animation counter\n  isEndOfAnimation = false;\n  \n  // Tried to add datatrainx rectangle to block the intermediate because of webkit's\n  // horrible support (decade old bug) for foreignObject. It doesnt work either.\n  // https://bugs.webkit.org/show_bug.cgi?id=23113\n  // (1). ForeignObject's inside position is wrong on webkit\n  // (2). 'opacity' of ForeignObject doesn't work on webkit\n  // (3). ForeignObject always show up at the front regardless the svg\n  //      stacking order on webkit\n\n  let intermediateX1 = leftX + nodeLength + intermediateGap;\n  let intermediateX2 = intermediateX1 + nodeLength + intermediateGap * 1.5;\n\n  let range = cnnLayerRanges[selectedScaleLevel][curLayerIndex];\n  let colorScale = layerColorScales[d.type];\n  let intermediateMinMax = [];\n  \n  // Copy the previsious layer to construct foreignObject placeholder\n  // Also add edges from/to the intermediate layer in this loop\n  let linkData = [];\n\n  // Accumulate the intermediate sum\n  // let itnermediateSumMatrix = init2DArray(d.output.length,\n  //  d.output.length, 0);\n\n  // Compute the min max of all kernel weights in the intermediate layer\n  let kernelExtents = d.inputLinks.map(link => getExtent(link.weight));\n  let kernelExtent = kernelExtents.reduce((acc, cur) => {\n    return [Math.min(acc[0], cur[0]), Math.max(acc[1], cur[1])];\n  })\n  let kernelRange = 2 * (Math.round(\n    Math.max(...kernelExtent.map(Math.abs)) * 1000) / 1000);\n  let kernelColorGap = 0.2;\n\n  // Compute stride for the kernel animation\n  let stride = kernelRectLength * 3; \n\n  // Also add the overlay mask on the output node\n  let outputY = nodeCoordinate[curLayerIndex][i].y;\n  let curNode = svg.select(`#layer-${curLayerIndex}-node-${i}`);\n  let outputOverlayGroup = curNode.append('g')\n    .attr('class', 'overlay-group')\n    .attr('transform', `translate(${rightX}, ${outputY})`);\n\n  let strideTime = Math.floor(nodeLength / stride);\n  \n  for (let i = 0; i < strideTime; i++) {\n    for (let j = 0; j < strideTime; j++) {\n      outputOverlayGroup.append('rect')\n        .attr('class', `mask-overlay mask-${i}-${j}`)\n        .attr('width', stride)\n        .attr('height', stride)\n        .attr('x', i * stride)\n        .attr('y', j * stride)\n        .style('fill', 'var(--light-gray)')\n        .style('stroke', 'var(--light-gray)')\n        .style('opacity', 1);\n    }\n  }\n\n  // Make sure the bounding box is on top of other things\n  curNode.select('rect.bounding').raise();\n\n  // Add sliding kernel for the output node\n  let kernelGroup = intermediateLayer.append('g')\n    .attr('class', `kernel kernel-output kernel-clone`)\n    .attr('transform', `translate(${rightX}, ${outputY})`);\n\n  kernelGroup.append('rect')\n    .attr('x', 0)\n    .attr('y', 0)\n    .attr('width', kernelRectLength * 3)\n    .attr('height', kernelRectLength * 3)\n    .attr('fill', 'none')\n    .attr('stroke', intermediateColor);\n  \n  kernelGroup.attr('data-tick', 0)\n    .attr('data-origin-x', rightX)\n    .attr('data-origin-y', outputY);\n\n  let delay = 200;\n  let tickTime1D = nodeLength / (kernelRectLength * 3);\n\n  startOutputAnimation(kernelGroup, tickTime1D, stride, delay, curLayerIndex);\n\n  // First intermediate layer\n  nodeCoordinate[curLayerIndex - 1].forEach((n, ni) => {\n\n    // Compute the intermediate value\n    let inputMatrix = cnn[curLayerIndex - 1][ni].output;\n    let kernelMatrix = cnn[curLayerIndex][i].inputLinks[ni].weight;\n    let interMatrix = singleConv(inputMatrix, kernelMatrix);\n\n    // Compute the intermediate layer min max\n    intermediateMinMax.push(getExtent(interMatrix));\n\n    // Update the intermediate sum\n    // itnermediateSumMatrix = matrixAdd(itnermediateSumMatrix, interMatrix);\n\n    // Layout the canvas and rect\n    let newNode = createIntermediateNode(curLayerIndex, i, intermediateLayer,\n      intermediateX1, n.y, ni, stride, intermediateNodeMouseOverHandler,\n      intermediateNodeMouseLeaveHandler, intermediateNodeClicked, true);\n    \n    // Draw the image\n    let image = newNode.select('image');\n    drawIntermidiateImage(image, range, colorScale, d.output.length,\n      interMatrix);      \n\n    // Edge: input -> intermediate1\n    linkData.push({\n      source: getOutputKnot({x: leftX, y: n.y}),\n      target: getInputKnot({x: intermediateX1, y: n.y}),\n      name: `input-${ni}-inter1-${ni}`\n    });\n\n    // Edge: intermediate1 -> intermediate2-1\n    linkData.push({\n      source: getOutputKnot({x: intermediateX1, y: n.y}),\n      target: getInputKnot({x: intermediateX2,\n        y: nodeCoordinate[curLayerIndex][i].y}),\n      name: `inter1-${ni}-inter2-1`\n    });\n\n    // Create datatrainx small kernel illustration\n    // Here we minus 2 because of no padding\n    // let tickTime1D = nodeLength / (kernelRectLength) - 2;\n    let kernelRectX = leftX - kernelRectLength * 3 * 2;\n    let kernelGroup = intermediateLayer.append('g')\n      .attr('class', `kernel kernel-${ni}`)\n      .attr('transform', `translate(${kernelRectX}, ${n.y})`);\n\n    let weightText = 'Kernel weights: [';\n    let f2 = d3.format('.2f');\n    for (let r = 0; r < kernelMatrix.length; r++) {\n      for (let c = 0; c < kernelMatrix[0].length; c++) {\n        kernelGroup.append('rect')\n          .attr('class', 'kernel')\n          .attr('x', kernelRectLength * c)\n          .attr('y', kernelRectLength * r)\n          .attr('width', kernelRectLength)\n          .attr('height', kernelRectLength)\n          .attr('fill', gappedColorScale(layerColorScales.weight, kernelRange,\n            kernelMatrix[r][c], kernelColorGap));\n\n        let sep = '';\n        if (c === 0 && r == 0) { sep = ''; }\n        else if (c === 0) { sep = '; '; }\n        else { sep = ', '; }\n        weightText = weightText.concat(sep, `${f2(kernelMatrix[r][c])}`);\n      }\n    }\n    weightText = weightText.concat(']');\n\n    kernelGroup.append('rect')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('width', kernelRectLength * 3)\n      .attr('height', kernelRectLength * 3)\n      .attr('fill', 'none')\n      .attr('stroke', intermediateColor);\n    \n    kernelGroup.style('pointer-events', 'all')\n      .style('cursor', 'crosshair')\n      .on('mouseover', () => {\n        hoverInfoStore.set( {show: true, text: weightText} );\n      })\n      .on('mouseleave', () => {\n        hoverInfoStore.set( {show: false, text: weightText} );\n      })\n      .on('click', () => {d3.event.stopPropagation()});\n\n    // Sliding the kernel on the input channel and result channel at the same\n    // time\n    let kernelGroupInput = kernelGroup.clone(true)\n      .style('pointer-events', 'none')\n      .style('cursor', 'pointer')\n      .classed('kernel-clone', true)\n      .classed(`kernel-input-${ni}`, true);\n\n    kernelGroupInput.style('opacity', 0.9)\n      .selectAll('rect.kernel')\n      .style('opacity', 0.7);\n\n    kernelGroupInput.attr('transform', `translate(${leftX}, ${n.y})`)\n      .attr('data-tick', 0)\n      .attr('data-origin-x', leftX)\n      .attr('data-origin-y', n.y);\n\n    let kernelGroupResult = kernelGroup.clone(true)\n      .style('pointer-events', 'none')\n      .style('cursor', 'pointer')\n      .classed('kernel-clone', true)\n      .classed(`kernel-result-${ni}`, true);\n\n    kernelGroupResult.style('opacity', 0.9)\n      .selectAll('rect.kernel')\n      .style('fill', 'none');\n\n    kernelGroupResult.attr('transform',\n      `translate(${intermediateX1}, ${n.y})`)\n      .attr('data-origin-x', intermediateX1)\n      .attr('data-origin-y', n.y);\n    \n    startIntermediateAnimation(kernelGroupInput, kernelGroupResult, tickTime1D,\n      stride);\n  });\n\n  // Aggregate the intermediate min max\n  let aggregatedExtent = intermediateMinMax.reduce((acc, cur) => {\n    return [Math.min(acc[0], cur[0]), Math.max(acc[1], cur[1])];\n  })\n  let aggregatedMinMax = {min: aggregatedExtent[0], max: aggregatedExtent[1]};\n\n  // Draw the plus operation symbol\n  let symbolY = nodeCoordinate[curLayerIndex][i].y + nodeLength / 2;\n  let symbolRectHeight = 1;\n  let symbolGroup = intermediateLayer.append('g')\n    .attr('class', 'plus-symbol')\n    .attr('transform', `translate(${intermediateX2 + plusSymbolRadius}, ${symbolY})`);\n  \n  symbolGroup.append('rect')\n    .attr('x', -plusSymbolRadius)\n    .attr('y', -plusSymbolRadius)\n    .attr('width', 2 * plusSymbolRadius)\n    .attr('height', 2 * plusSymbolRadius)\n    .attr('rx', 3)\n    .attr('ry', 3)\n    .style('fill', 'none')\n    .style('stroke', intermediateColor);\n  \n  symbolGroup.append('rect')\n    .attr('x', -(plusSymbolRadius - 3))\n    .attr('y', -symbolRectHeight / 2)\n    .attr('width', 2 * (plusSymbolRadius - 3))\n    .attr('height', symbolRectHeight)\n    .style('fill', intermediateColor);\n\n  symbolGroup.append('rect')\n    .attr('x', -symbolRectHeight / 2)\n    .attr('y', -(plusSymbolRadius - 3))\n    .attr('width', symbolRectHeight)\n    .attr('height', 2 * (plusSymbolRadius - 3))\n    .style('fill', intermediateColor);\n\n  // Place the bias rectangle below the plus sign if user clicks the firrst\n  // conv node\n  if (i == 0) {\n    // Add bias symbol to the plus symbol\n    symbolGroup.append('circle')\n        .attr('cx', 0)\n        .attr('cy', nodeLength / 2 + kernelRectLength)\n        .attr('r', 4)\n        .style('stroke', intermediateColor)\n        .style('cursor', 'crosshair')\n        .style('fill', gappedColorScale(layerColorScales.weight, kernelRange,\n          d.bias, kernelColorGap))\n        .on('mouseover', () => {\n          hoverInfoStore.set( {show: true, text: `Bias: ${formater(d.bias)}`} );\n        })\n        .on('mouseleave', () => {\n          hoverInfoStore.set( {show: false, text: `Bias: ${formater(d.bias)}`} );\n        });\n\n    // Link from bias to the plus symbol\n    linkData.push({\n      source: {x: intermediateX2 + plusSymbolRadius,\n        y: nodeCoordinate[curLayerIndex][i].y + nodeLength},\n      target: {x: intermediateX2 + plusSymbolRadius,\n        y: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2 + plusSymbolRadius},\n      name: `bias-plus`\n    });\n  } else {\n    // Add bias symbol to the plus symbol\n    symbolGroup.append('circle')\n      .attr('cx', 0)\n      .attr('cy', -nodeLength / 2 - kernelRectLength)\n      .attr('r', 4)\n      .style('stroke', intermediateColor)\n      .style('cursor', 'crosshair')\n      .style('fill', gappedColorScale(layerColorScales.weight, kernelRange,\n        d.bias, kernelColorGap))\n      .on('mouseover', () => {\n        hoverInfoStore.set( {show: true, text: `Bias: ${formater(d.bias)}`} );\n      })\n      .on('mouseleave', () => {\n        hoverInfoStore.set( {show: false, text: `Bias: ${formater(d.bias)}`} );\n      });\n    \n    // Link from bias to the plus symbol\n    linkData.push({\n      source: {x: intermediateX2 + plusSymbolRadius,\n        y: nodeCoordinate[curLayerIndex][i].y},\n      target: {x: intermediateX2 + plusSymbolRadius,\n        y: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2 - plusSymbolRadius},\n      name: `bias-plus`\n    });\n  }\n\n  // Link from the plus symbol to the output\n  linkData.push({\n    source: getOutputKnot({x: intermediateX2 + 2 * plusSymbolRadius - nodeLength,\n      y: nodeCoordinate[curLayerIndex][i].y}),\n    target: getInputKnot({x: rightX,\n      y: nodeCoordinate[curLayerIndex][i].y}),\n    name: `symbol-output`\n  });\n  \n  // Output -> next layer\n  linkData.push({\n    source: getOutputKnot({x: rightX,\n      y: nodeCoordinate[curLayerIndex][i].y}),\n    target: getInputKnot({x: rightStart,\n      y: nodeCoordinate[curLayerIndex][i].y}),\n    name: `output-next`\n  });\n\n  // Draw the layer label\n  intermediateLayer.append('g')\n    .attr('class', 'layer-intermediate-label layer-label')\n    .attr('transform', () => {\n      let x = intermediateX1 + nodeLength / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n      return `translate(${x}, ${y})`;\n    })\n    .classed('hidden', detailedMode)\n    .append('text')\n    .style('text-anchor', 'middle')\n    .style('dominant-baseline', 'middle')\n    .style('font-weight', 800)\n    .style('opacity', '0.8')\n    .text('intermediate');\n  \n  intermediateLayer.append('g')\n    .attr('class', 'animation-control')\n    .attr('transform', () => {\n      let x = intermediateX1 + nodeLength / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 4;\n      return `translate(${x}, ${y})`;\n    })\n    .on('click', () => animationButtonClicked(curLayerIndex))\n    .append('image')\n    .attr('class', 'animation-control-button')\n    .attr('xlink:href', 'PUBLIC_URL/assets/img/fast_forward.svg')\n    .attr('x', 50)\n    .attr('y', 0)\n    .attr('height', 13)\n    .attr('width', 13);\n\n  // Draw the detailed model layer label\n  intermediateLayer.append('g')\n    .attr('class', 'layer-intermediate-label layer-detailed-label')\n    .attr('transform', () => {\n      let x = intermediateX1 + nodeLength / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 5;\n      return `translate(${x}, ${y})`;\n    })\n    .classed('hidden', !detailedMode)\n    .append('text')\n    .style('text-anchor', 'middle')\n    .style('dominant-baseline', 'middle')\n    .style('opacity', '0.7')\n    .style('font-weight', 800)\n    .append('tspan')\n    .text('intermediate')\n    .append('tspan')\n    .style('font-size', '8px')\n    .style('font-weight', 'normal')\n    .attr('x', 0)\n    .attr('dy', '1.5em')\n    .text(`(${cnn[curLayerIndex][0].output.length},\n      ${cnn[curLayerIndex][0].output[0].length},\n      ${cnn[curLayerIndex].length})`);\n\n  // Draw the edges\n  let linkGen = d3.linkHorizontal()\n    .x(d => d.x)\n    .y(d => d.y);\n  \n  let edgeGroup = intermediateLayer.append('g')\n    .attr('class', 'edge-group')\n    .lower();\n  \n  let dashoffset = 0;\n\n  edgeGroup.selectAll('path')\n    .data(linkData)\n    .enter()\n    .append('path')\n    .classed('flow-edge', d => d.name !== 'output-next')\n    .attr('id', d => `edge-${d.name}`)\n    .attr('d', d => linkGen({source: d.source, target: d.target}))\n    .style('fill', 'none')\n    .style('stroke-width', 1)\n    .style('stroke', intermediateColor);\n\n  edgeGroup.select('#edge-output-next')\n    .style('opacity', 0.1);\n  \n  edgeGroup.selectAll('path.flow-edge')\n    .attr('stroke-dasharray', '4 2')\n    .attr('stroke-dashoffset', 0)\n    .each((d, i, g) => animateEdge(d, i, g, dashoffset - 1000));\n  \n  return {intermediateLayer: intermediateLayer,\n    intermediateMinMax: aggregatedMinMax,\n    kernelRange: kernelRange,\n    kernelMinMax: {min: kernelExtent[0], max: kernelExtent[1]}};\n}\n\n/**\n * Add an annotation for the kernel and the sliding\n * @param {object} arg \n * {\n *  leftX: X value of the left border of intermedaite layer\n *  group: element group\n *  intermediateGap: the inner gap of intermediate layer\n *  isFirstConv: if this intermediate layer is after the first layer\n *  i: index of the selected node\n * }\n */\nconst drawIntermediateLayerAnnotation = (arg) => {\n  let leftX = arg.leftX,\n    curLayerIndex = arg.curLayerIndex,\n    group = arg.group,\n    intermediateGap = arg.intermediateGap,\n    isFirstConv = arg.isFirstConv,\n    i = arg.i;\n\n  let kernelAnnotation = group.append('g')\n    .attr('class', 'kernel-annotation');\n  \n  kernelAnnotation.append('text')\n    .text('Kernel')\n    .attr('class', 'annotation-text')\n    .attr('x', leftX - 2.5 * kernelRectLength * 3)\n    .attr('y', nodeCoordinate[curLayerIndex - 1][0].y + kernelRectLength * 3)\n    .style('dominant-baseline', 'baseline')\n    .style('text-anchor', 'end');\n\n  let sliderX, sliderY, arrowSX, arrowSY, dr;\n  let sliderX2, sliderY2, arrowSX2, arrowSY2, dr2, arrowTX2, arrowTY2;\n  \n  if (isFirstConv) {\n    sliderX = leftX;\n    sliderY = nodeCoordinate[curLayerIndex - 1][0].y + nodeLength +\n      kernelRectLength * 3;\n    arrowSX = leftX - 5;\n    arrowSY = nodeCoordinate[curLayerIndex - 1][0].y + nodeLength +\n      kernelRectLength * 3 + 5;\n    dr = 20;\n    if(overviewConfig.modeImg > 1) {\n      sliderX2 = leftX;\n      sliderY2 = nodeCoordinate[curLayerIndex - 1][1].y + nodeLength +\n          kernelRectLength * 3;\n      arrowSX2 = leftX - kernelRectLength * 3;\n      arrowSY2 = nodeCoordinate[curLayerIndex - 1][1].y + nodeLength + 15;\n      arrowTX2 = leftX - 13;\n      arrowTY2 = nodeCoordinate[curLayerIndex - 1][1].y + 15;\n      dr2 = 35;\n    }\n  } else {\n    sliderX = leftX - 3 * kernelRectLength * 3;\n    sliderY = nodeCoordinate[curLayerIndex - 1][0].y + nodeLength / 3;\n    arrowSX = leftX - 2 * kernelRectLength * 3 - 5;\n    arrowSY = nodeCoordinate[curLayerIndex - 1][0].y + nodeLength - 10;\n    dr = 50;\n\n    sliderX2 = leftX - 3 * kernelRectLength * 3;\n    sliderY2 = nodeCoordinate[curLayerIndex - 1][2].y - 3;\n    arrowTX2 = leftX - kernelRectLength * 3 - 4;\n    arrowTY2 = nodeCoordinate[curLayerIndex - 1][2].y + kernelRectLength * 3 + 6;\n    arrowSX2 = leftX - kernelRectLength * 3 - 13;\n    arrowSY2 = nodeCoordinate[curLayerIndex - 1][2].y + 26;\n    dr2 = 20;\n  }\n\n  let slideText = kernelAnnotation.append('text')\n    .attr('x', sliderX)\n    .attr('y', sliderY)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', isFirstConv ? 'start' : 'end');\n  \n  slideText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text('Slide kernel over input channel');\n\n  slideText.append('tspan')\n    .attr('x', sliderX)\n    .attr('dy', '1em')\n    .style('dominant-baseline', 'hanging')\n    .text('to get intermediate result');\n\n  // slideText.append('tspan')\n  //   .attr('x', sliderX)\n  //   .attr('dy', '1em')\n  //   .style('dominant-baseline', 'hanging')\n  //   .text('');\n\n  slideText.append('tspan')\n    .attr('x', sliderX)\n    .attr('dy', '1.2em')\n    .style('dominant-baseline', 'hanging')\n    .style('font-weight', 700)\n    .text('Click ');\n  \n  slideText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .style('font-weight', 400)\n    .text('to learn more')\n\n  drawArrow({\n    group: group,\n    tx: leftX - 7,\n    ty: nodeCoordinate[curLayerIndex - 1][0].y + nodeLength / 2,\n    sx: arrowSX,\n    sy: arrowSY,\n    hFlip: !isFirstConv,\n    dr: dr,\n    marker: 'marker'\n  });\n\n  // Add kernel annotation\n  let slideText2 = kernelAnnotation.append('text')\n    .attr('x', sliderX2)\n    .attr('y', sliderY2)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', isFirstConv ? 'start' : 'end');\n\n  slideText2.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text('Each input chanel');\n\n  slideText2.append('tspan')\n    .attr('x', sliderX)\n    .attr('dy', '1em')\n    .style('dominant-baseline', 'hanging')\n    .text('gets datatrainx different kernel');\n\n  slideText2.append('tspan')\n    .attr('x', sliderX)\n    .attr('dy', '1.3em')\n    .style('font-weight', 700)\n    .style('dominant-baseline', 'hanging')\n    .text('Hover over ');\n\n  slideText2.append('tspan')\n    .style('font-weight', 400)\n    .style('dominant-baseline', 'hanging')\n    .text('to see value!')\n\n  drawArrow({\n    group: group,\n    tx: arrowTX2,\n    ty: arrowTY2,\n    sx: arrowSX2,\n    sy: arrowSY2,\n    dr: dr2,\n    hFlip: !isFirstConv,\n    marker: 'marker'\n  });\n\n\n  // Add annotation for the sum operation\n  let plusAnnotation = group.append('g')\n    .attr('class', 'plus-annotation');\n  \n  let intermediateX2 = leftX + 2 * nodeLength + 2.5 * intermediateGap;\n  let textX = intermediateX2;\n  let textY = nodeCoordinate[curLayerIndex][i].y + nodeLength +\n      kernelRectLength * 3;\n  \n  // Special case 1: first node\n  if (i === 0) { textX += 30; }\n\n  // Special case 2: last node \n  if (i === 9) {\n    textX = intermediateX2 + plusSymbolRadius - 10;\n    textY -= 2.5 * nodeLength;\n  }\n\n  let plusText = plusAnnotation.append('text')\n    .attr('x', textX)\n    .attr('y', textY)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', 'start');\n  \n  plusText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text('Add up all intermediate');\n  \n  plusText.append('tspan')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .style('dominant-baseline', 'hanging')\n    .text('results and then add bias');\n\n  if (i === 9) {\n    drawArrow({\n      group: group,\n      sx: intermediateX2 + 50,\n      sy: nodeCoordinate[curLayerIndex][i].y - (nodeLength / 2 + kernelRectLength * 2),\n      tx: intermediateX2 + 2 * plusSymbolRadius + 5,\n      ty: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2 - plusSymbolRadius,\n      dr: 50,\n      hFlip: false,\n      marker: 'marker-alt'\n    });\n  } else {\n    drawArrow({\n      group: group,\n      sx: intermediateX2 + 35,\n      sy: nodeCoordinate[curLayerIndex][i].y + nodeLength + kernelRectLength * 2,\n      tx: intermediateX2 + 2 * plusSymbolRadius + 5,\n      ty: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2 + plusSymbolRadius,\n      dr: 30,\n      hFlip: true,\n      marker: 'marker-alt'\n    });\n  }\n\n  // Add annotation for the bias\n  let biasTextY = nodeCoordinate[curLayerIndex][i].y;\n  if (i === 0) {\n    biasTextY += nodeLength + 3 * kernelRectLength;\n  } else {\n    biasTextY -= 2 * kernelRectLength + 5;\n  }\n  plusAnnotation.append('text')\n    .attr('class', 'annotation-text')\n    .attr('x', intermediateX2 + plusSymbolRadius)\n    .attr('y', biasTextY)\n    .style('text-anchor', 'middle')\n    .style('dominant-baseline', i === 0 ? 'hanging' : 'baseline')\n    .text('Bias');\n}\n\n/**\n * Append datatrainx filled rectangle under datatrainx pair of nodes.\n * @param {number} curLayerIndex Index of the selected layer\n * @param {number} i Index of the selected node\n * @param {number} leftX X value of the left border of intermediate layer\n * @param {number} intermediateGap Inner gap of this intermediate layer\n * @param {number} padding Padding around the rect\n * @param {function} intermediateNodeMouseOverHandler Mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler Mouse leave handler\n * @param {function} intermediateNodeClicked Mouse click handler\n */\nconst addUnderneathRect = (curLayerIndex, i, leftX,\n  intermediateGap, padding, intermediateNodeMouseOverHandler,\n  intermediateNodeMouseLeaveHandler, intermediateNodeClicked) => {\n  // Add underneath rects\n  let underGroup = svg.select('g.underneath');\n\n  for (let n = 0; n < cnn[curLayerIndex - 1].length; n++) {\n    underGroup.append('rect')\n      .attr('class', 'underneath-gateway')\n      .attr('id', `underneath-gateway-${n}`)\n      .attr('x', leftX - padding)\n      .attr('y', nodeCoordinate[curLayerIndex - 1][n].y - padding)\n      .attr('width', (2 * nodeLength + intermediateGap) + 2 * padding)\n      .attr('height', nodeLength + 2 * padding)\n      .attr('rx', 10)\n      .style('fill', 'rgba(160, 160, 160, 0.2)')\n      .style('opacity', 0);\n    \n    // Register new events for input layer nodes\n    svg.select(`g#layer-${curLayerIndex - 1}-node-${n}`)\n      .style('pointer-events', 'all')\n      .style('cursor', 'pointer')\n      .on('mouseover', intermediateNodeMouseOverHandler)\n      .on('mouseleave', intermediateNodeMouseLeaveHandler)\n      .on('click', (d, ni, g) => intermediateNodeClicked(d, ni, g,\n        i, curLayerIndex));\n      // .on('click', (d, i) => {console.log(i)});\n  }\n  underGroup.lower();\n}\n\n/**\n * Add an overlaying rect\n * @param {string} gradientName Gradient name of overlay rect\n * @param {number} x X value of the overlaying rect\n * @param {number} y Y value of the overlaying rect\n * @param {number} width Rect width\n * @param {number} height Rect height\n */\nexport const addOverlayRect = (gradientName, x, y, width, height) => {\n  if (svg.select('.intermediate-layer-overlay').empty()) {\n    svg.append('g').attr('class', 'intermediate-layer-overlay');\n  }\n\n  let intermediateLayerOverlay = svg.select('.intermediate-layer-overlay');\n\n  let overlayRect = intermediateLayerOverlay.append('rect')\n    .attr('class', 'overlay')\n    .style('fill', `url(#${gradientName})`)\n    .style('stroke', 'none')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('x', x)\n    .attr('y', y)\n    .style('opacity', 0);\n  \n  overlayRect.transition('move')\n    .duration(800)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n}\n\n/**\n * Redraw the layer if needed (entering the intermediate view to make sure\n * all layers have the same color scale)\n * @param {number} curLayerIndex Index of the selected layer\n * @param {number} i Index of the selected node\n */\nconst redrawLayerIfNeeded = (curLayerIndex, i) => {\n  // Determine the range for this layerview, and redraw the layer with\n  // smaller range so all layers have the same range\n  let rangePre = cnnLayerRanges[selectedScaleLevel][curLayerIndex - 1];\n  let rangeCur = cnnLayerRanges[selectedScaleLevel][curLayerIndex];\n  let range = Math.max(rangePre, rangeCur);\n\n  if (rangePre > rangeCur) {\n    // Redraw the current layer (selected node)\n    svg.select(`g#layer-${curLayerIndex}-node-${i}`)\n      .select('image.node-image')\n      .each((d, g, i) => drawOutput(d, g, i, range));\n    \n    // Record the change so we will re-redraw the layer when user quits\n    // the intermediate view\n    needRedraw = [curLayerIndex, i];\n    needRedrawStore.set(needRedraw);\n    \n  } else if (rangePre < rangeCur) {\n    // Redraw the previous layer (whole layer)\n    svg.select(`g#cnn-layer-group-${curLayerIndex - 1}`)\n      .selectAll('image.node-image')\n      .each((d, g, i) => drawOutput(d, g, i, range));\n\n    // Record the change so we will re-redraw the layer when user quits\n    // the intermediate view\n    needRedraw = [curLayerIndex - 1, undefined];\n    needRedrawStore.set(needRedraw);\n  }\n\n  // Compute the min, max value of all nodes in pre-layer and the selected\n  // node of cur-layer\n  let min = cnnLayerMinMax[curLayerIndex - 1].min,\n    max = cnnLayerMinMax[curLayerIndex - 1].max;\n\n  // Selected node\n  let n = cnn[curLayerIndex][i];\n  for (let r = 0; r < n.output.length; r++) {\n    for (let c = 0; c < n.output[0].length; c++) {\n      if (n.output[r][c] < min) { min = n.output[r][c]; }\n      if (n.output[r][c] > max) { max = n.output[r][c]; }\n    }\n  }\n\n  return {range: range, minMax: {min: min, max: max}};\n}\n\n/**\n * Draw the intermediate layer before conv_1_1\n * @param {number} curLayerIndex Index of the selected layer\n * @param {object} d Bounded d3 data\n * @param {number} i Index of the selected node\n * @param {number} width CNN group width\n * @param {number} height CNN group height\n * @param {function} intermediateNodeMouseOverHandler mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler mouse leave handler\n * @param {function} intermediateNodeClicked node clicking handler\n */\nexport const drawConv1 = (curLayerIndex, d, i, width, height,\n  intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n  intermediateNodeClicked) => {\n  // Compute the target location\n  let targetX = nodeCoordinate[curLayerIndex - 1][0].x + 2 * nodeLength +\n    2 * hSpaceAroundGap * gapRatio + plusSymbolRadius * 2;\n  let intermediateGap = (hSpaceAroundGap * gapRatio * 2) / 3;\n  let leftX = nodeCoordinate[curLayerIndex - 1][0].x;\n\n  // Record the left x position for dynamic detial view positioning\n  intermediateLayerPosition['conv_1_1'] = targetX + nodeLength;\n  intermediateLayerPositionStore.set(intermediateLayerPosition);\n\n  // Hide the edges\n  svg.select('g.edge-group')\n    .style('visibility', 'hidden');\n\n  // Move the selected layer\n  moveLayerX({layerIndex: curLayerIndex, targetX: targetX, disable: true,\n    delay: 0, opacity: 0.15, specialIndex: i});\n\n  // Compute the gap in the right shrink region\n  let rightStart = targetX + nodeLength + hSpaceAroundGap * gapRatio;\n  let rightGap = (width - rightStart - 10 * nodeLength) / 10;\n\n  // Move the right layers\n  for (let i = curLayerIndex + 1; i < numLayers; i++) {\n    let curX = rightStart + (i - (curLayerIndex + 1)) * (nodeLength + rightGap);\n    moveLayerX({layerIndex: i, targetX: curX, disable: true, delay: 0});\n  }\n\n  // Add an overlay gradient and rect\n  let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\n  {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\n  {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 1}];\n  addOverlayGradient('overlay-gradient', stops);\n\n  addOverlayRect('overlay-gradient', rightStart - overlayRectOffset / 2,\n  0, width - rightStart + overlayRectOffset,\n  height + svgPaddings.top + svgPaddings.bottom);\n\n  // Draw the intermediate layer\n  let {intermediateLayer, intermediateMinMax, kernelRange, kernelMinMax} =\n  drawIntermediateLayer(curLayerIndex, leftX, targetX, rightStart,\n    intermediateGap, d, i, intermediateNodeMouseOverHandler,\n    intermediateNodeMouseLeaveHandler, intermediateNodeClicked);\n  addUnderneathRect(curLayerIndex, i, leftX, intermediateGap, 8,\n    intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n    intermediateNodeClicked);\n\n  // Compute the selected node's min max\n  // Selected node\n  let min = Infinity, max = -Infinity;\n  let n = cnn[curLayerIndex][i];\n  for (let r = 0; r < n.output.length; r++) {\n  for (let c = 0; c < n.output[0].length; c++) {\n    if (n.output[r][c] < min) { min = n.output[r][c]; }\n    if (n.output[r][c] > max) { max = n.output[r][c]; }\n  }\n  }\n\n  let finalMinMax = {\n  min: Math.min(min, intermediateMinMax.min),\n  max: Math.max(max, intermediateMinMax.max)\n  }\n\n  // Add annotation to the intermediate layer\n  let intermediateLayerAnnotation = svg.append('g')\n  .attr('class', 'intermediate-layer-annotation')\n  .style('opacity', 0);\n\n  drawIntermediateLayerAnnotation({\n    leftX: leftX,\n    curLayerIndex: curLayerIndex,\n    group: intermediateLayerAnnotation,\n    intermediateGap: intermediateGap,\n    isFirstConv: true,\n    i: i\n  });\n\n  let range = cnnLayerRanges.local[curLayerIndex];\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: 1,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    isInput: true,\n    x: leftX,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10 - 25\n  });\n  if(overviewConfig.modeImg > 1) {\n    drawIntermediateLayerLegend({\n      legendHeight: 5,\n      curLayerIndex: curLayerIndex,\n      range: range,\n      minMax: finalMinMax,\n      group: intermediateLayer,\n      width: 2 * nodeLength + intermediateGap,\n      x: nodeCoordinate[curLayerIndex - 1][2].x,\n      y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap +\n          nodeLength * 10\n    });\n\n    drawIntermediateLayerLegend({\n      legendHeight: 5,\n      curLayerIndex: curLayerIndex,\n      range: kernelRange,\n      minMax: kernelMinMax,\n      group: intermediateLayer,\n      width: 2 * nodeLength + intermediateGap,\n      x: targetX + nodeLength - (2 * nodeLength + intermediateGap),\n      y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap +\n          nodeLength * 10,\n      gradientAppendingName: 'kernelColorGradient',\n      colorScale: layerColorScales.weight,\n      gradientGap: 0.2\n    });\n  }\n  // Show everything\n  svg.selectAll('g.intermediate-layer, g.intermediate-layer-annotation')\n    .transition()\n    .delay(500)\n    .duration(500)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n}\n\n/**\n * Draw the intermediate layer before conv_1_2\n * @param {number} curLayerIndex Index of the selected layer\n * @param {object} d Bounded d3 data\n * @param {number} i Index of the selected node\n * @param {number} width CNN group width\n * @param {number} height CNN group height\n * @param {function} intermediateNodeMouseOverHandler mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler mouse leave handler\n * @param {function} intermediateNodeClicked node clicking handler\n */\nexport const drawConv2 = (curLayerIndex, d, i, width, height,\n  intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n  intermediateNodeClicked) => {\n  let targetX = nodeCoordinate[curLayerIndex - 1][0].x + 2 * nodeLength +\n    2 * hSpaceAroundGap * gapRatio + plusSymbolRadius * 2;\n  let intermediateGap = (hSpaceAroundGap * gapRatio * 2) / 3;\n\n  // Record the left x position for dynamic detial view positioning\n  intermediateLayerPosition['conv_1_2'] = targetX + nodeLength;\n  intermediateLayerPositionStore.set(intermediateLayerPosition);\n\n  // Make sure two layers have the same range\n  let {range, minMax} = redrawLayerIfNeeded(curLayerIndex, i);\n\n  // Hide the edges\n  svg.select('g.edge-group')\n    .style('visibility', 'hidden');\n\n  // Move the selected layer\n  moveLayerX({layerIndex: curLayerIndex, targetX: targetX, disable: true,\n    delay: 0, opacity: 0.15, specialIndex: i});\n\n  // Compute the gap in the right shrink region\n  let rightStart = targetX + nodeLength + hSpaceAroundGap * gapRatio;\n  let rightGap = (width - rightStart - 8 * nodeLength) / 8;\n\n  // Move the right layers\n  for (let i = curLayerIndex + 1; i < numLayers; i++) {\n    let curX = rightStart + (i - (curLayerIndex + 1)) * (nodeLength + rightGap);\n    moveLayerX({layerIndex: i, targetX: curX, disable: true, delay: 0});\n  }\n\n  // Add an overlay\n  let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 1}];\n  addOverlayGradient('overlay-gradient-right', stops);\n\n  let leftRightRatio = (2 * nodeLength + hSpaceAroundGap * gapRatio) /\n    (8 * nodeLength + intermediateGap * 7);\n  let endingGradient = 0.85 + (0.95 - 0.85) * leftRightRatio;\n  stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: endingGradient},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\n  addOverlayGradient('overlay-gradient-left', stops);\n\n  addOverlayRect('overlay-gradient-right', rightStart - overlayRectOffset / 2,\n    0, width - rightStart + overlayRectOffset,\n    height + svgPaddings.top + svgPaddings.bottom);\n\n  addOverlayRect('overlay-gradient-left', nodeCoordinate[0][0].x - overlayRectOffset / 2,\n    0, nodeLength * 2 + hSpaceAroundGap * gapRatio + overlayRectOffset,\n    height + svgPaddings.top + svgPaddings.bottom);\n\n  // Draw the intermediate layer\n  let leftX = nodeCoordinate[curLayerIndex - 1][0].x;\n  let {intermediateLayer, intermediateMinMax, kernelRange, kernelMinMax} =\n    drawIntermediateLayer(curLayerIndex, leftX, targetX, rightStart,\n      intermediateGap, d, i, intermediateNodeMouseOverHandler,\n      intermediateNodeMouseLeaveHandler, intermediateNodeClicked);\n  addUnderneathRect(curLayerIndex, i, leftX, intermediateGap, 5,\n    intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n    intermediateNodeClicked);\n\n  // After getting the intermediateMinMax, we can finally aggregate it with\n  // the preLayer minmax, curLayer minmax\n  let finalMinMax = {\n    min: Math.min(minMax.min, intermediateMinMax.min),\n    max: Math.max(minMax.max, intermediateMinMax.max)\n  }\n\n  // Add annotation to the intermediate layer\n  let intermediateLayerAnnotation = svg.append('g')\n    .attr('class', 'intermediate-layer-annotation')\n    .style('opacity', 0);\n\n  drawIntermediateLayerAnnotation({\n    leftX: leftX,\n    curLayerIndex: curLayerIndex,\n    group: intermediateLayerAnnotation,\n    intermediateGap: intermediateGap,\n    i: i\n  });\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: range,\n    minMax: finalMinMax,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    x: leftX,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10\n  });\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: kernelRange,\n    minMax: kernelMinMax,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    x: targetX + nodeLength - (2 * nodeLength + intermediateGap),\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10,\n    gradientAppendingName: 'kernelColorGradient',\n    colorScale: layerColorScales.weight,\n    gradientGap: 0.2\n  });\n\n  // Show everything\n  svg.selectAll('g.intermediate-layer, g.intermediate-layer-annotation')\n    .transition()\n    .delay(500)\n    .duration(500)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n}\n\n/**\n * Draw the intermediate layer before conv_2_1\n * @param {number} curLayerIndex Index of the selected layer\n * @param {object} d Bounded d3 data\n * @param {number} i Index of the selected node\n * @param {number} width CNN group width\n * @param {number} height CNN group height\n * @param {function} intermediateNodeMouseOverHandler mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler mouse leave handler\n * @param {function} intermediateNodeClicked node clicking handler\n */\nexport const drawConv3 = (curLayerIndex, d, i, width, height,\n  intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n  intermediateNodeClicked) => {\n\n  let targetX = nodeCoordinate[curLayerIndex][0].x;\n  let leftX = targetX - (2 * nodeLength +\n    2 * hSpaceAroundGap * gapRatio + plusSymbolRadius * 2);\n  let intermediateGap = (hSpaceAroundGap * gapRatio * 2) / 3;\n\n  // Record the left x position for dynamic detial view positioning\n  intermediateLayerPosition['conv_2_1'] = targetX + nodeLength;\n  intermediateLayerPositionStore.set(intermediateLayerPosition);\n\n  // Hide the edges\n  svg.select('g.edge-group')\n    .style('visibility', 'hidden');\n\n  // Make sure two layers have the same range\n  let {range, minMax} = redrawLayerIfNeeded(curLayerIndex, i);\n\n  // Move the previous layer\n  moveLayerX({layerIndex: curLayerIndex - 1, targetX: leftX,\n    disable: true, delay: 0});\n\n  moveLayerX({layerIndex: curLayerIndex,\n    targetX: targetX, disable: true,\n    delay: 0, opacity: 0.15, specialIndex: i});\n\n  // Compute the gap in the left shrink region\n  let leftEnd = leftX - hSpaceAroundGap;\n  let leftGap = (leftEnd - nodeCoordinate[0][0].x - 5 * nodeLength) / 5;\n  let rightStart = nodeCoordinate[curLayerIndex][0].x +\n    nodeLength + hSpaceAroundGap;\n\n  // Move the left layers\n  for (let i = 0; i < curLayerIndex - 1; i++) {\n    let curX = nodeCoordinate[0][0].x + i * (nodeLength + leftGap);\n    moveLayerX({layerIndex: i, targetX: curX, disable: true, delay: 0});\n  }\n\n  // Add an overlay\n  let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 1},\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.9},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\n  addOverlayGradient('overlay-gradient-left', stops);\n\n  stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 1}];\n  addOverlayGradient('overlay-gradient-right', stops);\n\n  addOverlayRect('overlay-gradient-left', nodeCoordinate[0][0].x - overlayRectOffset / 2,\n    0, leftEnd - nodeCoordinate[0][0].x + overlayRectOffset,\n    height + svgPaddings.top + svgPaddings.bottom);\n  \n  addOverlayRect('overlay-gradient-right', rightStart - overlayRectOffset / 2,\n    0, width - rightStart + overlayRectOffset,\n    height + svgPaddings.top + svgPaddings.bottom);\n  \n  // Draw the intermediate layer\n  let {intermediateLayer, intermediateMinMax, kernelRange, kernelMinMax} =\n    drawIntermediateLayer(curLayerIndex, leftX,\n      nodeCoordinate[curLayerIndex][0].x, rightStart, intermediateGap,\n      d, i, intermediateNodeMouseOverHandler,\n      intermediateNodeMouseLeaveHandler, intermediateNodeClicked);\n  addUnderneathRect(curLayerIndex, i, leftX, intermediateGap, 5,\n    intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n    intermediateNodeClicked);\n          \n  // After getting the intermediateMinMax, we can finally aggregate it with\n  // the preLayer minmax, curLayer minmax\n  let finalMinMax = {\n    min: Math.min(minMax.min, intermediateMinMax.min),\n    max: Math.max(minMax.max, intermediateMinMax.max)\n  }\n\n  // Add annotation to the intermediate layer\n  let intermediateLayerAnnotation = svg.append('g')\n    .attr('class', 'intermediate-layer-annotation')\n    .style('opacity', 0);\n\n  drawIntermediateLayerAnnotation({\n    leftX: leftX,\n    curLayerIndex: curLayerIndex,\n    group: intermediateLayerAnnotation,\n    intermediateGap: intermediateGap,\n    i: i\n  });\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: range,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    minMax: finalMinMax,\n    x: leftX,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10\n  });\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: kernelRange,\n    minMax: kernelMinMax,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    x: targetX + nodeLength - (2 * nodeLength + intermediateGap),\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10,\n    gradientAppendingName: 'kernelColorGradient',\n    colorScale: layerColorScales.weight,\n    gradientGap: 0.2\n  });\n\n  // Show everything\n  svg.selectAll('g.intermediate-layer, g.intermediate-layer-annotation')\n    .transition()\n    .delay(500)\n    .duration(500)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n}\n\n/**\n * Draw the intermediate layer before conv_2_2\n * @param {number} curLayerIndex Index of the selected layer\n * @param {object} d Bounded d3 data\n * @param {number} i Index of the selected node\n * @param {number} width CNN group width\n * @param {number} height CNN group height\n * @param {function} intermediateNodeMouseOverHandler mouse over handler\n * @param {function} intermediateNodeMouseLeaveHandler mouse leave handler\n * @param {function} intermediateNodeClicked node clicking handler\n */\nexport const drawConv4 = (curLayerIndex, d, i, width, height,\n  intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n  intermediateNodeClicked) => {\n  let targetX = nodeCoordinate[curLayerIndex][0].x;\n  let leftX = targetX - (2 * nodeLength +\n    2 * hSpaceAroundGap * gapRatio + plusSymbolRadius * 2);\n  let intermediateGap = (hSpaceAroundGap * gapRatio * 2) / 3;\n\n  // Record the left x position for dynamic detial view positioning\n  intermediateLayerPosition['conv_2_2'] = leftX;\n  intermediateLayerPositionStore.set(intermediateLayerPosition);\n\n  // Hide the edges\n  svg.select('g.edge-group')\n    .style('visibility', 'hidden');\n\n  // Make sure two layers have the same range\n  let {range, minMax} = redrawLayerIfNeeded(curLayerIndex, i);\n\n  // Move the previous layer\n  moveLayerX({layerIndex: curLayerIndex - 1, targetX: leftX,\n    disable: true, delay: 0});\n\n  moveLayerX({layerIndex: curLayerIndex,\n    targetX: targetX, disable: true,\n    delay: 0, opacity: 0.15, specialIndex: i});\n\n  // Compute the gap in the left shrink region\n  let leftEnd = leftX - hSpaceAroundGap;\n  let leftGap = (leftEnd - nodeCoordinate[0][0].x - 7 * nodeLength) / 7;\n  let rightStart = targetX + nodeLength + hSpaceAroundGap;\n\n  // Move the left layers\n  for (let i = 0; i < curLayerIndex - 1; i++) {\n    let curX = nodeCoordinate[0][0].x + i * (nodeLength + leftGap);\n    moveLayerX({layerIndex: i, targetX: curX, disable: true, delay: 0});\n  }\n\n  // Add an overlay\n  let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 1},\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\n  addOverlayGradient('overlay-gradient-left', stops);\n\n  stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 1}];\n  addOverlayGradient('overlay-gradient-right', stops);\n\n  addOverlayRect('overlay-gradient-left', nodeCoordinate[0][0].x - overlayRectOffset / 2,\n    0, leftEnd - nodeCoordinate[0][0].x + overlayRectOffset,\n    height + svgPaddings.top + svgPaddings.bottom);\n  \n  addOverlayRect('overlay-gradient-right', rightStart - overlayRectOffset / 2,\n    0, width - rightStart + overlayRectOffset,\n    height + svgPaddings.top + svgPaddings.bottom);\n  \n  // Draw the intermediate layer\n  let {intermediateLayer, intermediateMinMax, kernelRange, kernelMinMax} =\n    drawIntermediateLayer(curLayerIndex, leftX,\n      nodeCoordinate[curLayerIndex][0].x, rightStart, intermediateGap,\n      d, i, intermediateNodeMouseOverHandler,\n      intermediateNodeMouseLeaveHandler, intermediateNodeClicked);\n  addUnderneathRect(curLayerIndex, i, leftX, intermediateGap, 5,\n    intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n    intermediateNodeClicked);\n          \n  // After getting the intermediateMinMax, we can finally aggregate it with\n  // the preLayer minmax, curLayer minmax\n  let finalMinMax = {\n    min: Math.min(minMax.min, intermediateMinMax.min),\n    max: Math.max(minMax.max, intermediateMinMax.max)\n  }\n\n  // Add annotation to the intermediate layer\n  let intermediateLayerAnnotation = svg.append('g')\n    .attr('class', 'intermediate-layer-annotation')\n    .style('opacity', 0);\n\n  drawIntermediateLayerAnnotation({\n    leftX: leftX,\n    curLayerIndex: curLayerIndex,\n    group: intermediateLayerAnnotation,\n    intermediateGap: intermediateGap,\n    i: i\n  });\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: range,\n    group: intermediateLayer,\n    minMax: finalMinMax,\n    width: 2 * nodeLength + intermediateGap,\n    x: leftX,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10\n  });\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: kernelRange,\n    minMax: kernelMinMax,\n    group: intermediateLayer,\n    width: 2 * nodeLength + intermediateGap,\n    x: targetX + nodeLength - (2 * nodeLength + intermediateGap),\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10,\n    gradientAppendingName: 'kernelColorGradient',\n    colorScale: layerColorScales.weight,\n    gradientGap: 0.2\n  });\n\n  // Show everything\n  svg.selectAll('g.intermediate-layer, g.intermediate-layer-annotation')\n    .transition()\n    .delay(500)\n    .duration(500)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n}\n","/* global d3, SmoothScroll */\n\nimport {\n  svgStore, vSpaceAroundGapStore, hSpaceAroundGapStore, cnnStore,\n  nodeCoordinateStore, selectedScaleLevelStore, cnnLayerRangesStore,\n  cnnLayerMinMaxStore, isInSoftmaxStore, softmaxDetailViewStore,\n  hoverInfoStore, allowsSoftmaxAnimationStore, detailedModeStore\n} from '../stores.js';\nimport {\n  getOutputKnot, getInputKnot, gappedColorScale, getMidCoords\n} from './draw-utils.js';\nimport {\n  drawIntermediateLayerLegend, moveLayerX, addOverlayGradient,\n  drawArrow\n} from './intermediate-utils.js';\nimport { overviewConfig } from '../config.js';\n\n// Configs\nconst layerColorScales = overviewConfig.layerColorScales;\nconst nodeLength = overviewConfig.nodeLength;\nconst plusSymbolRadius = overviewConfig.plusSymbolRadius;\nconst intermediateColor = overviewConfig.intermediateColor;\nconst kernelRectLength = overviewConfig.kernelRectLength;\nconst svgPaddings = overviewConfig.svgPaddings;\nconst gapRatio = overviewConfig.gapRatio;\nconst classList = overviewConfig.classLists;\nconst formater = d3.format('.4f');\n\n// Shared variables\nlet svg = undefined;\nsvgStore.subscribe( value => {svg = value;} )\n\nlet vSpaceAroundGap = undefined;\nvSpaceAroundGapStore.subscribe( value => {vSpaceAroundGap = value;} )\n\nlet hSpaceAroundGap = undefined;\nhSpaceAroundGapStore.subscribe( value => {hSpaceAroundGap = value;} )\n\nlet cnn = undefined;\ncnnStore.subscribe( value => {cnn = value;} )\n\nlet nodeCoordinate = undefined;\nnodeCoordinateStore.subscribe( value => {nodeCoordinate = value;} )\n\nlet selectedScaleLevel = undefined;\nselectedScaleLevelStore.subscribe( value => {selectedScaleLevel = value;} )\n\nlet cnnLayerRanges = undefined;\ncnnLayerRangesStore.subscribe( value => {cnnLayerRanges = value;} )\n\nlet cnnLayerMinMax = undefined;\ncnnLayerMinMaxStore.subscribe( value => {cnnLayerMinMax = value;} )\n\nlet isInSoftmax = undefined;\nisInSoftmaxStore.subscribe( value => {isInSoftmax = value;} )\n\nlet allowsSoftmaxAnimation = undefined;\nallowsSoftmaxAnimationStore.subscribe( value => {allowsSoftmaxAnimation = value;} )\n\nlet softmaxDetailViewInfo = undefined;\nsoftmaxDetailViewStore.subscribe( value => {softmaxDetailViewInfo = value;} )\n\nlet hoverInfo = undefined;\nhoverInfoStore.subscribe( value => {hoverInfo = value;} )\n\nlet detailedMode = undefined;\ndetailedModeStore.subscribe( value => {detailedMode = value;} )\n\nlet layerIndexDict = {\n  'input': 0,\n  'conv_1_1': 1,\n  'relu_1_1': 2,\n  'conv_1_2': 3,\n  'relu_1_2': 4,\n  'max_pool_1': 5,\n  'conv_2_1': 6,\n  'relu_2_1': 7,\n  'conv_2_2': 8,\n  'relu_2_2': 9,\n  'max_pool_2': 10,\n  'output': 11\n}\n\nlet hasInitialized = false;\nlet logits = [];\nlet flattenFactoredFDict = {};\n\nconst moveLegend = (d, i, g, moveX, duration, restore) => {\n  let legend = d3.select(g[i]);\n\n  if (!restore) {\n    let previousTransform = legend.attr('transform');\n    let previousLegendX = +previousTransform.replace(/.*\\(([\\d\\.]+),.*/, '$1');\n    let previousLegendY = +previousTransform.replace(/.*,\\s([\\d\\.]+)\\)/, '$1');\n  \n    legend.transition('softmax')\n      .duration(duration)\n      .ease(d3.easeCubicInOut)\n      .attr('transform', `translate(${previousLegendX - moveX}, ${previousLegendY})`);\n    \n    // If not in restore mode, we register the previous location to the DOM element\n    legend.attr('data-preX', previousLegendX);\n    legend.attr('data-preY', previousLegendY);\n  } else {\n    // Restore the recorded location\n    let previousLegendX = +legend.attr('data-preX');\n    let previousLegendY = +legend.attr('data-preY');\n\n    legend.transition('softmax')\n      .duration(duration)\n      .ease(d3.easeCubicInOut)\n      .attr('transform', `translate(${previousLegendX}, ${previousLegendY})`);\n  }\n}\n\nconst logitCircleMouseOverHandler = (i) => {\n  // Update the hover info UI\n  hoverInfoStore.set({\n    show: true,\n    text: `Logit: ${formater(logits[i])}`\n  })\n\n  // Highlight the text in the detail view\n  softmaxDetailViewInfo.highlightI = i;\n  softmaxDetailViewStore.set(softmaxDetailViewInfo);\n\n  let logitLayer = svg.select('.logit-layer');\n  let logitLayerLower = svg.select('.underneath');\n  let intermediateLayer = svg.select('.intermediate-layer');\n\n  // Highlight the circle\n  logitLayer.select(`#logit-circle-${i}`)\n    .style('stroke-width', 2);\n\n  // Highlight the associated plus symbol\n  intermediateLayer.select(`#plus-symbol-clone-${i}`)\n    .style('opacity', 1)\n    .select('circle')\n    .style('fill', d => d.fill);\n  \n  // Raise the associated edge group\n  logitLayerLower.select(`#logit-lower-${i}`).raise();\n\n  // Highlight the associated edges\n  logitLayerLower.selectAll(`.softmax-abstract-edge-${i}`)\n    .style('stroke-width', 0.8)\n    .style('stroke', '#E0E0E0');\n\n  logitLayerLower.selectAll(`.softmax-edge-${i}`)\n    .style('stroke-width', 1)\n    .style('stroke', '#E0E0E0');\n  \n  logitLayerLower.selectAll(`.logit-output-edge-${i}`)\n    .style('stroke-width', 3)\n    .style('stroke', '#E0E0E0');\n\n  logitLayer.selectAll(`.logit-output-edge-${i}`)\n    .style('stroke-width', 3)\n    .style('stroke', '#E0E0E0');\n}\n\nconst logitCircleMouseLeaveHandler = (i) => {\n  // screenshot\n  // return;\n\n  // Update the hover info UI\n  hoverInfoStore.set({\n    show: false,\n    text: `Logit: ${formater(logits[i])}`\n  })\n\n  // Dehighlight the text in the detail view\n  softmaxDetailViewInfo.highlightI = -1;\n  softmaxDetailViewStore.set(softmaxDetailViewInfo);\n\n  let logitLayer = svg.select('.logit-layer');\n  let logitLayerLower = svg.select('.underneath');\n  let intermediateLayer = svg.select('.intermediate-layer');\n\n  // Restore the circle\n  logitLayer.select(`#logit-circle-${i}`)\n    .style('stroke-width', 1);\n\n  // Restore the associated plus symbol\n  intermediateLayer.select(`#plus-symbol-clone-${i}`)\n    .style('opacity', 0.2);\n\n  // Restore the associated edges\n  logitLayerLower.selectAll(`.softmax-abstract-edge-${i}`)\n    .style('stroke-width', 0.2)\n    .style('stroke', '#EDEDED');\n\n  logitLayerLower.selectAll(`.softmax-edge-${i}`)\n    .style('stroke-width', 0.2)\n    .style('stroke', '#F1F1F1');\n\n  logitLayerLower.selectAll(`.logit-output-edge-${i}`)\n    .style('stroke-width', 1.2)\n    .style('stroke', '#E5E5E5');\n  \n  logitLayer.selectAll(`.logit-output-edge-${i}`)\n    .style('stroke-width', 1.2)\n    .style('stroke', '#E5E5E5');\n}\n\n// This function is binded to the detail view in Cnn.svelte\nexport const softmaxDetailViewMouseOverHandler = (event) => {\n  logitCircleMouseOverHandler(event.detail.curI);\n}\n\n// This function is binded to the detail view in Cnn.svelte\nexport const softmaxDetailViewMouseLeaveHandler = (event) => {\n  logitCircleMouseLeaveHandler(event.detail.curI);\n}\n\nconst drawLogitLayer = (arg) => {\n  let curLayerIndex = arg.curLayerIndex,\n    moveX = arg.moveX,\n    softmaxLeftMid = arg.softmaxLeftMid,\n    selectedI = arg.selectedI,\n    intermediateX1 = arg.intermediateX1,\n    intermediateX2 = arg.intermediateX2,\n    pixelWidth = arg.pixelWidth,\n    pixelHeight = arg.pixelHeight,\n    topY = arg.topY,\n    bottomY = arg.bottomY,\n    softmaxX = arg.softmaxX,\n    middleGap = arg.middleGap,\n    middleRectHeight = arg.middleRectHeight,\n    symbolGroup = arg.symbolGroup,\n    symbolX = arg.symbolX,\n    flattenRange = arg.flattenRange;\n\n  let logitLayer = svg.select('.intermediate-layer')\n    .append('g')\n    .attr('class', 'logit-layer')\n    .raise();\n  \n  // Minotr layer ordering change\n  let tempClone = svg.select('.intermediate-layer')\n    .select('.flatten-layer')\n    .select('.plus-symbol')\n    .clone(true)\n    .attr('class', 'temp-clone-plus-symbol')\n    .attr('transform', `translate(${symbolX - moveX},\n      ${nodeCoordinate[curLayerIndex][selectedI].y + nodeLength / 2})`)\n    // Cool hack -> d3 clone doesnt clone events, make the front object pointer\n    // event transparent so users can trigger the underlying object's event!\n    .style('pointer-events', 'none')\n    .remove();\n\n  let tempPlusSymbol = logitLayer.append(() => tempClone.node());\n  \n  svg.select('.softmax-symbol').raise();\n\n  let logitLayerLower = svg.select('.underneath')\n    .append('g')\n    .attr('class', 'logit-layer-lower')\n    .lower();\n  \n  // Use circles to encode logit values\n  let centerX = softmaxLeftMid - moveX * 4 / 5;\n\n  // Get all logits\n  logits = [];\n  for (let i = 0; i < cnn[layerIndexDict['output']].length; i++) {\n    logits.push(cnn[layerIndexDict['output']][i].logit);\n  }\n\n  // Construct datatrainx color scale for the logit values\n  let logitColorScale = d3.scaleLinear()\n    .domain(d3.extent(logits))\n    .range([0.2, 1]);\n  \n  // Draw the current logit circle before animation\n  let logitRadius = 8;\n  logitLayer.append('circle')\n    .attr('class', 'logit-circle')\n    .attr('id', `logit-circle-${selectedI}`)\n    .attr('cx', centerX)\n    .attr('cy', nodeCoordinate[curLayerIndex - 1][selectedI].y + nodeLength / 2)\n    .attr('r', logitRadius)\n    .style('fill', layerColorScales.logit(logitColorScale(logits[selectedI])))\n    .style('cursor', 'crosshair')\n    .style('pointer-events', 'all')\n    .style('stroke', intermediateColor)\n    .on('mouseover', () => logitCircleMouseOverHandler(selectedI))\n    .on('mouseleave', () => logitCircleMouseLeaveHandler(selectedI))\n    .on('click', () => { d3.event.stopPropagation() });\n  \n  // Show the logit circle corresponding label\n  let softmaxDetailAnnotation = svg.select('.intermediate-layer-annotation')\n    .select('.softmax-detail-annoataion');\n\n  softmaxDetailAnnotation.select(`#logit-text-${selectedI}`)\n    .style('opacity', 1);\n\n  tempPlusSymbol.raise();\n\n  // Draw another line from plus symbol to softmax symbol\n  logitLayer.append('line')\n    .attr('class', `logit-output-edge-${selectedI}`)\n    .attr('x1', intermediateX2 - moveX + plusSymbolRadius * 2)\n    .attr('x2', softmaxX)\n    .attr('y1', nodeCoordinate[curLayerIndex - 1][selectedI].y + nodeLength / 2)\n    .attr('y2', nodeCoordinate[curLayerIndex - 1][selectedI].y + nodeLength / 2)\n    .style('fill', 'none')\n    .style('stroke', '#EAEAEA')\n    .style('stroke-width', '1.2')\n    .lower();\n\n  // Add the flatten to logit links\n  let linkData = [];\n  let flattenLength = cnn.flatten.length / cnn[1].length;\n  let underneathIs = [...Array(cnn[layerIndexDict['output']].length).keys()]\n    .filter(d => d != selectedI);\n  let curIIndex = 0;\n  let linkGen = d3.linkHorizontal()\n    .x(d => d.x)\n    .y(d => d.y);\n\n  const drawOneEdgeGroup = () => {\n    // Only draw the new group if it is in the softmax mode\n    if (!allowsSoftmaxAnimation) {\n      svg.select('.underneath')\n        .selectAll(`.logit-lower`)\n        .remove();\n      return;\n    }\n\n    let curI = underneathIs[curIIndex];\n\n    let curEdgeGroup = svg.select('.underneath')\n      .select(`#logit-lower-${curI}`);\n    \n    if (curEdgeGroup.empty()) {\n      curEdgeGroup = svg.select('.underneath')\n        .append('g')\n        .attr('class', 'logit-lower')\n        .attr('id', `logit-lower-${curI}`)\n        .style('opacity', 0);\n\n\n      // Hack: now show all edges, only draw 1/3 of the actual edges\n      for (let f = 0; f < flattenLength; f += 3) {\n        let loopFactors = [0, nodeCoordinate[curLayerIndex - 1].length - 1];\n        loopFactors.forEach(l => {\n          let factoredF = f + l * flattenLength;\n    \n          // Flatten -> output\n          linkData.push({\n            source: {x: intermediateX1 + pixelWidth + 3 - moveX,\n              y:  l === 0 ? topY + f * pixelHeight : bottomY + f * pixelHeight},\n            target: {x: intermediateX2 - moveX,\n              y: nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2},\n            index: factoredF,\n            weight: cnn.flatten[factoredF].outputLinks[curI].weight,\n            color: '#F1F1F1',\n            width: 0.5,\n            opacity: 1,\n            class: `softmax-edge-${curI}`\n          });\n        });\n      }\n\n      // Draw middle rect to logits\n      for (let vi = 0; vi < cnn[layerIndexDict['output']].length - 2; vi++) {\n        linkData.push({\n          source: {x: intermediateX1 + pixelWidth + 3 - moveX,\n            y: topY + flattenLength * pixelHeight + middleGap * (vi + 1) +\n            middleRectHeight * (vi + 0.5)},\n          target: {x: intermediateX2 - moveX,\n            y: nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2},\n          index: -1,\n          color: '#EDEDED',\n          width: 0.5,\n          opacity: 1,\n          class: `softmax-abstract-edge-${curI}`\n        });\n      }\n\n      // Render the edges on the underneath layer\n      curEdgeGroup.selectAll(`path.softmax-edge-${curI}`)\n        .data(linkData)\n        .enter()\n        .append('path')\n        .attr('class', d => d.class)\n        .attr('id', d => `edge-${d.name}`)\n        .attr('d', d => linkGen({source: d.source, target: d.target}))\n        .style('fill', 'none')\n        .style('stroke-width', d => d.width)\n        .style('stroke', d => d.color === undefined ? intermediateColor : d.color)\n        .style('opacity', d => d.opacity)\n        .style('pointer-events', 'none');\n    }\n    \n    let curNodeGroup = logitLayer.append('g')\n      .attr('class', `logit-layer-${curI}`)\n      .style('opacity', 0);\n    \n    // Draw the plus symbol\n    let symbolClone = symbolGroup.clone(true)\n      .style('opacity', 0);\n\n    // Change the style of the clone\n    symbolClone.attr('class', 'plus-symbol-clone')\n      .attr('id', `plus-symbol-clone-${curI}`)\n      .select('circle')\n      .datum({fill: gappedColorScale(layerColorScales.weight,\n        flattenRange, cnn[layerIndexDict['output']][curI].bias, 0.35)})\n      .style('pointer-events', 'none')\n      .style('fill', '#E5E5E5');\n\n    symbolClone.attr('transform', `translate(${symbolX},\n      ${nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2})`);\n    \n    // Draw the outter link using only merged path\n    let outputEdgeD1 = linkGen({\n      source: {\n        x: intermediateX2 - moveX + plusSymbolRadius * 2,\n        y: nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2\n      },\n      target: {\n        x: centerX + logitRadius,\n        y: nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2\n      }\n    });\n\n    let outputEdgeD2 = linkGen({\n      source: {\n        x: centerX + logitRadius,\n        y: nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2\n      },\n      target: {\n        x: softmaxX,\n        y: nodeCoordinate[curLayerIndex][selectedI].y + nodeLength / 2\n      }\n    });\n\n    // There are ways to combine these two paths into one. However, the animation\n    // for merged path is not continuous, so we use two saperate paths here.\n\n    let outputEdge1 = logitLayerLower.append('path')\n      .attr('class', `logit-output-edge-${curI}`)\n      .attr('d', outputEdgeD1)\n      .style('fill', 'none')\n      .style('stroke', '#EAEAEA')\n      .style('stroke-width', '1.2');\n\n    let outputEdge2 = logitLayerLower.append('path')\n      .attr('class', `logit-output-edge-${curI}`)\n      .attr('d', outputEdgeD2)\n      .style('fill', 'none')\n      .style('stroke', '#EAEAEA')\n      .style('stroke-width', '1.2');\n    \n    let outputEdgeLength1 = outputEdge1.node().getTotalLength();\n    let outputEdgeLength2 = outputEdge2.node().getTotalLength();\n    let totalLength = outputEdgeLength1 + outputEdgeLength2;\n    let totalDuration = hasInitialized ? 500 : 800;\n    let opacityDuration = hasInitialized ? 400 : 600;\n\n    outputEdge1.attr('stroke-dasharray', outputEdgeLength1 + ' ' + outputEdgeLength1)\n      .attr('stroke-dashoffset', outputEdgeLength1);\n    \n    outputEdge2.attr('stroke-dasharray', outputEdgeLength2 + ' ' + outputEdgeLength2)\n      .attr('stroke-dashoffset', outputEdgeLength2);\n\n    outputEdge1.transition('softmax-output-edge')\n      .duration(outputEdgeLength1 / totalLength * totalDuration)\n      .attr('stroke-dashoffset', 0);\n\n    outputEdge2.transition('softmax-output-edge')\n      .delay(outputEdgeLength1 / totalLength * totalDuration)\n      .duration(outputEdgeLength2 / totalLength * totalDuration)\n      .attr('stroke-dashoffset', 0);\n    \n    // Draw the logit circle\n    curNodeGroup.append('circle')\n      .attr('class', 'logit-circle')\n      .attr('id', `logit-circle-${curI}`)\n      .attr('cx', centerX)\n      .attr('cy', nodeCoordinate[curLayerIndex - 1][curI].y + nodeLength / 2)\n      .attr('r', 7)\n      .style('fill', layerColorScales.logit(logitColorScale(logits[curI])))\n      .style('stroke', intermediateColor)\n      .style('cursor', 'crosshair')\n      .on('mouseover', () => logitCircleMouseOverHandler(curI))\n      .on('mouseleave', () => logitCircleMouseLeaveHandler(curI))\n      .on('click', () => { d3.event.stopPropagation() });\n    \n    // Show the element in the detailed view\n    softmaxDetailViewInfo.startAnimation = {\n      i: curI,\n      duration: opacityDuration,\n      // Always show the animation\n      hasInitialized: false\n    };\n    softmaxDetailViewStore.set(softmaxDetailViewInfo);\n\n    // Show the elements with animation    \n    curNodeGroup.transition('softmax-edge')\n      .duration(opacityDuration)\n      .style('opacity', 1);\n\n    if ((selectedI < 3 && curI == 9) || (selectedI >= 3 && curI == 0)) {\n      // Show the hover text\n      softmaxDetailAnnotation.select('.softmax-detail-hover-annotation')\n        .transition('softmax-edge')\n        .duration(opacityDuration)\n        .style('opacity', 1);\n    }\n\n    softmaxDetailAnnotation.select(`#logit-text-${curI}`)\n      .transition('softmax-edge')\n      .duration(opacityDuration)\n      .style('opacity', 1);\n    \n    curEdgeGroup.transition('softmax-edge')\n      .duration(opacityDuration)\n      .style('opacity', 1)\n      .on('end', () => {\n        // Recursive animaiton\n        curIIndex ++;\n        if (curIIndex < underneathIs.length) {\n          linkData = [];\n          drawOneEdgeGroup();\n        } else {\n          hasInitialized = true;\n          softmaxDetailViewInfo.hasInitialized = true;\n          softmaxDetailViewStore.set(softmaxDetailViewInfo);\n        }\n      });\n    \n    symbolClone.transition('softmax-edge')\n      .duration(opacityDuration)\n      .style('opacity', 0.2);\n  }\n\n  // Show the softmax detail view\n  let anchorElement = svg.select('.intermediate-layer')\n    .select('.layer-label').node();\n  let pos = getMidCoords(svg, anchorElement);\n  let wholeSvg = d3.select('#cnn-svg');\n  let svgYMid = +wholeSvg.style('height').replace('px', '') / 2;\n  let detailViewTop = 100 + svgYMid - 192 / 2;\n\n  const detailview = document.getElementById('detailview');\n  detailview.style.top = `${detailViewTop}px`;\n  detailview.style.left = `${pos.left - 490 - 50}px`;\n  detailview.style.position = 'absolute';\n\n  softmaxDetailViewStore.set({\n    show: true,\n    logits: logits,\n    logitColors: logits.map(d => layerColorScales.logit(logitColorScale(d))),\n    selectedI: selectedI,\n    highlightI: -1,\n    outputName: classList[selectedI],\n    outputValue: cnn[layerIndexDict['output']][selectedI].output,\n    startAnimation: {i: -1, duration: 0, hasInitialized: hasInitialized}\n  })\n\n  drawOneEdgeGroup();\n\n  // Draw logit circle color scale\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: d3.extent(logits)[1] - d3.extent(logits)[0],\n    minMax: {min: d3.extent(logits)[0], max: d3.extent(logits)[1]},\n    group: logitLayer,\n    width: softmaxX - (intermediateX2 + plusSymbolRadius * 2 - moveX + 5),\n    gradientAppendingName: 'flatten-logit-gradient',\n    gradientGap: 0.1,\n    colorScale: layerColorScales.logit,\n    x: intermediateX2 + plusSymbolRadius * 2 - moveX + 5,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \n      nodeLength * 10\n  });\n\n  // Draw logit layer label\n  let logitLabel = logitLayer.append('g')\n    .attr('class', 'layer-label')\n    .classed('hidden', detailedMode)\n    .attr('transform', () => {\n      let x = centerX;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n      return `translate(${x}, ${y})`;\n    });\n\n  logitLabel.append('text')\n    .style('text-anchor', 'middle')\n    .style('dominant-baseline', 'middle')\n    .style('opacity', 0.8)\n    .style('font-weight', 800)\n    .text('logit');\n}\n\nconst removeLogitLayer = () => {\n  svg.select('.logit-layer').remove();\n  svg.select('.logit-layer-lower').remove();\n  svg.selectAll('.plus-symbol-clone').remove();\n\n  // Instead of removing the paths, we hide them, so it is faster to load in\n  // the future\n  svg.select('.underneath')\n    .selectAll('.logit-lower')\n    .style('opacity', 0);\n\n  softmaxDetailViewStore.set({\n      show: false,\n      logits: []\n  })\n}\n\nconst softmaxClicked = (arg) => {\n  let curLayerIndex = arg.curLayerIndex,\n    moveX = arg.moveX,\n    symbolX = arg.symbolX,\n    symbolY = arg.symbolY,\n    outputX = arg.outputX,\n    outputY = arg.outputY,\n    softmaxLeftMid = arg.softmaxLeftMid,\n    selectedI = arg.selectedI,\n    intermediateX1 = arg.intermediateX1,\n    intermediateX2 = arg.intermediateX2,\n    pixelWidth = arg.pixelWidth,\n    pixelHeight = arg.pixelHeight,\n    topY = arg.topY,\n    bottomY = arg.bottomY,\n    middleGap = arg.middleGap,\n    middleRectHeight = arg.middleRectHeight,\n    softmaxX = arg.softmaxX,\n    softmaxTextY = arg.softmaxTextY,\n    softmaxWidth = arg.softmaxWidth,\n    symbolGroup = arg.symbolGroup,\n    flattenRange = arg.flattenRange;\n\n  let duration = 600;\n  let centerX = softmaxLeftMid - moveX * 4 / 5;\n  d3.event.stopPropagation();\n\n  // Clean up the logit elemends before moving anything\n  if (isInSoftmax) {\n    allowsSoftmaxAnimationStore.set(false);\n    removeLogitLayer();\n  } else {\n    allowsSoftmaxAnimationStore.set(true);\n  }\n\n  // Move the overlay gradient\n  svg.select('.intermediate-layer-overlay')\n    .select('rect.overlay')\n    .transition('softmax')\n    .ease(d3.easeCubicInOut)\n    .duration(duration)\n    .attr('transform', `translate(${isInSoftmax ? 0 : -moveX}, ${0})`);\n\n  // Move the legends\n  svg.selectAll(`.intermediate-legend-${curLayerIndex - 1}`)\n    .each((d, i, g) => moveLegend(d, i, g, moveX, duration, isInSoftmax));\n\n  svg.select('.intermediate-layer')\n    .select(`.layer-label`)\n    .each((d, i, g) => moveLegend(d, i, g, moveX, duration, isInSoftmax));\n\n  svg.select('.intermediate-layer')\n    .select(`.layer-detailed-label`)\n    .each((d, i, g) => moveLegend(d, i, g, moveX, duration, isInSoftmax));\n\n  // Also move all layers on the left\n  for (let i = curLayerIndex - 1; i >= 0; i--) {\n    let curLayer = svg.select(`g#cnn-layer-group-${i}`);\n    let previousX = +curLayer.select('image').attr('x');\n    let newX = isInSoftmax ? previousX + moveX : previousX - moveX;\n    moveLayerX({\n      layerIndex: i,\n      targetX: newX,\n      disable: true,\n      delay: 0,\n      transitionName: 'softmax',\n      duration: duration\n    });\n  }\n\n  // Hide the sum up annotation\n  svg.select('.plus-annotation')\n    .transition('softmax')\n    .duration(duration)\n    .style('opacity', isInSoftmax ? 1 : 0)\n    .style('pointer-events', isInSoftmax ? 'all' : 'none');\n\n  // Hide the softmax annotation\n  let softmaxAnnotation = svg.select('.softmax-annotation')\n    .style('pointer-events', isInSoftmax ? 'all' : 'none');\n  \n  let softmaxDetailAnnotation = softmaxAnnotation.selectAll('.softmax-detail-annoataion')\n    .data([0])\n    .enter()\n    .append('g')\n    .attr('class', 'softmax-detail-annoataion');\n\n  // Remove the detailed annoatioan when quitting the detail view\n  if (isInSoftmax) {\n    softmaxAnnotation.selectAll('.softmax-detail-annoataion').remove();\n  }\n\n  softmaxAnnotation.select('.arrow-group')\n    .transition('softmax')\n    .duration(duration)\n    .style('opacity', isInSoftmax ? 1 : 0);\n\n  softmaxAnnotation.select('.annotation-text')\n    .style('cursor', 'help')\n    .style('pointer-events', 'all')\n    .on('click', () => {\n      d3.event.stopPropagation();\n      // Scroll to the article element\n      document.querySelector(`#article-softmax`).scrollIntoView({ \n        behavior: 'smooth' \n      });\n    })\n    .transition('softmax')\n    .duration(duration)\n    .style('opacity', isInSoftmax ? 1 : 0)\n    .on('end', () => {\n      if (!isInSoftmax) {\n        // Add new annotation for the softmax button\n        let textX = softmaxX + softmaxWidth / 2;\n        let textY = softmaxTextY - 10;\n\n        if (selectedI === 0) {\n          textY = softmaxTextY + 70;\n        }\n\n        let text = softmaxDetailAnnotation.append('text')\n          .attr('x', textX)\n          .attr('y', textY)\n          .attr('class', 'annotation-text softmax-detail-text')\n          .style('dominant-baseline', 'baseline')\n          .style('text-anchor', 'middle')\n          .text('Normalize ');\n        \n        text.append('tspan') \n          .attr('dx', 1)\n          .style('fill', '#E56014')\n          .text('logits');\n        \n        text.append('tspan')\n          .attr('dx', 1)\n          .text(' into');\n\n        text.append('tspan')\n          .attr('x', textX)\n          .attr('dy', '1.1em')\n          .text('class probabilities');\n\n        if (selectedI === 0) {\n          drawArrow({\n            group: softmaxDetailAnnotation,\n            sx: softmaxX + softmaxWidth / 2 - 5,\n            sy: softmaxTextY + 44,\n            tx: softmaxX + softmaxWidth / 2,\n            ty: textY - 12,\n            dr: 50,\n            hFlip: true,\n            marker: 'marker-alt'\n          });\n        } else {\n          drawArrow({\n            group: softmaxDetailAnnotation,\n            sx: softmaxX + softmaxWidth / 2 - 5,\n            sy: softmaxTextY + 4,\n            tx: softmaxX + softmaxWidth / 2,\n            ty: symbolY - plusSymbolRadius - 4,\n            dr: 50,\n            hFlip: true,\n            marker: 'marker-alt'\n          });\n        }\n\n        // Add annotation for the logit layer label\n        textX = centerX + 45;\n        textY = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n        let arrowTX = centerX + 20;\n        let arrowTY = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n\n        softmaxDetailAnnotation.append('g')\n          .attr('class', 'layer-detailed-label')\n          .attr('transform', () => {\n            let x = centerX;\n            let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 5;\n            return `translate(${x}, ${y})`;\n          })\n          .classed('hidden', !detailedMode)\n          .append('text')\n          // .attr('x', centerX)\n          // .attr('y',  (svgPaddings.top + vSpaceAroundGap) / 2 - 6)\n          .style('opacity', 0.7)\n          .style('dominant-baseline', 'middle')\n          .style('font-size', '12px')\n          .style('font-weight', '800')\n          .append('tspan')\n          .attr('x', 0)\n          .text('logit')\n          .append('tspan')\n          .attr('x', 0)\n          .style('font-size', '8px')\n          .style('font-weight', 'normal')\n          .attr('dy', '1.5em')\n          .text('(10)');\n\n        softmaxDetailAnnotation.append('text')\n          .attr('class', 'annotation-text')\n          .attr('x', textX)\n          .attr('y', (svgPaddings.top + vSpaceAroundGap) / 2 + 3)\n          .style('text-anchor', 'start')\n          .text('Before')\n          .append('tspan')\n          .attr('x', textX)\n          .attr('dy', '1em')\n          .text('normalization')\n\n\n        drawArrow({\n          group: softmaxDetailAnnotation,\n          tx: arrowTX,\n          ty: arrowTY,\n          sx: textX - 6,\n          sy: textY + 2,\n          dr: 60,\n          hFlip: false,\n          marker: 'marker-alt'\n        });\n\n        softmaxDetailAnnotation.append('text')\n          .attr('class', 'annotation-text')\n          .attr('x', nodeCoordinate[layerIndexDict['output']][0].x - 35)\n          .attr('y', (svgPaddings.top + vSpaceAroundGap) / 2 + 3)\n          .style('text-anchor', 'end')\n          .text('After')\n          .append('tspan')\n          .attr('x', nodeCoordinate[layerIndexDict['output']][0].x - 35)\n          .attr('dy', '1em')\n          .text('normalization')\n\n        drawArrow({\n          group: softmaxDetailAnnotation,\n          tx: nodeCoordinate[layerIndexDict['output']][0].x - 8,\n          ty: arrowTY,\n          sx: nodeCoordinate[layerIndexDict['output']][0].x - 27,\n          sy: textY + 2,\n          dr: 60,\n          hFlip: true,\n          marker: 'marker-alt'\n        });\n\n        console.log(nodeCoordinate[curLayerIndex - 1].length);\n        // Add annotation for the logit circle\n        for (let i = 0; i < nodeCoordinate[curLayerIndex - 1].length; i++) {\n          softmaxDetailAnnotation.append('text')\n            .attr('x', centerX)\n            .attr('y', nodeCoordinate[curLayerIndex - 1][i].y + nodeLength / 2 + 8)\n            .attr('class', 'annotation-text softmax-detail-text')\n            .attr('id', `logit-text-${i}`)\n            .style('text-anchor', 'middle')\n            .style('dominant-baseline', 'hanging')\n            .style('opacity', 0)\n            .text(`${classList[i]}`);\n        }\n\n        let hoverTextGroup = softmaxDetailAnnotation.append('g')\n          .attr('class', 'softmax-detail-hover-annotation')\n          .style('opacity', 0);\n\n        textX = centerX + 50;\n        textY = nodeCoordinate[curLayerIndex - 1][0].y + nodeLength / 2;\n\n        if (selectedI < 3) {\n          textY = nodeCoordinate[curLayerIndex - 1][nodeCoordinate[curLayerIndex - 1].length - 1].y + nodeLength / 2;\n        }\n\n        // Add annotation to prompt user to check the logit value\n        let hoverText = hoverTextGroup.append('text')\n          .attr('x', textX)\n          .attr('y', textY)\n          .attr('class', 'annotation-text softmax-detail-text softmax-hover-text')\n          .style('text-anchor', 'start')\n          .style('dominant-baseline', 'baseline')\n          .append('tspan')\n          .style('font-weight', 700)\n          .style('dominant-baseline', 'baseline')\n          .text(`Hover over `)\n          .append('tspan')\n          .style('font-weight', 400)\n          .style('dominant-baseline', 'baseline')\n          .text('to see');\n        \n        hoverText.append('tspan')\n          .style('dominant-baseline', 'baseline')\n          .attr('x', textX)\n          .attr('dy', '1em')\n          .text('its ');\n\n        hoverText.append('tspan')\n          .style('dominant-baseline', 'baseline')\n          .attr('dx', 1)\n          .style('fill', '#E56014')\n          .text('logit');\n        \n        hoverText.append('tspan')\n          .style('dominant-baseline', 'baseline')\n          .attr('dx', 1)\n          .text(' value');\n        \n        drawArrow({\n          group: hoverTextGroup,\n          tx: centerX + 15,\n          ty: textY,\n          sx: textX - 8,\n          sy: textY + 2,\n          dr: 60,\n          hFlip: false\n        });\n      }\n    })\n\n  // Hide the annotation\n  svg.select('.flatten-annotation')\n    .transition('softmax')\n    .duration(duration)\n    .style('opacity', isInSoftmax ? 1 : 0)\n    .style('pointer-events', isInSoftmax ? 'all' : 'none');\n\n  // Move the left part of faltten layer elements\n  let flattenLeftPart = svg.select('.flatten-layer-left');\n  flattenLeftPart.transition('softmax')\n    .duration(duration)\n    .ease(d3.easeCubicInOut)\n    .attr('transform', `translate(${isInSoftmax ? 0 : -moveX}, ${0})`)\n    .on('end', () => {\n      // Add the logit layer\n      if (!isInSoftmax) {\n        let logitArg = {\n          curLayerIndex: curLayerIndex,\n          moveX: moveX,\n          softmaxLeftMid: softmaxLeftMid,\n          selectedI: selectedI,\n          intermediateX1: intermediateX1,\n          intermediateX2: intermediateX2,\n          pixelWidth: pixelWidth,\n          pixelHeight: pixelHeight,\n          topY: topY,\n          bottomY: bottomY,\n          middleGap: middleGap,\n          middleRectHeight: middleRectHeight,\n          softmaxX: softmaxX,\n          symbolGroup: symbolGroup,\n          symbolX: symbolX,\n          flattenRange: flattenRange\n        };\n        drawLogitLayer(logitArg);\n      }\n\n      // Redraw the line from the plus symbol to the output node\n      if (!isInSoftmax) {\n        let newLine = flattenLeftPart.select('.edge-group')\n          .append('line')\n          .attr('class', 'symbol-output-line')\n          .attr('x1', symbolX)\n          .attr('y1', symbolY)\n          .attr('x2', outputX + moveX)\n          .attr('y2', outputY)\n          .style('stroke-width', 1.2)\n          .style('stroke', '#E5E5E5')\n          .style('opacity', 0);\n        \n        newLine.transition('softmax')\n          .delay(duration / 3)\n          .duration(duration * 2 / 3)\n          .style('opacity', 1);\n      } else {\n        flattenLeftPart.select('.symbol-output-line').remove();\n      }\n      \n      isInSoftmax = !isInSoftmax;\n      isInSoftmaxStore.set(isInSoftmax);\n    })\n}\n\n/**\n * Draw the flatten layer before output layer\n * @param {number} curLayerIndex Index of the selected layer\n * @param {object} d Bounded d3 data\n * @param {number} i Index of the selected node\n * @param {number} width CNN group width\n * @param {number} height CNN group height\n */\n \nexport const drawFlatten = (curLayerIndex, d, i, width, height) => {\n  // Show the output legend\n  svg.selectAll('.output-legend')\n    .classed('hidden', false);\n\n  let maxLayer = nodeCoordinate[curLayerIndex - 1].length - 1;\n  let pixelWidth = nodeLength / 2;\n  let pixelHeight = 1.1;\n  let totalLength = (2 * nodeLength +\n    5.5 * hSpaceAroundGap * gapRatio + pixelWidth);\n  let leftX = nodeCoordinate[curLayerIndex][0].x - totalLength;\n  let intermediateGap = (hSpaceAroundGap * gapRatio * 4) / 2;\n  const minimumGap = 20;\n  let linkGen = d3.linkHorizontal()\n    .x(d => d.x)\n    .y(d => d.y);\n\n  // Hide the edges\n  svg.select('g.edge-group')\n    .style('visibility', 'hidden');\n\n  // Move the previous layer\n  moveLayerX({layerIndex: curLayerIndex - 1, targetX: leftX,\n    disable: true, delay: 0});\n\n  // Disable the current layer (output layer)\n  moveLayerX({layerIndex: curLayerIndex,\n    targetX: nodeCoordinate[curLayerIndex][0].x, disable: true,\n    delay: 0, opacity: 0.15, specialIndex: i});\n  \n  // Compute the gap in the left shrink region\n  let leftEnd = leftX - hSpaceAroundGap;\n  let leftGap = (leftEnd - nodeCoordinate[0][0].x - 10 * nodeLength) / 10;\n\n  // Different from other intermediate view, we push the left part dynamically\n  // 1. If there is enough space, we fix the first layer position and move all\n  // other layers;\n  // 2. If there is not enough space, we maintain the minimum gap and push all\n  // left layers to the left (could be out-of-screen)\n  if (leftGap > minimumGap) {\n    // Move the left layers\n    for (let i = 0; i < curLayerIndex - 1; i++) {\n      let curX = nodeCoordinate[0][0].x + i * (nodeLength + leftGap);\n      moveLayerX({layerIndex: i, targetX: curX, disable: true, delay: 0});\n    }\n  } else {\n    leftGap = minimumGap;\n    let curLeftBound = leftX - leftGap * 2 - nodeLength;\n    // Move the left layers\n    for (let i = curLayerIndex - 2; i >= 0; i--) {\n      moveLayerX({layerIndex: i, targetX: curLeftBound, disable: true, delay: 0});\n      curLeftBound = curLeftBound - leftGap - nodeLength;\n    }\n  }\n\n  // Add an overlay\n  let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 1},\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\n  addOverlayGradient('overlay-gradient-left', stops);\n\n  let intermediateLayerOverlay = svg.append('g')\n    .attr('class', 'intermediate-layer-overlay');\n\n  intermediateLayerOverlay.append('rect')\n    .attr('class', 'overlay')\n    .style('fill', 'url(#overlay-gradient-left)')\n    .style('stroke', 'none')\n    .attr('width', leftX + svgPaddings.left - (leftGap * 2) + 3)\n    .attr('height', height + svgPaddings.top + svgPaddings.bottom)\n    .attr('x', -svgPaddings.left)\n    .attr('y', 0)\n    .style('opacity', 0);\n  \n  intermediateLayerOverlay.selectAll('rect.overlay')\n    .transition('move')\n    .duration(800)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n\n  // Add the intermediate layer\n  let intermediateLayer = svg.append('g')\n    .attr('class', 'intermediate-layer')\n    .style('opacity', 0);\n  \n  let intermediateX1 = leftX + nodeLength + intermediateGap;\n  let intermediateX2 = intermediateX1 + intermediateGap + pixelWidth;\n  let range = cnnLayerRanges[selectedScaleLevel][curLayerIndex - 1];\n  let colorScale = layerColorScales.conv;\n  let flattenLength = cnn.flatten.length / cnn[1].length;\n  let linkData = [];\n\n  let flattenLayer = intermediateLayer.append('g')\n    .attr('class', 'flatten-layer');\n  \n  let flattenLayerLeftPart = flattenLayer.append('g')\n    .attr('class', 'flatten-layer-left');\n\n  let topY = nodeCoordinate[curLayerIndex - 1][0].y;\n  let bottomY = nodeCoordinate[curLayerIndex - 1][maxLayer].y + nodeLength -\n        flattenLength * pixelHeight;\n  \n  // Compute the pre-layer gap\n  let preLayerDimension = cnn[curLayerIndex - 1][0].output.length;\n  let preLayerGap = nodeLength / (2 * preLayerDimension);\n\n  // Compute bounding box length\n  let boundingBoxLength = nodeLength / preLayerDimension;\n\n  // Compute the weight color scale\n  let flattenExtent = d3.extent(cnn.flatten.slice(flattenLength)\n    .map(d => d.outputLinks[i].weight)\n    .concat(cnn.flatten.slice(9 * flattenLength, 10 * flattenLength)\n      .map(d => d.outputLinks[i].weight)));\n\n  let flattenRange = 2 * (Math.round(\n    Math.max(...flattenExtent.map(Math.abs)) * 1000) / 1000);\n\n  let flattenMouseOverHandler = (d) => {\n    let index = d.index;\n    // Screenshot\n    // console.log(index);\n\n    // Update the hover info UI\n    if (d.weight === undefined) {\n      hoverInfo = {\n        show: true,\n        text: `Pixel value: ${formater(flattenFactoredFDict[index])}`\n      };\n    } else {\n      hoverInfo = {\n        show: true,\n        text: `Weight: ${formater(d.weight)}`\n      };\n    }\n    hoverInfoStore.set(hoverInfo);\n\n    flattenLayerLeftPart.select(`#edge-flatten-${index}`)\n      .raise()\n      .style('stroke', intermediateColor)\n      .style('stroke-width', 1);\n\n    flattenLayerLeftPart.select(`#edge-flatten-${index}-output`)\n      .raise()\n      .style('stroke-width', 1)\n      .style('stroke', da => gappedColorScale(layerColorScales.weight,\n        flattenRange, da.weight, 0.1));\n\n    flattenLayerLeftPart.select(`#bounding-${index}`)\n      .raise()\n      .style('opacity', 1);\n  }\n\n  let flattenMouseLeaveHandler = (d) => {\n    let index = d.index;\n\n    // screenshot\n    // if (index === 32) {return;}\n\n    // Update the hover info UI\n    if (d.weight === undefined) {\n      hoverInfo = {\n        show: false,\n        text: `Pixel value: ${formater(flattenFactoredFDict[index])}`\n      };\n    } else {\n      hoverInfo = {\n        show: false,\n        text: `Weight: ${formater(d.weight)}`\n      };\n    }\n    hoverInfoStore.set(hoverInfo);\n\n    flattenLayerLeftPart.select(`#edge-flatten-${index}`)\n      .style('stroke-width', 0.6)\n      .style('stroke', '#E5E5E5')\n\n    flattenLayerLeftPart.select(`#edge-flatten-${index}-output`)\n      .style('stroke-width', 0.6)\n      .style('stroke', da => gappedColorScale(layerColorScales.weight,\n        flattenRange, da.weight, 0.35));\n\n    flattenLayerLeftPart.select(`#bounding-${index}`)\n      .raise()\n      .style('opacity', 0);\n  }\nconsole.log(flattenLength);\n  flattenFactoredFDict = {};\n  for (let f = 0; f < flattenLength; f++) {\n    let loopFactors = [0, maxLayer];\n    loopFactors.forEach(l => {\n      let factoredF = f + l * flattenLength;\n      flattenFactoredFDict[factoredF] = cnn.flatten[factoredF].output;\n      flattenLayerLeftPart.append('rect')\n        .attr('x', intermediateX1)\n        .attr('y', l === 0 ? topY + f * pixelHeight : bottomY + f * pixelHeight)\n        .attr('width', pixelWidth)\n        .attr('height', pixelHeight)\n        .style('cursor', 'crosshair')\n        .style('fill', colorScale((cnn.flatten[factoredF].output + range / 2) / range))\n        .on('mouseover', () => flattenMouseOverHandler({index: factoredF}))\n        .on('mouseleave', () => flattenMouseLeaveHandler({index: factoredF}))\n        .on('click', () => { d3.event.stopPropagation() });\n\n      // Flatten -> output\n      linkData.push({\n        source: {x: intermediateX1 + pixelWidth + 3,\n          y:  l === 0 ? topY + f * pixelHeight : bottomY + f * pixelHeight},\n        target: {x: intermediateX2,\n          //nodeCoordinate[curLayerIndex][i].x - nodeLength,\n          y: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2},\n        index: factoredF,\n        weight: cnn.flatten[factoredF].outputLinks[i].weight,\n        name: `flatten-${factoredF}-output`,\n        color: gappedColorScale(layerColorScales.weight,\n          flattenRange, cnn.flatten[factoredF].outputLinks[i].weight, 0.35),\n        width: 0.6,\n        opacity: 1,\n        class: `flatten-output`\n      });\n\n      // Pre-layer -> flatten\n      let row = Math.floor(f / preLayerDimension);\n      linkData.push({\n        target: {x: intermediateX1 - 3,\n          y:  l === 0 ? topY + f * pixelHeight : bottomY + f * pixelHeight},\n        source: {x: leftX + nodeLength + 3,\n          y: nodeCoordinate[curLayerIndex - 1][l].y + (2 * row + 1) * preLayerGap},\n        index: factoredF,\n        name: `flatten-${factoredF}`,\n        color: '#E5E5E5',\n        // color: gappedColorScale(layerColorScales.conv,\n        //   2 * Math.max(Math.abs(cnnLayerMinMax[10].max), Math.abs(cnnLayerMinMax[10].min)),\n        //   cnn.flatten[factoredF].output, 0.2),\n        width: 0.6,\n        opacity: 1,\n        class: `flatten`\n      });\n\n      // Add original pixel bounding box\n      let loc = cnn.flatten[factoredF].inputLinks[0].weight;\n      flattenLayerLeftPart.append('rect')\n        .attr('id', `bounding-${factoredF}`)\n        .attr('class', 'flatten-bounding')\n        .attr('x', leftX + loc[1] * boundingBoxLength)\n        .attr('y', nodeCoordinate[curLayerIndex - 1][l].y + loc[0] * boundingBoxLength)\n        .attr('width', boundingBoxLength)\n        .attr('height', boundingBoxLength)\n        .style('fill', 'none')\n        .style('stroke', intermediateColor)\n        .style('stroke-length', '0.5')\n        .style('pointer-events', 'all')\n        .style('cursor', 'crosshair')\n        .style('opacity', 0)\n        .on('mouseover', () => flattenMouseOverHandler({index: factoredF}))\n        .on('mouseleave', () => flattenMouseLeaveHandler({index: factoredF}))\n        .on('click', () => {d3.event.stopPropagation()});\n    }) \n  }\n  \n  // Use abstract symbol to represent the flatten nodes in between (between\n  // the first and the last nodes)\n  // Compute the average value of input node and weights\n  let meanValues = [];\n  for (let n = 1; n < cnn[curLayerIndex - 1].length - 1; n++) {\n    /*\n    let meanOutput = d3.mean(cnn.flatten.slice(flattenLength * n,\n      flattenLength * (n + 1)).map(d => d.output));\n    let meanWeight= d3.mean(cnn.flatten.slice(flattenLength * n,\n      flattenLength * (n + 1)).map(d => d.outputLinks[i].weight));\n    meanValues.push({index: n, output: meanOutput, weight: meanWeight});\n    */\n    meanValues.push({index: n});\n  }\n\n  // Compute the middle gap\n  let middleGap = 5;\n  let middleRectHeight = (10 * nodeLength + (10 - 1) * vSpaceAroundGap -\n    pixelHeight * flattenLength * 2 - 5 * (8 + 1)) / 8;\n\n  // Add middle nodes\n  meanValues.forEach((v, vi) => {\n    // Add datatrainx small rectangle\n    flattenLayerLeftPart.append('rect')\n      .attr('x', intermediateX1 + pixelWidth / 4)\n      .attr('y', topY + flattenLength * pixelHeight + middleGap * (vi + 1) +\n        middleRectHeight * vi)\n      .attr('width', pixelWidth / 2)\n      .attr('height', middleRectHeight)\n      // .style('fill', colorScale((v.output + range / 2) / range));\n      .style('fill', '#E5E5E5');\n    \n    // Add datatrainx triangle next to the input node\n    flattenLayerLeftPart.append('polyline')\n      .attr('points',\n        `${leftX + nodeLength + 3}\n        ${nodeCoordinate[curLayerIndex - 1][v.index].y},\n        ${leftX + nodeLength + 10}\n        ${nodeCoordinate[curLayerIndex - 1][v.index].y + nodeLength / 2},\n        ${leftX + nodeLength + 3}\n        ${nodeCoordinate[curLayerIndex - 1][v.index].y + nodeLength}`)\n      .style('fill', '#E5E5E5')\n      .style('opacity', 1);\n    \n    // Input -> flatten\n    linkData.push({\n      source: {x: leftX + nodeLength + 10,\n        y: nodeCoordinate[curLayerIndex - 1][v.index].y + nodeLength / 2},\n      target: {x: intermediateX1 - 3,\n        y: topY + flattenLength * pixelHeight + middleGap * (vi + 1) +\n          middleRectHeight * (vi + 0.5)},\n      index: -1,\n      width: 1,\n      opacity: 1,\n      name: `flatten-abstract-${v.index}`,\n      color: '#E5E5E5',\n      class: `flatten-abstract`\n    });\n\n    // Flatten -> output\n    linkData.push({\n      source: {x: intermediateX1 + pixelWidth + 3,\n      y: topY + flattenLength * pixelHeight + middleGap * (vi + 1) +\n        middleRectHeight * (vi + 0.5)},\n      target: {x: intermediateX2,\n      y: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2},\n      index: -1,\n      name: `flatten-abstract-${v.index}-output`,\n      // color: gappedColorScale(layerColorScales.weight, flattenRange,\n      //   v.weight, 0.35),\n      color: '#E5E5E5',\n      weight: v.weight,\n      width: 1,\n      opacity: 1,\n      class: `flatten-abstract-output`\n    });\n  })\n\n  // Draw the plus operation symbol\n  let symbolX = intermediateX2 + plusSymbolRadius;\n  let symbolY = nodeCoordinate[curLayerIndex][i].y + nodeLength / 2;\n  let symbolRectHeight = 1;\n  let symbolGroup = flattenLayerLeftPart.append('g')\n    .attr('class', 'plus-symbol')\n    .attr('transform', `translate(${symbolX}, ${symbolY})`);\n  \n  symbolGroup.append('rect')\n    .attr('x', -plusSymbolRadius)\n    .attr('y', -plusSymbolRadius)\n    .attr('width', plusSymbolRadius * 2)\n    .attr('height', plusSymbolRadius * 2)\n    .attr('rx', 3)\n    .attr('ry', 3)\n    .style('fill', 'none')\n    .style('stroke', intermediateColor);\n  \n  symbolGroup.append('rect')\n    .attr('x', -(plusSymbolRadius - 3))\n    .attr('y', -symbolRectHeight / 2)\n    .attr('width', 2 * (plusSymbolRadius - 3))\n    .attr('height', symbolRectHeight)\n    .style('fill', intermediateColor);\n\n  symbolGroup.append('rect')\n    .attr('x', -symbolRectHeight / 2)\n    .attr('y', -(plusSymbolRadius - 3))\n    .attr('width', symbolRectHeight)\n    .attr('height', 2 * (plusSymbolRadius - 3))\n    .style('fill', intermediateColor);\n\n  // Place the bias rectangle below the plus sign if user clicks the first\n  // conv node (no need now, since we added annotaiton for softmax to make it\n  // look better aligned)\n  // Add bias symbol to the plus symbol\n  symbolGroup.append('circle')\n    .attr('cx', 0)\n    .attr('cy', -nodeLength / 2 - 0.5 * kernelRectLength)\n    .attr('r', kernelRectLength * 1.5)\n    .style('stroke', intermediateColor)\n    .style('cursor', 'crosshair')\n    .style('fill', gappedColorScale(layerColorScales.weight,\n        flattenRange, d.bias, 0.35))\n    .on('mouseover', () => {\n      hoverInfoStore.set( {show: true, text: `Bias: ${formater(d.bias)}`} );\n    })\n    .on('mouseleave', () => {\n      hoverInfoStore.set( {show: false, text: `Bias: ${formater(d.bias)}`} );\n    })\n    .on('click', () => { d3.event.stopPropagation(); });\n  \n  // Link from bias to the plus symbol\n  symbolGroup.append('path')\n    .attr('d', linkGen({\n      source: { x: 0, y: 0 },\n      target: { x: 0, y: -nodeLength / 2 - 0.5 * kernelRectLength }\n    }))\n    .attr('id', 'bias-plus')\n    .attr('stroke-width', 1.2)\n    .attr('stroke', '#E5E5E5')\n    .lower();\n\n  // Link from the plus symbol to the output\n  linkData.push({\n    source: getOutputKnot({x: intermediateX2 + 2 * plusSymbolRadius - nodeLength,\n      y: nodeCoordinate[curLayerIndex][i].y}),\n    target: getInputKnot({x: nodeCoordinate[curLayerIndex][i].x - 3,\n      y: nodeCoordinate[curLayerIndex][i].y}),\n    name: `symbol-output`,\n    width: 1.2,\n    color: '#E5E5E5'\n  });\n\n  // Draw softmax operation symbol\n  let softmaxWidth = 55;\n  let emptySpace = ((totalLength - 2 * nodeLength - 2 * intermediateGap)\n    - softmaxWidth) / 2;\n  let symbolEndX = intermediateX2 + plusSymbolRadius * 2;\n  let softmaxX = emptySpace + symbolEndX;\n  let softmaxLeftMid = emptySpace / 2 + symbolEndX;\n  let softmaxTextY = nodeCoordinate[curLayerIndex][i].y - 2 * kernelRectLength - 6;\n  let moveX = (intermediateX2 - (intermediateX1 + pixelWidth + 3)) * 2 / 3;\n\n  let softmaxArg = {\n    curLayerIndex: curLayerIndex,\n    moveX: moveX,\n    symbolX: symbolX,\n    symbolY: symbolY,\n    outputX: nodeCoordinate[curLayerIndex][i].x,\n    outputY: symbolY,\n    softmaxLeftMid: softmaxLeftMid,\n    selectedI: i,\n    intermediateX1: intermediateX1,\n    intermediateX2: intermediateX2,\n    pixelWidth: pixelWidth,\n    pixelHeight: pixelHeight,\n    topY: topY,\n    bottomY: bottomY,\n    middleGap: middleGap,\n    middleRectHeight: middleRectHeight,\n    softmaxX: softmaxX,\n    softmaxWidth: softmaxWidth,\n    softmaxTextY: softmaxTextY,\n    symbolGroup: symbolGroup,\n    flattenRange: flattenRange\n  };\n\n  let softmaxSymbol = intermediateLayer.append('g')\n    .attr('class', 'softmax-symbol')\n    .attr('transform', `translate(${softmaxX}, ${symbolY})`)\n    .style('pointer-event', 'all')\n    .style('cursor', 'pointer')\n    .on('click', () => softmaxClicked(softmaxArg));\n  \n  softmaxSymbol.append('rect')\n    .attr('x', 0)\n    .attr('y', -plusSymbolRadius)\n    .attr('width', softmaxWidth)\n    .attr('height', plusSymbolRadius * 2)\n    .attr('stroke', intermediateColor)\n    .attr('rx', 2)\n    .attr('ry', 2)\n    .attr('fill', '#FAFAFA');\n  \n  softmaxSymbol.append('text')\n    .attr('x', 5)\n    .attr('y', 1)\n    .style('dominant-baseline', 'middle')\n    .style('font-size', '12px')\n    .style('opacity', 0.5)\n    .text('softmax');\n\n  // Draw the layer label\n  let layerLabel = intermediateLayer.append('g')\n    .attr('class', 'layer-label')\n    .classed('hidden', detailedMode)\n    .attr('transform', () => {\n      let x = leftX + nodeLength + (4 * hSpaceAroundGap * gapRatio +\n        pixelWidth) / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\n      return `translate(${x}, ${y})`;\n    })\n    .style('cursor', 'help')\n    .on('click', () => {\n      d3.event.stopPropagation();\n      // Scroll to the article element\n      document.querySelector(`#article-flatten`).scrollIntoView({ \n        behavior: 'smooth' \n      });\n    });\n  \n  layerLabel.append('text')\n    .style('dominant-baseline', 'middle')\n    .style('opacity', 0.8)\n    .style('font-weight', 800)\n    .text('flatten');\n\n  let svgHeight = Number(d3.select('#cnn-svg').style('height').replace('px', '')) + 150;\n\n  let detailedLabelGroup = intermediateLayer.append('g')\n    .attr('transform', () => {\n      let x = leftX + nodeLength + (4 * hSpaceAroundGap * gapRatio + pixelWidth) / 2;\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 5;\n      return `translate(${x}, ${y})`;\n    })\n    .attr('class', 'layer-detailed-label')\n    .classed('hidden', !detailedMode)\n    .style('cursor', 'help')\n    .on('click', () => {\n      d3.event.stopPropagation();\n      // Scroll to the article element\n      let anchor = document.querySelector(`#article-flatten`);\n      //scroll.animateScroll(anchor);\n    });\n\n  detailedLabelGroup.append('title')\n    .text('Move to article section');\n\n  let detailedLabelText = detailedLabelGroup.append('text')\n    .style('text-anchor', 'middle')\n    .style('dominant-baseline', 'middle')\n    .style('opacity', '0.7')\n    .style('font-weight', 800)\n    .append('tspan')\n    .text('flatten');\n  \n  let dimension = cnn[layerIndexDict['max_pool_2']].length * \n    cnn[layerIndexDict['max_pool_2']][0].output.length *\n    cnn[layerIndexDict['max_pool_2']][0].output[0].length;\n\n  detailedLabelText.append('tspan')\n    .attr('x', 0)\n    .attr('dy', '1.5em')\n    .style('font-size', '8px')\n    .style('font-weight', 'normal')\n    .text(`(${dimension})`);\n\n  // Add edges between nodes\n  let edgeGroup = flattenLayerLeftPart.append('g')\n    .attr('class', 'edge-group')\n    .lower();\n\n  edgeGroup.selectAll('path')\n    .data(linkData)\n    .enter()\n    .append('path')\n    .attr('class', d => d.class)\n    .attr('id', d => `edge-${d.name}`)\n    .attr('d', d => linkGen({source: d.source, target: d.target}))\n    .style('fill', 'none')\n    .style('stroke-width', d => d.width)\n    .style('stroke', d => d.color === undefined ? intermediateColor : d.color)\n    .style('opacity', d => d.opacity);\n\n  edgeGroup.selectAll('path.flatten-abstract-output')\n    .lower();\n\n  edgeGroup.selectAll('path.flatten,path.flatten-output')\n    .style('cursor', 'crosshair')\n    .style('pointer-events', 'all')\n    .on('mouseover', flattenMouseOverHandler)\n    .on('mouseleave', flattenMouseLeaveHandler)\n    .on('click', () => { d3.event.stopPropagation() });\n  \n  // Add legend\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: range,\n    minMax: cnnLayerMinMax[10],\n    group: intermediateLayer,\n    width: intermediateGap + nodeLength - 3,\n    x: leftX,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap +\n      nodeLength * 10\n  });\n\n  drawIntermediateLayerLegend({\n    legendHeight: 5,\n    curLayerIndex: curLayerIndex,\n    range: flattenRange,\n    minMax: {min: flattenExtent[0], max: flattenExtent[1]},\n    group: intermediateLayer,\n    width: intermediateGap - 3 - 5,\n    gradientAppendingName: 'flatten-weight-gradient',\n    gradientGap: 0.1,\n    colorScale: layerColorScales.weight,\n    x: leftX + intermediateGap + nodeLength + pixelWidth + 3,\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap +\n      nodeLength * 10\n  });\n\n  // Add annotation to the intermediate layer\n  let intermediateLayerAnnotation = svg.append('g')\n    .attr('class', 'intermediate-layer-annotation')\n    .style('opacity', 0);\n\n  // Add annotation for the sum operation\n  let plusAnnotation = intermediateLayerAnnotation.append('g')\n    .attr('class', 'plus-annotation');\n  \n  // let textX = nodeCoordinate[curLayerIndex][i].x - 50;\n  let textX = intermediateX2;\n  let textY = nodeCoordinate[curLayerIndex][i].y + nodeLength +\n    kernelRectLength * 3;\n  let arrowSY = nodeCoordinate[curLayerIndex][i].y + nodeLength +\n    kernelRectLength * 2;\n  let arrowTY = nodeCoordinate[curLayerIndex][i].y + nodeLength / 2 +\n    plusSymbolRadius;\n\n  if (i == 9) {\n    textY -= 110;\n    arrowSY -= 70;\n    arrowTY -= 18;\n  }\n\n  let plusText = plusAnnotation.append('text')\n    .attr('x', textX)\n    .attr('y', textY)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', 'middle');\n  \n  plusText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text('Add up all products');\n  \n  plusText.append('tspan')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .style('dominant-baseline', 'hanging')\n    .text('(');\n\n  plusText.append('tspan')\n    .style('fill', '#66a3c8')\n    .style('dominant-baseline', 'hanging')\n    .text('element');\n\n  plusText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text(' × ');\n\n  plusText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .style('fill', '#b58946')\n    .text('weight');\n\n  plusText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text(')');\n\n  plusText.append('tspan')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .style('dominant-baseline', 'hanging')\n    .text('and then ');\n\n  plusText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .style('fill', '#479d94')\n    .text('bias');\n  \n  drawArrow({\n    group: plusAnnotation,\n    sx: intermediateX2 - 2 * plusSymbolRadius - 3,\n    sy: arrowSY,\n    tx: intermediateX2 - 5,\n    ty: arrowTY,\n    dr: 30,\n    hFlip: i === 9,\n    marker: 'marker-alt'\n  });\n\n  // Add annotation for the bias\n  let biasTextY = nodeCoordinate[curLayerIndex][i].y;\n  biasTextY -= 2 * kernelRectLength + 4;\n  \n  flattenLayerLeftPart.append('text')\n    .attr('class', 'annotation-text')\n    .attr('x', intermediateX2 + plusSymbolRadius)\n    .attr('y', biasTextY)\n    .style('text-anchor', 'middle')\n    .style('dominant-baseline', 'baseline')\n    .text('Bias');\n  \n  // Add annotation for the softmax symbol\n  let softmaxAnnotation = intermediateLayerAnnotation.append('g')\n    .attr('class', 'softmax-annotation');\n  \n  softmaxAnnotation.append('text')\n    .attr('x', softmaxX + softmaxWidth / 2)\n    .attr('y', softmaxTextY)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'baseline')\n    .style('text-anchor', 'middle')\n    .style('font-weight', 700)\n    .text('Click ')\n    .append('tspan')\n    .attr('dx', 1)\n    .style('font-weight', 400)\n    .text('to learn more');\n\n  drawArrow({\n    group: softmaxAnnotation,\n    sx: softmaxX + softmaxWidth / 2 - 5,\n    sy: softmaxTextY + 4,\n    tx: softmaxX + softmaxWidth / 2,\n    ty: symbolY - plusSymbolRadius - 4,\n    dr: 50,\n    hFlip: true\n  });\n\n  // Add annotation for the flatten layer\n  let flattenAnnotation = intermediateLayerAnnotation.append('g')\n    .attr('class', 'flatten-annotation');\n  \n  textX = leftX - 80;\n  textY = nodeCoordinate[curLayerIndex - 1][0].y;\n\n  let flattenText = flattenAnnotation.append('text')\n    .attr('x', textX)\n    .attr('y', textY)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', 'middle');\n\n  let tempTspan = flattenText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .style('font-weight', 700)\n    .text('Hover over ');\n  \n  tempTspan.append('tspan')\n    .attr('dx', 1)\n    .style('font-weight', 400)\n    .style('dominant-baseline', 'hanging')\n    .text('matrix to');\n  \n  flattenText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .text('see how it is flattened');\n  \n  flattenText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .text('into datatrainx 1D array!');\n\n  drawArrow({\n    group: flattenAnnotation,\n    sx: textX + 45,\n    sy: textY + nodeLength * 0.4 + 12,\n    tx: leftX - 10,\n    ty: textY + nodeLength / 2,\n    dr: 80,\n    hFlip: true\n  });\n\n  // Add annotation to explain the middle images\n  textY = nodeCoordinate[curLayerIndex - 1][1].y;\n\n  let middleText = flattenAnnotation.append('text')\n    .attr('x', textX)\n    .attr('y', textY)\n    .attr('class', 'annotation-text')\n    .style('dominant-baseline', 'hanging')\n    .style('text-anchor', 'middle');\n\n  middleText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .text('Same flattening');\n  \n  middleText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .text('operation for');\n\n  middleText.append('tspan')\n    .style('dominant-baseline', 'hanging')\n    .attr('x', textX)\n    .attr('dy', '1em')\n    .text('each neuron');\n\n  drawArrow({\n    group: flattenAnnotation,\n    sx: textX + 39,\n    sy: textY + 25,\n    tx: leftX - 10,\n    ty: textY + nodeLength / 2 - 2,\n    dr: 80,\n    hFlip: true,\n    marker: 'marker-alt'\n  });\n\n\n  // Add annotation for the output neuron\n  let outputAnnotation = intermediateLayerAnnotation.append('g')\n    .attr('class', 'output-annotation');\n  \n  outputAnnotation.append('text')\n    .attr('x', nodeCoordinate[layerIndexDict['output']][i].x)\n    .attr('y', nodeCoordinate[layerIndexDict['output']][i].y + 10)\n    .attr('class', 'annotation-text')\n    .text(`(${d3.format('.4f')(cnn[layerIndexDict['output']][i].output)})`);\n\n\n  /* Prototype of using arc to represent the flatten layer (future)\n  let pie = d3.pie()\n    .padAngle(0)\n    .sort(null)\n    .value(d => d.output)\n    .startAngle(0)\n    .endAngle(-Math.PI);\n\n  let radius = 490 / 2;\n  let arc = d3.arc()\n    .innerRadius(radius - 20)\n    .outerRadius(radius);\n\n  let arcs = pie(cnn.flatten);\n  console.log(arcs);\n\n  let test = svg.append('g')\n    .attr('class', 'test')\n    .attr('transform', 'translate(500, 250)');\n\n  test.selectAll(\"path\")\n    .data(arcs)\n    .join(\"path\")\n      .attr('class', 'arc')\n      .attr(\"fill\", d => colorScale((d.value + range/2) / range))\n      .attr(\"d\", arc);\n  */\n\n  // Show everything\n  svg.selectAll('g.intermediate-layer, g.intermediate-layer-annotation')\n    .transition()\n    .delay(500)\n    .duration(500)\n    .ease(d3.easeCubicInOut)\n    .style('opacity', 1);\n}","<script>\n  // Svelte functions\n  import { onMount } from 'svelte';\n\n\n  import {\n    cnnStore, svgStore, vSpaceAroundGapStore, hSpaceAroundGapStore,\n    nodeCoordinateStore, selectedScaleLevelStore, cnnLayerRangesStore,\n    needRedrawStore, cnnLayerMinMaxStore, detailedModeStore,\n    shouldIntermediateAnimateStore, isInSoftmaxStore, softmaxDetailViewStore,\n    hoverInfoStore, allowsSoftmaxAnimationStore, modalStore,\n    intermediateLayerPositionStore, leftStartStore\n  } from '../stores.js';\n\n  // Svelte views\n  import ConvolutionView from '../detail-view/Convolutionview.svelte';\n  import ActivationView from '../detail-view/Activationview.svelte';\n  import PoolView from '../detail-view/Poolview.svelte';\n  import SoftmaxView from '../detail-view/Softmaxview.svelte';\n  import Modal from '../overview/Modal.svelte'\n  import Article from './article/Article.svelte';\n\n  // Overview functions\n\n\n\n  import { loadTrainedModel, constructCNN } from '../utils/cnn-tf.js';\n  import { overviewConfig } from '../config.js';\n\n  import {\n    addOverlayRect, drawConv1, drawConv2, drawConv3, drawConv4\n  } from '../overview/intermediate-draw.js';\n\n  import {\n    moveLayerX, addOverlayGradient\n  } from '../overview/intermediate-utils.js';\n\n  import {\n    drawFlatten, softmaxDetailViewMouseOverHandler, softmaxDetailViewMouseLeaveHandler\n  } from '../overview/flatten-draw.js';\n\n  import {\n    drawOutput, drawCNN, updateCNN, updateCNNLayerRanges, drawCustomImage\n  } from '../overview/overview-draw.js';\n\n  // DataTrainX\n  function afficheStart() {\n    leftStartStore.update(n => 0);\n  }\n\n  // View bindings\n  let overviewComponent;\n  let scaleLevelSet = new Set(['local', 'module', 'global']);\n  let selectedScaleLevel = 'local';\n  selectedScaleLevelStore.set(selectedScaleLevel);\n  let previousSelectedScaleLevel = selectedScaleLevel;\n  let wholeSvg = undefined;\n  let svg = undefined;\n\n  $: selectedScaleLevel, selectedScaleLevelChanged();\n\n  // Configs\n  const layerColorScales = overviewConfig.layerColorScales;\n  const nodeLength = overviewConfig.nodeLength;\n  const plusSymbolRadius = overviewConfig.plusSymbolRadius;\n  const numLayers = overviewConfig.numLayers;\n  const edgeOpacity = overviewConfig.edgeOpacity;\n  const edgeInitColor = overviewConfig.edgeInitColor;\n  const edgeHoverColor = overviewConfig.edgeHoverColor;\n  const edgeHoverOuting = overviewConfig.edgeHoverOuting;\n  const edgeStrokeWidth = overviewConfig.edgeStrokeWidth;\n  const intermediateColor = overviewConfig.intermediateColor;\n  const kernelRectLength = overviewConfig.kernelRectLength;\n  const svgPaddings = overviewConfig.svgPaddings;\n  const gapRatio = overviewConfig.gapRatio;\n  const overlayRectOffset = overviewConfig.overlayRectOffset;\n  const classLists = overviewConfig.classLists;\n\n  // Shared properties\n  let needRedraw = [undefined, undefined];\n  needRedrawStore.subscribe( value => {needRedraw = value;} );\n\n  let nodeCoordinate = undefined;\n  nodeCoordinateStore.subscribe( value => {nodeCoordinate = value;} )\n\n  let cnnLayerRanges = undefined;\n  cnnLayerRangesStore.subscribe( value => {cnnLayerRanges = value;} )\n\n  let cnnLayerMinMax = undefined;\n  cnnLayerMinMaxStore.subscribe( value => {cnnLayerMinMax = value;} )\n\n  let detailedMode = undefined;\n  detailedModeStore.subscribe( value => {detailedMode = value;} )\n\n  let shouldIntermediateAnimate = undefined;\n  shouldIntermediateAnimateStore.subscribe(value => {\n    shouldIntermediateAnimate = value;\n  })\n\n  let vSpaceAroundGap = undefined;\n  vSpaceAroundGapStore.subscribe( value => {vSpaceAroundGap = value;} )\n\n  let hSpaceAroundGap = undefined;\n  hSpaceAroundGapStore.subscribe( value => {hSpaceAroundGap = value;} )\n\n  let isInSoftmax = undefined;\n  isInSoftmaxStore.subscribe( value => {isInSoftmax = value;} )\n\n  let softmaxDetailViewInfo = undefined;\n  softmaxDetailViewStore.subscribe( value => {\n    softmaxDetailViewInfo = value;\n  } )\n\n  let modalInfo = undefined;\n  modalStore.subscribe( value => {modalInfo = value;} )\n\n  let hoverInfo = undefined;\n  hoverInfoStore.subscribe( value => {hoverInfo = value;} )\n\n  let intermediateLayerPosition = undefined;\n  intermediateLayerPositionStore.subscribe ( value => {intermediateLayerPosition = value;} )\n\n  let width = undefined;\n  let height = undefined;\n  let model = undefined;\n  let selectedNode = {layerName: '', index: -1, data: null};\n  let isInIntermediateView = false;\n  let isInActPoolDetailView = false;\n  let actPoolDetailViewNodeIndex = -1;\n  let actPoolDetailViewLayerIndex = -1;\n  let detailedViewNum = undefined;\n  let disableControl = false;\n\n  // Wait to load\n  let cnn = undefined;\n\n  let detailedViewAbsCoords = {\n    1 : [600, 270, 490, 290],\n    2: [500, 270, 490, 290],\n    3 : [700, 270, 490, 290],\n    4: [600, 270, 490, 290],\n    5: [650, 270, 490, 290],\n    6 : [775, 270, 490, 290],\n    7 : [100, 270, 490, 290],\n    8 : [60, 270, 490, 290],\n    9 : [200, 270, 490, 290],\n    10 : [300, 270, 490, 290],\n  }\n\n  const layerIndexDict = {\n    'input': 0,\n    'conv_1_1': 1,\n    'relu_1_1': 2,\n    'conv_1_2': 3,\n    'relu_1_2': 4,\n    'max_pool_1': 5,\n    'conv_2_1': 6,\n    'relu_2_1': 7,\n    'conv_2_2': 8,\n    'relu_2_2': 9,\n    'max_pool_2': 10,\n    'output': 11\n  }\n\n  const layerLegendDict = {\n    0: {local: 'input-legend', module: 'input-legend', global: 'input-legend'},\n    1: {local: 'local-legend-0-1', module: 'module-legend-0', global: 'global-legend'},\n    2: {local: 'local-legend-0-1', module: 'module-legend-0', global: 'global-legend'},\n    3: {local: 'local-legend-0-2', module: 'module-legend-0', global: 'global-legend'},\n    4: {local: 'local-legend-0-2', module: 'module-legend-0', global: 'global-legend'},\n    5: {local: 'local-legend-0-2', module: 'module-legend-0', global: 'global-legend'},\n    6: {local: 'local-legend-1-1', module: 'module-legend-1', global: 'global-legend'},\n    7: {local: 'local-legend-1-1', module: 'module-legend-1', global: 'global-legend'},\n    8: {local: 'local-legend-1-2', module: 'module-legend-1', global: 'global-legend'},\n    9: {local: 'local-legend-1-2', module: 'module-legend-1', global: 'global-legend'},\n    10: {local: 'local-legend-1-2', module: 'module-legend-1', global: 'global-legend'},\n    11: {local: 'output-legend', module: 'output-legend', global: 'output-legend'}\n  }\n\n  let imageOptions = [\n    {file: 'colere.jpg', class: 'Colère'},\n    {file: 'degout.jpg', class: 'Dégoût'},\n    {file: 'peur.jpg', class: 'Peur'},\n    {file: 'joyeux.jpg', class: 'Joyeux'},\n    {file: 'triste.jpg', class: 'Triste'},\n    {file: 'surprise.jpg', class: 'Surprise'},\n    {file: 'neutre.jpg', class: 'Neutre'}\n\n  ];\n  let selectedImage = imageOptions[0].file;\n\n  let nodeData;\n  let selectedNodeIndex = -1;\n  let isExitedFromDetailedView = true;\n  let isExitedFromCollapse = true;\n  let customImageURL = null;\n\n  // Helper functions\n  const selectedScaleLevelChanged = () => {\n    if (svg !== undefined) {\n      if (!scaleLevelSet.add(selectedScaleLevel)) {\n        console.error('Encounter unknown scale level!');\n      }\n\n      // Update nodes and legends\n      if (selectedScaleLevel != previousSelectedScaleLevel){\n        // We can simply redraw all nodes using the new color scale, or we can\n        // make it faster by only redraw certian nodes\n        let updatingLayerIndexDict = {\n          local: {\n            module: [1, 2, 8, 9, 10],\n            global: [1, 2, 3, 4, 5, 8, 9, 10]\n          },\n          module: {\n            local: [1, 2, 8, 9, 10],\n            global: [1, 2, 3, 4, 5, 8, 9, 10]\n          },\n          global: {\n            local: [1, 2, 3, 4, 5, 8, 9, 10],\n            module: [1, 2, 3, 4, 5]\n          }\n        };\n\n        let updatingLayerIndex = updatingLayerIndexDict[\n          previousSelectedScaleLevel][selectedScaleLevel];\n\n        updatingLayerIndex.forEach(l => {\n          let range = cnnLayerRanges[selectedScaleLevel][l];\n          svg.select(`#cnn-layer-group-${l}`)\n            .selectAll('.node-image')\n            .each((d, i, g) => drawOutput(d, i, g, range));\n        });\n \n        // Hide previous legend\n        svg.selectAll(`.${previousSelectedScaleLevel}-legend`)\n          .classed('hidden', true);\n\n        // Show selected legends\n        svg.selectAll(`.${selectedScaleLevel}-legend`)\n          .classed('hidden', !detailedMode);\n      }\n      previousSelectedScaleLevel = selectedScaleLevel;\n      selectedScaleLevelStore.set(selectedScaleLevel);\n    }\n  }\n\n  const intermediateNodeMouseOverHandler = (d, i, g) => {\n    if (detailedViewNum !== undefined) { return; }\n    svg.select(`rect#underneath-gateway-${d.index}`)\n      .style('opacity', 1);\n  }\n\n  const intermediateNodeMouseLeaveHandler = (d, i, g) => {\n    // screenshot\n    // return;\n    if (detailedViewNum !== undefined) { return; }\n    svg.select(`rect#underneath-gateway-${d.index}`)\n      .style('opacity', 0);\n  }\n\n  const intermediateNodeClicked = (d, i, g, selectedI, curLayerIndex) => {\n    d3.event.stopPropagation();\n    isExitedFromCollapse = false;\n    // Use this event to trigger the detailed view\n    if (detailedViewNum === d.index) {\n      // Setting this for testing purposes currently.\n      selectedNodeIndex = -1; \n      // User clicks this node again -> rewind\n      detailedViewNum = undefined;\n      svg.select(`rect#underneath-gateway-${d.index}`)\n        .style('opacity', 0);\n    } \n    // We need to show datatrainx new detailed view (two cases: if we need to close the\n    // old detailed view or not)\n    else {\n      // Setting this for testing purposes currently.\n      selectedNodeIndex = d.index;\n      let inputMatrix = d.output;\n      let kernelMatrix = d.outputLinks[selectedI].weight;\n      // let interMatrix = singleConv(inputMatrix, kernelMatrix);\n      let colorScale = layerColorScales.conv;\n\n      // Compute the color range\n      let rangePre = cnnLayerRanges[selectedScaleLevel][curLayerIndex - 1];\n      let rangeCur = cnnLayerRanges[selectedScaleLevel][curLayerIndex];\n      let range = Math.max(rangePre, rangeCur);\n\n      // User triggers datatrainx different detailed view\n      if (detailedViewNum !== undefined) {\n        // Change the underneath highlight\n        svg.select(`rect#underneath-gateway-${detailedViewNum}`)\n          .style('opacity', 0);\n        svg.select(`rect#underneath-gateway-${d.index}`)\n          .style('opacity', 1);\n      }\n      \n      // Dynamically position the detail view\n      let wholeSvg = d3.select('#cnn-svg');\n      let svgYMid = +wholeSvg.style('height').replace('px', '') / 2;\n      let svgWidth = +wholeSvg.style('width').replace('px', '');\n      let detailViewTop = 100 + svgYMid - 250 / 2;\n      let positionX = intermediateLayerPosition[Object.keys(layerIndexDict)[curLayerIndex]];\n\n      let posX = 0;\n      if (curLayerIndex > 6) {\n        posX = (positionX - svgPaddings.left) / 2;\n        posX = svgPaddings.left + posX - 486 / 2;\n      } else {\n        posX = (svgWidth + svgPaddings.right - positionX) / 2;\n        posX = positionX + posX - 486 / 2;\n      }\n\n      const detailview = document.getElementById('detailview');\n      detailview.style.top = `${detailViewTop}px`;\n      detailview.style.left = `${posX}px`;\n      detailview.style.position = 'absolute';\n\n      detailedViewNum = d.index;\n\n      // Send the currently used color range to detailed view\n      nodeData.colorRange = range;\n      nodeData.inputIsInputLayer = curLayerIndex <= 1;\n    }\n  }\n\n  // The order of the if/else statements in this function is very critical\n  const emptySpaceClicked = () => {\n    // If detail view -> rewind to intermediate view\n    if (detailedViewNum !== undefined) {\n          // Setting this for testing purposes currently.\n      selectedNodeIndex = -1; \n      // User clicks this node again -> rewind\n      svg.select(`rect#underneath-gateway-${detailedViewNum}`)\n        .style('opacity', 0);\n      detailedViewNum = undefined;\n    }\n\n    // If softmax view -> rewind to flatten layer view\n    else if (isInSoftmax) {\n      svg.select('.softmax-symbol')\n        .dispatch('click');\n    }\n\n    // If intermediate view -> rewind to overview\n    else if (isInIntermediateView) {\n      let curLayerIndex = layerIndexDict[selectedNode.layerName];\n      quitIntermediateView(curLayerIndex, selectedNode.domG, selectedNode.domI);\n      d3.select(selectedNode.domG[selectedNode.domI])\n        .dispatch('mouseleave');\n    }\n\n    // If pool/act detail view -> rewind to overview\n    else if (isInActPoolDetailView) {\n      quitActPoolDetailView();\n    }\n  }\n\n  const prepareToEnterIntermediateView = (d, g, i, curLayerIndex) => {\n    isInIntermediateView = true;\n    // Hide all legends\n    svg.selectAll(`.${selectedScaleLevel}-legend`)\n      .classed('hidden', true);\n    svg.selectAll('.input-legend').classed('hidden', true);\n    svg.selectAll('.output-legend').classed('hidden', true);\n\n    // Hide the input annotation\n    svg.select('.input-annotation')\n      .classed('hidden', true);\n\n    // Highlight the previous layer and this node\n    svg.select(`g#cnn-layer-group-${curLayerIndex - 1}`)\n      .selectAll('rect.bounding')\n      .style('stroke-width', 2);\n    \n    d3.select(g[i])\n      .select('rect.bounding')\n      .style('stroke-width', 2);\n    \n    // Disable control panel UI\n    // d3.select('#level-select').property('disabled', true);\n    // d3.selectAll('.image-container')\n    //   .style('cursor', 'not-allowed')\n    //   .on('mouseclick', () => {});\n    disableControl = true;\n    \n    // Allow infinite animation loop\n    shouldIntermediateAnimateStore.set(true);\n\n    // Highlight the labels\n    svg.selectAll(`g#layer-label-${curLayerIndex - 1},\n      g#layer-detailed-label-${curLayerIndex - 1},\n      g#layer-label-${curLayerIndex},\n      g#layer-detailed-label-${curLayerIndex}`)\n      .style('font-weight', '800');\n    \n    // Register datatrainx handler on the svg element so user can click empty space to quit\n    // the intermediate view\n    d3.select('#cnn-svg')\n      .on('click', emptySpaceClicked);\n  }\n\n  const quitActPoolDetailView = () => {\n    isInActPoolDetailView = false;\n    actPoolDetailViewNodeIndex = -1;\n\n    let layerIndex = layerIndexDict[selectedNode.layerName];\n    let nodeIndex = selectedNode.index;\n    svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\n      .select('rect.bounding')\n      .classed('hidden', true);\n\n    selectedNode.data.inputLinks.forEach(link => {\n      let layerIndex = layerIndexDict[link.source.layerName];\n      let nodeIndex = link.source.index;\n      svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\n        .select('rect.bounding')\n        .classed('hidden', true);\n    })\n\n    // Clean up the underneath rects\n    svg.select('g.underneath')\n      .selectAll('rect')\n      .remove();\n\n    // Show all edges\n    let unimportantEdges = svg.select('g.edge-group')\n      .selectAll('.edge')\n      .filter(d => {\n        return d.targetLayerIndex !== actPoolDetailViewLayerIndex;\n      })\n      .style('visibility', null);\n    \n    // Recover control UI\n    disableControl = false;\n\n    // Show legends if in detailed mode\n    svg.selectAll(`.${selectedScaleLevel}-legend`)\n      .classed('hidden', !detailedMode);\n    svg.selectAll('.input-legend').classed('hidden', !detailedMode);\n    svg.selectAll('.output-legend').classed('hidden', !detailedMode);\n\n    // Also dehighlight the edge\n    let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\n    edgeGroup.selectAll(`path.edge-${layerIndex}-${nodeIndex}`)\n      .transition()\n      .ease(d3.easeCubicOut)\n      .duration(200)\n      .style('stroke', edgeInitColor)\n      .style('stroke-width', edgeStrokeWidth)\n      .style('opacity', edgeOpacity);\n\n    // Remove the overlay rect\n    svg.selectAll('g.intermediate-layer-overlay, g.intermediate-layer-annotation')\n      .transition('remove')\n      .duration(500)\n      .ease(d3.easeCubicInOut)\n      .style('opacity', 0)\n      .on('end', (d, i, g) => {\n        svg.selectAll('g.intermediate-layer-overlay, g.intermediate-layer-annotation').remove();\n        svg.selectAll('defs.overlay-gradient').remove();\n        svg.select('.input-annotation').classed('hidden', false);\n      });\n\n    // Turn the fade out nodes back\n    svg.select(`g#cnn-layer-group-${layerIndex}`)\n      .selectAll('g.node-group')\n      .each((sd, si, sg) => {\n        d3.select(sg[si])\n          .style('pointer-events', 'all');\n    });\n\n    svg.select(`g#cnn-layer-group-${layerIndex - 1}`)\n      .selectAll('g.node-group')\n      .each((sd, si, sg) => {\n        // Recover the old events\n        d3.select(sg[si])\n          .style('pointer-events', 'all')\n          .on('mouseover', nodeMouseOverHandler)\n          .on('mouseleave', nodeMouseLeaveHandler)\n          .on('click', nodeClickHandler);\n    });\n\n    // Deselect the node\n    selectedNode.layerName = '';\n    selectedNode.index = -1;\n    selectedNode.data = null;\n\n    actPoolDetailViewLayerIndex = -1;\n  }\n\n  const actPoolDetailViewPreNodeMouseOverHandler = (d, i, g) => {\n    // Highlight the edges\n    let layerIndex = layerIndexDict[d.layerName];\n    let nodeIndex = d.index;\n    let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\n    \n    edgeGroup.selectAll(`path.edge-${actPoolDetailViewLayerIndex}-${nodeIndex}`)\n      .raise()\n      .transition()\n      .ease(d3.easeCubicInOut)\n      .duration(400)\n      .style('stroke', edgeHoverColor)\n      .style('stroke-width', '1')\n      .style('opacity', 1);\n    \n    // Highlight its border\n    d3.select(g[i]).select('rect.bounding')\n      .classed('hidden', false);\n    \n    // Highlight node's pair\n    let associatedLayerIndex = layerIndex - 1;\n    if (layerIndex === actPoolDetailViewLayerIndex - 1) {\n      associatedLayerIndex = layerIndex + 1;\n    }\n\n    svg.select(`g#layer-${associatedLayerIndex}-node-${nodeIndex}`)\n      .select('rect.bounding')\n      .classed('hidden', false);\n  }\n\n  const actPoolDetailViewPreNodeMouseLeaveHandler = (d, i, g) => {\n    // De-highlight the edges\n    let layerIndex = layerIndexDict[d.layerName];\n    let nodeIndex = d.index;\n    let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\n\n    edgeGroup.selectAll(`path.edge-${actPoolDetailViewLayerIndex}-${nodeIndex}`)\n      .transition()\n      .ease(d3.easeCubicOut)\n      .duration(200)\n      .style('stroke', edgeInitColor)\n      .style('stroke-width', edgeStrokeWidth)\n      .style('opacity', edgeOpacity);\n    \n    // De-highlight its border\n    d3.select(g[i]).select('rect.bounding')\n      .classed('hidden', true);\n    \n    // De-highlight node's pair\n    let associatedLayerIndex = layerIndex - 1;\n    if (layerIndex === actPoolDetailViewLayerIndex - 1) {\n      associatedLayerIndex = layerIndex + 1;\n    }\n\n    svg.select(`g#layer-${associatedLayerIndex}-node-${nodeIndex}`)\n      .select('rect.bounding')\n      .classed('hidden', true);\n  }\n\n  const actPoolDetailViewPreNodeClickHandler = (d, i, g) => {\n    let layerIndex = layerIndexDict[d.layerName];\n    let nodeIndex = d.index;\n\n    // Click the pre-layer node in detail view has the same effect as clicking\n    // the cur-layer node, which is to open datatrainx new detail view window\n    svg.select(`g#layer-${layerIndex + 1}-node-${nodeIndex}`)\n      .node()\n      .dispatchEvent(new Event('click'));\n  }\n\n  const enterDetailView = (curLayerIndex, i) => {\n    isInActPoolDetailView = true;\n    actPoolDetailViewNodeIndex = i;\n    actPoolDetailViewLayerIndex = curLayerIndex;\n\n    // Dynamically position the detail view\n    let wholeSvg = d3.select('#cnn-svg');\n    let svgYMid = +wholeSvg.style('height').replace('px', '') / 2;\n    let svgWidth = +wholeSvg.style('width').replace('px', '');\n    let detailViewTop = 100 + svgYMid - 260 / 2;\n\n    let posX = 0;\n    if (curLayerIndex > 5) {\n      posX = nodeCoordinate[curLayerIndex - 1][0].x + 50;\n      posX = posX / 2 - 500 / 2;\n    } else {\n      posX = (svgWidth - nodeCoordinate[curLayerIndex][0].x - nodeLength) / 2;\n      posX = nodeCoordinate[curLayerIndex][0].x + nodeLength + posX - 500 / 2;\n\n    }\n\n    const detailview = document.getElementById('detailview');\n    detailview.style.top = `${detailViewTop}px`;\n    detailview.style.left = `${posX}px`;\n    detailview.style.position = 'absolute';\n\n    // Hide all edges\n    let unimportantEdges = svg.select('g.edge-group')\n      .selectAll('.edge')\n      .filter(d => {\n        return d.targetLayerIndex !== curLayerIndex;\n      })\n      .style('visibility', 'hidden');\n    \n    // Disable UI\n    disableControl = true;\n    \n    // Hide input annotaitons\n    svg.select('.input-annotation')\n      .classed('hidden', true);\n\n    // Hide legends\n    svg.selectAll(`.${selectedScaleLevel}-legend`)\n      .classed('hidden', true);\n    svg.selectAll('.input-legend').classed('hidden', true);\n    svg.selectAll('.output-legend').classed('hidden', true);\n    svg.select(`#${layerLegendDict[curLayerIndex][selectedScaleLevel]}`)\n      .classed('hidden', false);\n\n    // Add overlay rects\n    let leftX = nodeCoordinate[curLayerIndex - 1][i].x;\n    // +5 to cover the detailed mode long label\n    let rightStart = nodeCoordinate[curLayerIndex][i].x + nodeLength + 5;\n\n    // Compute the left and right overlay rect width\n    let rightWidth = width - rightStart - overlayRectOffset / 2;\n    let leftWidth = leftX - nodeCoordinate[0][0].x;\n\n    // The overlay rects should be symmetric\n    if (rightWidth > leftWidth) {\n      let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\n        {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.9},\n        {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 1}];\n      addOverlayGradient('overlay-gradient-right', stops);\n      \n      let leftEndOpacity = 0.85 + (0.95 - 0.85) * (leftWidth / rightWidth);\n      stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: leftEndOpacity},\n        {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\n      addOverlayGradient('overlay-gradient-left', stops);\n    } else {\n      let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 1},\n        {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.9},\n        {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\n      addOverlayGradient('overlay-gradient-left', stops);\n\n      let rightEndOpacity = 0.85 + (0.95 - 0.85) * (rightWidth / leftWidth);\n      stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\n        {offset: '100%', color: 'rgb(250, 250, 250)', opacity: rightEndOpacity}];\n      addOverlayGradient('overlay-gradient-right', stops);\n    }\n    \n    addOverlayRect('overlay-gradient-right',\n      rightStart + overlayRectOffset / 2 + 0.5,\n      0, rightWidth, height + svgPaddings.top);\n    \n    addOverlayRect('overlay-gradient-left',\n      nodeCoordinate[0][0].x - overlayRectOffset / 2,\n      0, leftWidth, height + svgPaddings.top);\n\n    svg.selectAll('rect.overlay')\n      .on('click', emptySpaceClicked);\n    \n    // Add underneath rectangles\n    let underGroup = svg.select('g.underneath');\n    let padding = 7;\n    for (let n = 0; n < cnn[curLayerIndex - 1].length; n++) {\n      underGroup.append('rect')\n        .attr('class', 'underneath-gateway')\n        .attr('id', `underneath-gateway-${n}`)\n        .attr('x', nodeCoordinate[curLayerIndex - 1][n].x - padding)\n        .attr('y', nodeCoordinate[curLayerIndex - 1][n].y - padding)\n        .attr('width', (2 * nodeLength + hSpaceAroundGap) + 2 * padding)\n        .attr('height', nodeLength + 2 * padding)\n        .attr('rx', 10)\n        .style('fill', 'rgba(160, 160, 160, 0.3)')\n        .style('opacity', 0);\n      \n      // Update the event functions for these two layers\n      svg.select(`g#layer-${curLayerIndex - 1}-node-${n}`)\n        .style('pointer-events', 'all')\n        .style('cursor', 'pointer')\n        .on('mouseover', actPoolDetailViewPreNodeMouseOverHandler)\n        .on('mouseleave', actPoolDetailViewPreNodeMouseLeaveHandler)\n        .on('click', actPoolDetailViewPreNodeClickHandler);\n    }\n    underGroup.lower();\n\n    // Highlight the selcted pair\n    underGroup.select(`#underneath-gateway-${i}`)\n      .style('opacity', 1);\n  }\n\n  const quitIntermediateView = (curLayerIndex, g, i) => {\n    // If it is the softmax detail view, quit that view first\n    if (isInSoftmax) {\n      svg.select('.logit-layer').remove();\n      svg.select('.logit-layer-lower').remove();\n      svg.selectAll('.plus-symbol-clone').remove();\n\n      // Instead of removing the paths, we hide them, so it is faster to load in\n      // the future\n      svg.select('.underneath')\n        .selectAll('.logit-lower')\n        .style('opacity', 0);\n\n      softmaxDetailViewStore.set({\n          show: false,\n          logits: []\n      })\n\n      allowsSoftmaxAnimationStore.set(false);\n    }\n    isInSoftmaxStore.set(false);\n    isInIntermediateView = false;\n\n    // Show the legend\n    svg.selectAll(`.${selectedScaleLevel}-legend`)\n      .classed('hidden', !detailedMode);\n    svg.selectAll('.input-legend').classed('hidden', !detailedMode);\n    svg.selectAll('.output-legend').classed('hidden', !detailedMode);\n\n    // Recover control panel UI\n    disableControl = false;\n\n    // Recover the input layer node's event\n    for (let n = 0; n < cnn[curLayerIndex - 1].length; n++) {\n      svg.select(`g#layer-${curLayerIndex - 1}-node-${n}`)\n        .on('mouseover', nodeMouseOverHandler)\n        .on('mouseleave', nodeMouseLeaveHandler)\n        .on('click', nodeClickHandler);\n    }\n\n    // Clean up the underneath rects\n    svg.select('g.underneath')\n      .selectAll('rect')\n      .remove();\n    detailedViewNum = undefined;\n\n    // Highlight the previous layer and this node\n    svg.select(`g#cnn-layer-group-${curLayerIndex - 1}`)\n      .selectAll('rect.bounding')\n      .style('stroke-width', 1);\n    \n    d3.select(g[i])\n      .select('rect.bounding')\n      .style('stroke-width', 1);\n\n    // Highlight the labels\n    svg.selectAll(`g#layer-label-${curLayerIndex - 1},\n      g#layer-detailed-label-${curLayerIndex - 1},\n      g#layer-label-${curLayerIndex},\n      g#layer-detailed-label-${curLayerIndex}`)\n      .style('font-weight', 'normal');\n\n    // Also unclick the node\n    // Record the current clicked node\n    selectedNode.layerName = '';\n    selectedNode.index = -1;\n    selectedNode.data = null;\n    isExitedFromCollapse = true;\n\n    // Remove the intermediate layer\n    let intermediateLayer = svg.select('g.intermediate-layer');\n\n    // Kill the infinite animation loop\n    shouldIntermediateAnimateStore.set(false);\n\n    intermediateLayer.transition('remove')\n      .duration(500)\n      .ease(d3.easeCubicInOut)\n      .style('opacity', 0)\n      .on('end', (d, i, g) => { d3.select(g[i]).remove()});\n    \n    // Remove the output node overlay mask\n    svg.selectAll('.overlay-group').remove();\n    \n    // Remove the overlay rect\n    svg.selectAll('g.intermediate-layer-overlay, g.intermediate-layer-annotation')\n      .transition('remove')\n      .duration(500)\n      .ease(d3.easeCubicInOut)\n      .style('opacity', 0)\n      .on('end', (d, i, g) => {\n        svg.selectAll('g.intermediate-layer-overlay, g.intermediate-layer-annotation').remove();\n        svg.selectAll('defs.overlay-gradient').remove();\n      });\n    \n    // Recover the layer if we have drdrawn it\n    if (needRedraw[0] !== undefined) {\n      let redrawRange = cnnLayerRanges[selectedScaleLevel][needRedraw[0]];\n      if (needRedraw[1] !== undefined) {\n        svg.select(`g#layer-${needRedraw[0]}-node-${needRedraw[1]}`)\n          .select('image.node-image')\n          .each((d, i, g) => drawOutput(d, i, g, redrawRange));\n      } else {\n        svg.select(`g#cnn-layer-group-${needRedraw[0]}`)\n          .selectAll('image.node-image')\n          .each((d, i, g) => drawOutput(d, i, g, redrawRange));\n      }\n    }\n    \n    // Move all layers to their original place\n    for (let i = 0; i < numLayers; i++) {\n      moveLayerX({layerIndex: i, targetX: nodeCoordinate[i][0].x,\n        disable:false, delay:500, opacity: 1});\n    }\n\n    moveLayerX({layerIndex: numLayers - 2,\n      targetX: nodeCoordinate[numLayers - 2][0].x, opacity: 1,\n      disable:false, delay:500, onEndFunc: () => {\n        // Show all edges on the last moving animation end\n        svg.select('g.edge-group')\n          .style('visibility', 'visible');\n\n        // Recover the input annotation\n        svg.select('.input-annotation')\n          .classed('hidden', false);\n      }});\n  }\n\n  const nodeClickHandler = (d, i, g) => {\n    d3.event.stopPropagation();\n    let nodeIndex = d.index;\n\n    // Record the current clicked node\n    selectedNode.layerName = d.layerName;\n    selectedNode.index = d.index;\n    selectedNode.data = d;\n    selectedNode.domI = i;\n    selectedNode.domG = g;\n\n    // Record data for detailed view.\n    if (d.type === 'conv' || d.type === 'relu' || d.type === 'pool') {\n      let data = [];\n      for (let j = 0; j < d.inputLinks.length; j++) {\n        data.push({\n          input: d.inputLinks[j].source.output,\n          kernel: d.inputLinks[j].weight,\n          output: d.inputLinks[j].dest.output,\n        })\n      }\n      let curLayerIndex = layerIndexDict[d.layerName];\n      data.colorRange = cnnLayerRanges[selectedScaleLevel][curLayerIndex];\n      data.isInputInputLayer = curLayerIndex <= 1;\n      nodeData = data;\n    }\n\n    let curLayerIndex = layerIndexDict[d.layerName];\n\n    if (d.type == 'relu' || d.type == 'pool') {\n      isExitedFromDetailedView = false;\n      if (!isInActPoolDetailView) {\n        // Enter the act pool detail view\n        enterDetailView(curLayerIndex, d.index);\n      } else {\n        if (d.index === actPoolDetailViewNodeIndex) {\n          // Quit the act pool detail view\n          quitActPoolDetailView();\n        } else {\n          // Switch the detail view input to the new clicked pair\n\n          // Remove the previous selection effect\n          svg.select(`g#layer-${curLayerIndex}-node-${actPoolDetailViewNodeIndex}`)\n            .select('rect.bounding')\n            .classed('hidden', true);\n\n          svg.select(`g#layer-${curLayerIndex - 1}-node-${actPoolDetailViewNodeIndex}`)\n            .select('rect.bounding')\n            .classed('hidden', true);\n          \n          let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\n      \n          edgeGroup.selectAll(`path.edge-${curLayerIndex}-${actPoolDetailViewNodeIndex}`)\n            .transition()\n            .ease(d3.easeCubicOut)\n            .duration(200)\n            .style('stroke', edgeInitColor)\n            .style('stroke-width', edgeStrokeWidth)\n            .style('opacity', edgeOpacity);\n          \n          let underGroup = svg.select('g.underneath');\n          underGroup.select(`#underneath-gateway-${actPoolDetailViewNodeIndex}`)\n            .style('opacity', 0);\n        \n          // Add selection effect on the new selected pair\n          svg.select(`g#layer-${curLayerIndex}-node-${nodeIndex}`)\n            .select('rect.bounding')\n            .classed('hidden', false);\n\n          svg.select(`g#layer-${curLayerIndex - 1}-node-${nodeIndex}`)\n            .select('rect.bounding')\n            .classed('hidden', false);\n\n          edgeGroup.selectAll(`path.edge-${curLayerIndex}-${nodeIndex}`)\n            .raise()\n            .transition()\n            .ease(d3.easeCubicInOut)\n            .duration(400)\n            .style('stroke', edgeHoverColor)\n            .style('stroke-width', '1')\n            .style('opacity', 1);\n\n          underGroup.select(`#underneath-gateway-${nodeIndex}`)\n            .style('opacity', 1);\n\n          actPoolDetailViewNodeIndex = nodeIndex;\n        }\n      }\n    }\n\n    // Enter the second view (layer-view) when user clicks datatrainx conv node\n    if ((d.type === 'conv' || d.layerName === 'output') && !isInIntermediateView) {\n      prepareToEnterIntermediateView(d, g, nodeIndex, curLayerIndex);\n\n      if (d.layerName === 'conv_1_1') {\n        drawConv1(curLayerIndex, d, nodeIndex, width, height,\n          intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n          intermediateNodeClicked);\n      }\n\n      else if (d.layerName === 'conv_1_2') {\n        drawConv2(curLayerIndex, d, nodeIndex, width, height,\n          intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n          intermediateNodeClicked);\n      }\n\n      else if (d.layerName === 'conv_2_1') {\n        drawConv3(curLayerIndex, d, nodeIndex, width, height,\n          intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n          intermediateNodeClicked);\n      }\n      \n      else if (d.layerName === 'conv_2_2') {\n        drawConv4(curLayerIndex, d, nodeIndex, width, height,\n          intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\n          intermediateNodeClicked);\n      }\n    \n      else if (d.layerName === 'output') {\n        drawFlatten(curLayerIndex, d, nodeIndex, width, height);\n      }\n    }\n    // Quit the layerview\n    else if ((d.type === 'conv' || d.layerName === 'output') && isInIntermediateView) {\n      quitIntermediateView(curLayerIndex, g, i);\n    }\n  }\n\n  const nodeMouseOverHandler = (d, i, g) => {\n    // if (isInIntermediateView || isInActPoolDetailView) { return; }\n    if (isInIntermediateView) { return; }\n\n    // Highlight the edges\n    let layerIndex = layerIndexDict[d.layerName];\n    let nodeIndex = d.index;\n    let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\n    \n    edgeGroup.selectAll(`path.edge-${layerIndex}-${nodeIndex}`)\n      .raise()\n      .transition()\n      .ease(d3.easeCubicInOut)\n      .duration(400)\n      .style('stroke', edgeHoverColor)\n      .style('stroke-width', '1')\n      .style('opacity', 1);\n    \n    // Highlight its border\n    d3.select(g[i]).select('rect.bounding')\n      .classed('hidden', false);\n    \n    // Highlight source's border\n    if (d.inputLinks.length === 1) {\n      let link = d.inputLinks[0];\n      let layerIndex = layerIndexDict[link.source.layerName];\n      let nodeIndex = link.source.index;\n      svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\n        .select('rect.bounding')\n        .classed('hidden', false);\n    } else {\n      svg.select(`g#cnn-layer-group-${layerIndex - 1}`)\n        .selectAll('g.node-group')\n        .selectAll('rect.bounding')\n        .classed('hidden', false);\n    }\n\n    // Highlight the output text\n    if (d.layerName === 'output') {\n      d3.select(g[i])\n        .select('.output-text')\n        .style('opacity', 0.8)\n        .style('text-decoration', 'underline');\n    }\n\n    /* Use the following commented code if we have non-linear model\n    d.inputLinks.forEach(link => {\n      let layerIndex = layerIndexDict[link.source.layerName];\n      let nodeIndex = link.source.index;\n      svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\n        .select('rect.bounding')\n        .classed('hidden', false);\n    });\n    */\n  }\n\n  const nodeMouseLeaveHandler = (d, i, g) => {\n    // Screenshot\n    // return;\n\n    if (isInIntermediateView) { return; }\n    \n    // Keep the highlight if user has clicked\n    if (isInActPoolDetailView || (\n      d.layerName !== selectedNode.layerName ||\n      d.index !== selectedNode.index)){\n      let layerIndex = layerIndexDict[d.layerName];\n      let nodeIndex = d.index;\n      let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\n      \n      edgeGroup.selectAll(`path.edge-${layerIndex}-${nodeIndex}`)\n        .transition()\n        .ease(d3.easeCubicOut)\n        .duration(200)\n        .style('stroke', edgeInitColor)\n        .style('stroke-width', edgeStrokeWidth)\n        .style('opacity', edgeOpacity);\n\n      d3.select(g[i]).select('rect.bounding').classed('hidden', true);\n\n      if (d.inputLinks.length === 1) {\n        let link = d.inputLinks[0];\n        let layerIndex = layerIndexDict[link.source.layerName];\n        let nodeIndex = link.source.index;\n        svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\n          .select('rect.bounding')\n          .classed('hidden', true);\n      } else {\n        svg.select(`g#cnn-layer-group-${layerIndex - 1}`)\n          .selectAll('g.node-group')\n          .selectAll('rect.bounding')\n          .classed('hidden', d => d.layerName !== selectedNode.layerName ||\n            d.index !== selectedNode.index);\n      }\n\n      // Dehighlight the output text\n      if (d.layerName === 'output') {\n        d3.select(g[i])\n          .select('.output-text')\n          .style('fill', 'black')\n          .style('opacity', 0.5)\n          .style('text-decoration', 'none');\n      }\n\n      /* Use the following commented code if we have non-linear model\n      d.inputLinks.forEach(link => {\n        let layerIndex = layerIndexDict[link.source.layerName];\n        let nodeIndex = link.source.index;\n        svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\n          .select('rect.bounding')\n          .classed('hidden', true);\n      });\n      */\n    }\n  }\n  let logits = [-4.28, 2.96, -0.38, 5.24, -7.56, -3.43, 8.63, 2.63, 6.30, 0.68];\n  let selectedI = 4;\n\n  onMount(async () => {\n    // Create SVG\n    wholeSvg = d3.select(overviewComponent)\n      .select('#cnn-svg');\n    svg = wholeSvg.append('g')\n      .attr('class', 'main-svg')\n      .attr('transform', `translate(${svgPaddings.left}, 0)`);\n    svgStore.set(svg);\n\n    width = Number(wholeSvg.style('width').replace('px', '')) -\n      svgPaddings.left - svgPaddings.right;\n    height = Number(wholeSvg.style('height').replace('px', '')) -\n      svgPaddings.top - svgPaddings.bottom;\n\n    let cnnGroup = svg.append('g')\n      .attr('class', 'cnn-group');\n    \n    let underGroup = svg.append('g')\n      .attr('class', 'underneath');\n\n    let svgYMid = +wholeSvg.style('height').replace('px', '') / 2;\n    detailedViewAbsCoords = {\n      1 : [600, 100 + svgYMid - 220 / 2, 490, 290],\n      2: [500, 100 + svgYMid - 220 / 2, 490, 290],\n      3 : [700, 100 + svgYMid - 220 / 2, 490, 290],\n      4: [600, 100 + svgYMid - 220 / 2, 490, 290],\n      5: [650, 100 + svgYMid - 220 / 2, 490, 290],\n      6 : [850, 100 + svgYMid - 220 / 2, 490, 290],\n      7 : [100, 100 + svgYMid - 220 / 2, 490, 290],\n      8 : [60, 100 + svgYMid - 220 / 2, 490, 290],\n      9 : [200, 100 + svgYMid - 220 / 2, 490, 290],\n      10 : [300, 100 + svgYMid - 220 / 2, 490, 290],\n    }\n    \n    // Define global arrow marker end\n    svg.append(\"defs\")\n      .append(\"marker\")\n      .attr(\"id\", 'marker')\n      .attr(\"viewBox\", \"0 -5 10 10\")\n      .attr(\"refX\", 6)\n      .attr(\"refY\", 0)\n      .attr(\"markerWidth\", 6)\n      .attr(\"markerHeight\", 6)\n      .attr(\"orient\", \"auto\")\n      .append(\"path\")\n      .style('stroke-width', 1.2)\n      .style('fill', 'gray')\n      .style('stroke', 'gray')\n      .attr(\"d\", \"M0,-5L10,0L0,5\");\n\n    // Alternative arrow head style for non-interactive annotation\n    svg.append(\"defs\")\n      .append(\"marker\")\n      .attr(\"id\", 'marker-alt')\n      .attr(\"viewBox\", \"0 -5 10 10\")\n      .attr(\"refX\", 6)\n      .attr(\"refY\", 0)\n      .attr(\"markerWidth\", 6)\n      .attr(\"markerHeight\", 6)\n      .attr(\"orient\", \"auto\")\n      .append(\"path\")\n      .style('fill', 'none')\n      .style('stroke', 'gray')\n      .style('stroke-width', 2)\n      .attr(\"d\", \"M-5,-10L10,0L-5,10\");\n\n    console.time('Construct cnn');\n    model = await loadTrainedModel('PUBLIC_URL/assets/data/fer_tinyVGG/model.json');\n    cnn = await constructCNN(`PUBLIC_URL/assets/img/${selectedImage}`, model);\n    console.timeEnd('Construct cnn');\n    cnnStore.set(cnn);\n    // Ignore the flatten layer for now\n    let flatten = cnn[cnn.length - 2];\n    cnn.splice(cnn.length - 2, 1);\n    cnn.flatten = flatten;\n\n\n    updateCNNLayerRanges();\n\n    // Create and draw the CNN view\n    drawCNN(width, height, cnnGroup, nodeMouseOverHandler,\n      nodeMouseLeaveHandler, nodeClickHandler);\n  })\n\n  const detailedButtonClicked = () => {\n    detailedMode = !detailedMode;\n    detailedModeStore.set(detailedMode);\n\n    if (!isInIntermediateView){\n      // Show the legend\n      svg.selectAll(`.${selectedScaleLevel}-legend`)\n        .classed('hidden', !detailedMode);\n      \n      svg.selectAll('.input-legend').classed('hidden', !detailedMode);\n      svg.selectAll('.output-legend').classed('hidden', !detailedMode);\n    }\n    \n    // Switch the layer name\n    svg.selectAll('.layer-detailed-label')\n      .classed('hidden', !detailedMode);\n    \n    svg.selectAll('.layer-label')\n      .classed('hidden', detailedMode);\n  }\n\n  const imageOptionClicked = async (e) => {\n    let newImageName = d3.select(e.target).attr('data-imageName');\n\n    if (newImageName !== selectedImage) {\n      selectedImage = newImageName;\n\n      // Re-compute the CNN using the new input image\n      cnn = await constructCNN(`PUBLIC_URL/assets/img/${selectedImage}`, model);\n\n      // Ignore the flatten layer for now\n      let flatten = cnn[cnn.length - 2];\n      cnn.splice(cnn.length - 2, 1);\n      cnn.flatten = flatten;\n      cnnStore.set(cnn);\n\n      // Update all scales used in the CNN view\n      updateCNNLayerRanges();\n      updateCNN();\n    }\n  }\n\n  const customImageClicked = () => {\n\n    // Case 1: there is no custom image -> show the modal to get user input\n    if (customImageURL === null) {\n      modalInfo.show = true;\n      modalInfo.preImage = selectedImage;\n      modalStore.set(modalInfo);\n    }\n\n    // Case 2: there is an existing custom image, not the focus -> switch to this image\n    else if (selectedImage !== 'custom') {\n      let fakeEvent = {detail: {url: customImageURL}};\n      handleCustomImage(fakeEvent);\n    }\n\n    // Case 3: there is an existing custom image, and its the focus -> let user\n    // upload datatrainx new image\n    else {\n      modalInfo.show = true;\n      modalInfo.preImage = selectedImage;\n      modalStore.set(modalInfo);\n    }\n\n    if (selectedImage !== 'custom') {\n      selectedImage = 'custom';\n    }\n\n  }\n\n  const handleModalCanceled = (event) => {\n    // User cancels the modal without datatrainx successful image, so we restore the\n    // previous selected image as input\n    selectedImage = event.detail.preImage;\n  }\n\n  const handleCustomImage = async (event) => {\n    // User gives datatrainx valid image URL\n    customImageURL = event.detail.url;\n\n    // Re-compute the CNN using the new input image\n    cnn = await constructCNN(customImageURL, model);\n\n    // Ignore the flatten layer for now\n    let flatten = cnn[cnn.length - 2];\n    cnn.splice(cnn.length - 2, 1);\n    cnn.flatten = flatten;\n    cnnStore.set(cnn);\n\n    // Update the UI\n    let customImageSlot = d3.select(overviewComponent)\n      .select('.custom-image').node();\n    drawCustomImage(customImageSlot, cnn[0]);\n\n    // Update all scales used in the CNN view\n    updateCNNLayerRanges();\n    updateCNN();\n  }\n\n  function handleExitFromDetiledConvView(event) {\n    if (event.detail.text) {\n      detailedViewNum = undefined;\n      svg.select(`rect#underneath-gateway-${selectedNodeIndex}`)\n        .style('opacity', 0);\n      selectedNodeIndex = -1; \n    }\n  }\n\n  function handleExitFromDetiledPoolView(event) {\n    if (event.detail.text) {\n      quitActPoolDetailView();\n      isExitedFromDetailedView = true;\n    }\n  }\n\n  function handleExitFromDetiledActivationView(event) {\n    if (event.detail.text) {\n      quitActPoolDetailView();\n      isExitedFromDetailedView = true;\n    }\n  }\n\n  function handleExitFromDetiledSoftmaxView(event) {\n    softmaxDetailViewInfo.show = false;\n    softmaxDetailViewStore.set(softmaxDetailViewInfo);\n  }\n\n</script>\n\n<style>\n  .overview {\n    padding: 0;\n    height: 100%;\n    width: 100%;\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: flex-start;\n  }\n\n  .control-container {\n    padding: 5px 20px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n  }\n\n  .right-control {\n    display: flex;\n  }\n\n  .left-control {\n    display: flex;\n    align-items: center;\n  }\n\n  .control > .select > #level-select {\n    padding-left: 4em;\n    padding-right: 2em;\n  }\n\n  .cnn {\n    width: 100%;\n    padding: 0;\n    background: var(--light-gray);\n    display: flex;\n  }\n\n  svg {\n    margin: 0 auto;\n    min-height: 490px;\n    height: calc(100vh - 100px);\n    width: 100vw;\n  }\n\n  .is-very-small {\n    font-size: 12px;\n  }\n\n  .blue-button {\n    margin-right: 10px;\n    color: #dbdbdb;\n    transition: border-color 300ms ease-in-out, color 200ms ease-in-out;\n  }\n\n  .is-success{\n    margin-right: 10px;\n  }\n\n  .blue-button.is-activated, .blue-button.is-activated:hover {\n    color: #3273dc;\n    border-color: #3273dc;\n  }\n\n  .blue-button:hover {\n    color: #b5b5b5;\n  }\n\n  #hover-label {\n    transition: opacity 300ms ease-in-out;\n    text-overflow: ellipsis;\n    pointer-events: none;\n    margin-left: 5px;\n  }\n\n  .image-container {\n    width: 40px;\n    height: 40px;\n    border-radius: 4px;\n    display: inline-block;\n    position: relative;\n    border: 2.5px solid #1E1E1E;\n    margin-right: 10px;\n    cursor: pointer;\n    pointer-events: all;\n    transition: border 300ms ease-in-out;\n  }\n\n  .image-container img {\n    object-fit: cover;\n    max-width: 100%;\n    max-height: 100%;\n    z-index: -1;\n    transition: opacity 300ms ease-in-out;\n  }\n\n  .image-container.inactive {\n    border: 2.5px solid rgb(220, 220, 220);\n  }\n\n  .image-container.inactive > img {\n    opacity: 0.3;\n  }\n\n  .image-container.inactive:hover > img {\n    opacity: 0.6;\n  }\n\n  .image-container.inactive.disabled {\n    border: 2.5px solid rgb(220, 220, 220);\n    cursor: not-allowed;\n  }\n\n  .image-container.inactive.disabled:hover {\n    border: 2.5px solid rgb(220, 220, 220);\n    cursor: not-allowed;\n  }\n\n  .image-container.inactive.disabled > img {\n    opacity: 0.3;\n    cursor: not-allowed;\n  }\n\n  .image-container.inactive.disabled:hover > img {\n    opacity: 0.3;\n    cursor: not-allowed;\n  }\n\n  .image-container.inactive > .edit-icon {\n    color: #BABABA;\n  }\n\n  .image-container.inactive:hover > .edit-icon {\n    color: #777777;\n  }\n\n  .image-container.inactive:hover {\n    border: 2.5px solid #1E1E1E;\n  }\n\n  .edit-icon {\n    position: absolute;\n    bottom: -6px;\n    right: -7px;\n    font-size: 7px;\n    color: #1E1E1E;\n    transition: color 300ms ease-in-out;\n  }\n\n  :global(canvas) {\n    image-rendering: crisp-edges;\n  }\n\n  :global(.layer-label), :global(.layer-detailed-label), :global(.layer-intermediate-label) {\n    font-size: 12px;\n    opacity: 0.8;\n    text-anchor: middle;\n  }\n\n  :global(.colorLegend) {\n    font-size: 10px;\n  }\n\n  :global(.legend) {\n    transition: opacity 400ms ease-in-out;\n  }\n\n  :global(.legend > rect) {\n    opacity: 1;\n  }\n\n  :global(.legend text), :global(.legend line), :global(.legend path) {\n    opacity: 0.7;\n  }\n\n  :global(.legend#output-legend > rect) {\n    opacity: 1;\n  }\n\n  :global(.hidden) {\n    opacity: 0;\n    pointer-events: none;\n  }\n\n  :global(.very-strong) {\n    stroke-width: 3px;\n  }\n\n  :global(.bounding), :global(.edge), :global(.edge-group),\n  :global(foreignObject), :global(.bounding-flatten),\n  :global(.underneath-gateway), :global(.input-annotation) {\n    transition: opacity 300ms ease-in-out;\n  }\n\n  :global(rect.bounding) {\n    transition: stroke-width 800ms ease-in-out, opacity 300ms ease-in-out;\n  }\n\n  :global(.annotation-text) {\n    pointer-events: none;\n    font-size: 10px;\n    font-style: italic;\n    fill: gray;\n  }\n\n  /* Change the cursor style on the detailed view input and output matrices */\n  :global(rect.square) {\n    cursor: crosshair;\n  }\n\n  :global(.animation-control-button) {\n    font-family: FontAwesome;\n    opacity: 0.8;\n    cursor: pointer;\n  }\n\n</style>\n\n<div class=\"overview\"\n  bind:this={overviewComponent}>\n\n  <div class=\"control-container\">\n\n    <div class=\"left-control\">\n      {#each imageOptions as image, i}\n        <div class=\"image-container\"\n          on:click={disableControl ? () => {} : imageOptionClicked}\n          class:inactive={selectedImage !== image.file}\n          class:disabled={disableControl}\n          data-imageName={image.file}>\n          <img src=\"PUBLIC_URL/assets/img/{image.file}\"\n            alt=\"image option\"\n            title=\"{image.class}\"\n            data-imageName={image.file}/>\n        </div>\n      {/each}\n\n      {#if overviewConfig.modeImg == 3}\n      <!-- The plus button -->\n        <div class=\"image-container\"\n          class:inactive={selectedImage !== 'custom'}\n          class:disabled={disableControl}\n          data-imageName={'custom'}\n          on:click={disableControl ? () => {} : customImageClicked}>\n\n          <img class=\"custom-image\"\n            src=\"PUBLIC_URL/assets/img/plus.svg\"\n            alt=\"plus button\"\n            title=\"Add new input image\"\n            data-imageName=\"custom\"/>\n\n          <span class=\"fa-stack edit-icon\"\n            class:hidden={customImageURL === null}>\n            <i class=\"fas fa-circle fa-stack-2x\"></i>\n            <i class=\"fas fa-pen fa-stack-1x fa-inverse\"></i>\n          </span>\n\n        </div>\n      {/if}\n      <button class=\"button is-very-small is-link is-light\"\n        id=\"hover-label\"\n        style=\"opacity:{hoverInfo.show ? 1 : 0}\">\n        <span class=\"icon\" style=\"margin-right: 5px;\">\n          <i class=\"fas fa-crosshairs \"></i>\n        </span>\n        <span id=\"hover-label-text\">\n          {hoverInfo.text}\n        </span>\n      </button>\n    </div>\n\n    <div class=\"right-control\">\n\n        <button class=\"button is-success is-very-small is-activated\" on:click={afficheStart}>\n        <span class=\"icon\">\n          <i class=\"fa-solid fa-address-card\"></i>\n        </span>\n            <span>\n          Faire le test\n        </span>\n        </button>\n\n\n        <button class=\"button blue-button is-very-small\"\n        id=\"detailed-button\"\n        disabled={disableControl}\n        class:is-activated={detailedMode}\n        on:click={detailedButtonClicked}>\n        <span class=\"icon\">\n          <i class=\"fas fa-eye\"></i>\n        </span>\n        <span id=\"hover-label-text\">\n          Détail\n        </span>\n      </button>\n\n      <div class=\"control is-very-small has-icons-left\"\n        title=\"Change color scale range\">\n        <span class=\"icon is-left\">\n          <i class=\"fas fa-palette\"></i>\n        </span>\n\n        <div class=\"select\">\n          <select bind:value={selectedScaleLevel} id=\"level-select\"\n            disabled={disableControl}>\n            <option value=\"local\">Unit</option>\n            <option value=\"module\">Module</option>\n            <option value=\"global\">Global</option>\n          </select>\n        </div>\n      </div>\n\n    </div>\n    \n  </div>\n\n  <div class=\"cnn\">\n    <svg id=\"cnn-svg\"></svg>\n  </div>\n</div>\n\n<div id='detailview'>\n  {#if selectedNode.data && selectedNode.data.type === 'conv' && selectedNodeIndex != -1}\n    <ConvolutionView on:message={handleExitFromDetiledConvView} input={nodeData[selectedNodeIndex].input} \n                      kernel={nodeData[selectedNodeIndex].kernel}\n                      dataRange={nodeData.colorRange}\n                      colorScale={nodeData.inputIsInputLayer ?\n                        layerColorScales.input[0] : layerColorScales.conv}\n                      isInputInputLayer={nodeData.inputIsInputLayer}\n                      isExited={isExitedFromCollapse}/>\n  {:else if selectedNode.data && selectedNode.data.type === 'relu'}\n    <ActivationView on:message={handleExitFromDetiledActivationView} input={nodeData[0].input} \n                    output={nodeData[0].output}\n                    dataRange={nodeData.colorRange}\n                    isExited={isExitedFromDetailedView}/>\n  {:else if selectedNode.data && selectedNode.data.type === 'pool'}\n    <PoolView on:message={handleExitFromDetiledPoolView} input={nodeData[0].input} \n              kernelLength={2}\n              dataRange={nodeData.colorRange}\n              isExited={isExitedFromDetailedView}/>\n  {:else if softmaxDetailViewInfo.show}\n    <SoftmaxView logits={softmaxDetailViewInfo.logits}\n                 logitColors={softmaxDetailViewInfo.logitColors}\n                 selectedI={softmaxDetailViewInfo.selectedI}\n                 highlightI={softmaxDetailViewInfo.highlightI}\n                 outputName={softmaxDetailViewInfo.outputName}\n                 outputValue={softmaxDetailViewInfo.outputValue}\n                 startAnimation={softmaxDetailViewInfo.startAnimation}\n                 on:xClicked={handleExitFromDetiledSoftmaxView}\n                 on:mouseOver={softmaxDetailViewMouseOverHandler}\n                 on:mouseLeave={softmaxDetailViewMouseLeaveHandler}/>\n  {/if}\n</div>\n\n<Modal on:xClicked={handleModalCanceled}\n  on:urlTyped={handleCustomImage}/>","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const EPSILON_FLOAT32 = 1e-7;\nexport const EPSILON_FLOAT16 = 1e-4;\n/** Convenient class for storing tensor-related data. */\nexport class DataStorage {\n    constructor(backend, dataMover) {\n        this.backend = backend;\n        this.dataMover = dataMover;\n        this.data = new WeakMap();\n        this.dataIdsCount = 0;\n    }\n    get(dataId) {\n        if (!this.data.has(dataId)) {\n            this.dataMover.moveData(this.backend, dataId);\n        }\n        return this.data.get(dataId);\n    }\n    set(dataId, value) {\n        this.dataIdsCount++;\n        this.data.set(dataId, value);\n    }\n    has(dataId) {\n        return this.data.has(dataId);\n    }\n    delete(dataId) {\n        this.dataIdsCount--;\n        return this.data.delete(dataId);\n    }\n    numDataIds() {\n        return this.dataIdsCount;\n    }\n}\n/**\n * The interface that defines the kernels that should be implemented when\n * adding a new backend. New backends don't need to implement every one of the\n * methods, this can be done gradually (throw an error for unimplemented\n * methods).\n */\nexport class KernelBackend {\n    refCount(dataId) {\n        return notYetImplemented('refCount');\n    }\n    incRef(dataId) {\n        return notYetImplemented('incRef');\n    }\n    timerAvailable() {\n        return true;\n    }\n    time(f) {\n        return notYetImplemented('time');\n    }\n    read(dataId) {\n        return notYetImplemented('read');\n    }\n    readSync(dataId) {\n        return notYetImplemented('readSync');\n    }\n    readToGPU(dataId, options) {\n        return notYetImplemented('readToGPU');\n    }\n    numDataIds() {\n        return notYetImplemented('numDataIds');\n    }\n    disposeData(dataId, force) {\n        return notYetImplemented('disposeData');\n    }\n    write(values, shape, dtype) {\n        return notYetImplemented('write');\n    }\n    move(dataId, values, shape, dtype, refCount) {\n        return notYetImplemented('move');\n    }\n    memory() {\n        return notYetImplemented('memory');\n    }\n    /** Returns the highest precision for floats in bits (e.g. 16 or 32) */\n    floatPrecision() {\n        return notYetImplemented('floatPrecision');\n    }\n    /** Returns the smallest representable number.  */\n    epsilon() {\n        return this.floatPrecision() === 32 ? EPSILON_FLOAT32 : EPSILON_FLOAT16;\n    }\n    dispose() {\n        return notYetImplemented('dispose');\n    }\n}\nfunction notYetImplemented(kernelName) {\n    throw new Error(`'${kernelName}' not yet implemented or not found in the registry. ` +\n        `This kernel may not be supported by the tfjs backend you have chosen`);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFja2VuZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29yZS9zcmMvYmFja2VuZHMvYmFja2VuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFLSCxNQUFNLENBQUMsTUFBTSxlQUFlLEdBQUcsSUFBSSxDQUFDO0FBQ3BDLE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRyxJQUFJLENBQUM7QUF1QnBDLHdEQUF3RDtBQUN4RCxNQUFNLE9BQU8sV0FBVztJQUl0QixZQUFvQixPQUFzQixFQUFVLFNBQW9CO1FBQXBELFlBQU8sR0FBUCxPQUFPLENBQWU7UUFBVSxjQUFTLEdBQVQsU0FBUyxDQUFXO1FBSGhFLFNBQUksR0FBRyxJQUFJLE9BQU8sRUFBYSxDQUFDO1FBQ2hDLGlCQUFZLEdBQUcsQ0FBQyxDQUFDO0lBRWtELENBQUM7SUFFNUUsR0FBRyxDQUFDLE1BQWM7UUFDaEIsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxFQUFFO1lBQzFCLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDLENBQUM7U0FDL0M7UUFDRCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFFRCxHQUFHLENBQUMsTUFBYyxFQUFFLEtBQVE7UUFDMUIsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBRUQsR0FBRyxDQUFDLE1BQWM7UUFDaEIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBRUQsTUFBTSxDQUFDLE1BQWM7UUFDbkIsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1FBQ3BCLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVELFVBQVU7UUFDUixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDM0IsQ0FBQztDQUNGO0FBaUJEOzs7OztHQUtHO0FBQ0gsTUFBTSxPQUFPLGFBQWE7SUFDeEIsUUFBUSxDQUFDLE1BQWM7UUFDckIsT0FBTyxpQkFBaUIsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBQ0QsTUFBTSxDQUFDLE1BQWM7UUFDbkIsT0FBTyxpQkFBaUIsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBQ0QsY0FBYztRQUNaLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUNELElBQUksQ0FBQyxDQUFhO1FBQ2hCLE9BQU8saUJBQWlCLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUNELElBQUksQ0FBQyxNQUFjO1FBQ2pCLE9BQU8saUJBQWlCLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUNELFFBQVEsQ0FBQyxNQUFjO1FBQ3JCLE9BQU8saUJBQWlCLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDdkMsQ0FBQztJQUNELFNBQVMsQ0FBQyxNQUFjLEVBQUUsT0FBMEI7UUFDbEQsT0FBTyxpQkFBaUIsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBQ0QsVUFBVTtRQUNSLE9BQU8saUJBQWlCLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDekMsQ0FBQztJQUNELFdBQVcsQ0FBQyxNQUFjLEVBQUUsS0FBZTtRQUN6QyxPQUFPLGlCQUFpQixDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFDRCxLQUFLLENBQUMsTUFBcUIsRUFBRSxLQUFlLEVBQUUsS0FBZTtRQUMzRCxPQUFPLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3BDLENBQUM7SUFDRCxJQUFJLENBQ0EsTUFBYyxFQUFFLE1BQXFCLEVBQUUsS0FBZSxFQUFFLEtBQWUsRUFDdkUsUUFBZ0I7UUFDbEIsT0FBTyxpQkFBaUIsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBQ0QsTUFBTTtRQUNKLE9BQU8saUJBQWlCLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUNELHVFQUF1RTtJQUN2RSxjQUFjO1FBQ1osT0FBTyxpQkFBaUIsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFDRCxrREFBa0Q7SUFDbEQsT0FBTztRQUNMLE9BQU8sSUFBSSxDQUFDLGNBQWMsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxlQUFlLENBQUM7SUFDMUUsQ0FBQztJQUNELE9BQU87UUFDTCxPQUFPLGlCQUFpQixDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3RDLENBQUM7Q0FDRjtBQUVELFNBQVMsaUJBQWlCLENBQUMsVUFBa0I7SUFDM0MsTUFBTSxJQUFJLEtBQUssQ0FDWCxJQUFJLFVBQVUsc0RBQXNEO1FBQ3BFLHNFQUFzRSxDQUFDLENBQUM7QUFDOUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtCYWNrZW5kLCBEYXRhSWQsIERhdGFUb0dQVU9wdGlvbnMsIEdQVURhdGF9IGZyb20gJy4uL3RlbnNvcic7XG5pbXBvcnQge0JhY2tlbmRWYWx1ZXMsIERhdGFUeXBlfSBmcm9tICcuLi90eXBlcyc7XG5cbmV4cG9ydCBjb25zdCBFUFNJTE9OX0ZMT0FUMzIgPSAxZS03O1xuZXhwb3J0IGNvbnN0IEVQU0lMT05fRkxPQVQxNiA9IDFlLTQ7XG5cbi8vIFJlcXVpcmVkIGluZm9ybWF0aW9uIGZvciBhbGwgYmFja2VuZHMuXG5leHBvcnQgaW50ZXJmYWNlIEJhY2tlbmRUaW1pbmdJbmZvIHtcbiAga2VybmVsTXM6IG51bWJlcnx7ZXJyb3I6IHN0cmluZ307XG4gIGdldEV4dHJhUHJvZmlsZUluZm8/KCk6IHN0cmluZzsgIC8vIGEgZmllbGQgZm9yIGFkZGl0aW9uYWwgdGltaW5nIGluZm9ybWF0aW9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGUuZy4gcGFja2luZyAvIHVucGFja2luZyBmb3IgV2ViR0wgYmFja2VuZFxufVxuXG5leHBvcnQgaW50ZXJmYWNlIFRlbnNvclN0b3JhZ2Uge1xuICByZWFkKGRhdGFJZDogRGF0YUlkKTogUHJvbWlzZTxCYWNrZW5kVmFsdWVzPjtcbiAgcmVhZFN5bmMoZGF0YUlkOiBEYXRhSWQpOiBCYWNrZW5kVmFsdWVzO1xuICBkaXNwb3NlRGF0YShkYXRhSWQ6IERhdGFJZCwgZm9yY2U/OiBib29sZWFuKTogYm9vbGVhbjtcbiAgd3JpdGUodmFsdWVzOiBCYWNrZW5kVmFsdWVzLCBzaGFwZTogbnVtYmVyW10sIGR0eXBlOiBEYXRhVHlwZSk6IERhdGFJZDtcbiAgbW92ZShcbiAgICAgIGRhdGFJZDogRGF0YUlkLCB2YWx1ZXM6IEJhY2tlbmRWYWx1ZXMsIHNoYXBlOiBudW1iZXJbXSwgZHR5cGU6IERhdGFUeXBlLFxuICAgICAgcmVmQ291bnQ6IG51bWJlcik6IHZvaWQ7XG4gIG1lbW9yeSgpOiB7dW5yZWxpYWJsZTogYm9vbGVhbjt9OyAgLy8gQmFja2VuZC1zcGVjaWZpYyBpbmZvcm1hdGlvbi5cbiAgLyoqIFJldHVybnMgbnVtYmVyIG9mIGRhdGEgaWRzIGN1cnJlbnRseSBpbiB0aGUgc3RvcmFnZS4gKi9cbiAgbnVtRGF0YUlkcygpOiBudW1iZXI7XG4gIHJlZkNvdW50KGRhdGFJZDogRGF0YUlkKTogbnVtYmVyO1xufVxuXG4vKiogQ29udmVuaWVudCBjbGFzcyBmb3Igc3RvcmluZyB0ZW5zb3ItcmVsYXRlZCBkYXRhLiAqL1xuZXhwb3J0IGNsYXNzIERhdGFTdG9yYWdlPFQ+IHtcbiAgcHJpdmF0ZSBkYXRhID0gbmV3IFdlYWtNYXA8RGF0YUlkLCBUPigpO1xuICBwcml2YXRlIGRhdGFJZHNDb3VudCA9IDA7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBiYWNrZW5kOiBLZXJuZWxCYWNrZW5kLCBwcml2YXRlIGRhdGFNb3ZlcjogRGF0YU1vdmVyKSB7fVxuXG4gIGdldChkYXRhSWQ6IERhdGFJZCkge1xuICAgIGlmICghdGhpcy5kYXRhLmhhcyhkYXRhSWQpKSB7XG4gICAgICB0aGlzLmRhdGFNb3Zlci5tb3ZlRGF0YSh0aGlzLmJhY2tlbmQsIGRhdGFJZCk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmRhdGEuZ2V0KGRhdGFJZCk7XG4gIH1cblxuICBzZXQoZGF0YUlkOiBEYXRhSWQsIHZhbHVlOiBUKTogdm9pZCB7XG4gICAgdGhpcy5kYXRhSWRzQ291bnQrKztcbiAgICB0aGlzLmRhdGEuc2V0KGRhdGFJZCwgdmFsdWUpO1xuICB9XG5cbiAgaGFzKGRhdGFJZDogRGF0YUlkKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuZGF0YS5oYXMoZGF0YUlkKTtcbiAgfVxuXG4gIGRlbGV0ZShkYXRhSWQ6IERhdGFJZCk6IGJvb2xlYW4ge1xuICAgIHRoaXMuZGF0YUlkc0NvdW50LS07XG4gICAgcmV0dXJuIHRoaXMuZGF0YS5kZWxldGUoZGF0YUlkKTtcbiAgfVxuXG4gIG51bURhdGFJZHMoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5kYXRhSWRzQ291bnQ7XG4gIH1cbn1cblxuZXhwb3J0IGludGVyZmFjZSBEYXRhTW92ZXIge1xuICAvKipcbiAgICogVG8gYmUgY2FsbGVkIGJ5IGJhY2tlbmRzIHdoZW5ldmVyIHRoZXkgc2VlIGEgZGF0YUlkIHRoYXQgdGhleSBkb24ndCBvd24uXG4gICAqIFVwb24gY2FsbGluZyB0aGlzIG1ldGhvZCwgdGhlIG1vdmVyIHdpbGwgZmV0Y2ggdGhlIHRlbnNvciBmcm9tIGFub3RoZXJcbiAgICogYmFja2VuZCBhbmQgcmVnaXN0ZXIgaXQgd2l0aCB0aGUgY3VycmVudCBhY3RpdmUgYmFja2VuZC5cbiAgICovXG4gIG1vdmVEYXRhKGJhY2tlbmQ6IEtlcm5lbEJhY2tlbmQsIGRhdGFJZDogRGF0YUlkKTogdm9pZDtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBCYWNrZW5kVGltZXIge1xuICAvLyBjaGVjayBpZiBiYWNrZW5kIHRpbWVyIGlzIGF2YWlsYWJsZVxuICB0aW1lckF2YWlsYWJsZSgpOiBib29sZWFuO1xuICB0aW1lKGY6ICgpID0+IHZvaWQpOiBQcm9taXNlPEJhY2tlbmRUaW1pbmdJbmZvPjtcbn1cblxuLyoqXG4gKiBUaGUgaW50ZXJmYWNlIHRoYXQgZGVmaW5lcyB0aGUga2VybmVscyB0aGF0IHNob3VsZCBiZSBpbXBsZW1lbnRlZCB3aGVuXG4gKiBhZGRpbmcgYSBuZXcgYmFja2VuZC4gTmV3IGJhY2tlbmRzIGRvbid0IG5lZWQgdG8gaW1wbGVtZW50IGV2ZXJ5IG9uZSBvZiB0aGVcbiAqIG1ldGhvZHMsIHRoaXMgY2FuIGJlIGRvbmUgZ3JhZHVhbGx5ICh0aHJvdyBhbiBlcnJvciBmb3IgdW5pbXBsZW1lbnRlZFxuICogbWV0aG9kcykuXG4gKi9cbmV4cG9ydCBjbGFzcyBLZXJuZWxCYWNrZW5kIGltcGxlbWVudHMgVGVuc29yU3RvcmFnZSwgQmFja2VuZCwgQmFja2VuZFRpbWVyIHtcbiAgcmVmQ291bnQoZGF0YUlkOiBEYXRhSWQpOiBudW1iZXIge1xuICAgIHJldHVybiBub3RZZXRJbXBsZW1lbnRlZCgncmVmQ291bnQnKTtcbiAgfVxuICBpbmNSZWYoZGF0YUlkOiBEYXRhSWQpOiB2b2lkIHtcbiAgICByZXR1cm4gbm90WWV0SW1wbGVtZW50ZWQoJ2luY1JlZicpO1xuICB9XG4gIHRpbWVyQXZhaWxhYmxlKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHRpbWUoZjogKCkgPT4gdm9pZCk6IFByb21pc2U8QmFja2VuZFRpbWluZ0luZm8+IHtcbiAgICByZXR1cm4gbm90WWV0SW1wbGVtZW50ZWQoJ3RpbWUnKTtcbiAgfVxuICByZWFkKGRhdGFJZDogb2JqZWN0KTogUHJvbWlzZTxCYWNrZW5kVmFsdWVzPiB7XG4gICAgcmV0dXJuIG5vdFlldEltcGxlbWVudGVkKCdyZWFkJyk7XG4gIH1cbiAgcmVhZFN5bmMoZGF0YUlkOiBvYmplY3QpOiBCYWNrZW5kVmFsdWVzIHtcbiAgICByZXR1cm4gbm90WWV0SW1wbGVtZW50ZWQoJ3JlYWRTeW5jJyk7XG4gIH1cbiAgcmVhZFRvR1BVKGRhdGFJZDogb2JqZWN0LCBvcHRpb25zPzogRGF0YVRvR1BVT3B0aW9ucyk6IEdQVURhdGEge1xuICAgIHJldHVybiBub3RZZXRJbXBsZW1lbnRlZCgncmVhZFRvR1BVJyk7XG4gIH1cbiAgbnVtRGF0YUlkcygpOiBudW1iZXIge1xuICAgIHJldHVybiBub3RZZXRJbXBsZW1lbnRlZCgnbnVtRGF0YUlkcycpO1xuICB9XG4gIGRpc3Bvc2VEYXRhKGRhdGFJZDogb2JqZWN0LCBmb3JjZT86IGJvb2xlYW4pOiBib29sZWFuIHtcbiAgICByZXR1cm4gbm90WWV0SW1wbGVtZW50ZWQoJ2Rpc3Bvc2VEYXRhJyk7XG4gIH1cbiAgd3JpdGUodmFsdWVzOiBCYWNrZW5kVmFsdWVzLCBzaGFwZTogbnVtYmVyW10sIGR0eXBlOiBEYXRhVHlwZSk6IERhdGFJZCB7XG4gICAgcmV0dXJuIG5vdFlldEltcGxlbWVudGVkKCd3cml0ZScpO1xuICB9XG4gIG1vdmUoXG4gICAgICBkYXRhSWQ6IERhdGFJZCwgdmFsdWVzOiBCYWNrZW5kVmFsdWVzLCBzaGFwZTogbnVtYmVyW10sIGR0eXBlOiBEYXRhVHlwZSxcbiAgICAgIHJlZkNvdW50OiBudW1iZXIpOiB2b2lkIHtcbiAgICByZXR1cm4gbm90WWV0SW1wbGVtZW50ZWQoJ21vdmUnKTtcbiAgfVxuICBtZW1vcnkoKToge3VucmVsaWFibGU6IGJvb2xlYW47IHJlYXNvbnM/OiBzdHJpbmdbXX0ge1xuICAgIHJldHVybiBub3RZZXRJbXBsZW1lbnRlZCgnbWVtb3J5Jyk7XG4gIH1cbiAgLyoqIFJldHVybnMgdGhlIGhpZ2hlc3QgcHJlY2lzaW9uIGZvciBmbG9hdHMgaW4gYml0cyAoZS5nLiAxNiBvciAzMikgKi9cbiAgZmxvYXRQcmVjaXNpb24oKTogMTZ8MzIge1xuICAgIHJldHVybiBub3RZZXRJbXBsZW1lbnRlZCgnZmxvYXRQcmVjaXNpb24nKTtcbiAgfVxuICAvKiogUmV0dXJucyB0aGUgc21hbGxlc3QgcmVwcmVzZW50YWJsZSBudW1iZXIuICAqL1xuICBlcHNpbG9uKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuZmxvYXRQcmVjaXNpb24oKSA9PT0gMzIgPyBFUFNJTE9OX0ZMT0FUMzIgOiBFUFNJTE9OX0ZMT0FUMTY7XG4gIH1cbiAgZGlzcG9zZSgpOiB2b2lkIHtcbiAgICByZXR1cm4gbm90WWV0SW1wbGVtZW50ZWQoJ2Rpc3Bvc2UnKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBub3RZZXRJbXBsZW1lbnRlZChrZXJuZWxOYW1lOiBzdHJpbmcpOiBuZXZlciB7XG4gIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGAnJHtrZXJuZWxOYW1lfScgbm90IHlldCBpbXBsZW1lbnRlZCBvciBub3QgZm91bmQgaW4gdGhlIHJlZ2lzdHJ5LiBgICtcbiAgICAgIGBUaGlzIGtlcm5lbCBtYXkgbm90IGJlIHN1cHBvcnRlZCBieSB0aGUgdGZqcyBiYWNrZW5kIHlvdSBoYXZlIGNob3NlbmApO1xufVxuIl19","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Shuffles the array in-place using Fisher-Yates algorithm.\n *\n * ```js\n * const a = [1, 2, 3, 4, 5];\n * tf.util.shuffle(a);\n * console.log(a);\n * ```\n *\n * @param array The array to shuffle in-place.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\n// tslint:disable-next-line:no-any\nexport function shuffle(array) {\n    let counter = array.length;\n    let index = 0;\n    // While there are elements in the array\n    while (counter > 0) {\n        // Pick a random index\n        index = (Math.random() * counter) | 0;\n        // Decrease counter by 1\n        counter--;\n        // And swap the last element with it\n        swap(array, counter, index);\n    }\n}\n/**\n * Shuffles two arrays in-place the same way using Fisher-Yates algorithm.\n *\n * ```js\n * const a = [1,2,3,4,5];\n * const b = [11,22,33,44,55];\n * tf.util.shuffleCombo(a, b);\n * console.log(a, b);\n * ```\n *\n * @param array The first array to shuffle in-place.\n * @param array2 The second array to shuffle in-place with the same permutation\n *     as the first array.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function shuffleCombo(\n// tslint:disable-next-line:no-any\narray, \n// tslint:disable-next-line:no-any\narray2) {\n    if (array.length !== array2.length) {\n        throw new Error(`Array sizes must match to be shuffled together ` +\n            `First array length was ${array.length}` +\n            `Second array length was ${array2.length}`);\n    }\n    let counter = array.length;\n    let index = 0;\n    // While there are elements in the array\n    while (counter > 0) {\n        // Pick a random index\n        index = (Math.random() * counter) | 0;\n        // Decrease counter by 1\n        counter--;\n        // And swap the last element of each array with it\n        swap(array, counter, index);\n        swap(array2, counter, index);\n    }\n}\n/** Clamps a value to a specified range. */\nexport function clamp(min, x, max) {\n    return Math.max(min, Math.min(x, max));\n}\nexport function nearestLargerEven(val) {\n    return val % 2 === 0 ? val : val + 1;\n}\nexport function swap(object, left, right) {\n    const temp = object[left];\n    object[left] = object[right];\n    object[right] = temp;\n}\nexport function sum(arr) {\n    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        sum += arr[i];\n    }\n    return sum;\n}\n/**\n * Returns a sample from a uniform [a, b) distribution.\n *\n * @param a The minimum support (inclusive).\n * @param b The maximum support (exclusive).\n * @return A pseudorandom number on the half-open interval [a,b).\n */\nexport function randUniform(a, b) {\n    const r = Math.random();\n    return (b * r) + (1 - r) * a;\n}\n/** Returns the squared Euclidean distance between two vectors. */\nexport function distSquared(a, b) {\n    let result = 0;\n    for (let i = 0; i < a.length; i++) {\n        const diff = Number(a[i]) - Number(b[i]);\n        result += diff * diff;\n    }\n    return result;\n}\n/**\n * Asserts that the expression is true. Otherwise throws an error with the\n * provided message.\n *\n * ```js\n * const x = 2;\n * tf.util.assert(x === 2, 'x is not 2');\n * ```\n *\n * @param expr The expression to assert (as a boolean).\n * @param msg A function that returns the message to report when throwing an\n *     error. We use a function for performance reasons.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function assert(expr, msg) {\n    if (!expr) {\n        throw new Error(typeof msg === 'string' ? msg : msg());\n    }\n}\nexport function assertShapesMatch(shapeA, shapeB, errorMessagePrefix = '') {\n    assert(arraysEqual(shapeA, shapeB), () => errorMessagePrefix + ` Shapes ${shapeA} and ${shapeB} must match`);\n}\nexport function assertNonNull(a) {\n    assert(a != null, () => `The input to the tensor constructor must be a non-null value.`);\n}\n// NOTE: We explicitly type out what T extends instead of any so that\n// util.flatten on a nested array of number doesn't try to infer T as a\n// number[][], causing us to explicitly type util.flatten<number>().\n/**\n *  Flattens an arbitrarily nested array.\n *\n * ```js\n * const a = [[1, 2], [3, 4], [5, [6, [7]]]];\n * const flat = tf.util.flatten(a);\n * console.log(flat);\n * ```\n *\n *  @param arr The nested array to flatten.\n *  @param result The destination array which holds the elements.\n *  @param skipTypedArray If true, avoids flattening the typed arrays. Defaults\n *      to false.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function flatten(arr, result = [], skipTypedArray = false) {\n    if (result == null) {\n        result = [];\n    }\n    if (Array.isArray(arr) || isTypedArray(arr) && !skipTypedArray) {\n        for (let i = 0; i < arr.length; ++i) {\n            flatten(arr[i], result, skipTypedArray);\n        }\n    }\n    else {\n        result.push(arr);\n    }\n    return result;\n}\n/**\n * Returns the size (number of elements) of the tensor given its shape.\n *\n * ```js\n * const shape = [3, 4, 2];\n * const size = tf.util.sizeFromShape(shape);\n * console.log(size);\n * ```\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function sizeFromShape(shape) {\n    if (shape.length === 0) {\n        // Scalar.\n        return 1;\n    }\n    let size = shape[0];\n    for (let i = 1; i < shape.length; i++) {\n        size *= shape[i];\n    }\n    return size;\n}\nexport function isScalarShape(shape) {\n    return shape.length === 0;\n}\nexport function arraysEqual(n1, n2) {\n    if (n1 === n2) {\n        return true;\n    }\n    if (n1 == null || n2 == null) {\n        return false;\n    }\n    if (n1.length !== n2.length) {\n        return false;\n    }\n    for (let i = 0; i < n1.length; i++) {\n        if (n1[i] !== n2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function isInt(a) {\n    return a % 1 === 0;\n}\nexport function tanh(x) {\n    // tslint:disable-next-line:no-any\n    if (Math.tanh != null) {\n        // tslint:disable-next-line:no-any\n        return Math.tanh(x);\n    }\n    if (x === Infinity) {\n        return 1;\n    }\n    else if (x === -Infinity) {\n        return -1;\n    }\n    else {\n        const e2x = Math.exp(2 * x);\n        return (e2x - 1) / (e2x + 1);\n    }\n}\nexport function sizeToSquarishShape(size) {\n    const width = Math.ceil(Math.sqrt(size));\n    return [width, Math.ceil(size / width)];\n}\n/**\n * Creates a new array with randomized indicies to a given quantity.\n *\n * ```js\n * const randomTen = tf.util.createShuffledIndices(10);\n * console.log(randomTen);\n * ```\n *\n * @param number Quantity of how many shuffled indicies to create.\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function createShuffledIndices(n) {\n    const shuffledIndices = new Uint32Array(n);\n    for (let i = 0; i < n; ++i) {\n        shuffledIndices[i] = i;\n    }\n    shuffle(shuffledIndices);\n    return shuffledIndices;\n}\nexport function rightPad(a, size) {\n    if (size <= a.length) {\n        return a;\n    }\n    return a + ' '.repeat(size - a.length);\n}\nexport function repeatedTry(checkFn, delayFn = (counter) => 0, maxCounter) {\n    return new Promise((resolve, reject) => {\n        let tryCount = 0;\n        const tryFn = () => {\n            if (checkFn()) {\n                resolve();\n                return;\n            }\n            tryCount++;\n            const nextBackoff = delayFn(tryCount);\n            if (maxCounter != null && tryCount >= maxCounter) {\n                reject();\n                return;\n            }\n            setTimeout(tryFn, nextBackoff);\n        };\n        tryFn();\n    });\n}\n/**\n * Given the full size of the array and a shape that may contain -1 as the\n * implicit dimension, returns the inferred shape where -1 is replaced.\n * E.g. For shape=[2, -1, 3] and size=24, it will return [2, 4, 3].\n *\n * @param shape The shape, which may contain -1 in some dimension.\n * @param size The full size (number of elements) of the array.\n * @return The inferred shape where -1 is replaced with the inferred size.\n */\nexport function inferFromImplicitShape(shape, size) {\n    let shapeProd = 1;\n    let implicitIdx = -1;\n    for (let i = 0; i < shape.length; ++i) {\n        if (shape[i] >= 0) {\n            shapeProd *= shape[i];\n        }\n        else if (shape[i] === -1) {\n            if (implicitIdx !== -1) {\n                throw Error(`Shapes can only have 1 implicit size. ` +\n                    `Found -1 at dim ${implicitIdx} and dim ${i}`);\n            }\n            implicitIdx = i;\n        }\n        else if (shape[i] < 0) {\n            throw Error(`Shapes can not be < 0. Found ${shape[i]} at dim ${i}`);\n        }\n    }\n    if (implicitIdx === -1) {\n        if (size > 0 && size !== shapeProd) {\n            throw Error(`Size(${size}) must match the product of shape ${shape}`);\n        }\n        return shape;\n    }\n    if (shapeProd === 0) {\n        throw Error(`Cannot infer the missing size in [${shape}] when ` +\n            `there are 0 elements`);\n    }\n    if (size % shapeProd !== 0) {\n        throw Error(`The implicit shape can't be a fractional number. ` +\n            `Got ${size} / ${shapeProd}`);\n    }\n    const newShape = shape.slice();\n    newShape[implicitIdx] = size / shapeProd;\n    return newShape;\n}\nexport function parseAxisParam(axis, shape) {\n    const rank = shape.length;\n    // Normalize input\n    axis = axis == null ? shape.map((s, i) => i) : [].concat(axis);\n    // Check for valid range\n    assert(axis.every(ax => ax >= -rank && ax < rank), () => `All values in axis param must be in range [-${rank}, ${rank}) but ` +\n        `got axis ${axis}`);\n    // Check for only integers\n    assert(axis.every(ax => isInt(ax)), () => `All values in axis param must be integers but ` +\n        `got axis ${axis}`);\n    // Handle negative axis.\n    return axis.map(a => a < 0 ? rank + a : a);\n}\n/** Reduces the shape by removing all dimensions of shape 1. */\nexport function squeezeShape(shape, axis) {\n    const newShape = [];\n    const keptDims = [];\n    const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\n    const axes = (axis == null || isEmptyArray) ?\n        null :\n        parseAxisParam(axis, shape).sort();\n    let j = 0;\n    for (let i = 0; i < shape.length; ++i) {\n        if (axes != null) {\n            if (axes[j] === i && shape[i] !== 1) {\n                throw new Error(`Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\n            }\n            if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\n                newShape.push(shape[i]);\n                keptDims.push(i);\n            }\n            if (axes[j] <= i) {\n                j++;\n            }\n        }\n        if (shape[i] !== 1) {\n            newShape.push(shape[i]);\n            keptDims.push(i);\n        }\n    }\n    return { newShape, keptDims };\n}\nexport function getTypedArrayFromDType(dtype, size) {\n    let values = null;\n    if (dtype == null || dtype === 'float32') {\n        values = new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        values = new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        values = new Uint8Array(size);\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n    return values;\n}\nexport function getArrayFromDType(dtype, size) {\n    let values = null;\n    if (dtype == null || dtype === 'float32') {\n        values = new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        values = new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        values = new Uint8Array(size);\n    }\n    else if (dtype === 'string') {\n        values = new Array(size);\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n    return values;\n}\nexport function checkConversionForErrors(vals, dtype) {\n    for (let i = 0; i < vals.length; i++) {\n        const num = vals[i];\n        if (isNaN(num) || !isFinite(num)) {\n            throw Error(`A tensor of type ${dtype} being uploaded contains ${num}.`);\n        }\n    }\n}\n/** Returns true if the dtype is valid. */\nexport function isValidDtype(dtype) {\n    return dtype === 'bool' || dtype === 'complex64' || dtype === 'float32' ||\n        dtype === 'int32' || dtype === 'string';\n}\n/**\n * Returns true if the new type can't encode the old type without loss of\n * precision.\n */\nexport function hasEncodingLoss(oldType, newType) {\n    if (newType === 'complex64') {\n        return false;\n    }\n    if (newType === 'float32' && oldType !== 'complex64') {\n        return false;\n    }\n    if (newType === 'int32' && oldType !== 'float32' && oldType !== 'complex64') {\n        return false;\n    }\n    if (newType === 'bool' && oldType === 'bool') {\n        return false;\n    }\n    return true;\n}\nexport function isTypedArray(a) {\n    return a instanceof Float32Array || a instanceof Int32Array ||\n        a instanceof Uint8Array || a instanceof Uint8ClampedArray;\n}\nexport function bytesPerElement(dtype) {\n    if (dtype === 'float32' || dtype === 'int32') {\n        return 4;\n    }\n    else if (dtype === 'complex64') {\n        return 8;\n    }\n    else if (dtype === 'bool') {\n        return 1;\n    }\n    else {\n        throw new Error(`Unknown dtype ${dtype}`);\n    }\n}\n/**\n * Returns the approximate number of bytes allocated in the string array - 2\n * bytes per character. Computing the exact bytes for a native string in JS is\n * not possible since it depends on the encoding of the html page that serves\n * the website.\n */\nexport function bytesFromStringArray(arr) {\n    if (arr == null) {\n        return 0;\n    }\n    let bytes = 0;\n    arr.forEach(x => bytes += x.length);\n    return bytes;\n}\n/** Returns true if the value is a string. */\nexport function isString(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexport function isBoolean(value) {\n    return typeof value === 'boolean';\n}\nexport function isNumber(value) {\n    return typeof value === 'number';\n}\nexport function inferDtype(values) {\n    if (Array.isArray(values)) {\n        return inferDtype(values[0]);\n    }\n    if (values instanceof Float32Array) {\n        return 'float32';\n    }\n    else if (values instanceof Int32Array\n        || values instanceof Uint8Array\n        || values instanceof Uint8ClampedArray) {\n        return 'int32';\n    }\n    else if (isNumber(values)) {\n        return 'float32';\n    }\n    else if (isString(values)) {\n        return 'string';\n    }\n    else if (isBoolean(values)) {\n        return 'bool';\n    }\n    return 'float32';\n}\nexport function isFunction(f) {\n    return !!(f && f.constructor && f.call && f.apply);\n}\nexport function nearestDivisor(size, start) {\n    for (let i = start; i < size; ++i) {\n        if (size % i === 0) {\n            return i;\n        }\n    }\n    return size;\n}\nexport function computeStrides(shape) {\n    const rank = shape.length;\n    if (rank < 2) {\n        return [];\n    }\n    // Last dimension has implicit stride of 1, thus having D-1 (instead of D)\n    // strides.\n    const strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n        strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    return strides;\n}\nfunction createNestedArray(offset, shape, a, isComplex = false) {\n    const ret = new Array();\n    if (shape.length === 1) {\n        const d = shape[0] * (isComplex ? 2 : 1);\n        for (let i = 0; i < d; i++) {\n            ret[i] = a[offset + i];\n        }\n    }\n    else {\n        const d = shape[0];\n        const rest = shape.slice(1);\n        const len = rest.reduce((acc, c) => acc * c) * (isComplex ? 2 : 1);\n        for (let i = 0; i < d; i++) {\n            ret[i] = createNestedArray(offset + i * len, rest, a, isComplex);\n        }\n    }\n    return ret;\n}\n// Provide a nested array of TypedArray in given shape.\nexport function toNestedArray(shape, a, isComplex = false) {\n    if (shape.length === 0) {\n        // Scalar type should return a single number.\n        return a[0];\n    }\n    const size = shape.reduce((acc, c) => acc * c) * (isComplex ? 2 : 1);\n    if (size === 0) {\n        // A tensor with shape zero should be turned into empty list.\n        return [];\n    }\n    if (size !== a.length) {\n        throw new Error(`[${shape}] does not match the input size ${a.length}${isComplex ? ' for a complex tensor' : ''}.`);\n    }\n    return createNestedArray(0, shape, a, isComplex);\n}\nexport function makeOnesTypedArray(size, dtype) {\n    const array = makeZerosTypedArray(size, dtype);\n    for (let i = 0; i < array.length; i++) {\n        array[i] = 1;\n    }\n    return array;\n}\nexport function makeZerosTypedArray(size, dtype) {\n    if (dtype == null || dtype === 'float32' || dtype === 'complex64') {\n        return new Float32Array(size);\n    }\n    else if (dtype === 'int32') {\n        return new Int32Array(size);\n    }\n    else if (dtype === 'bool') {\n        return new Uint8Array(size);\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n}\n/**\n * Make nested `TypedArray` filled with zeros.\n * @param shape The shape information for the nested array.\n * @param dtype dtype of the array element.\n */\nexport function makeZerosNestedTypedArray(shape, dtype) {\n    const size = shape.reduce((prev, curr) => prev * curr, 1);\n    if (dtype == null || dtype === 'float32') {\n        return toNestedArray(shape, new Float32Array(size));\n    }\n    else if (dtype === 'int32') {\n        return toNestedArray(shape, new Int32Array(size));\n    }\n    else if (dtype === 'bool') {\n        return toNestedArray(shape, new Uint8Array(size));\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n}\nexport function assertNonNegativeIntegerDimensions(shape) {\n    shape.forEach(dimSize => {\n        assert(Number.isInteger(dimSize) && dimSize >= 0, () => `Tensor must have a shape comprised of positive integers but got ` +\n            `shape [${shape}].`);\n    });\n}\n/**\n * Computes flat index for a given location (multidimentionsal index) in a\n * Tensor/multidimensional array.\n *\n * @param locs Location in the tensor.\n * @param rank Rank of the tensor.\n * @param strides Tensor strides.\n */\nexport function locToIndex(locs, rank, strides) {\n    if (rank === 0) {\n        return 0;\n    }\n    else if (rank === 1) {\n        return locs[0];\n    }\n    let index = locs[locs.length - 1];\n    for (let i = 0; i < locs.length - 1; ++i) {\n        index += strides[i] * locs[i];\n    }\n    return index;\n}\n/**\n * Computes the location (multidimensional index) in a tensor/multidimentional\n * array for a given flat index.\n *\n * @param index Index in flat array.\n * @param rank Rank of tensor.\n * @param strides Strides of tensor.\n */\nexport function indexToLoc(index, rank, strides) {\n    if (rank === 0) {\n        return [];\n    }\n    else if (rank === 1) {\n        return [index];\n    }\n    const locs = new Array(rank);\n    for (let i = 0; i < locs.length - 1; ++i) {\n        locs[i] = Math.floor(index / strides[i]);\n        index -= locs[i] * strides[i];\n    }\n    locs[locs.length - 1] = index;\n    return locs;\n}\n/**\n * This method asserts whether an object is a Promise instance.\n * @param object\n */\n// tslint:disable-next-line: no-any\nexport function isPromise(object) {\n    //  We chose to not use 'obj instanceOf Promise' for two reasons:\n    //  1. It only reliably works for es6 Promise, not other Promise\n    //  implementations.\n    //  2. It doesn't work with framework that uses zone.js. zone.js monkey patch\n    //  the async calls, so it is possible the obj (patched) is comparing to a\n    //  pre-patched Promise.\n    return object && object.then && typeof object.then === 'function';\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbF9iYXNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy91dGlsX2Jhc2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBSUg7Ozs7Ozs7Ozs7OztHQVlHO0FBQ0gsa0NBQWtDO0FBQ2xDLE1BQU0sVUFBVSxPQUFPLENBQUMsS0FDWTtJQUNsQyxJQUFJLE9BQU8sR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDO0lBQzNCLElBQUksS0FBSyxHQUFHLENBQUMsQ0FBQztJQUNkLHdDQUF3QztJQUN4QyxPQUFPLE9BQU8sR0FBRyxDQUFDLEVBQUU7UUFDbEIsc0JBQXNCO1FBQ3RCLEtBQUssR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDdEMsd0JBQXdCO1FBQ3hCLE9BQU8sRUFBRSxDQUFDO1FBQ1Ysb0NBQW9DO1FBQ3BDLElBQUksQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUFDO0tBQzdCO0FBQ0gsQ0FBQztBQUVEOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUNILE1BQU0sVUFBVSxZQUFZO0FBQ3hCLGtDQUFrQztBQUNsQyxLQUFnRDtBQUNoRCxrQ0FBa0M7QUFDbEMsTUFBaUQ7SUFDbkQsSUFBSSxLQUFLLENBQUMsTUFBTSxLQUFLLE1BQU0sQ0FBQyxNQUFNLEVBQUU7UUFDbEMsTUFBTSxJQUFJLEtBQUssQ0FDWCxpREFBaUQ7WUFDakQsMEJBQTBCLEtBQUssQ0FBQyxNQUFNLEVBQUU7WUFDeEMsMkJBQTJCLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO0tBQ2pEO0lBQ0QsSUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQztJQUMzQixJQUFJLEtBQUssR0FBRyxDQUFDLENBQUM7SUFDZCx3Q0FBd0M7SUFDeEMsT0FBTyxPQUFPLEdBQUcsQ0FBQyxF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Q0FBQyxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUMvQjtJQUNELElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQztJQUM5QixPQUFPLElBQUksQ0FBQztBQUNkLENBQUM7QUFFRDs7O0dBR0c7QUFDSCxtQ0FBbUM7QUFDbkMsTUFBTSxVQUFVLFNBQVMsQ0FBQyxNQUFXO0lBQ25DLGlFQUFpRTtJQUNqRSxnRUFBZ0U7SUFDaEUsb0JBQW9CO0lBQ3BCLDZFQUE2RTtJQUM3RSwwRUFBMEU7SUFDMUUsd0JBQXdCO0lBQ3hCLE9BQU8sTUFBTSxJQUFJLE1BQU0sQ0FBQyxJQUFJLElBQUksT0FBTyxNQUFNLENBQUMsSUFBSSxLQUFLLFVBQVUsQ0FBQztBQUNwRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0RhdGFUeXBlLCBEYXRhVHlwZU1hcCwgRmxhdFZlY3RvciwgTnVtZXJpY0RhdGFUeXBlLCBSZWN1cnNpdmVBcnJheSwgVGVuc29yTGlrZSwgVHlwZWRBcnJheX0gZnJvbSAnLi90eXBlcyc7XG5cbi8qKlxuICogU2h1ZmZsZXMgdGhlIGFycmF5IGluLXBsYWNlIHVzaW5nIEZpc2hlci1ZYXRlcyBhbGdvcml0aG0uXG4gKlxuICogYGBganNcbiAqIGNvbnN0IGEgPSBbMSwgMiwgMywgNCwgNV07XG4gKiB0Zi51dGlsLnNodWZmbGUoYSk7XG4gKiBjb25zb2xlLmxvZyhhKTtcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBhcnJheSBUaGUgYXJyYXkgdG8gc2h1ZmZsZSBpbi1wbGFjZS5cbiAqXG4gKiBAZG9jIHtoZWFkaW5nOiAnVXRpbCcsIG5hbWVzcGFjZTogJ3V0aWwnfVxuICovXG4vLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tYW55XG5leHBvcnQgZnVuY3Rpb24gc2h1ZmZsZShhcnJheTogYW55W118VWludDMyQXJyYXl8SW50MzJBcnJheXxcbiAgICAgICAgICAgICAgICAgICAgICAgIEZsb2F0MzJBcnJheSk6IHZvaWQge1xuICBsZXQgY291bnRlciA9IGFycmF5Lmxlbmd0aDtcbiAgbGV0IGluZGV4ID0gMDtcbiAgLy8gV2hpbGUgdGhlcmUgYXJlIGVsZW1lbnRzIGluIHRoZSBhcnJheVxuICB3aGlsZSAoY291bnRlciA+IDApIHtcbiAgICAvLyBQaWNrIGEgcmFuZG9tIGluZGV4XG4gICAgaW5kZXggPSAoTWF0aC5yYW5kb20oKSAqIGNvdW50ZXIpIHwgMDtcbiAgICAvLyBEZWNyZWFzZSBjb3VudGVyIGJ5IDFcbiAgICBjb3VudGVyLS07XG4gICAgLy8gQW5kIHN3YXAgdGhlIGxhc3QgZWxlbWVudCB3aXRoIGl0XG4gICAgc3dhcChhcnJheSwgY291bnRlciwgaW5kZXgpO1xuICB9XG59XG5cbi8qKlxuICogU2h1ZmZsZXMgdHdvIGFycmF5cyBpbi1wbGFjZSB0aGUgc2FtZSB3YXkgdXNpbmcgRmlzaGVyLVlhdGVzIGFsZ29yaXRobS5cbiAqXG4gKiBgYGBqc1xuICogY29uc3QgYSA9IFsxLDIsMyw0LDVdO1xuICogY29uc3QgYiA9IFsxMSwyMiwzMyw0NCw1NV07XG4gKiB0Zi51dGlsLnNodWZmbGVDb21ibyhhLCBiKTtcbiAqIGNvbnNvbGUubG9nKGEsIGIpO1xuICogYGBgXG4gKlxuICogQHBhcmFtIGFycmF5IFRoZSBmaXJzdCBhcnJheSB0byBzaHVmZmxlIGluLXBsYWNlLlxuICogQHBhcmFtIGFycmF5MiBUaGUgc2Vjb25kIGFycmF5IHRvIHNodWZmbGUgaW4tcGxhY2Ugd2l0aCB0aGUgc2FtZSBwZXJtdXRhdGlvblxuICogICAgIGFzIHRoZSBmaXJzdCBhcnJheS5cbiAqXG4gKiBAZG9jIHtoZWFkaW5nOiAnVXRpbCcsIG5hbWVzcGFjZTogJ3V0aWwnfVxuICovXG5leHBvcnQgZnVuY3Rpb24gc2h1ZmZsZUNvbWJvKFxuICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1hbnlcbiAgICBhcnJheTogYW55W118VWludDMyQXJyYXl8SW50MzJBcnJheXxGbG9hdDMyQXJyYXksXG4gICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLWFueVxuICAgIGFycmF5MjogYW55W118VWludDMyQXJyYXl8SW50MzJBcnJheXxGbG9hdDMyQXJyYXkpOiB2b2lkIHtcbiAgaWYgKGFycmF5Lmxlbmd0aCAhPT0gYXJyYXkyLmxlbmd0aCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgYEFycmF5IHNpemVzIG11c3QgbWF0Y2ggdG8gYmUgc2h1ZmZsZWQgdG9nZXRoZXIgYCArXG4gICAgICAgIGBGaXJzdCBhcnJheSBsZW5ndGggd2FzICR7YXJyYXkubGVuZ3RofWAgK1xuICAgICAgICBgU2Vjb25kIGFycmF5IGxlbmd0aCB3YXMgJHthcnJheTIubGVuZ3RofWApO1xuICB9XG4gIGxldCBjb3VudGVyID0gYXJyYXkubGVuZ3RoO1xuICBsZXQgaW5kZXggPSAwO1xuICAvLyBXaGlsZSB0aGVyZSBhcmUgZWxlbWVudHMgaW4gdGhlIGFycmF5XG4gIHdoaWxlIChjb3VudGVyID4gMCkge1xuICAgIC8vIFBpY2sgYSByYW5kb20gaW5kZXhcbiAgICBpbmRleCA9IChNYXRoLnJhbmRvbSgpICogY291bnRlcikgfCAwO1xuICAgIC8vIERlY3JlYXNlIGNvdW50ZXIgYnkgMVxuICAgIGNvdW50ZXItLTtcbiAgICAvLyBBbmQgc3dhcCB0aGUgbGFzdCBlbGVtZW50IG9mIGVhY2ggYXJyYXkgd2l0aCBpdFxuICAgIHN3YXAoYXJyYXksIGNvdW50ZXIsIGluZGV4KTtcbiAgICBzd2FwKGFycmF5MiwgY291bnRlciwgaW5kZXgpO1xuICB9XG59XG5cbi8qKiBDbGFtcHMgYSB2YWx1ZSB0byBhIHNwZWNpZmllZCByYW5nZS4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjbGFtcChtaW46IG51bWJlciwgeDogbnVtYmVyLCBtYXg6IG51bWJlcik6IG51bWJlciB7XG4gIHJldHVybiBNYXRoLm1heChtaW4sIE1hdGgubWluKHgsIG1heCkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbmVhcmVzdExhcmdlckV2ZW4odmFsOiBudW1iZXIpOiBudW1iZXIge1xuICByZXR1cm4gdmFsICUgMiA9PT0gMCA/IHZhbCA6IHZhbCArIDE7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzd2FwPFQ+KFxuICAgIG9iamVjdDoge1tpbmRleDogbnVtYmVyXTogVH0sIGxlZnQ6IG51bWJlciwgcmlnaHQ6IG51bWJlcikge1xuICBjb25zdCB0ZW1wID0gb2JqZWN0W2xlZnRdO1xuICBvYmplY3RbbGVmdF0gPSBvYmplY3RbcmlnaHRdO1xuICBvYmplY3RbcmlnaHRdID0gdGVtcDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN1bShhcnI6IG51bWJlcltdKTogbnVtYmVyIHtcbiAgbGV0IHN1bSA9IDA7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XG4gICAgc3VtICs9IGFycltpXTtcbiAgfVxuICByZXR1cm4gc3VtO1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBzYW1wbGUgZnJvbSBhIHVuaWZvcm0gW2EsIGIpIGRpc3RyaWJ1dGlvbi5cbiAqXG4gKiBAcGFyYW0gYSBUaGUgbWluaW11bSBzdXBwb3J0IChpbmNsdXNpdmUpLlxuICogQHBhcmFtIGIgVGhlIG1heGltdW0gc3VwcG9ydCAoZXhjbHVzaXZlKS5cbiAqIEByZXR1cm4gQSBwc2V1ZG9yYW5kb20gbnVtYmVyIG9uIHRoZSBoYWxmLW9wZW4gaW50ZXJ2YWwgW2EsYikuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByYW5kVW5pZm9ybShhOiBudW1iZXIsIGI6IG51bWJlcikge1xuICBjb25zdCByID0gTWF0aC5yYW5kb20oKTtcbiAgcmV0dXJuIChiICogcikgKyAoMSAtIHIpICogYTtcbn1cblxuLyoqIFJldHVybnMgdGhlIHNxdWFyZWQgRXVjbGlkZWFuIGRpc3RhbmNlIGJldHdlZW4gdHdvIHZlY3RvcnMuICovXG5leHBvcnQgZnVuY3Rpb24gZGlzdFNxdWFyZWQoYTogRmxhdFZlY3RvciwgYjogRmxhdFZlY3Rvcik6IG51bWJlciB7XG4gIGxldCByZXN1bHQgPSAwO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGEubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBkaWZmID0gTnVtYmVyKGFbaV0pIC0gTnVtYmVyKGJbaV0pO1xuICAgIHJlc3VsdCArPSBkaWZmICogZGlmZjtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIEFzc2VydHMgdGhhdCB0aGUgZXhwcmVzc2lvbiBpcyB0cnVlLiBPdGhlcndpc2UgdGhyb3dzIGFuIGVycm9yIHdpdGggdGhlXG4gKiBwcm92aWRlZCBtZXNzYWdlLlxuICpcbiAqIGBgYGpzXG4gKiBjb25zdCB4ID0gMjtcbiAqIHRmLnV0aWwuYXNzZXJ0KHggPT09IDIsICd4IGlzIG5vdCAyJyk7XG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0gZXhwciBUaGUgZXhwcmVzc2lvbiB0byBhc3NlcnQgKGFzIGEgYm9vbGVhbikuXG4gKiBAcGFyYW0gbXNnIEEgZnVuY3Rpb24gdGhhdCByZXR1cm5zIHRoZSBtZXNzYWdlIHRvIHJlcG9ydCB3aGVuIHRocm93aW5nIGFuXG4gKiAgICAgZXJyb3IuIFdlIHVzZSBhIGZ1bmN0aW9uIGZvciBwZXJmb3JtYW5jZSByZWFzb25zLlxuICpcbiAqIEBkb2Mge2hlYWRpbmc6ICdVdGlsJywgbmFtZXNwYWNlOiAndXRpbCd9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnQoZXhwcjogYm9vbGVhbiwgbXNnOiAoKSA9PiBzdHJpbmcpIHtcbiAgaWYgKCFleHByKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKHR5cGVvZiBtc2cgPT09ICdzdHJpbmcnID8gbXNnIDogbXNnKCkpO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnRTaGFwZXNNYXRjaChcbiAgICBzaGFwZUE6IG51bWJlcltdLCBzaGFwZUI6IG51bWJlcltdLCBlcnJvck1lc3NhZ2VQcmVmaXggPSAnJyk6IHZvaWQge1xuICBhc3NlcnQoXG4gICAgICBhcnJheXNFcXVhbChzaGFwZUEsIHNoYXBlQiksXG4gICAgICAoKSA9PiBlcnJvck1lc3NhZ2VQcmVmaXggKyBgIFNoYXBlcyAke3NoYXBlQX0gYW5kICR7c2hhcGVCfSBtdXN0IG1hdGNoYCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnROb25OdWxsKGE6IFRlbnNvckxpa2UpOiB2b2lkIHtcbiAgYXNzZXJ0KFxuICAgICAgYSAhPSBudWxsLFxuICAgICAgKCkgPT4gYFRoZSBpbnB1dCB0byB0aGUgdGVuc29yIGNvbnN0cnVjdG9yIG11c3QgYmUgYSBub24tbnVsbCB2YWx1ZS5gKTtcbn1cblxuLy8gTk9URTogV2UgZXhwbGljaXRseSB0eXBlIG91dCB3aGF0IFQgZXh0ZW5kcyBpbnN0ZWFkIG9mIGFueSBzbyB0aGF0XG4vLyB1dGlsLmZsYXR0ZW4gb24gYSBuZXN0ZWQgYXJyYXkgb2YgbnVtYmVyIGRvZXNuJ3QgdHJ5IHRvIGluZmVyIFQgYXMgYVxuLy8gbnVtYmVyW11bXSwgY2F1c2luZyB1cyB0byBleHBsaWNpdGx5IHR5cGUgdXRpbC5mbGF0dGVuPG51bWJlcj4oKS5cbi8qKlxuICogIEZsYXR0ZW5zIGFuIGFyYml0cmFyaWx5IG5lc3RlZCBhcnJheS5cbiAqXG4gKiBgYGBqc1xuICogY29uc3QgYSA9IFtbMSwgMl0sIFszLCA0XSwgWzUsIFs2LCBbN11dXV07XG4gKiBjb25zdCBmbGF0ID0gdGYudXRpbC5mbGF0dGVuKGEpO1xuICogY29uc29sZS5sb2coZmxhdCk7XG4gKiBgYGBcbiAqXG4gKiAgQHBhcmFtIGFyciBUaGUgbmVzdGVkIGFycmF5IHRvIGZsYXR0ZW4uXG4gKiAgQHBhcmFtIHJlc3VsdCBUaGUgZGVzdGluYXRpb24gYXJyYXkgd2hpY2ggaG9sZHMgdGhlIGVsZW1lbnRzLlxuICogIEBwYXJhbSBza2lwVHlwZWRBcnJheSBJZiB0cnVlLCBhdm9pZHMgZmxhdHRlbmluZyB0aGUgdHlwZWQgYXJyYXlzLiBEZWZhdWx0c1xuICogICAgICB0byBmYWxzZS5cbiAqXG4gKiBAZG9jIHtoZWFkaW5nOiAnVXRpbCcsIG5hbWVzcGFjZTogJ3V0aWwnfVxuICovXG5leHBvcnQgZnVuY3Rpb25cbmZsYXR0ZW48VCBleHRlbmRzIG51bWJlcnxib29sZWFufHN0cmluZ3xQcm9taXNlPG51bWJlcj58VHlwZWRBcnJheT4oXG4gICAgYXJyOiBUfFJlY3Vyc2l2ZUFycmF5PFQ+LCByZXN1bHQ6IFRbXSA9IFtdLCBza2lwVHlwZWRBcnJheSA9IGZhbHNlKTogVFtdIHtcbiAgaWYgKHJlc3VsdCA9PSBudWxsKSB7XG4gICAgcmVzdWx0ID0gW107XG4gIH1cbiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSB8fCBpc1R5cGVkQXJyYXkoYXJyKSAmJiAhc2tpcFR5cGVkQXJyYXkpIHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFyci5sZW5ndGg7ICsraSkge1xuICAgICAgZmxhdHRlbihhcnJbaV0sIHJlc3VsdCwgc2tpcFR5cGVkQXJyYXkpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICByZXN1bHQucHVzaChhcnIgYXMgVCk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBzaXplIChudW1iZXIgb2YgZWxlbWVudHMpIG9mIHRoZSB0ZW5zb3IgZ2l2ZW4gaXRzIHNoYXBlLlxuICpcbiAqIGBgYGpzXG4gKiBjb25zdCBzaGFwZSA9IFszLCA0LCAyXTtcbiAqIGNvbnN0IHNpemUgPSB0Zi51dGlsLnNpemVGcm9tU2hhcGUoc2hhcGUpO1xuICogY29uc29sZS5sb2coc2l6ZSk7XG4gKiBgYGBcbiAqXG4gKiBAZG9jIHtoZWFkaW5nOiAnVXRpbCcsIG5hbWVzcGFjZTogJ3V0aWwnfVxuICovXG5leHBvcnQgZnVuY3Rpb24gc2l6ZUZyb21TaGFwZShzaGFwZTogbnVtYmVyW10pOiBudW1iZXIge1xuICBpZiAoc2hhcGUubGVuZ3RoID09PSAwKSB7XG4gICAgLy8gU2NhbGFyLlxuICAgIHJldHVybiAxO1xuICB9XG4gIGxldCBzaXplID0gc2hhcGVbMF07XG4gIGZvciAobGV0IGkgPSAxOyBpIDwgc2hhcGUubGVuZ3RoOyBpKyspIHtcbiAgICBzaXplICo9IHNoYXBlW2ldO1xuICB9XG4gIHJldHVybiBzaXplO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNTY2FsYXJTaGFwZShzaGFwZTogbnVtYmVyW10pOiBib29sZWFuIHtcbiAgcmV0dXJuIHNoYXBlLmxlbmd0aCA9PT0gMDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFycmF5c0VxdWFsKG4xOiBGbGF0VmVjdG9yLCBuMjogRmxhdFZlY3Rvcikge1xuICBpZiAobjEgPT09IG4yKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgaWYgKG4xID09IG51bGwgfHwgbjIgPT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmIChuMS5sZW5ndGggIT09IG4yLmxlbmd0aCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBmb3IgKGxldCBpID0gMDsgaSA8IG4xLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKG4xW2ldICE9PSBuMltpXSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzSW50KGE6IG51bWJlcik6IGJvb2xlYW4ge1xuICByZXR1cm4gYSAlIDEgPT09IDA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0YW5oKHg6IG51bWJlcik6IG51bWJlciB7XG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1hbnlcbiAgaWYgKChNYXRoIGFzIGFueSkudGFuaCAhPSBudWxsKSB7XG4gICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLWFueVxuICAgIHJldHVybiAoTWF0aCBhcyBhbnkpLnRhbmgoeCk7XG4gIH1cbiAgaWYgKHggPT09IEluZmluaXR5KSB7XG4gICAgcmV0dXJuIDE7XG4gIH0gZWxzZSBpZiAoeCA9PT0gLUluZmluaXR5KSB7XG4gICAgcmV0dXJuIC0xO1xuICB9IGVsc2Uge1xuICAgIGNvbnN0IGUyeCA9IE1hdGguZXhwKDIgKiB4KTtcbiAgICByZXR1cm4gKGUyeCAtIDEpIC8gKGUyeCArIDEpO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzaXplVG9TcXVhcmlzaFNoYXBlKHNpemU6IG51bWJlcik6IFtudW1iZXIsIG51bWJlcl0ge1xuICBjb25zdCB3aWR0aCA9IE1hdGguY2VpbChNYXRoLnNxcnQoc2l6ZSkpO1xuICByZXR1cm4gW3dpZHRoLCBNYXRoLmNlaWwoc2l6ZSAvIHdpZHRoKV07XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBhcnJheSB3aXRoIHJhbmRvbWl6ZWQgaW5kaWNpZXMgdG8gYSBnaXZlbiBxdWFudGl0eS5cbiAqXG4gKiBgYGBqc1xuICogY29uc3QgcmFuZG9tVGVuID0gdGYudXRpbC5jcmVhdGVTaHVmZmxlZEluZGljZXMoMTApO1xuICogY29uc29sZS5sb2cocmFuZG9tVGVuKTtcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBudW1iZXIgUXVhbnRpdHkgb2YgaG93IG1hbnkgc2h1ZmZsZWQgaW5kaWNpZXMgdG8gY3JlYXRlLlxuICpcbiAqIEBkb2Mge2hlYWRpbmc6ICdVdGlsJywgbmFtZXNwYWNlOiAndXRpbCd9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTaHVmZmxlZEluZGljZXMobjogbnVtYmVyKTogVWludDMyQXJyYXkge1xuICBjb25zdCBzaHVmZmxlZEluZGljZXMgPSBuZXcgVWludDMyQXJyYXkobik7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgc2h1ZmZsZWRJbmRpY2VzW2ldID0gaTtcbiAgfVxuICBzaHVmZmxlKHNodWZmbGVkSW5kaWNlcyk7XG4gIHJldHVybiBzaHVmZmxlZEluZGljZXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByaWdodFBhZChhOiBzdHJpbmcsIHNpemU6IG51bWJlcik6IHN0cmluZyB7XG4gIGlmIChzaXplIDw9IGEubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGE7XG4gIH1cbiAgcmV0dXJuIGEgKyAnICcucmVwZWF0KHNpemUgLSBhLmxlbmd0aCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZXBlYXRlZFRyeShcbiAgICBjaGVja0ZuOiAoKSA9PiBib29sZWFuLCBkZWxheUZuID0gKGNvdW50ZXI6IG51bWJlcikgPT4gMCxcbiAgICBtYXhDb3VudGVyPzogbnVtYmVyKTogUHJvbWlzZTx2b2lkPiB7XG4gIHJldHVybiBuZXcgUHJvbWlzZTx2b2lkPigocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgbGV0IHRyeUNvdW50ID0gMDtcblxuICAgIGNvbnN0IHRyeUZuID0gKCkgPT4ge1xuICAgICAgaWYgKGNoZWNrRm4oKSkge1xuICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdHJ5Q291bnQrKztcblxuICAgICAgY29uc3QgbmV4dEJhY2tvZmYgPSBkZWxheUZuKHRyeUNvdW50KTtcblxuICAgICAgaWYgKG1heENvdW50ZXIgIT0gbnVsbCAmJiB0cnlDb3VudCA+PSBtYXhDb3VudGVyKSB7XG4gICAgICAgIHJlamVjdCgpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBzZXRUaW1lb3V0KHRyeUZuLCBuZXh0QmFja29mZik7XG4gICAgfTtcblxuICAgIHRyeUZuKCk7XG4gIH0pO1xufVxuXG4vKipcbiAqIEdpdmVuIHRoZSBmdWxsIHNpemUgb2YgdGhlIGFycmF5IGFuZCBhIHNoYXBlIHRoYXQgbWF5IGNvbnRhaW4gLTEgYXMgdGhlXG4gKiBpbXBsaWNpdCBkaW1lbnNpb24sIHJldHVybnMgdGhlIGluZmVycmVkIHNoYXBlIHdoZXJlIC0xIGlzIHJlcGxhY2VkLlxuICogRS5nLiBGb3Igc2hhcGU9WzIsIC0xLCAzXSBhbmQgc2l6ZT0yNCwgaXQgd2lsbCByZXR1cm4gWzIsIDQsIDNdLlxuICpcbiAqIEBwYXJhbSBzaGFwZSBUaGUgc2hhcGUsIHdoaWNoIG1heSBjb250YWluIC0xIGluIHNvbWUgZGltZW5zaW9uLlxuICogQHBhcmFtIHNpemUgVGhlIGZ1bGwgc2l6ZSAobnVtYmVyIG9mIGVsZW1lbnRzKSBvZiB0aGUgYXJyYXkuXG4gKiBAcmV0dXJuIFRoZSBpbmZlcnJlZCBzaGFwZSB3aGVyZSAtMSBpcyByZXBsYWNlZCB3aXRoIHRoZSBpbmZlcnJlZCBzaXplLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaW5mZXJGcm9tSW1wbGljaXRTaGFwZShcbiAgICBzaGFwZTogbnVtYmVyW10sIHNpemU6IG51bWJlcik6IG51bWJlcltdIHtcbiAgbGV0IHNoYXBlUHJvZCA9IDE7XG4gIGxldCBpbXBsaWNpdElkeCA9IC0xO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc2hhcGUubGVuZ3RoOyArK2kpIHtcbiAgICBpZiAoc2hhcGVbaV0gPj0gMCkge1xuICAgICAgc2hhcGVQcm9kICo9IHNoYXBlW2ldO1xuICAgIH0gZWxzZSBpZiAoc2hhcGVbaV0gPT09IC0xKSB7XG4gICAgICBpZiAoaW1wbGljaXRJZHggIT09IC0xKSB7XG4gICAgICAgIHRocm93IEVycm9yKFxuICAgICAgICAgICAgYFNoYXBlcyBjYW4gb25seSBoYXZlIDEgaW1wbGljaXQgc2l6ZS4gYCArXG4gICAgICAgICAgICBgRm91bmQgLTEgYXQgZGltICR7aW1wbGljaXRJZHh9IGFuZCBkaW0gJHtpfWApO1xuICAgICAgfVxuICAgICAgaW1wbGljaXRJZHggPSBpO1xuICAgIH0gZWxzZSBpZiAoc2hhcGVbaV0gPCAwKSB7XG4gICAgICB0aHJvdyBFcnJvcihgU2hhcGVzIGNhbiBub3QgYmUgPCAwLiBGb3VuZCAke3NoYXBlW2ldfSBhdCBkaW0gJHtpfWApO1xuICAgIH1cbiAgfVxuXG4gIGlmIChpbXBsaWNpdElkeCA9PT0gLTEpIHtcbiAgICBpZiAoc2l6ZSA+IDAgJiYgc2l6ZSAhPT0gc2hhcGVQcm9kKSB7XG4gICAgICB0aHJvdyBFcnJvcihgU2l6ZSgke3NpemV9KSBtdXN0IG1hdGNoIHRoZSBwcm9kdWN0IG9mIHNoYXBlICR7c2hhcGV9YCk7XG4gICAgfVxuICAgIHJldHVybiBzaGFwZTtcbiAgfVxuXG4gIGlmIChzaGFwZVByb2QgPT09IDApIHtcbiAgICB0aHJvdyBFcnJvcihcbiAgICAgICAgYENhbm5vdCBpbmZlciB0aGUgbWlzc2luZyBzaXplIGluIFske3NoYXBlfV0gd2hlbiBgICtcbiAgICAgICAgYHRoZXJlIGFyZSAwIGVsZW1lbnRzYCk7XG4gIH1cbiAgaWYgKHNpemUgJSBzaGFwZVByb2QgIT09IDApIHtcbiAgICB0aHJvdyBFcnJvcihcbiAgICAgICAgYFRoZSBpbXBsaWNpdCBzaGFwZSBjYW4ndCBiZSBhIGZyYWN0aW9uYWwgbnVtYmVyLiBgICtcbiAgICAgICAgYEdvdCAke3NpemV9IC8gJHtzaGFwZVByb2R9YCk7XG4gIH1cblxuICBjb25zdCBuZXdTaGFwZSA9IHNoYXBlLnNsaWNlKCk7XG4gIG5ld1NoYXBlW2ltcGxpY2l0SWR4XSA9IHNpemUgLyBzaGFwZVByb2Q7XG4gIHJldHVybiBuZXdTaGFwZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQXhpc1BhcmFtKFxuICAgIGF4aXM6IG51bWJlcnxudW1iZXJbXSwgc2hhcGU6IG51bWJlcltdKTogbnVtYmVyW10ge1xuICBjb25zdCByYW5rID0gc2hhcGUubGVuZ3RoO1xuXG4gIC8vIE5vcm1hbGl6ZSBpbnB1dFxuICBheGlzID0gYXhpcyA9PSBudWxsID8gc2hhcGUubWFwKChzLCBpKSA9PiBpKSA6IFtdLmNvbmNhdChheGlzKTtcblxuICAvLyBDaGVjayBmb3IgdmFsaWQgcmFuZ2VcbiAgYXNzZXJ0KFxuICAgICAgYXhpcy5ldmVyeShheCA9PiBheCA+PSAtcmFuayAmJiBheCA8IHJhbmspLFxuICAgICAgKCkgPT5cbiAgICAgICAgICBgQWxsIHZhbHVlcyBpbiBheGlzIHBhcmFtIG11c3QgYmUgaW4gcmFuZ2UgWy0ke3Jhbmt9LCAke3Jhbmt9KSBidXQgYCArXG4gICAgICAgICAgYGdvdCBheGlzICR7YXhpc31gKTtcblxuICAvLyBDaGVjayBmb3Igb25seSBpbnRlZ2Vyc1xuICBhc3NlcnQoXG4gICAgICBheGlzLmV2ZXJ5KGF4ID0+IGlzSW50KGF4KSksXG4gICAgICAoKSA9PiBgQWxsIHZhbHVlcyBpbiBheGlzIHBhcmFtIG11c3QgYmUgaW50ZWdlcnMgYnV0IGAgK1xuICAgICAgICAgIGBnb3QgYXhpcyAke2F4aXN9YCk7XG5cbiAgLy8gSGFuZGxlIG5lZ2F0aXZlIGF4aXMuXG4gIHJldHVybiBheGlzLm1hcChhID0+IGEgPCAwID8gcmFuayArIGEgOiBhKTtcbn1cblxuLyoqIFJlZHVjZXMgdGhlIHNoYXBlIGJ5IHJlbW92aW5nIGFsbCBkaW1lbnNpb25zIG9mIHNoYXBlIDEuICovXG5leHBvcnQgZnVuY3Rpb24gc3F1ZWV6ZVNoYXBlKHNoYXBlOiBudW1iZXJbXSwgYXhpcz86IG51bWJlcltdKTpcbiAgICB7bmV3U2hhcGU6IG51bWJlcltdLCBrZXB0RGltczogbnVtYmVyW119IHtcbiAgY29uc3QgbmV3U2hhcGU6IG51bWJlcltdID0gW107XG4gIGNvbnN0IGtlcHREaW1zOiBudW1iZXJbXSA9IFtdO1xuICBjb25zdCBpc0VtcHR5QXJyYXkgPSBheGlzICE9IG51bGwgJiYgQXJyYXkuaXNBcnJheShheGlzKSAmJiBheGlzLmxlbmd0aCA9PT0gMDtcbiAgY29uc3QgYXhlcyA9IChheGlzID09IG51bGwgfHwgaXNFbXB0eUFycmF5KSA/XG4gICAgICBudWxsIDpcbiAgICAgIHBhcnNlQXhpc1BhcmFtKGF4aXMsIHNoYXBlKS5zb3J0KCk7XG4gIGxldCBqID0gMDtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaGFwZS5sZW5ndGg7ICsraSkge1xuICAgIGlmIChheGVzICE9IG51bGwpIHtcbiAgICAgIGlmIChheGVzW2pdID09PSBpICYmIHNoYXBlW2ldICE9PSAxKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICAgIGBDYW4ndCBzcXVlZXplIGF4aXMgJHtpfSBzaW5jZSBpdHMgZGltICcke3NoYXBlW2ldfScgaXMgbm90IDFgKTtcbiAgICAgIH1cbiAgICAgIGlmICgoYXhlc1tqXSA9PSBudWxsIHx8IGF4ZXNbal0gPiBpKSAmJiBzaGFwZVtpXSA9PT0gMSkge1xuICAgICAgICBuZXdTaGFwZS5wdXNoKHNoYXBlW2ldKTtcbiAgICAgICAga2VwdERpbXMucHVzaChpKTtcbiAgICAgIH1cbiAgICAgIGlmIChheGVzW2pdIDw9IGkpIHtcbiAgICAgICAgaisrO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoc2hhcGVbaV0gIT09IDEpIHtcbiAgICAgIG5ld1NoYXBlLnB1c2goc2hhcGVbaV0pO1xuICAgICAga2VwdERpbXMucHVzaChpKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHtuZXdTaGFwZSwga2VwdERpbXN9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0VHlwZWRBcnJheUZyb21EVHlwZTxEIGV4dGVuZHMgTnVtZXJpY0RhdGFUeXBlPihcbiAgICBkdHlwZTogRCwgc2l6ZTogbnVtYmVyKTogRGF0YVR5cGVNYXBbRF0ge1xuICBsZXQgdmFsdWVzID0gbnVsbDtcbiAgaWYgKGR0eXBlID09IG51bGwgfHwgZHR5cGUgPT09ICdmbG9hdDMyJykge1xuICAgIHZhbHVlcyA9IG5ldyBGbG9hdDMyQXJyYXkoc2l6ZSk7XG4gIH0gZWxzZSBpZiAoZHR5cGUgPT09ICdpbnQzMicpIHtcbiAgICB2YWx1ZXMgPSBuZXcgSW50MzJBcnJheShzaXplKTtcbiAgfSBlbHNlIGlmIChkdHlwZSA9PT0gJ2Jvb2wnKSB7XG4gICAgdmFsdWVzID0gbmV3IFVpbnQ4QXJyYXkoc2l6ZSk7XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIGRhdGEgdHlwZSAke2R0eXBlfWApO1xuICB9XG4gIHJldHVybiB2YWx1ZXMgYXMgRGF0YVR5cGVNYXBbRF07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRBcnJheUZyb21EVHlwZTxEIGV4dGVuZHMgRGF0YVR5cGU+KFxuICAgIGR0eXBlOiBELCBzaXplOiBudW1iZXIpOiBEYXRhVHlwZU1hcFtEXSB7XG4gIGxldCB2YWx1ZXMgPSBudWxsO1xuICBpZiAoZHR5cGUgPT0gbnVsbCB8fCBkdHlwZSA9PT0gJ2Zsb2F0MzInKSB7XG4gICAgdmFsdWVzID0gbmV3IEZsb2F0MzJBcnJheShzaXplKTtcbiAgfSBlbHNlIGlmIChkdHlwZSA9PT0gJ2ludDMyJykge1xuICAgIHZhbHVlcyA9IG5ldyBJbnQzMkFycmF5KHNpemUpO1xuICB9IGVsc2UgaWYgKGR0eXBlID09PSAnYm9vbCcpIHtcbiAgICB2YWx1ZXMgPSBuZXcgVWludDhBcnJheShzaXplKTtcbiAgfSBlbHNlIGlmIChkdHlwZSA9PT0gJ3N0cmluZycpIHtcbiAgICB2YWx1ZXMgPSBuZXcgQXJyYXk8J3N0cmluZyc+KHNpemUpO1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBkYXRhIHR5cGUgJHtkdHlwZX1gKTtcbiAgfVxuICByZXR1cm4gdmFsdWVzIGFzIERhdGFUeXBlTWFwW0RdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY2hlY2tDb252ZXJzaW9uRm9yRXJyb3JzPEQgZXh0ZW5kcyBEYXRhVHlwZT4oXG4gICAgdmFsczogRGF0YVR5cGVNYXBbRF18bnVtYmVyW10sIGR0eXBlOiBEKTogdm9pZCB7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdmFscy5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IG51bSA9IHZhbHNbaV0gYXMgbnVtYmVyO1xuICAgIGlmIChpc05hTihudW0pIHx8ICFpc0Zpbml0ZShudW0pKSB7XG4gICAgICB0aHJvdyBFcnJvcihgQSB0ZW5zb3Igb2YgdHlwZSAke2R0eXBlfSBiZWluZyB1cGxvYWRlZCBjb250YWlucyAke251bX0uYCk7XG4gICAgfVxuICB9XG59XG5cbi8qKiBSZXR1cm5zIHRydWUgaWYgdGhlIGR0eXBlIGlzIHZhbGlkLiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWREdHlwZShkdHlwZTogRGF0YVR5cGUpOiBib29sZWFuIHtcbiAgcmV0dXJuIGR0eXBlID09PSAnYm9vbCcgfHwgZHR5cGUgPT09ICdjb21wbGV4NjQnIHx8IGR0eXBlID09PSAnZmxvYXQzMicgfHxcbiAgICAgIGR0eXBlID09PSAnaW50MzInIHx8IGR0eXBlID09PSAnc3RyaW5nJztcbn1cblxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIG5ldyB0eXBlIGNhbid0IGVuY29kZSB0aGUgb2xkIHR5cGUgd2l0aG91dCBsb3NzIG9mXG4gKiBwcmVjaXNpb24uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBoYXNFbmNvZGluZ0xvc3Mob2xkVHlwZTogRGF0YVR5cGUsIG5ld1R5cGU6IERhdGFUeXBlKTogYm9vbGVhbiB7XG4gIGlmIChuZXdUeXBlID09PSAnY29tcGxleDY0Jykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBpZiAobmV3VHlwZSA9PT0gJ2Zsb2F0MzInICYmIG9sZFR5cGUgIT09ICdjb21wbGV4NjQnKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGlmIChuZXdUeXBlID09PSAnaW50MzInICYmIG9sZFR5cGUgIT09ICdmbG9hdDMyJyAmJiBvbGRUeXBlICE9PSAnY29tcGxleDY0Jykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBpZiAobmV3VHlwZSA9PT0gJ2Jvb2wnICYmIG9sZFR5cGUgPT09ICdib29sJykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzVHlwZWRBcnJheShhOiB7fSk6XG4gIGEgaXMgRmxvYXQzMkFycmF5fEludDMyQXJyYXl8VWludDhBcnJheXxVaW50OENsYW1wZWRBcnJheSB7XG4gIHJldHVybiBhIGluc3RhbmNlb2YgRmxvYXQzMkFycmF5IHx8IGEgaW5zdGFuY2VvZiBJbnQzMkFycmF5IHx8XG4gICAgICBhIGluc3RhbmNlb2YgVWludDhBcnJheSB8fCBhIGluc3RhbmNlb2YgVWludDhDbGFtcGVkQXJyYXk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBieXRlc1BlckVsZW1lbnQoZHR5cGU6IERhdGFUeXBlKTogbnVtYmVyIHtcbiAgaWYgKGR0eXBlID09PSAnZmxvYXQzMicgfHwgZHR5cGUgPT09ICdpbnQzMicpIHtcbiAgICByZXR1cm4gNDtcbiAgfSBlbHNlIGlmIChkdHlwZSA9PT0gJ2NvbXBsZXg2NCcpIHtcbiAgICByZXR1cm4gODtcbiAgfSBlbHNlIGlmIChkdHlwZSA9PT0gJ2Jvb2wnKSB7XG4gICAgcmV0dXJuIDE7XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIGR0eXBlICR7ZHR5cGV9YCk7XG4gIH1cbn1cblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBhcHByb3hpbWF0ZSBudW1iZXIgb2YgYnl0ZXMgYWxsb2NhdGVkIGluIHRoZSBzdHJpbmcgYXJyYXkgLSAyXG4gKiBieXRlcyBwZXIgY2hhcmFjdGVyLiBDb21wdXRpbmcgdGhlIGV4YWN0IGJ5dGVzIGZvciBhIG5hdGl2ZSBzdHJpbmcgaW4gSlMgaXNcbiAqIG5vdCBwb3NzaWJsZSBzaW5jZSBpdCBkZXBlbmRzIG9uIHRoZSBlbmNvZGluZyBvZiB0aGUgaHRtbCBwYWdlIHRoYXQgc2VydmVzXG4gKiB0aGUgd2Vic2l0ZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJ5dGVzRnJvbVN0cmluZ0FycmF5KGFycjogVWludDhBcnJheVtdKTogbnVtYmVyIHtcbiAgaWYgKGFyciA9PSBudWxsKSB7XG4gICAgcmV0dXJuIDA7XG4gIH1cbiAgbGV0IGJ5dGVzID0gMDtcbiAgYXJyLmZvckVhY2goeCA9PiBieXRlcyArPSB4Lmxlbmd0aCk7XG4gIHJldHVybiBieXRlcztcbn1cblxuLyoqIFJldHVybnMgdHJ1ZSBpZiB0aGUgdmFsdWUgaXMgYSBzdHJpbmcuICovXG5leHBvcnQgZnVuY3Rpb24gaXNTdHJpbmcodmFsdWU6IHt9KTogdmFsdWUgaXMgc3RyaW5nIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgfHwgdmFsdWUgaW5zdGFuY2VvZiBTdHJpbmc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0Jvb2xlYW4odmFsdWU6IHt9KTogYm9vbGVhbiB7XG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdib29sZWFuJztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzTnVtYmVyKHZhbHVlOiB7fSk6IGJvb2xlYW4ge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGluZmVyRHR5cGUodmFsdWVzOiBUZW5zb3JMaWtlKTogRGF0YVR5cGUge1xuICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZXMpKSB7XG4gICAgcmV0dXJuIGluZmVyRHR5cGUodmFsdWVzWzBdKTtcbiAgfVxuICBpZiAodmFsdWVzIGluc3RhbmNlb2YgRmxvYXQzMkFycmF5KSB7XG4gICAgcmV0dXJuICdmbG9hdDMyJztcbiAgfSBlbHNlIGlmICh2YWx1ZXMgaW5zdGFuY2VvZiBJbnQzMkFycmF5XG4gICAgICAgICAgICAgfHwgdmFsdWVzIGluc3RhbmNlb2YgVWludDhBcnJheVxuICAgICAgICAgICAgIHx8IHZhbHVlcyBpbnN0YW5jZW9mIFVpbnQ4Q2xhbXBlZEFycmF5KSB7XG4gICAgcmV0dXJuICdpbnQzMic7XG4gIH0gZWxzZSBpZiAoaXNOdW1iZXIodmFsdWVzKSkge1xuICAgIHJldHVybiAnZmxvYXQzMic7XG4gIH0gZWxzZSBpZiAoaXNTdHJpbmcodmFsdWVzKSkge1xuICAgIHJldHVybiAnc3RyaW5nJztcbiAgfSBlbHNlIGlmIChpc0Jvb2xlYW4odmFsdWVzKSkge1xuICAgIHJldHVybiAnYm9vbCc7XG4gIH1cbiAgcmV0dXJuICdmbG9hdDMyJztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzRnVuY3Rpb24oZjogRnVuY3Rpb24pIHtcbiAgcmV0dXJuICEhKGYgJiYgZi5jb25zdHJ1Y3RvciAmJiBmLmNhbGwgJiYgZi5hcHBseSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBuZWFyZXN0RGl2aXNvcihzaXplOiBudW1iZXIsIHN0YXJ0OiBudW1iZXIpOiBudW1iZXIge1xuICBmb3IgKGxldCBpID0gc3RhcnQ7IGkgPCBzaXplOyArK2kpIHtcbiAgICBpZiAoc2l6ZSAlIGkgPT09IDApIHtcbiAgICAgIHJldHVybiBpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gc2l6ZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvbXB1dGVTdHJpZGVzKHNoYXBlOiBudW1iZXJbXSk6IG51bWJlcltdIHtcbiAgY29uc3QgcmFuayA9IHNoYXBlLmxlbmd0aDtcbiAgaWYgKHJhbmsgPCAyKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG5cbiAgLy8gTGFzdCBkaW1lbnNpb24gaGFzIGltcGxpY2l0IHN0cmlkZSBvZiAxLCB0aHVzIGhhdmluZyBELTEgKGluc3RlYWQgb2YgRClcbiAgLy8gc3RyaWRlcy5cbiAgY29uc3Qgc3RyaWRlcyA9IG5ldyBBcnJheShyYW5rIC0gMSk7XG4gIHN0cmlkZXNbcmFuayAtIDJdID0gc2hhcGVbcmFuayAtIDFdO1xuICBmb3IgKGxldCBpID0gcmFuayAtIDM7IGkgPj0gMDsgLS1pKSB7XG4gICAgc3RyaWRlc1tpXSA9IHN0cmlkZXNbaSArIDFdICogc2hhcGVbaSArIDFdO1xuICB9XG4gIHJldHVybiBzdHJpZGVzO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVOZXN0ZWRBcnJheShcbiAgICBvZmZzZXQ6IG51bWJlciwgc2hhcGU6IG51bWJlcltdLCBhOiBUeXBlZEFycmF5LCBpc0NvbXBsZXggPSBmYWxzZSkge1xuICBjb25zdCByZXQgPSBuZXcgQXJyYXkoKTtcbiAgaWYgKHNoYXBlLmxlbmd0aCA9PT0gMSkge1xuICAgIGNvbnN0IGQgPSBzaGFwZVswXSAqIChpc0NvbXBsZXggPyAyIDogMSk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkOyBpKyspIHtcbiAgICAgIHJldFtpXSA9IGFbb2Zmc2V0ICsgaV07XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGNvbnN0IGQgPSBzaGFwZVswXTtcbiAgICBjb25zdCByZXN0ID0gc2hhcGUuc2xpY2UoMSk7XG4gICAgY29uc3QgbGVuID0gcmVzdC5yZWR1Y2UoKGFjYywgYykgPT4gYWNjICogYykgKiAoaXNDb21wbGV4ID8gMiA6IDEpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZDsgaSsrKSB7XG4gICAgICByZXRbaV0gPSBjcmVhdGVOZXN0ZWRBcnJheShvZmZzZXQgKyBpICogbGVuLCByZXN0LCBhLCBpc0NvbXBsZXgpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmV0O1xufVxuXG4vLyBQcm92aWRlIGEgbmVzdGVkIGFycmF5IG9mIFR5cGVkQXJyYXkgaW4gZ2l2ZW4gc2hhcGUuXG5leHBvcnQgZnVuY3Rpb24gdG9OZXN0ZWRBcnJheShcbiAgICBzaGFwZTogbnVtYmVyW10sIGE6IFR5cGVkQXJyYXksIGlzQ29tcGxleCA9IGZhbHNlKSB7XG4gIGlmIChzaGFwZS5sZW5ndGggPT09IDApIHtcbiAgICAvLyBTY2FsYXIgdHlwZSBzaG91bGQgcmV0dXJuIGEgc2luZ2xlIG51bWJlci5cbiAgICByZXR1cm4gYVswXTtcbiAgfVxuICBjb25zdCBzaXplID0gc2hhcGUucmVkdWNlKChhY2MsIGMpID0+IGFjYyAqIGMpICogKGlzQ29tcGxleCA/IDIgOiAxKTtcbiAgaWYgKHNpemUgPT09IDApIHtcbiAgICAvLyBBIHRlbnNvciB3aXRoIHNoYXBlIHplcm8gc2hvdWxkIGJlIHR1cm5lZCBpbnRvIGVtcHR5IGxpc3QuXG4gICAgcmV0dXJuIFtdO1xuICB9XG4gIGlmIChzaXplICE9PSBhLmxlbmd0aCkge1xuICAgIHRocm93IG5ldyBFcnJvcihgWyR7c2hhcGV9XSBkb2VzIG5vdCBtYXRjaCB0aGUgaW5wdXQgc2l6ZSAke2EubGVuZ3RofSR7XG4gICAgICAgIGlzQ29tcGxleCA/ICcgZm9yIGEgY29tcGxleCB0ZW5zb3InIDogJyd9LmApO1xuICB9XG5cbiAgcmV0dXJuIGNyZWF0ZU5lc3RlZEFycmF5KDAsIHNoYXBlLCBhLCBpc0NvbXBsZXgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbWFrZU9uZXNUeXBlZEFycmF5PEQgZXh0ZW5kcyBEYXRhVHlwZT4oXG4gICAgc2l6ZTogbnVtYmVyLCBkdHlwZTogRCk6IERhdGFUeXBlTWFwW0RdIHtcbiAgY29uc3QgYXJyYXkgPSBtYWtlWmVyb3NUeXBlZEFycmF5KHNpemUsIGR0eXBlKTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcnJheS5sZW5ndGg7IGkrKykge1xuICAgIGFycmF5W2ldID0gMTtcbiAgfVxuICByZXR1cm4gYXJyYXk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtYWtlWmVyb3NUeXBlZEFycmF5PEQgZXh0ZW5kcyBEYXRhVHlwZT4oXG4gICAgc2l6ZTogbnVtYmVyLCBkdHlwZTogRCk6IERhdGFUeXBlTWFwW0RdIHtcbiAgaWYgKGR0eXBlID09IG51bGwgfHwgZHR5cGUgPT09ICdmbG9hdDMyJyB8fCBkdHlwZSA9PT0gJ2NvbXBsZXg2NCcpIHtcbiAgICByZXR1cm4gbmV3IEZsb2F0MzJBcnJheShzaXplKSBhcyBEYXRhVHlwZU1hcFtEXTtcbiAgfSBlbHNlIGlmIChkdHlwZSA9PT0gJ2ludDMyJykge1xuICAgIHJldHVybiBuZXcgSW50MzJBcnJheShzaXplKSBhcyBEYXRhVHlwZU1hcFtEXTtcbiAgfSBlbHNlIGlmIChkdHlwZSA9PT0gJ2Jvb2wnKSB7XG4gICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KHNpemUpIGFzIERhdGFUeXBlTWFwW0RdO1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBkYXRhIHR5cGUgJHtkdHlwZX1gKTtcbiAgfVxufVxuXG4vKipcbiAqIE1ha2UgbmVzdGVkIGBUeXBlZEFycmF5YCBmaWxsZWQgd2l0aCB6ZXJvcy5cbiAqIEBwYXJhbSBzaGFwZSBUaGUgc2hhcGUgaW5mb3JtYXRpb24gZm9yIHRoZSBuZXN0ZWQgYXJyYXkuXG4gKiBAcGFyYW0gZHR5cGUgZHR5cGUgb2YgdGhlIGFycmF5IGVsZW1lbnQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtYWtlWmVyb3NOZXN0ZWRUeXBlZEFycmF5PEQgZXh0ZW5kcyBEYXRhVHlwZT4oXG4gICAgc2hhcGU6IG51bWJlcltdLCBkdHlwZTogRCkge1xuICBjb25zdCBzaXplID0gc2hhcGUucmVkdWNlKChwcmV2LCBjdXJyKSA9PiBwcmV2ICogY3VyciwgMSk7XG4gIGlmIChkdHlwZSA9PSBudWxsIHx8IGR0eXBlID09PSAnZmxvYXQzMicpIHtcbiAgICByZXR1cm4gdG9OZXN0ZWRBcnJheShzaGFwZSwgbmV3IEZsb2F0MzJBcnJheShzaXplKSk7XG4gIH0gZWxzZSBpZiAoZHR5cGUgPT09ICdpbnQzMicpIHtcbiAgICByZXR1cm4gdG9OZXN0ZWRBcnJheShzaGFwZSwgbmV3IEludDMyQXJyYXkoc2l6ZSkpO1xuICB9IGVsc2UgaWYgKGR0eXBlID09PSAnYm9vbCcpIHtcbiAgICByZXR1cm4gdG9OZXN0ZWRBcnJheShzaGFwZSwgbmV3IFVpbnQ4QXJyYXkoc2l6ZSkpO1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBkYXRhIHR5cGUgJHtkdHlwZX1gKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0Tm9uTmVnYXRpdmVJbnRlZ2VyRGltZW5zaW9ucyhzaGFwZTogbnVtYmVyW10pIHtcbiAgc2hhcGUuZm9yRWFjaChkaW1TaXplID0+IHtcbiAgICBhc3NlcnQoXG4gICAgICAgIE51bWJlci5pc0ludGVnZXIoZGltU2l6ZSkgJiYgZGltU2l6ZSA+PSAwLFxuICAgICAgICAoKSA9PlxuICAgICAgICAgICAgYFRlbnNvciBtdXN0IGhhdmUgYSBzaGFwZSBjb21wcmlzZWQgb2YgcG9zaXRpdmUgaW50ZWdlcnMgYnV0IGdvdCBgICtcbiAgICAgICAgICAgIGBzaGFwZSBbJHtzaGFwZX1dLmApO1xuICB9KTtcbn1cblxuLyoqXG4gKiBDb21wdXRlcyBmbGF0IGluZGV4IGZvciBhIGdpdmVuIGxvY2F0aW9uIChtdWx0aWRpbWVudGlvbnNhbCBpbmRleCkgaW4gYVxuICogVGVuc29yL211bHRpZGltZW5zaW9uYWwgYXJyYXkuXG4gKlxuICogQHBhcmFtIGxvY3MgTG9jYXRpb24gaW4gdGhlIHRlbnNvci5cbiAqIEBwYXJhbSByYW5rIFJhbmsgb2YgdGhlIHRlbnNvci5cbiAqIEBwYXJhbSBzdHJpZGVzIFRlbnNvciBzdHJpZGVzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbG9jVG9JbmRleChcbiAgICBsb2NzOiBudW1iZXJbXSwgcmFuazogbnVtYmVyLCBzdHJpZGVzOiBudW1iZXJbXSk6IG51bWJlciB7XG4gIGlmIChyYW5rID09PSAwKSB7XG4gICAgcmV0dXJuIDA7XG4gIH0gZWxzZSBpZiAocmFuayA9PT0gMSkge1xuICAgIHJldHVybiBsb2NzWzBdO1xuICB9XG4gIGxldCBpbmRleCA9IGxvY3NbbG9jcy5sZW5ndGggLSAxXTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBsb2NzLmxlbmd0aCAtIDE7ICsraSkge1xuICAgIGluZGV4ICs9IHN0cmlkZXNbaV0gKiBsb2NzW2ldO1xuICB9XG4gIHJldHVybiBpbmRleDtcbn1cblxuLyoqXG4gKiBDb21wdXRlcyB0aGUgbG9jYXRpb24gKG11bHRpZGltZW5zaW9uYWwgaW5kZXgpIGluIGEgdGVuc29yL211bHRpZGltZW50aW9uYWxcbiAqIGFycmF5IGZvciBhIGdpdmVuIGZsYXQgaW5kZXguXG4gKlxuICogQHBhcmFtIGluZGV4IEluZGV4IGluIGZsYXQgYXJyYXkuXG4gKiBAcGFyYW0gcmFuayBSYW5rIG9mIHRlbnNvci5cbiAqIEBwYXJhbSBzdHJpZGVzIFN0cmlkZXMgb2YgdGVuc29yLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaW5kZXhUb0xvYyhcbiAgICBpbmRleDogbnVtYmVyLCByYW5rOiBudW1iZXIsIHN0cmlkZXM6IG51bWJlcltdKTogbnVtYmVyW10ge1xuICBpZiAocmFuayA9PT0gMCkge1xuICAgIHJldHVybiBbXTtcbiAgfSBlbHNlIGlmIChyYW5rID09PSAxKSB7XG4gICAgcmV0dXJuIFtpbmRleF07XG4gIH1cbiAgY29uc3QgbG9jczogbnVtYmVyW10gPSBuZXcgQXJyYXkocmFuayk7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbG9jcy5sZW5ndGggLSAxOyArK2kpIHtcbiAgICBsb2NzW2ldID0gTWF0aC5mbG9vcihpbmRleCAvIHN0cmlkZXNbaV0pO1xuICAgIGluZGV4IC09IGxvY3NbaV0gKiBzdHJpZGVzW2ldO1xuICB9XG4gIGxvY3NbbG9jcy5sZW5ndGggLSAxXSA9IGluZGV4O1xuICByZXR1cm4gbG9jcztcbn1cblxuLyoqXG4gKiBUaGlzIG1ldGhvZCBhc3NlcnRzIHdoZXRoZXIgYW4gb2JqZWN0IGlzIGEgUHJvbWlzZSBpbnN0YW5jZS5cbiAqIEBwYXJhbSBvYmplY3RcbiAqL1xuLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby1hbnlcbmV4cG9ydCBmdW5jdGlvbiBpc1Byb21pc2Uob2JqZWN0OiBhbnkpOiBvYmplY3QgaXMgUHJvbWlzZTx1bmtub3duPiB7XG4gIC8vICBXZSBjaG9zZSB0byBub3QgdXNlICdvYmogaW5zdGFuY2VPZiBQcm9taXNlJyBmb3IgdHdvIHJlYXNvbnM6XG4gIC8vICAxLiBJdCBvbmx5IHJlbGlhYmx5IHdvcmtzIGZvciBlczYgUHJvbWlzZSwgbm90IG90aGVyIFByb21pc2VcbiAgLy8gIGltcGxlbWVudGF0aW9ucy5cbiAgLy8gIDIuIEl0IGRvZXNuJ3Qgd29yayB3aXRoIGZyYW1ld29yayB0aGF0IHVzZXMgem9uZS5qcy4gem9uZS5qcyBtb25rZXkgcGF0Y2hcbiAgLy8gIHRoZSBhc3luYyBjYWxscywgc28gaXQgaXMgcG9zc2libGUgdGhlIG9iaiAocGF0Y2hlZCkgaXMgY29tcGFyaW5nIHRvIGFcbiAgLy8gIHByZS1wYXRjaGVkIFByb21pc2UuXG4gIHJldHVybiBvYmplY3QgJiYgb2JqZWN0LnRoZW4gJiYgdHlwZW9mIG9iamVjdC50aGVuID09PSAnZnVuY3Rpb24nO1xufVxuIl19","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { isPromise } from './util_base';\n// Expects flags from URL in the format ?tfjsflags=FLAG1:1,FLAG2:true.\nconst TENSORFLOWJS_FLAGS_PREFIX = 'tfjsflags';\n/**\n * The environment contains evaluated flags as well as the registered platform.\n * This is always used as a global singleton and can be retrieved with\n * `tf.env()`.\n *\n * @doc {heading: 'Environment'}\n */\nexport class Environment {\n    // tslint:disable-next-line: no-any\n    constructor(global) {\n        this.global = global;\n        this.flags = {};\n        this.flagRegistry = {};\n        this.urlFlags = {};\n        // Jasmine spies on this in 'environment_test.ts'\n        this.getQueryParams = getQueryParams;\n        this.populateURLFlags();\n    }\n    setPlatform(platformName, platform) {\n        if (this.platform != null) {\n            if (!(env().getBool('IS_TEST') || env().getBool('PROD'))) {\n                console.warn(`Platform ${this.platformName} has already been set. ` +\n                    `Overwriting the platform with ${platformName}.`);\n            }\n        }\n        this.platformName = platformName;\n        this.platform = platform;\n    }\n    registerFlag(flagName, evaluationFn, setHook) {\n        this.flagRegistry[flagName] = { evaluationFn, setHook };\n        // Override the flag value from the URL. This has to happen here because\n        // the environment is initialized before flags get registered.\n        if (this.urlFlags[flagName] != null) {\n            const flagValue = this.urlFlags[flagName];\n            if (!(env().getBool('IS_TEST') || env().getBool('PROD'))) {\n                console.warn(`Setting feature override from URL ${flagName}: ${flagValue}.`);\n            }\n            this.set(flagName, flagValue);\n        }\n    }\n    async getAsync(flagName) {\n        if (flagName in this.flags) {\n            return this.flags[flagName];\n        }\n        this.flags[flagName] = await this.evaluateFlag(flagName);\n        return this.flags[flagName];\n    }\n    get(flagName) {\n        if (flagName in this.flags) {\n            return this.flags[flagName];\n        }\n        const flagValue = this.evaluateFlag(flagName);\n        if (isPromise(flagValue)) {\n            throw new Error(`Flag ${flagName} cannot be synchronously evaluated. ` +\n                `Please use getAsync() instead.`);\n        }\n        this.flags[flagName] = flagValue;\n        return this.flags[flagName];\n    }\n    getNumber(flagName) {\n        return this.get(flagName);\n    }\n    getBool(flagName) {\n        return this.get(flagName);\n    }\n    getFlags() {\n        return this.flags;\n    }\n    // For backwards compatibility.\n    get features() {\n        return this.flags;\n    }\n    set(flagName, value) {\n        if (this.flagRegistry[flagName] == null) {\n            throw new Error(`Cannot set flag ${flagName} as it has not been registered.`);\n        }\n        this.flags[flagName] = value;\n        if (this.flagRegistry[flagName].setHook != null) {\n            this.flagRegistry[flagName].setHook(value);\n        }\n    }\n    evaluateFlag(flagName) {\n        if (this.flagRegistry[flagName] == null) {\n            throw new Error(`Cannot evaluate flag '${flagName}': no evaluation function found.`);\n        }\n        return this.flagRegistry[flagName].evaluationFn();\n    }\n    setFlags(flags) {\n        this.flags = Object.assign({}, flags);\n    }\n    reset() {\n        this.flags = {};\n        this.urlFlags = {};\n        this.populateURLFlags();\n    }\n    populateURLFlags() {\n        if (typeof this.global === 'undefined' ||\n            typeof this.global.location === 'undefined' ||\n            typeof this.global.location.search === 'undefined') {\n            return;\n        }\n        const urlParams = this.getQueryParams(this.global.location.search);\n        if (TENSORFLOWJS_FLAGS_PREFIX in urlParams) {\n            const keyValues = urlParams[TENSORFLOWJS_FLAGS_PREFIX].split(',');\n            keyValues.forEach(keyValue => {\n                const [key, value] = keyValue.split(':');\n                this.urlFlags[key] = parseValue(key, value);\n            });\n        }\n    }\n}\nexport function getQueryParams(queryString) {\n    const params = {};\n    queryString.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g, (s, ...t) => {\n        decodeParam(params, t[0], t[1]);\n        return t.join('=');\n    });\n    return params;\n}\nfunction decodeParam(params, name, value) {\n    params[decodeURIComponent(name)] = decodeURIComponent(value || '');\n}\nfunction parseValue(flagName, value) {\n    value = value.toLowerCase();\n    if (value === 'true' || value === 'false') {\n        return value === 'true';\n    }\n    else if (`${+value}` === value) {\n        return +value;\n    }\n    throw new Error(`Could not parse value flag value ${value} for flag ${flagName}.`);\n}\n/**\n * Returns the current environment (a global singleton).\n *\n * The environment object contains the evaluated feature values as well as the\n * active platform.\n *\n * @doc {heading: 'Environment'}\n */\nexport function env() {\n    return ENV;\n}\nexport let ENV = null;\nexport function setEnvironmentGlobal(environment) {\n    ENV = environment;\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Note that the identifier globalNameSpace is scoped to this module, but will\n// always resolve to the same global object regardless of how the module is\n// resolved.\n// tslint:disable-next-line:no-any\nlet globalNameSpace;\n// tslint:disable-next-line:no-any\nexport function getGlobalNamespace() {\n    if (globalNameSpace == null) {\n        // tslint:disable-next-line:no-any\n        let ns;\n        if (typeof (window) !== 'undefined') {\n            ns = window;\n        }\n        else if (typeof (global) !== 'undefined') {\n            ns = global;\n        }\n        else if (typeof (process) !== 'undefined') {\n            ns = process;\n        }\n        else if (typeof (self) !== 'undefined') {\n            ns = self;\n        }\n        else {\n            throw new Error('Could not find a global object');\n        }\n        globalNameSpace = ns;\n    }\n    return globalNameSpace;\n}\n// tslint:disable-next-line:no-any\nfunction getGlobalMap() {\n    const ns = getGlobalNamespace();\n    if (ns._tfGlobals == null) {\n        ns._tfGlobals = new Map();\n    }\n    return ns._tfGlobals;\n}\n/**\n * Returns a globally accessible 'singleton' object.\n *\n * @param key the name of the object\n * @param init a function to initialize to initialize this object\n *             the first time it is fetched.\n */\nexport function getGlobal(key, init) {\n    const globalMap = getGlobalMap();\n    if (globalMap.has(key)) {\n        return globalMap.get(key);\n    }\n    else {\n        const singleton = init();\n        globalMap.set(key, singleton);\n        return globalMap.get(key);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2xvYmFsX3V0aWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL2dsb2JhbF91dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILDhFQUE4RTtBQUM5RSwyRUFBMkU7QUFDM0UsWUFBWTtBQUNaLGtDQUFrQztBQUNsQyxJQUFJLGVBQStDLENBQUM7QUFDcEQsa0NBQWtDO0FBQ2xDLE1BQU0sVUFBVSxrQkFBa0I7SUFDaEMsSUFBSSxlQUFlLElBQUksSUFBSSxFQUFFO1FBQzNCLGtDQUFrQztRQUNsQyxJQUFJLEVBQU8sQ0FBQztRQUNaLElBQUksT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLFdBQVcsRUFBRTtZQUNuQyxFQUFFLEdBQUcsTUFBTSxDQUFDO1NBQ2I7YUFBTSxJQUFJLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSyxXQUFXLEVBQUU7WUFDMUMsRUFBRSxHQUFHLE1BQU0sQ0FBQztTQUNiO2FBQU0sSUFBSSxPQUFPLENBQUMsT0FBTyxDQUFDLEtBQUssV0FBVyxFQUFFO1lBQzNDLEVBQUUsR0FBRyxPQUFPLENBQUM7U0FDZDthQUFNLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLFdBQVcsRUFBRTtZQUN4QyxFQUFFLEdBQUcsSUFBSSxDQUFDO1NBQ1g7YUFBTTtZQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMsZ0NBQWdDLENBQUMsQ0FBQztTQUNuRDtRQUNELGVBQWUsR0FBRyxFQUFFLENBQUM7S0FDdEI7SUFDRCxPQUFPLGVBQWUsQ0FBQztBQUN6QixDQUFDO0FBRUQsa0NBQWtDO0FBQ2xDLFNBQVMsWUFBWTtJQUNuQixNQUFNLEVBQUUsR0FBRyxrQkFBa0IsRUFBRSxDQUFDO0lBQ2hDLElBQUksRUFBRSxDQUFDLFVBQVUsSUFBSSxJQUFJLEVBQUU7UUFDekIsRUFBRSxDQUFDLFVBQVUsR0FBRyxJQUFJLEdBQUcsRUFBRSxDQUFDO0tBQzNCO0lBQ0QsT0FBTyxFQUFFLENBQUMsVUFBVSxDQUFDO0FBQ3ZCLENBQUM7QUFFRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLFVBQVUsU0FBUyxDQUFJLEdBQVcsRUFBRSxJQUFhO0lBQ3JELE1BQU0sU0FBUyxHQUFHLFlBQVksRUFBRSxDQUFDO0lBQ2pDLElBQUksU0FBUyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRTtRQUN0QixPQUFPLFNBQVMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7S0FDM0I7U0FBTTtRQUNMLE1BQU0sU0FBUyxHQUFHLElBQUksRUFBRSxDQUFDO1FBQ3pCLFNBQVMsQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBQzlCLE9BQU8sU0FBUyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztLQUMzQjtBQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbi8vIE5vdGUgdGhhdCB0aGUgaWRlbnRpZmllciBnbG9iYWxOYW1lU3BhY2UgaXMgc2NvcGVkIHRvIHRoaXMgbW9kdWxlLCBidXQgd2lsbFxuLy8gYWx3YXlzIHJlc29sdmUgdG8gdGhlIHNhbWUgZ2xvYmFsIG9iamVjdCByZWdhcmRsZXNzIG9mIGhvdyB0aGUgbW9kdWxlIGlzXG4vLyByZXNvbHZlZC5cbi8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1hbnlcbmxldCBnbG9iYWxOYW1lU3BhY2U6IHtfdGZHbG9iYWxzOiBNYXA8c3RyaW5nLCBhbnk+fTtcbi8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1hbnlcbmV4cG9ydCBmdW5jdGlvbiBnZXRHbG9iYWxOYW1lc3BhY2UoKToge190Zkdsb2JhbHM6IE1hcDxzdHJpbmcsIGFueT59IHtcbiAgaWYgKGdsb2JhbE5hbWVTcGFjZSA9PSBudWxsKSB7XG4gICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLWFueVxuICAgIGxldCBuczogYW55O1xuICAgIGlmICh0eXBlb2YgKHdpbmRvdykgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBucyA9IHdpbmRvdztcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiAoZ2xvYmFsKSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIG5zID0gZ2xvYmFsO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIChwcm9jZXNzKSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIG5zID0gcHJvY2VzcztcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiAoc2VsZikgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBucyA9IHNlbGY7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignQ291bGQgbm90IGZpbmQgYSBnbG9iYWwgb2JqZWN0Jyk7XG4gICAgfVxuICAgIGdsb2JhbE5hbWVTcGFjZSA9IG5zO1xuICB9XG4gIHJldHVybiBnbG9iYWxOYW1lU3BhY2U7XG59XG5cbi8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1hbnlcbmZ1bmN0aW9uIGdldEdsb2JhbE1hcCgpOiBNYXA8c3RyaW5nLCBhbnk+IHtcbiAgY29uc3QgbnMgPSBnZXRHbG9iYWxOYW1lc3BhY2UoKTtcbiAgaWYgKG5zLl90Zkdsb2JhbHMgPT0gbnVsbCkge1xuICAgIG5zLl90Zkdsb2JhbHMgPSBuZXcgTWFwKCk7XG4gIH1cbiAgcmV0dXJuIG5zLl90Zkdsb2JhbHM7XG59XG5cbi8qKlxuICogUmV0dXJucyBhIGdsb2JhbGx5IGFjY2Vzc2libGUgJ3NpbmdsZXRvbicgb2JqZWN0LlxuICpcbiAqIEBwYXJhbSBrZXkgdGhlIG5hbWUgb2YgdGhlIG9iamVjdFxuICogQHBhcmFtIGluaXQgYSBmdW5jdGlvbiB0byBpbml0aWFsaXplIHRvIGluaXRpYWxpemUgdGhpcyBvYmplY3RcbiAqICAgICAgICAgICAgIHRoZSBmaXJzdCB0aW1lIGl0IGlzIGZldGNoZWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRHbG9iYWw8VD4oa2V5OiBzdHJpbmcsIGluaXQ6ICgpID0+IFQpOiBUIHtcbiAgY29uc3QgZ2xvYmFsTWFwID0gZ2V0R2xvYmFsTWFwKCk7XG4gIGlmIChnbG9iYWxNYXAuaGFzKGtleSkpIHtcbiAgICByZXR1cm4gZ2xvYmFsTWFwLmdldChrZXkpO1xuICB9IGVsc2Uge1xuICAgIGNvbnN0IHNpbmdsZXRvbiA9IGluaXQoKTtcbiAgICBnbG9iYWxNYXAuc2V0KGtleSwgc2luZ2xldG9uKTtcbiAgICByZXR1cm4gZ2xvYmFsTWFwLmdldChrZXkpO1xuICB9XG59XG4iXX0=","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from './environment';\nexport function warn(...msg) {\n    if (!(env().getBool('IS_TEST') || env().getBool('PROD'))) {\n        console.warn(...msg);\n    }\n}\nexport function log(...msg) {\n    if (!(env().getBool('IS_TEST') || env().getBool('PROD'))) {\n        console.log(...msg);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy9sb2cudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLEdBQUcsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUVsQyxNQUFNLFVBQVUsSUFBSSxDQUFDLEdBQUcsR0FBYztJQUNwQyxJQUFJLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLElBQUksR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUU7UUFDeEQsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDO0tBQ3RCO0FBQ0gsQ0FBQztBQUVELE1BQU0sVUFBVSxHQUFHLENBQUMsR0FBRyxHQUFjO0lBQ25DLElBQUksQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRTtRQUN4RCxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUM7S0FDckI7QUFDSCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTggR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge2Vudn0gZnJvbSAnLi9lbnZpcm9ubWVudCc7XG5cbmV4cG9ydCBmdW5jdGlvbiB3YXJuKC4uLm1zZzogQXJyYXk8e30+KTogdm9pZCB7XG4gIGlmICghKGVudigpLmdldEJvb2woJ0lTX1RFU1QnKSB8fCBlbnYoKS5nZXRCb29sKCdQUk9EJykpKSB7XG4gICAgY29uc29sZS53YXJuKC4uLm1zZyk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxvZyguLi5tc2c6IEFycmF5PHt9Pik6IHZvaWQge1xuICBpZiAoIShlbnYoKS5nZXRCb29sKCdJU19URVNUJykgfHwgZW52KCkuZ2V0Qm9vbCgnUFJPRCcpKSkge1xuICAgIGNvbnNvbGUubG9nKC4uLm1zZyk7XG4gIH1cbn1cbiJdfQ==","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from './environment';\nimport { getGlobal } from './global_util';\nimport * as log from './log';\nconst kernelRegistry = getGlobal('kernelRegistry', () => new Map());\nconst gradRegistry = getGlobal('gradRegistry', () => new Map());\n/**\n * Returns the kernel function (code) associated with the provided names.\n *\n * @param kernelName The official name of the kernel.\n * @param backendName The official name of the backend.\n */\nexport function getKernel(kernelName, backendName) {\n    const key = makeKey(kernelName, backendName);\n    return kernelRegistry.get(key);\n}\n/**\n * Returns the registered gradient info associated with the provided kernel.\n * @param kernelName The official TF kernel name.\n */\nexport function getGradient(kernelName) {\n    return gradRegistry.get(kernelName);\n}\nexport function getKernelsForBackend(backendName) {\n    const it = kernelRegistry.entries();\n    const result = [];\n    while (true) {\n        const { done, value } = it.next();\n        if (done) {\n            break;\n        }\n        const [key, config] = value;\n        const [backend,] = key.split('_');\n        if (backend === backendName) {\n            result.push(config);\n        }\n    }\n    return result;\n}\n/**\n * Registers the function (forward pass) for the kernel in a global registry.\n *\n * @param config A config object with the following properties:\n * - `kernelName` The official name of the kernel.\n * - `backendName` The official name of the backend.\n * - `kernelFunc` The function to run during the forward pass of the kernel.\n * - `setupFunc` Optional. Gets called once, after the backend initializes.\n * - `disposeFunc` Optional. Gets called once, right before the backend is\n * disposed.\n */\nexport function registerKernel(config) {\n    const { kernelName, backendName } = config;\n    const key = makeKey(kernelName, backendName);\n    if (kernelRegistry.has(key)) {\n        log.warn(`The kernel '${kernelName}' for backend ` +\n            `'${backendName}' is already registered`);\n    }\n    kernelRegistry.set(key, config);\n}\n/**\n * Registers a gradient function for a given kernel in the global registry,\n * to be used during the back-propagation of that kernel.\n *\n * @param config An object with the following properties:\n * - `kernelName` The name of the kernel that the gradient function is for.\n * - `gradFunc` The function to run during back-propagation.\n */\nexport function registerGradient(config) {\n    const { kernelName } = config;\n    if (gradRegistry.has(kernelName)) {\n        // TODO (yassogba) after 3.0 assess whether we need to keep this gated\n        // to debug mode.\n        if (env().getBool('DEBUG')) {\n            log.warn(`Overriding the gradient for '${kernelName}'`);\n        }\n    }\n    gradRegistry.set(kernelName, config);\n}\n/**\n * Removes the kernel function from the registry.\n *\n * @param kernelName The official name of the kernel.\n * @param backendName The official name of the backend.\n *\n */\nexport function unregisterKernel(kernelName, backendName) {\n    const key = makeKey(kernelName, backendName);\n    if (!kernelRegistry.has(key)) {\n        throw new Error(`The kernel '${kernelName}' for backend ` +\n            `'${backendName}' is not registered`);\n    }\n    kernelRegistry.delete(key);\n}\n/** Removes the registered gradient from the global registry. */\nexport function unregisterGradient(kernelName) {\n    if (!gradRegistry.has(kernelName)) {\n        throw new Error(`The gradient '${kernelName}' for backend is not registered`);\n    }\n    gradRegistry.delete(kernelName);\n}\n/**\n * Finds kernels that have already been registered to a backend and re-registers\n * them for a new backend. Useful for registering custom backends.\n * @param registeredBackendName Already registered backend.\n * @param newBackendName New backend.\n */\nexport function copyRegisteredKernels(registeredBackendName, newBackendName) {\n    const kernels = getKernelsForBackend(registeredBackendName);\n    kernels.forEach(kernelConfig => {\n        const newKernelConfig = Object.assign({}, kernelConfig, { backendName: newBackendName });\n        registerKernel(newKernelConfig);\n    });\n}\nfunction makeKey(kernelName, backendName) {\n    return `${backendName}_${kernelName}`;\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from './environment';\nimport * as base from './util_base';\nexport * from './util_base';\nexport * from './hash_util';\n/**\n * Create typed array for scalar value. Used for storing in `DataStorage`.\n */\nexport function createScalarValue(value, dtype) {\n    if (dtype === 'string') {\n        return encodeString(value);\n    }\n    return toTypedArray([value], dtype);\n}\nfunction noConversionNeeded(a, dtype) {\n    return (a instanceof Float32Array && dtype === 'float32') ||\n        (a instanceof Int32Array && dtype === 'int32') ||\n        (a instanceof Uint8Array && dtype === 'bool');\n}\nexport function toTypedArray(a, dtype) {\n    if (dtype === 'string') {\n        throw new Error('Cannot convert a string[] to a TypedArray');\n    }\n    if (Array.isArray(a)) {\n        a = base.flatten(a);\n    }\n    if (env().getBool('DEBUG')) {\n        base.checkConversionForErrors(a, dtype);\n    }\n    if (noConversionNeeded(a, dtype)) {\n        return a;\n    }\n    if (dtype == null || dtype === 'float32' || dtype === 'complex64') {\n        return new Float32Array(a);\n    }\n    else if (dtype === 'int32') {\n        return new Int32Array(a);\n    }\n    else if (dtype === 'bool') {\n        const bool = new Uint8Array(a.length);\n        for (let i = 0; i < bool.length; ++i) {\n            if (Math.round(a[i]) !== 0) {\n                bool[i] = 1;\n            }\n        }\n        return bool;\n    }\n    else {\n        throw new Error(`Unknown data type ${dtype}`);\n    }\n}\n/**\n * Returns the current high-resolution time in milliseconds relative to an\n * arbitrary time in the past. It works across different platforms (node.js,\n * browsers).\n *\n * ```js\n * console.log(tf.util.now());\n * ```\n *\n * @doc {heading: 'Util', namespace: 'util'}\n */\nexport function now() {\n    return env().platform.now();\n}\n/**\n * Returns a platform-specific implementation of\n * [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).\n *\n * If `fetch` is defined on the global object (`window`, `process`, etc.),\n * `tf.util.fetch` returns that function.\n *\n * If not, `tf.util.fetch` returns a platform-specific solution.\n *\n * ```js\n * const resource = await tf.util.fetch('https://unpkg.com/@tensorflow/tfjs');\n * // handle response\n * ```\n *\n * @doc {heading: 'Util'}\n */\nexport function fetch(path, requestInits) {\n    return env().platform.fetch(path, requestInits);\n}\n/**\n * Encodes the provided string into bytes using the provided encoding scheme.\n *\n * @param s The string to encode.\n * @param encoding The encoding scheme. Defaults to utf-8.\n *\n * @doc {heading: 'Util'}\n */\nexport function encodeString(s, encoding = 'utf-8') {\n    encoding = encoding || 'utf-8';\n    return env().platform.encode(s, encoding);\n}\n/**\n * Decodes the provided bytes into a string using the provided encoding scheme.\n * @param bytes The bytes to decode.\n *\n * @param encoding The encoding scheme. Defaults to utf-8.\n *\n * @doc {heading: 'Util'}\n */\nexport function decodeString(bytes, encoding = 'utf-8') {\n    encoding = encoding || 'utf-8';\n    return env().platform.decode(bytes, encoding);\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from './environment';\nimport * as util from './util';\nexport class Profiler {\n    constructor(backendTimer, logger) {\n        this.backendTimer = backendTimer;\n        this.logger = logger;\n        if (logger == null) {\n            this.logger = new Logger();\n        }\n    }\n    profileKernel(kernelName, inputs, f) {\n        let outputs;\n        const holdResultWrapperFn = () => {\n            outputs = f();\n        };\n        let timer;\n        const start = util.now();\n        if (this.backendTimer.timerAvailable()) {\n            timer = this.backendTimer.time(holdResultWrapperFn);\n        }\n        else {\n            holdResultWrapperFn();\n            for (const output of outputs) {\n                output.dataSync();\n            }\n            timer = Promise.resolve({ kernelMs: util.now() - start });\n        }\n        if (env().getBool('CHECK_COMPUTATION_FOR_ERRORS')) {\n            for (let i = 0; i < outputs.length; i++) {\n                const output = outputs[i];\n                // Dangling promise here because we don't want to propagate up\n                // asynchronicity.\n                output.data().then(tensorVals => {\n                    checkComputationForErrors(tensorVals, output.dtype, kernelName);\n                });\n            }\n        }\n        const kernelProfile = {\n            kernelName,\n            outputs,\n            inputs,\n            timeMs: timer.then(timing => timing.kernelMs),\n            extraInfo: timer.then(timing => timing.getExtraProfileInfo != null ?\n                timing.getExtraProfileInfo() :\n                '')\n        };\n        return kernelProfile;\n    }\n    logKernelProfile(kernelProfile) {\n        const { kernelName, outputs, timeMs, inputs, extraInfo } = kernelProfile;\n        outputs.forEach(result => {\n            Promise.all([result.data(), timeMs, extraInfo]).then(valueContainer => {\n                this.logger.logKernelProfile(kernelName, result, valueContainer[0], valueContainer[1], inputs, valueContainer[2]);\n            });\n        });\n    }\n}\nexport function checkComputationForErrors(vals, dtype, kernelName) {\n    if (dtype !== 'float32') {\n        // Only floating point computations will generate NaN values\n        return false;\n    }\n    for (let i = 0; i < vals.length; i++) {\n        const num = vals[i];\n        if (isNaN(num) || !isFinite(num)) {\n            // Throwing custom exception so behavior is testable.\n            console.warn(`Found ${num} in the result of '${kernelName}'`);\n            return true;\n        }\n    }\n    return false;\n}\nexport class Logger {\n    logKernelProfile(name, result, vals, timeMs, inputs, extraInfo) {\n        const time = typeof timeMs === 'number' ? util.rightPad(`${timeMs}ms`, 9) :\n            timeMs['error'];\n        const paddedName = util.rightPad(name, 25);\n        const rank = result.rank;\n        const size = result.size;\n        const shape = util.rightPad(result.shape.toString(), 14);\n        let inputShapesDescription = '';\n        for (const name in inputs) {\n            const input = inputs[name];\n            if (input != null) {\n                // The input might be a non-tensor (e.g HTMLImageElement), in which case\n                // we claim the output shape as input shape.\n                const inputShape = input.shape || result.shape;\n                const inputRank = inputShape.length;\n                inputShapesDescription +=\n                    `${name}: ${inputRank}D ${inputRank > 0 ? inputShape : ''} `;\n            }\n        }\n        console.log(`%c${paddedName}\\t%c${time}\\t%c${rank}D ${shape}\\t%c${size}\\t%c${inputShapesDescription}\\t%c${extraInfo}`, 'font-weight:bold', 'color:red', 'color:blue', 'color: orange', 'color: green', 'color: steelblue');\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZmlsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL3Byb2ZpbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUdILE9BQU8sRUFBQyxHQUFHLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFJbEMsT0FBTyxLQUFLLElBQUksTUFBTSxRQUFRLENBQUM7QUFVL0IsTUFBTSxPQUFPLFFBQVE7SUFDbkIsWUFBb0IsWUFBMEIsRUFBVSxNQUFlO1FBQW5ELGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBQVUsV0FBTSxHQUFOLE1BQU0sQ0FBUztRQUNyRSxJQUFJLE1BQU0sSUFBSSxJQUFJLEVBQUU7WUFDbEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLE1BQU0sRUFBRSxDQUFDO1NBQzVCO0lBQ0gsQ0FBQztJQUVELGFBQWEsQ0FBQyxVQUFrQixFQUFFLE1BQXNCLEVBQUUsQ0FBaUI7UUFFekUsSUFBSSxPQUFpQixDQUFDO1FBQ3RCLE1BQU0sbUJBQW1CLEdBQUcsR0FBRyxFQUFFO1lBQy9CLE9BQU8sR0FBRyxDQUFDLEVBQUUsQ0FBQztRQUNoQixDQUFDLENBQUM7UUFDRixJQUFJLEtBQWlDLENBQUM7UUFDdEMsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ3pCLElBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxjQUFjLEVBQUUsRUFBRTtZQUN0QyxLQUFLLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsQ0FBQztTQUNyRDthQUFNO1lBQ0wsbUJBQW1CLEVBQUUsQ0FBQztZQUN0QixLQUFLLE1BQU0sTUFBTSxJQUFJLE9BQU8sRUFBRTtnQkFDNUIsTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUFDO2FBQ25CO1lBQ0QsS0FBSyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLEtBQUssRUFBQyxDQUFDLENBQUM7U0FDekQ7UUFDRCxJQUFJLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyw4QkFBOEIsQ0FBQyxFQUFFO1lBQ2pELEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxPQUFPLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUN2QyxNQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQzFCLDhEQUE4RDtnQkFDOUQsa0JBQWtCO2dCQUNsQixNQUFNLENBQUMsSUFBSSxFQUFFLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxFQUFFO29CQUM5Qix5QkFBeUIsQ0FBQyxVQUFVLEVBQUUsTUFBTSxDQUFDLEtBQUssRUFBRSxVQUFVLENBQUMsQ0FBQztnQkFDbEUsQ0FBQyxDQUFDLENBQUM7YUFDSjtTQUNGO1FBRUQsTUFBTSxhQUFhLEdBQUc7WUFDcEIsVUFBVTtZQUNWLE9BQU87WUFDUCxNQUFNO1lBQ04sTUFBTSxFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDO1lBQzdDLFNBQVMsRUFBRSxLQUFLLENBQUMsSUFBSSxDQUNqQixNQUFNLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxtQkFBbUIsSUFBSSxJQUFJLENBQUMsQ0FBQztnQkFDMUMsTUFBTSxDQUFDLG1CQUFtQixFQUFFLENBQUMsQ0FBQztnQkFDOUIsRUFBRSxDQUFDO1NBQ1osQ0FBQztRQUNGLE9BQU8sYUFBYSxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxnQkFBZ0IsQ0FBQyxhQUE0QjtRQUMzQyxNQUFNLEVBQUMsVUFBVSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBQyxHQUFHLGFBQWEsQ0FBQztRQUV2RSxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFO1lBQ3ZCLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLEVBQUUsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxFQUFFO2dCQUNwRSxJQUFJLENBQUMsTUFBTSxDQUFDLGdCQUFnQixDQUN4QixVQUFVLEVBQUUsTUFBTSxFQUFFLGNBQWMsQ0FBQyxDQUFDLENBQUMsRUFBRSxjQUFjLENBQUMsQ0FBQyxDQUFDLEVBQUUsTUFBTSxFQUNoRSxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN6QixDQUFDLENBQUMsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztDQUNGO0FBRUQsTUFBTSxVQUFVLHlCQUF5QixDQUNyQyxJQUFvQixFQUFFLEtBQVEsRUFBRSxVQUFrQjtJQUNwRCxJQUFJLEtBQUssS0FBSyxTQUFTLEVBQUU7UUFDdkIsNERBQTREO1FBQzVELE9BQU8sS0FBSyxDQUFDO0tBQ2Q7SUFDRCxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUNwQyxNQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFXLENBQUM7UUFDOUIsSUFBSSxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDaEMscURBQXFEO1lBQ3JELE9BQU8sQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFHLHNCQUFzQixVQUFVLEdBQUcsQ0FBQyxDQUFDO1lBQzlELE9BQU8sSUFBSSxDQUFDO1NBQ2I7S0FDRjtJQUNELE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQztBQUVELE1BQU0sT0FBTyxNQUFNO0lBQ2pCLGdCQUFnQixDQUNaLElBQVksRUFBRSxNQUFjLEVBQUUsSUFBZ0IsRUFDOUMsTUFBOEIsRUFBRSxNQUFzQixFQUN0RCxTQUFrQjtRQUNwQixNQUFNLElBQUksR0FBRyxPQUFPLE1BQU0sS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxNQUFNLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2pDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUMxRCxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQztRQUMzQyxNQUFNLElBQUksR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDO1FBQ3pCLE1BQU0sSUFBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUM7UUFDekIsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ3pELElBQUksc0JBQXNCLEdBQUcsRUFBRSxDQUFDO1FBRWhDLEtBQUssTUFBTSxJQUFJLElBQUksTUFBTSxFQUFFO1lBQ3pCLE1BQU0sS0FBSyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUMzQixJQUFJLEtBQUssSUFBSSxJQUFJLEVBQUU7Z0JBQ2pCLHdFQUF3RTtnQkFDeEUsNENBQTRDO2dCQUM1QyxNQUFNLFVBQVUsR0FBRyxLQUFLLENBQUMsS0FBSyxJQUFJLE1BQU0sQ0FBQyxLQUFLLENBQUM7Z0JBQy9DLE1BQU0sU0FBUyxHQUFHLFVBQVUsQ0FBQyxNQUFNLENBQUM7Z0JBQ3BDLHNCQUFzQjtvQkFDbEIsR0FBRyxJQUFJLEtBQUssU0FBUyxLQUFLLFNBQVMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUM7YUFDbEU7U0FDRjtRQUVELE9BQU8sQ0FBQyxHQUFHLENBQ1AsS0FBSyxVQUFVLE9BQU8sSUFBSSxPQUFPLElBQUksS0FBSyxLQUFLLE9BQU8sSUFBSSxPQUN0RCxzQkFBc0IsT0FBTyxTQUFTLEVBQUUsRUFDNUMsa0JBQWtCLEVBQUUsV0FBVyxFQUFFLFlBQVksRUFBRSxlQUFlLEVBQzlELGNBQWMsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO0lBQzFDLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE4IEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtCYWNrZW5kVGltZXIsIEJhY2tlbmRUaW1pbmdJbmZvfSBmcm9tICcuL2JhY2tlbmRzL2JhY2tlbmQnO1xuaW1wb3J0IHtlbnZ9IGZyb20gJy4vZW52aXJvbm1lbnQnO1xuaW1wb3J0IHtUZW5zb3J9IGZyb20gJy4vdGVuc29yJztcbmltcG9ydCB7TmFtZWRUZW5zb3JNYXB9IGZyb20gJy4vdGVuc29yX3R5cGVzJztcbmltcG9ydCB7RGF0YVR5cGUsIERhdGFUeXBlTWFwLCBUeXBlZEFycmF5fSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCAqIGFzIHV0aWwgZnJvbSAnLi91dGlsJztcblxuZXhwb3J0IHR5cGUgS2VybmVsUHJvZmlsZSA9IHtcbiAga2VybmVsTmFtZTogc3RyaW5nLFxuICBvdXRwdXRzOiBUZW5zb3JbXSxcbiAgaW5wdXRzOiBOYW1lZFRlbnNvck1hcCxcbiAgdGltZU1zOiBQcm9taXNlPG51bWJlcnx7ZXJyb3I6IHN0cmluZ30+LFxuICBleHRyYUluZm86IFByb21pc2U8c3RyaW5nPlxufTtcblxuZXhwb3J0IGNsYXNzIFByb2ZpbGVyIHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBiYWNrZW5kVGltZXI6IEJhY2tlbmRUaW1lciwgcHJpdmF0ZSBsb2dnZXI/OiBMb2dnZXIpIHtcbiAgICBpZiAobG9nZ2VyID09IG51bGwpIHtcbiAgICAgIHRoaXMubG9nZ2VyID0gbmV3IExvZ2dlcigpO1xuICAgIH1cbiAgfVxuXG4gIHByb2ZpbGVLZXJuZWwoa2VybmVsTmFtZTogc3RyaW5nLCBpbnB1dHM6IE5hbWVkVGVuc29yTWFwLCBmOiAoKSA9PiBUZW5zb3JbXSk6XG4gICAgICBLZXJuZWxQcm9maWxlIHtcbiAgICBsZXQgb3V0cHV0czogVGVuc29yW107XG4gICAgY29uc3QgaG9sZFJlc3VsdFdyYXBwZXJGbiA9ICgpID0+IHtcbiAgICAgIG91dHB1dHMgPSBmKCk7XG4gICAgfTtcbiAgICBsZXQgdGltZXI6IFByb21pc2U8QmFja2VuZFRpbWluZ0luZm8+O1xuICAgIGNvbnN0IHN0YXJ0ID0gdXRpbC5ub3coKTtcbiAgICBpZiAodGhpcy5iYWNrZW5kVGltZXIudGltZXJBdmFpbGFibGUoKSkge1xuICAgICAgdGltZXIgPSB0aGlzLmJhY2tlbmRUaW1lci50aW1lKGhvbGRSZXN1bHRXcmFwcGVyRm4pO1xuICAgIH0gZWxzZSB7XG4gICAgICBob2xkUmVzdWx0V3JhcHBlckZuKCk7XG4gICAgICBmb3IgKGNvbnN0IG91dHB1dCBvZiBvdXRwdXRzKSB7XG4gICAgICAgIG91dHB1dC5kYXRhU3luYygpO1xuICAgICAgfVxuICAgICAgdGltZXIgPSBQcm9taXNlLnJlc29sdmUoe2tlcm5lbE1zOiB1dGlsLm5vdygpIC0gc3RhcnR9KTtcbiAgICB9XG4gICAgaWYgKGVudigpLmdldEJvb2woJ0NIRUNLX0NPTVBVVEFUSU9OX0ZPUl9FUlJPUlMnKSkge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBvdXRwdXRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IG91dHB1dCA9IG91dHB1dHNbaV07XG4gICAgICAgIC8vIERhbmdsaW5nIHByb21pc2UgaGVyZSBiZWNhdXNlIHdlIGRvbid0IHdhbnQgdG8gcHJvcGFnYXRlIHVwXG4gICAgICAgIC8vIGFzeW5jaHJvbmljaXR5LlxuICAgICAgICBvdXRwdXQuZGF0YSgpLnRoZW4odGVuc29yVmFscyA9PiB7XG4gICAgICAgICAgY2hlY2tDb21wdXRhdGlvbkZvckVycm9ycyh0ZW5zb3JWYWxzLCBvdXRwdXQuZHR5cGUsIGtlcm5lbE5hbWUpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBrZXJuZWxQcm9maWxlID0ge1xuICAgICAga2VybmVsTmFtZSxcbiAgICAgIG91dHB1dHMsXG4gICAgICBpbnB1dHMsXG4gICAgICB0aW1lTXM6IHRpbWVyLnRoZW4odGltaW5nID0+IHRpbWluZy5rZXJuZWxNcyksXG4gICAgICBleHRyYUluZm86IHRpbWVyLnRoZW4oXG4gICAgICAgICAgdGltaW5nID0+IHRpbWluZy5nZXRFeHRyYVByb2ZpbGVJbmZvICE9IG51bGwgP1xuICAgICAgICAgICAgICB0aW1pbmcuZ2V0RXh0cmFQcm9maWxlSW5mbygpIDpcbiAgICAgICAgICAgICAgJycpXG4gICAgfTtcbiAgICByZXR1cm4ga2VybmVsUHJvZmlsZTtcbiAgfVxuXG4gIGxvZ0tlcm5lbFByb2ZpbGUoa2VybmVsUHJvZmlsZTogS2VybmVsUHJvZmlsZSk6IHZvaWQge1xuICAgIGNvbnN0IHtrZXJuZWxOYW1lLCBvdXRwdXRzLCB0aW1lTXMsIGlucHV0cywgZXh0cmFJbmZvfSA9IGtlcm5lbFByb2ZpbGU7XG5cbiAgICBvdXRwdXRzLmZvckVhY2gocmVzdWx0ID0+IHtcbiAgICAgIFByb21pc2UuYWxsKFtyZXN1bHQuZGF0YSgpLCB0aW1lTXMsIGV4dHJhSW5mb10pLnRoZW4odmFsdWVDb250YWluZXIgPT4ge1xuICAgICAgICB0aGlzLmxvZ2dlci5sb2dLZXJuZWxQcm9maWxlKFxuICAgICAgICAgICAga2VybmVsTmFtZSwgcmVzdWx0LCB2YWx1ZUNvbnRhaW5lclswXSwgdmFsdWVDb250YWluZXJbMV0sIGlucHV0cyxcbiAgICAgICAgICAgIHZhbHVlQ29udGFpbmVyWzJdKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjaGVja0NvbXB1dGF0aW9uRm9yRXJyb3JzPEQgZXh0ZW5kcyBEYXRhVHlwZT4oXG4gICAgdmFsczogRGF0YVR5cGVNYXBbRF0sIGR0eXBlOiBELCBrZXJuZWxOYW1lOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgaWYgKGR0eXBlICE9PSAnZmxvYXQzMicpIHtcbiAgICAvLyBPbmx5IGZsb2F0aW5nIHBvaW50IGNvbXB1dGF0aW9ucyB3aWxsIGdlbmVyYXRlIE5hTiB2YWx1ZXNcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCB2YWxzLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgbnVtID0gdmFsc1tpXSBhcyBudW1iZXI7XG4gICAgaWYgKGlzTmFOKG51bSkgfHwgIWlzRmluaXRlKG51bSkpIHtcbiAgICAgIC8vIFRocm93aW5nIGN1c3RvbSBleGNlcHRpb24gc28gYmVoYXZpb3IgaXMgdGVzdGFibGUuXG4gICAgICBjb25zb2xlLndhcm4oYEZvdW5kICR7bnVtfSBpbiB0aGUgcmVzdWx0IG9mICcke2tlcm5lbE5hbWV9J2ApO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cblxuZXhwb3J0IGNsYXNzIExvZ2dlciB7XG4gIGxvZ0tlcm5lbFByb2ZpbGUoXG4gICAgICBuYW1lOiBzdHJpbmcsIHJlc3VsdDogVGVuc29yLCB2YWxzOiBUeXBlZEFycmF5LFxuICAgICAgdGltZU1zOiBudW1iZXJ8e2Vycm9yOiBzdHJpbmd9LCBpbnB1dHM6IE5hbWVkVGVuc29yTWFwLFxuICAgICAgZXh0cmFJbmZvPzogc3RyaW5nKSB7XG4gICAgY29uc3QgdGltZSA9IHR5cGVvZiB0aW1lTXMgPT09ICdudW1iZXInID8gdXRpbC5yaWdodFBhZChgJHt0aW1lTXN9bXNgLCA5KSA6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZU1zWydlcnJvciddO1xuICAgIGNvbnN0IHBhZGRlZE5hbWUgPSB1dGlsLnJpZ2h0UGFkKG5hbWUsIDI1KTtcbiAgICBjb25zdCByYW5rID0gcmVzdWx0LnJhbms7XG4gICAgY29uc3Qgc2l6ZSA9IHJlc3VsdC5zaXplO1xuICAgIGNvbnN0IHNoYXBlID0gdXRpbC5yaWdodFBhZChyZXN1bHQuc2hhcGUudG9TdHJpbmcoKSwgMTQpO1xuICAgIGxldCBpbnB1dFNoYXBlc0Rlc2NyaXB0aW9uID0gJyc7XG5cbiAgICBmb3IgKGNvbnN0IG5hbWUgaW4gaW5wdXRzKSB7XG4gICAgICBjb25zdCBpbnB1dCA9IGlucHV0c1tuYW1lXTtcbiAgICAgIGlmIChpbnB1dCAhPSBudWxsKSB7XG4gICAgICAgIC8vIFRoZSBpbnB1dCBtaWdodCBiZSBhIG5vbi10ZW5zb3IgKGUuZyBIVE1MSW1hZ2VFbGVtZW50KSwgaW4gd2hpY2ggY2FzZVxuICAgICAgICAvLyB3ZSBjbGFpbSB0aGUgb3V0cHV0IHNoYXBlIGFzIGlucHV0IHNoYXBlLlxuICAgICAgICBjb25zdCBpbnB1dFNoYXBlID0gaW5wdXQuc2hhcGUgfHwgcmVzdWx0LnNoYXBlO1xuICAgICAgICBjb25zdCBpbnB1dFJhbmsgPSBpbnB1dFNoYXBlLmxlbmd0aDtcbiAgICAgICAgaW5wdXRTaGFwZXNEZXNjcmlwdGlvbiArPVxuICAgICAgICAgICAgYCR7bmFtZX06ICR7aW5wdXRSYW5rfUQgJHtpbnB1dFJhbmsgPiAwID8gaW5wdXRTaGFwZSA6ICcnfSBgO1xuICAgICAgfVxuICAgIH1cblxuICAgIGNvbnNvbGUubG9nKFxuICAgICAgICBgJWMke3BhZGRlZE5hbWV9XFx0JWMke3RpbWV9XFx0JWMke3Jhbmt9RCAke3NoYXBlfVxcdCVjJHtzaXplfVxcdCVjJHtcbiAgICAgICAgICAgIGlucHV0U2hhcGVzRGVzY3JpcHRpb259XFx0JWMke2V4dHJhSW5mb31gLFxuICAgICAgICAnZm9udC13ZWlnaHQ6Ym9sZCcsICdjb2xvcjpyZWQnLCAnY29sb3I6Ymx1ZScsICdjb2xvcjogb3JhbmdlJyxcbiAgICAgICAgJ2NvbG9yOiBncmVlbicsICdjb2xvcjogc3RlZWxibHVlJyk7XG4gIH1cbn1cbiJdfQ==","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { computeStrides, isString, rightPad, sizeFromShape } from './util';\n// Maximum number of values before we decide to show ellipsis.\nconst FORMAT_LIMIT_NUM_VALS = 20;\n// Number of first and last values to show when displaying a, b,...,y, z.\nconst FORMAT_NUM_FIRST_LAST_VALS = 3;\n// Number of significant digits to show.\nconst FORMAT_NUM_SIG_DIGITS = 7;\nexport function tensorToString(vals, shape, dtype, verbose) {\n    const strides = computeStrides(shape);\n    const padPerCol = computeMaxSizePerColumn(vals, shape, dtype, strides);\n    const rank = shape.length;\n    const valsLines = subTensorToString(vals, shape, dtype, strides, padPerCol);\n    const lines = ['Tensor'];\n    if (verbose) {\n        lines.push(`  dtype: ${dtype}`);\n        lines.push(`  rank: ${rank}`);\n        lines.push(`  shape: [${shape}]`);\n        lines.push(`  values:`);\n    }\n    lines.push(valsLines.map(l => '    ' + l).join('\\n'));\n    return lines.join('\\n');\n}\nfunction computeMaxSizePerColumn(vals, shape, dtype, strides) {\n    const n = sizeFromShape(shape);\n    const numCols = strides[strides.length - 1];\n    const padPerCol = new Array(numCols).fill(0);\n    const rank = shape.length;\n    const valuesOrTuples = dtype === 'complex64' ? createComplexTuples(vals) : vals;\n    if (rank > 1) {\n        for (let row = 0; row < n / numCols; row++) {\n            const offset = row * numCols;\n            for (let j = 0; j < numCols; j++) {\n                padPerCol[j] = Math.max(padPerCol[j], valToString(valuesOrTuples[offset + j], 0, dtype).length);\n            }\n        }\n    }\n    return padPerCol;\n}\nfunction valToString(val, pad, dtype) {\n    let valStr;\n    if (Array.isArray(val)) {\n        valStr = `${parseFloat(val[0].toFixed(FORMAT_NUM_SIG_DIGITS))} + ` +\n            `${parseFloat(val[1].toFixed(FORMAT_NUM_SIG_DIGITS))}j`;\n    }\n    else if (isString(val)) {\n        valStr = `'${val}'`;\n    }\n    else if (dtype === 'bool') {\n        valStr = boolNumToString(val);\n    }\n    else {\n        valStr = parseFloat(val.toFixed(FORMAT_NUM_SIG_DIGITS)).toString();\n    }\n    return rightPad(valStr, pad);\n}\nfunction boolNumToString(v) {\n    return v === 0 ? 'false' : 'true';\n}\nfunction subTensorToString(vals, shape, dtype, strides, padPerCol, isLast = true) {\n    const storagePerElement = dtype === 'complex64' ? 2 : 1;\n    const size = shape[0];\n    const rank = shape.length;\n    if (rank === 0) {\n        if (dtype === 'complex64') {\n            const complexTuple = createComplexTuples(vals);\n            return [valToString(complexTuple[0], 0, dtype)];\n        }\n        if (dtype === 'bool') {\n            return [boolNumToString(vals[0])];\n        }\n        return [vals[0].toString()];\n    }\n    if (rank === 1) {\n        if (size > FORMAT_LIMIT_NUM_VALS) {\n            const firstValsSize = FORMAT_NUM_FIRST_LAST_VALS * storagePerElement;\n            let firstVals = Array.from(vals.slice(0, firstValsSize));\n            let lastVals = Array.from(vals.slice((size - FORMAT_NUM_FIRST_LAST_VALS) * storagePerElement, size * storagePerElement));\n            if (dtype === 'complex64') {\n                firstVals = createComplexTuples(firstVals);\n                lastVals = createComplexTuples(lastVals);\n            }\n            return [\n                '[' +\n                    firstVals.map((x, i) => valToString(x, padPerCol[i], dtype))\n                        .join(', ') +\n                    ', ..., ' +\n                    lastVals\n                        .map((x, i) => valToString(x, padPerCol[size - FORMAT_NUM_FIRST_LAST_VALS + i], dtype))\n                        .join(', ') +\n                    ']'\n            ];\n        }\n        const displayVals = dtype === 'complex64' ? createComplexTuples(vals) :\n            Array.from(vals);\n        return [\n            '[' +\n                displayVals.map((x, i) => valToString(x, padPerCol[i], dtype))\n                    .join(', ') +\n                ']'\n        ];\n    }\n    // The array is rank 2 or more.\n    const subshape = shape.slice(1);\n    const substrides = strides.slice(1);\n    const stride = strides[0] * storagePerElement;\n    const lines = [];\n    if (size > FORMAT_LIMIT_NUM_VALS) {\n        for (let i = 0; i < FORMAT_NUM_FIRST_LAST_VALS; i++) {\n            const start = i * stride;\n            const end = start + stride;\n            lines.push(...subTensorToString(vals.slice(start, end), subshape, dtype, substrides, padPerCol, false /* isLast */));\n        }\n        lines.push('...');\n        for (let i = size - FORMAT_NUM_FIRST_LAST_VALS; i < size; i++) {\n            const start = i * stride;\n            const end = start + stride;\n            lines.push(...subTensorToString(vals.slice(start, end), subshape, dtype, substrides, padPerCol, i === size - 1 /* isLast */));\n        }\n    }\n    else {\n        for (let i = 0; i < size; i++) {\n            const start = i * stride;\n            const end = start + stride;\n            lines.push(...subTensorToString(vals.slice(start, end), subshape, dtype, substrides, padPerCol, i === size - 1 /* isLast */));\n        }\n    }\n    const sep = rank === 2 ? ',' : '';\n    lines[0] = '[' + lines[0] + sep;\n    for (let i = 1; i < lines.length - 1; i++) {\n        lines[i] = ' ' + lines[i] + sep;\n    }\n    let newLineSep = ',\\n';\n    for (let i = 2; i < rank; i++) {\n        newLineSep += '\\n';\n    }\n    lines[lines.length - 1] =\n        ' ' + lines[lines.length - 1] + ']' + (isLast ? '' : newLineSep);\n    return lines;\n}\nfunction createComplexTuples(vals) {\n    const complexTuples = [];\n    for (let i = 0; i < vals.length; i += 2) {\n        complexTuples.push([vals[i], vals[i + 1]]);\n    }\n    return complexTuples;\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getGlobal } from './global_util';\nimport { tensorToString } from './tensor_format';\nimport * as util from './util';\nimport { computeStrides, toNestedArray } from './util';\n/**\n * A mutable object, similar to `tf.Tensor`, that allows users to set values\n * at locations before converting to an immutable `tf.Tensor`.\n *\n * See `tf.buffer` for creating a tensor buffer.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\nexport class TensorBuffer {\n    constructor(shape, dtype, values) {\n        this.dtype = dtype;\n        this.shape = shape.slice();\n        this.size = util.sizeFromShape(shape);\n        if (values != null) {\n            const n = values.length;\n            util.assert(n === this.size, () => `Length of values '${n}' does not match the size ` +\n                `inferred by the shape '${this.size}'.`);\n        }\n        if (dtype === 'complex64') {\n            throw new Error(`complex64 dtype TensorBuffers are not supported. Please create ` +\n                `a TensorBuffer for the real and imaginary parts separately and ` +\n                `call tf.complex(real, imag).`);\n        }\n        this.values = values || util.getArrayFromDType(dtype, this.size);\n        this.strides = computeStrides(shape);\n    }\n    /**\n     * Sets a value in the buffer at a given location.\n     *\n     * @param value The value to set.\n     * @param locs  The location indices.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Creation'}\n     */\n    set(value, ...locs) {\n        if (locs.length === 0) {\n            locs = [0];\n        }\n        util.assert(locs.length === this.rank, () => `The number of provided coordinates (${locs.length}) must ` +\n            `match the rank (${this.rank})`);\n        const index = this.locToIndex(locs);\n        this.values[index] = value;\n    }\n    /**\n     * Returns the value in the buffer at the provided location.\n     *\n     * @param locs The location indices.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Creation'}\n     */\n    get(...locs) {\n        if (locs.length === 0) {\n            locs = [0];\n        }\n        let i = 0;\n        for (const loc of locs) {\n            if (loc < 0 || loc >= this.shape[i]) {\n                const msg = `Requested out of range element at ${locs}. ` +\n                    `  Buffer shape=${this.shape}`;\n                throw new Error(msg);\n            }\n            i++;\n        }\n        let index = locs[locs.length - 1];\n        for (let i = 0; i < locs.length - 1; ++i) {\n            index += this.strides[i] * locs[i];\n        }\n        return this.values[index];\n    }\n    locToIndex(locs) {\n        if (this.rank === 0) {\n            return 0;\n        }\n        else if (this.rank === 1) {\n            return locs[0];\n        }\n        let index = locs[locs.length - 1];\n        for (let i = 0; i < locs.length - 1; ++i) {\n            index += this.strides[i] * locs[i];\n        }\n        return index;\n    }\n    indexToLoc(index) {\n        if (this.rank === 0) {\n            return [];\n        }\n        else if (this.rank === 1) {\n            return [index];\n        }\n        const locs = new Array(this.shape.length);\n        for (let i = 0; i < locs.length - 1; ++i) {\n            locs[i] = Math.floor(index / this.strides[i]);\n            index -= locs[i] * this.strides[i];\n        }\n        locs[locs.length - 1] = index;\n        return locs;\n    }\n    get rank() {\n        return this.shape.length;\n    }\n    /**\n     * Creates an immutable `tf.Tensor` object from the buffer.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Creation'}\n     */\n    toTensor() {\n        return trackerFn().makeTensor(this.values, this.shape, this.dtype);\n    }\n}\n// For tracking tensor creation and disposal.\nlet trackerFn = null;\n// Used by chaining methods to call into ops.\nlet opHandler = null;\n// Used to warn about deprecated methods.\nlet deprecationWarningFn = null;\n// This here so that we can use this method on dev branches and keep the\n// functionality at master.\n// tslint:disable-next-line:no-unused-expression\n[deprecationWarningFn];\n/**\n * An external consumer can register itself as the tensor tracker. This way\n * the Tensor class can notify the tracker for every tensor created and\n * disposed.\n */\nexport function setTensorTracker(fn) {\n    trackerFn = fn;\n}\n/**\n * An external consumer can register itself as the op handler. This way the\n * Tensor class can have chaining methods that call into ops via the op\n * handler.\n */\nexport function setOpHandler(handler) {\n    opHandler = handler;\n}\n/**\n * Sets the deprecation warning function to be used by this file. This way the\n * Tensor class can be a leaf but still use the environment.\n */\nexport function setDeprecationWarningFn(fn) {\n    deprecationWarningFn = fn;\n}\n/**\n * A `tf.Tensor` object represents an immutable, multidimensional array of\n * numbers that has a shape and a data type.\n *\n * For performance reasons, functions that create tensors do not necessarily\n * perform a copy of the data passed to them (e.g. if the data is passed as a\n * `Float32Array`), and changes to the data will change the tensor. This is not\n * a feature and is not supported. To avoid this behavior, use the tensor before\n * changing the input data or create a copy with `copy = tf.add(yourTensor, 0)`.\n *\n * See `tf.tensor` for details on how to create a `tf.Tensor`.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\nexport class Tensor {\n    constructor(shape, dtype, dataId, id) {\n        /** Whether this tensor has been globally kept. */\n        this.kept = false;\n        this.isDisposedInternal = false;\n        this.shape = shape.slice();\n        this.dtype = dtype || 'float32';\n        this.size = util.sizeFromShape(shape);\n        this.strides = computeStrides(shape);\n        this.dataId = dataId;\n        this.id = id;\n        this.rankType = (this.rank < 5 ? this.rank.toString() : 'higher');\n    }\n    get rank() {\n        return this.shape.length;\n    }\n    /**\n     * Returns a promise of `tf.TensorBuffer` that holds the underlying data.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    async buffer() {\n        const vals = await this.data();\n        return opHandler.buffer(this.shape, this.dtype, vals);\n    }\n    /**\n     * Returns a `tf.TensorBuffer` that holds the underlying data.\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    bufferSync() {\n        return opHandler.buffer(this.shape, this.dtype, this.dataSync());\n    }\n    /**\n     * Returns the tensor data as a nested array. The transfer of data is done\n     * asynchronously.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    async array() {\n        const vals = await this.data();\n        return toNestedArray(this.shape, vals, this.dtype === 'complex64');\n    }\n    /**\n     * Returns the tensor data as a nested array. The transfer of data is done\n     * synchronously.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    arraySync() {\n        return toNestedArray(this.shape, this.dataSync(), this.dtype === 'complex64');\n    }\n    /**\n     * Asynchronously downloads the values from the `tf.Tensor`. Returns a\n     * promise of `TypedArray` that resolves when the computation has finished.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    async data() {\n        this.throwIfDisposed();\n        const data = trackerFn().read(this.dataId);\n        if (this.dtype === 'string') {\n            const bytes = await data;\n            try {\n                return bytes.map(b => util.decodeString(b));\n            }\n            catch (_a) {\n                throw new Error('Failed to decode the string bytes into utf-8. ' +\n                    'To get the original bytes, call tensor.bytes().');\n            }\n        }\n        return data;\n    }\n    /**\n     * Copy the tensor's data to a new GPU resource. Comparing to the `dataSync()`\n     * and `data()`, this method prevents data from being downloaded to CPU.\n     *\n     * For WebGL backend, the data will be stored on a densely packed texture.\n     * This means that the texture will use the RGBA channels to store value.\n     *\n     * @param options:\n     *     For WebGL,\n     *         - customTexShape: Optional. If set, will use the user defined\n     *     texture shape to create the texture.\n     *\n     * @returns For WebGL backend, a GPUData contains the new texture and\n     *     its information.\n     *     {\n     *        tensorRef: The tensor that is associated with this texture,\n     *        texture: WebGLTexture,\n     *        texShape: [number, number] // [height, width]\n     *     }\n     *     Remember to dispose the GPUData after it is used by\n     *     `res.tensorRef.dispose()`.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    dataToGPU(options) {\n        this.throwIfDisposed();\n        return trackerFn().readToGPU(this.dataId, options);\n    }\n    /**\n     * Synchronously downloads the values from the `tf.Tensor`. This blocks the\n     * UI thread until the values are ready, which can cause performance issues.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    dataSync() {\n        this.throwIfDisposed();\n        const data = trackerFn().readSync(this.dataId);\n        if (this.dtype === 'string') {\n            try {\n                return data.map(b => util.decodeString(b));\n            }\n            catch (_a) {\n                throw new Error('Failed to decode the string bytes into utf-8. ' +\n                    'To get the original bytes, call tensor.bytes().');\n            }\n        }\n        return data;\n    }\n    /** Returns the underlying bytes of the tensor's data. */\n    async bytes() {\n        this.throwIfDisposed();\n        const data = await trackerFn().read(this.dataId);\n        if (this.dtype === 'string') {\n            return data;\n        }\n        else {\n            return new Uint8Array(data.buffer);\n        }\n    }\n    /**\n     * Disposes `tf.Tensor` from memory.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        trackerFn().disposeTensor(this);\n        this.isDisposedInternal = true;\n    }\n    get isDisposed() {\n        return this.isDisposedInternal;\n    }\n    throwIfDisposed() {\n        if (this.isDisposed) {\n            throw new Error(`Tensor is disposed.`);\n        }\n    }\n    /**\n     * Prints the `tf.Tensor`. See `tf.print` for details.\n     *\n     * @param verbose Whether to print verbose information about the tensor,\n     *    including dtype and size.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    print(verbose = false) {\n        return opHandler.print(this, verbose);\n    }\n    /**\n     * Returns a copy of the tensor. See `tf.clone` for details.\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    clone() {\n        this.throwIfDisposed();\n        return opHandler.clone(this);\n    }\n    /**\n     * Returns a human-readable description of the tensor. Useful for logging.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    toString(verbose = false) {\n        const vals = this.dataSync();\n        return tensorToString(vals, this.shape, this.dtype, verbose);\n    }\n    cast(dtype) {\n        this.throwIfDisposed();\n        return opHandler.cast(this, dtype);\n    }\n    variable(trainable = true, name, dtype) {\n        this.throwIfDisposed();\n        return trackerFn().makeVariable(this, trainable, name, dtype);\n    }\n}\nObject.defineProperty(Tensor, Symbol.hasInstance, {\n    value: (instance) => {\n        // Implementation note: we should use properties of the object that will be\n        // defined before the constructor body has finished executing (methods).\n        // This is because when this code is transpiled by babel, babel will call\n        // classCallCheck before the constructor body is run.\n        // See https://github.com/tensorflow/tfjs/issues/3384 for backstory.\n        return !!instance && instance.data != null && instance.dataSync != null &&\n            instance.throwIfDisposed != null;\n    }\n});\nexport function getGlobalTensorClass() {\n    // Use getGlobal so that we can augment the Tensor class across package\n    // boundaries becase the node resolution alg may result in different modules\n    // being returned for this file depending on the path they are loaded from.\n    return getGlobal('Tensor', () => {\n        return Tensor;\n    });\n}\n// Global side effect. Cache global reference to Tensor class\ngetGlobalTensorClass();\n/**\n * A mutable `tf.Tensor`, useful for persisting state, e.g. for training.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\nexport class Variable extends Tensor {\n    constructor(initialValue, trainable, name, tensorId) {\n        super(initialValue.shape, initialValue.dtype, initialValue.dataId, tensorId);\n        this.trainable = trainable;\n        this.name = name;\n    }\n    /**\n     * Assign a new `tf.Tensor` to this variable. The new `tf.Tensor` must have\n     * the same shape and dtype as the old `tf.Tensor`.\n     *\n     * @param newValue New tensor to be assigned to this variable.\n     *\n     * @doc {heading: 'Tensors', subheading: 'Classes'}\n     */\n    assign(newValue) {\n        if (newValue.dtype !== this.dtype) {\n            throw new Error(`dtype of the new value (${newValue.dtype}) and ` +\n                `previous value (${this.dtype}) must match`);\n        }\n        if (!util.arraysEqual(newValue.shape, this.shape)) {\n            throw new Error(`shape of the new value (${newValue.shape}) and ` +\n                `previous value (${this.shape}) must match`);\n        }\n        trackerFn().disposeTensor(this);\n        this.dataId = newValue.dataId;\n        trackerFn().incRef(this, null /* backend */);\n    }\n    dispose() {\n        trackerFn().disposeVariable(this);\n        this.isDisposedInternal = true;\n    }\n}\nObject.defineProperty(Variable, Symbol.hasInstance, {\n    value: (instance) => {\n        return instance instanceof Tensor && instance.assign != null &&\n            instance.assign instanceof Function;\n    }\n});\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var Rank;\n(function (Rank) {\n    Rank[\"R0\"] = \"R0\";\n    Rank[\"R1\"] = \"R1\";\n    Rank[\"R2\"] = \"R2\";\n    Rank[\"R3\"] = \"R3\";\n    Rank[\"R4\"] = \"R4\";\n    Rank[\"R5\"] = \"R5\";\n    Rank[\"R6\"] = \"R6\";\n})(Rank || (Rank = {}));\n// Looks for upcasting types. Used, for example, in operations with mixed dtype\n// inputs.\nvar UpcastInt32AndMap;\n(function (UpcastInt32AndMap) {\n    UpcastInt32AndMap[\"float32\"] = \"float32\";\n    UpcastInt32AndMap[\"int32\"] = \"int32\";\n    UpcastInt32AndMap[\"bool\"] = \"int32\";\n    UpcastInt32AndMap[\"complex64\"] = \"complex64\";\n})(UpcastInt32AndMap || (UpcastInt32AndMap = {}));\nvar UpcastBoolAndMap;\n(function (UpcastBoolAndMap) {\n    UpcastBoolAndMap[\"float32\"] = \"float32\";\n    UpcastBoolAndMap[\"int32\"] = \"int32\";\n    UpcastBoolAndMap[\"bool\"] = \"bool\";\n    UpcastBoolAndMap[\"complex64\"] = \"complex64\";\n})(UpcastBoolAndMap || (UpcastBoolAndMap = {}));\nvar UpcastFloat32AndMap;\n(function (UpcastFloat32AndMap) {\n    UpcastFloat32AndMap[\"float32\"] = \"float32\";\n    UpcastFloat32AndMap[\"int32\"] = \"float32\";\n    UpcastFloat32AndMap[\"bool\"] = \"float32\";\n    UpcastFloat32AndMap[\"complex64\"] = \"complex64\";\n})(UpcastFloat32AndMap || (UpcastFloat32AndMap = {}));\nvar UpcastComplex64AndMap;\n(function (UpcastComplex64AndMap) {\n    UpcastComplex64AndMap[\"float32\"] = \"complex64\";\n    UpcastComplex64AndMap[\"int32\"] = \"complex64\";\n    UpcastComplex64AndMap[\"bool\"] = \"complex64\";\n    UpcastComplex64AndMap[\"complex64\"] = \"complex64\";\n})(UpcastComplex64AndMap || (UpcastComplex64AndMap = {}));\nconst upcastTypeMap = {\n    'float32': UpcastFloat32AndMap,\n    'int32': UpcastInt32AndMap,\n    'bool': UpcastBoolAndMap,\n    'complex64': UpcastComplex64AndMap\n};\nexport function upcastType(typeA, typeB) {\n    if (typeA === 'string' || typeB === 'string') {\n        if (typeA === 'string' && typeB === 'string') {\n            return 'string';\n        }\n        throw new Error(`Can not upcast ${typeA} with ${typeB}`);\n    }\n    return upcastTypeMap[typeA][typeB];\n}\n/** Returns the output type after summation. */\nexport function sumOutType(type) {\n    return upcastType(type, 'int32');\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Tensor } from './tensor';\nimport { upcastType } from './types';\nimport { assert } from './util';\nexport function makeTypesMatch(a, b) {\n    if (a.dtype === b.dtype) {\n        return [a, b];\n    }\n    const dtype = upcastType(a.dtype, b.dtype);\n    return [a.cast(dtype), b.cast(dtype)];\n}\nexport function assertTypesMatch(a, b) {\n    assert(a.dtype === b.dtype, () => `The dtypes of the first(${a.dtype}) and` +\n        ` second(${b.dtype}) input must match`);\n}\nexport function isTensorInList(tensor, tensorList) {\n    return tensorList.some(x => x.id === tensor.id);\n}\n/**\n * Extracts any `Tensor`s found within the provided object.\n *\n * @param container an object that may be a `Tensor` or may directly contain\n *   `Tensor`s, such as a `Tensor[]` or `{key: Tensor, ...}`. In general it\n *   is safe to pass any object here, except that `Promise`s are not\n *   supported.\n * @returns An array of `Tensors` found within the passed object. If the\n *   argument is simply a `Tensor', a list containing that `Tensor` is\n *   returned. If the object is not a `Tensor` or does not\n *   contain `Tensors`, an empty list is returned.\n */\nexport function getTensorsInContainer(result) {\n    const list = [];\n    const seen = new Set();\n    walkTensorContainer(result, list, seen);\n    return list;\n}\nfunction walkTensorContainer(container, list, seen) {\n    if (container == null) {\n        return;\n    }\n    if (container instanceof Tensor) {\n        list.push(container);\n        return;\n    }\n    if (!isIterable(container)) {\n        return;\n    }\n    // Iteration over keys works also for arrays.\n    const iterable = container;\n    for (const k in iterable) {\n        const val = iterable[k];\n        if (!seen.has(val)) {\n            seen.add(val);\n            walkTensorContainer(val, list, seen);\n        }\n    }\n}\n// tslint:disable-next-line:no-any\nfunction isIterable(obj) {\n    return Array.isArray(obj) || typeof obj === 'object';\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVuc29yX3V0aWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL3RlbnNvcl91dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxVQUFVLENBQUM7QUFFaEMsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLFNBQVMsQ0FBQztBQUNuQyxPQUFPLEVBQUMsTUFBTSxFQUFDLE1BQU0sUUFBUSxDQUFDO0FBRTlCLE1BQU0sVUFBVSxjQUFjLENBQW1CLENBQUksRUFBRSxDQUFJO0lBQ3pELElBQUksQ0FBQyxDQUFDLEtBQUssS0FBSyxDQUFDLENBQUMsS0FBSyxFQUFFO1FBQ3ZCLE9BQU8sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7S0FDZjtJQUNELE1BQU0sS0FBSyxHQUFHLFVBQVUsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMzQyxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7QUFDeEMsQ0FBQztBQUVELE1BQU0sVUFBVSxnQkFBZ0IsQ0FBQyxDQUFTLEVBQUUsQ0FBUztJQUNuRCxNQUFNLENBQ0YsQ0FBQyxDQUFDLEtBQUssS0FBSyxDQUFDLENBQUMsS0FBSyxFQUNuQixHQUFHLEVBQUUsQ0FBQywyQkFBMkIsQ0FBQyxDQUFDLEtBQUssT0FBTztRQUMzQyxXQUFXLENBQUMsQ0FBQyxLQUFLLG9CQUFvQixDQUFDLENBQUM7QUFDbEQsQ0FBQztBQUVELE1BQU0sVUFBVSxjQUFjLENBQUMsTUFBYyxFQUFFLFVBQW9CO0lBQ2pFLE9BQU8sVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQ2xELENBQUM7QUFFRDs7Ozs7Ozs7Ozs7R0FXRztBQUNILE1BQU0sVUFBVSxxQkFBcUIsQ0FBQyxNQUF1QjtJQUMzRCxNQUFNLElBQUksR0FBYSxFQUFFLENBQUM7SUFDMUIsTUFBTSxJQUFJLEdBQUcsSUFBSSxHQUFHLEVBQVcsQ0FBQztJQUNoQyxtQkFBbUIsQ0FBQyxNQUFNLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3hDLE9BQU8sSUFBSSxDQUFDO0FBQ2QsQ0FBQztBQUVELFNBQVMsbUJBQW1CLENBQ3hCLFNBQTBCLEVBQUUsSUFBYyxFQUFFLElBQWtCO0lBQ2hFLElBQUksU0FBUyxJQUFJLElBQUksRUFBRTtRQUNyQixPQUFPO0tBQ1I7SUFDRCxJQUFJLFNBQVMsWUFBWSxNQUFNLEVBQUU7UUFDL0IsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNyQixPQUFPO0tBQ1I7SUFDRCxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxFQUFFO1FBQzFCLE9BQU87S0FDUjtJQUNELDZDQUE2QztJQUM3QyxNQUFNLFFBQVEsR0FBRyxTQUFpQyxDQUFDO0lBQ25ELEtBQUssTUFBTSxDQUFDLElBQUksUUFBUSxFQUFFO1FBQ3hCLE1BQU0sR0FBRyxHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN4QixJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRTtZQUNsQixJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ2QsbUJBQW1CLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztTQUN0QztLQUNGO0FBQ0gsQ0FBQztBQUVELGtDQUFrQztBQUNsQyxTQUFTLFVBQVUsQ0FBQyxHQUFRO0lBQzFCLE9BQU8sS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxPQUFPLEdBQUcsS0FBSyxRQUFRLENBQUM7QUFDdkQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE4IEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtUZW5zb3J9IGZyb20gJy4vdGVuc29yJztcbmltcG9ydCB7VGVuc29yQ29udGFpbmVyLCBUZW5zb3JDb250YWluZXJBcnJheX0gZnJvbSAnLi90ZW5zb3JfdHlwZXMnO1xuaW1wb3J0IHt1cGNhc3RUeXBlfSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCB7YXNzZXJ0fSBmcm9tICcuL3V0aWwnO1xuXG5leHBvcnQgZnVuY3Rpb24gbWFrZVR5cGVzTWF0Y2g8VCBleHRlbmRzIFRlbnNvcj4oYTogVCwgYjogVCk6IFtULCBUXSB7XG4gIGlmIChhLmR0eXBlID09PSBiLmR0eXBlKSB7XG4gICAgcmV0dXJuIFthLCBiXTtcbiAgfVxuICBjb25zdCBkdHlwZSA9IHVwY2FzdFR5cGUoYS5kdHlwZSwgYi5kdHlwZSk7XG4gIHJldHVybiBbYS5jYXN0KGR0eXBlKSwgYi5jYXN0KGR0eXBlKV07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnRUeXBlc01hdGNoKGE6IFRlbnNvciwgYjogVGVuc29yKTogdm9pZCB7XG4gIGFzc2VydChcbiAgICAgIGEuZHR5cGUgPT09IGIuZHR5cGUsXG4gICAgICAoKSA9PiBgVGhlIGR0eXBlcyBvZiB0aGUgZmlyc3QoJHthLmR0eXBlfSkgYW5kYCArXG4gICAgICAgICAgYCBzZWNvbmQoJHtiLmR0eXBlfSkgaW5wdXQgbXVzdCBtYXRjaGApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNUZW5zb3JJbkxpc3QodGVuc29yOiBUZW5zb3IsIHRlbnNvckxpc3Q6IFRlbnNvcltdKTogYm9vbGVhbiB7XG4gIHJldHVybiB0ZW5zb3JMaXN0LnNvbWUoeCA9PiB4LmlkID09PSB0ZW5zb3IuaWQpO1xufVxuXG4vKipcbiAqIEV4dHJhY3RzIGFueSBgVGVuc29yYHMgZm91bmQgd2l0aGluIHRoZSBwcm92aWRlZCBvYmplY3QuXG4gKlxuICogQHBhcmFtIGNvbnRhaW5lciBhbiBvYmplY3QgdGhhdCBtYXkgYmUgYSBgVGVuc29yYCBvciBtYXkgZGlyZWN0bHkgY29udGFpblxuICogICBgVGVuc29yYHMsIHN1Y2ggYXMgYSBgVGVuc29yW11gIG9yIGB7a2V5OiBUZW5zb3IsIC4uLn1gLiBJbiBnZW5lcmFsIGl0XG4gKiAgIGlzIHNhZmUgdG8gcGFzcyBhbnkgb2JqZWN0IGhlcmUsIGV4Y2VwdCB0aGF0IGBQcm9taXNlYHMgYXJlIG5vdFxuICogICBzdXBwb3J0ZWQuXG4gKiBAcmV0dXJucyBBbiBhcnJheSBvZiBgVGVuc29yc2AgZm91bmQgd2l0aGluIHRoZSBwYXNzZWQgb2JqZWN0LiBJZiB0aGVcbiAqICAgYXJndW1lbnQgaXMgc2ltcGx5IGEgYFRlbnNvcicsIGEgbGlzdCBjb250YWluaW5nIHRoYXQgYFRlbnNvcmAgaXNcbiAqICAgcmV0dXJuZWQuIElmIHRoZSBvYmplY3QgaXMgbm90IGEgYFRlbnNvcmAgb3IgZG9lcyBub3RcbiAqICAgY29udGFpbiBgVGVuc29yc2AsIGFuIGVtcHR5IGxpc3QgaXMgcmV0dXJuZWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRUZW5zb3JzSW5Db250YWluZXIocmVzdWx0OiBUZW5zb3JDb250YWluZXIpOiBUZW5zb3JbXSB7XG4gIGNvbnN0IGxpc3Q6IFRlbnNvcltdID0gW107XG4gIGNvbnN0IHNlZW4gPSBuZXcgU2V0PHt9fHZvaWQ+KCk7XG4gIHdhbGtUZW5zb3JDb250YWluZXIocmVzdWx0LCBsaXN0LCBzZWVuKTtcbiAgcmV0dXJuIGxpc3Q7XG59XG5cbmZ1bmN0aW9uIHdhbGtUZW5zb3JDb250YWluZXIoXG4gICAgY29udGFpbmVyOiBUZW5zb3JDb250YWluZXIsIGxpc3Q6IFRlbnNvcltdLCBzZWVuOiBTZXQ8e318dm9pZD4pOiB2b2lkIHtcbiAgaWYgKGNvbnRhaW5lciA9PSBudWxsKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChjb250YWluZXIgaW5zdGFuY2VvZiBUZW5zb3IpIHtcbiAgICBsaXN0LnB1c2goY29udGFpbmVyKTtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKCFpc0l0ZXJhYmxlKGNvbnRhaW5lcikpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgLy8gSXRlcmF0aW9uIG92ZXIga2V5cyB3b3JrcyBhbHNvIGZvciBhcnJheXMuXG4gIGNvbnN0IGl0ZXJhYmxlID0gY29udGFpbmVyIGFzIFRlbnNvckNvbnRhaW5lckFycmF5O1xuICBmb3IgKGNvbnN0IGsgaW4gaXRlcmFibGUpIHtcbiAgICBjb25zdCB2YWwgPSBpdGVyYWJsZVtrXTtcbiAgICBpZiAoIXNlZW4uaGFzKHZhbCkpIHtcbiAgICAgIHNlZW4uYWRkKHZhbCk7XG4gICAgICB3YWxrVGVuc29yQ29udGFpbmVyKHZhbCwgbGlzdCwgc2Vlbik7XG4gICAgfVxuICB9XG59XG5cbi8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1hbnlcbmZ1bmN0aW9uIGlzSXRlcmFibGUob2JqOiBhbnkpOiBib29sZWFuIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkob2JqKSB8fCB0eXBlb2Ygb2JqID09PSAnb2JqZWN0Jztcbn1cbiJdfQ==","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { KernelBackend } from './backends/backend';\nimport { Environment, setEnvironmentGlobal } from './environment';\nimport { getGlobalNamespace } from './global_util';\nimport { Add, Cast, Identity } from './kernel_names';\nimport { getGradient, getKernel, getKernelsForBackend } from './kernel_registry';\nimport * as log from './log';\nimport { Profiler } from './profiler';\nimport { backpropagateGradients, getFilteredNodesXToY } from './tape';\nimport { setTensorTracker, Tensor, Variable } from './tensor';\nimport { getTensorsInContainer } from './tensor_util';\nimport * as util from './util';\nimport { bytesFromStringArray, makeOnesTypedArray, now, sizeFromShape } from './util';\nfunction isRegisteredKernelInvocation(kernelInvocation) {\n    return kernelInvocation.kernelName != null;\n}\nclass EngineState {\n    constructor() {\n        // Public since optimizers will use it.\n        this.registeredVariables = {};\n        this.nextTapeNodeId = 0;\n        this.numBytes = 0;\n        this.numTensors = 0;\n        this.numStringTensors = 0;\n        this.numDataBuffers = 0;\n        // Number of nested tf.grad() statements when computing higher-order\n        // gradients. E.g. `1` for first-order gradients and `2` for second-order\n        // gradients. Used to track if the tape should be removed after a backprop.\n        this.gradientDepth = 0;\n        // Number of nested kernel calls. When kernel depth is greater than 1, we turn\n        // off the tape.\n        this.kernelDepth = 0;\n        this.scopeStack = [];\n        /**\n         * Keeps track of the number of data moves during a kernel execution. We\n         * maintain a stack since kernels can call other kernels, recursively.\n         */\n        this.numDataMovesStack = [];\n        this.nextScopeId = 0;\n        this.tensorInfo = new WeakMap();\n        this.profiling = false;\n        this.activeProfile = {\n            newBytes: 0,\n            newTensors: 0,\n            peakBytes: 0,\n            kernels: [],\n            result: null,\n            get kernelNames() {\n                return Array.from(new Set(this.kernels.map(k => k.name)));\n            }\n        };\n    }\n    dispose() {\n        for (const variableName in this.registeredVariables) {\n            this.registeredVariables[variableName].dispose();\n        }\n    }\n}\nexport class Engine {\n    constructor(ENV) {\n        this.ENV = ENV;\n        this.registry = {};\n        this.registryFactory = {};\n        this.pendingBackendInitId = 0;\n        this.state = new EngineState();\n    }\n    async ready() {\n        if (this.pendingBackendInit != null) {\n            return this.pendingBackendInit.then(() => { });\n        }\n        if (this.backendInstance != null) {\n            return;\n        }\n        const sortedBackends = this.getSortedBackends();\n        for (let i = 0; i < sortedBackends.length; i++) {\n            const backendName = sortedBackends[i];\n            const success = await this.initializeBackend(backendName).success;\n            if (success) {\n                await this.setBackend(backendName);\n                return;\n            }\n        }\n        throw new Error(`Could not initialize any backends, all backend initializations ` +\n            `failed.`);\n    }\n    get backend() {\n        if (this.pendingBackendInit != null) {\n            throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make ` +\n                `sure to await tf.ready() or await tf.setBackend() before calling ` +\n                `other methods`);\n        }\n        if (this.backendInstance == null) {\n            const { name, asyncInit } = this.initializeBackendsAndReturnBest();\n            if (asyncInit) {\n                throw new Error(`The highest priority backend '${name}' has not yet been ` +\n                    `initialized. Make sure to await tf.ready() or ` +\n                    `await tf.setBackend() before calling other methods`);\n            }\n            this.setBackend(name);\n        }\n        return this.backendInstance;\n    }\n    backendNames() {\n        return Object.keys(this.registryFactory);\n    }\n    findBackend(backendName) {\n        if (!(backendName in this.registry)) {\n            // If the backend hasn't been initialized but we have a registry entry for\n            // it, initialize it and return it.\n            if (backendName in this.registryFactory) {\n                const { asyncInit } = this.initializeBackend(backendName);\n                if (asyncInit) {\n                    // Backend is not ready yet.\n                    return null;\n                }\n            }\n            else {\n                return null;\n            }\n        }\n        return this.registry[backendName];\n    }\n    findBackendFactory(backendName) {\n        if (!(backendName in this.registryFactory)) {\n            return null;\n        }\n        return this.registryFactory[backendName].factory;\n    }\n    registerBackend(backendName, factory, priority = 1) {\n        if (backendName in this.registryFactory) {\n            log.warn(`${backendName} backend was already registered. ` +\n                `Reusing existing backend factory.`);\n            return false;\n        }\n        this.registryFactory[backendName] = { factory, priority };\n        return true;\n    }\n    async setBackend(backendName) {\n        if (this.registryFactory[backendName] == null) {\n            throw new Error(`Backend name '${backendName}' not found in registry`);\n        }\n        this.backendName = backendName;\n        if (this.registry[backendName] == null) {\n            this.backendInstance = null;\n            const { success, asyncInit } = this.initializeBackend(backendName);\n            const result = asyncInit ? await success : success;\n            if (!result) {\n                return false;\n            }\n        }\n        this.backendInstance = this.registry[backendName];\n        this.setupRegisteredKernels();\n        // Reset the profiler.\n        this.profiler = new Profiler(this.backendInstance);\n        return true;\n    }\n    setupRegisteredKernels() {\n        const kernels = getKernelsForBackend(this.backendName);\n        kernels.forEach(kernel => {\n            if (kernel.setupFunc != null) {\n                kernel.setupFunc(this.backendInstance);\n            }\n        });\n    }\n    disposeRegisteredKernels(backendName) {\n        const kernels = getKernelsForBackend(backendName);\n        kernels.forEach(kernel => {\n            if (kernel.disposeFunc != null) {\n                kernel.disposeFunc(this.registry[backendName]);\n            }\n        });\n    }\n    /**\n     * Initializes a backend by looking up the backend name in the factory\n     * registry and calling the factory method. Returns a boolean representing\n     * whether the initialization of the backend suceeded. Throws an error if\n     * there is no backend in the factory registry.\n     */\n    initializeBackend(backendName) {\n        const registryFactoryEntry = this.registryFactory[backendName];\n        if (registryFactoryEntry == null) {\n            throw new Error(`Cannot initialize backend ${backendName}, no registration found.`);\n        }\n        try {\n            const backend = registryFactoryEntry.factory();\n            /* Test if the factory returns a promise.\n            Done in a more liberal way than\n            previous 'Promise.resolve(backend)===backend'\n            as we needed to account for custom Promise\n            implementations (e.g. Angular) */\n            if (backend && !(backend instanceof KernelBackend) &&\n                typeof backend.then === 'function') {\n                const promiseId = ++this.pendingBackendInitId;\n                const success = backend\n                    .then(backendInstance => {\n                    // Outdated promise. Another backend was set in the meantime.\n                    if (promiseId < this.pendingBackendInitId) {\n                        return false;\n                    }\n                    this.registry[backendName] = backendInstance;\n                    this.pendingBackendInit = null;\n                    return true;\n                })\n                    .catch(err => {\n                    // Outdated promise. Another backend was set in the meantime.\n                    if (promiseId < this.pendingBackendInitId) {\n                        return false;\n                    }\n                    this.pendingBackendInit = null;\n                    log.warn(`Initialization of backend ${backendName} failed`);\n                    log.warn(err.stack || err.message);\n                    return false;\n                });\n                this.pendingBackendInit = success;\n                return { success, asyncInit: true };\n            }\n            else {\n                this.registry[backendName] = backend;\n                return { success: true, asyncInit: false };\n            }\n        }\n        catch (err) {\n            log.warn(`Initialization of backend ${backendName} failed`);\n            log.warn(err.stack || err.message);\n            return { success: false, asyncInit: false };\n        }\n    }\n    removeBackend(backendName) {\n        if (!(backendName in this.registryFactory)) {\n            throw new Error(`${backendName} backend not found in registry`);\n        }\n        if (this.backendName === backendName && this.pendingBackendInit != null) {\n            // There is a pending promise of the backend we want to remove. Make it\n            // obsolete.\n            this.pendingBackendInitId++;\n        }\n        if (backendName in this.registry) {\n            this.disposeRegisteredKernels(backendName);\n            this.registry[backendName].dispose();\n            delete this.registry[backendName];\n        }\n        delete this.registryFactory[backendName];\n        // Unset the backend if it is active.\n        if (this.backendName === backendName) {\n            this.pendingBackendInit = null;\n            this.backendName = null;\n            this.backendInstance = null;\n        }\n    }\n    getSortedBackends() {\n        if (Object.keys(this.registryFactory).length === 0) {\n            throw new Error('No backend found in registry.');\n        }\n        return Object.keys(this.registryFactory).sort((a, b) => {\n            // Highest priority comes first.\n            return this.registryFactory[b].priority -\n                this.registryFactory[a].priority;\n        });\n    }\n    initializeBackendsAndReturnBest() {\n        const sortedBackends = this.getSortedBackends();\n        for (let i = 0; i < sortedBackends.length; i++) {\n            const backendName = sortedBackends[i];\n            const { success, asyncInit } = this.initializeBackend(backendName);\n            if (asyncInit || success) {\n                return { name: backendName, asyncInit };\n            }\n        }\n        throw new Error(`Could not initialize any backends, all backend initializations ` +\n            `failed.`);\n    }\n    moveData(backend, dataId) {\n        const info = this.state.tensorInfo.get(dataId);\n        const srcBackend = info.backend;\n        const values = this.readSync(dataId);\n        const refCount = srcBackend.refCount(dataId);\n        // Delete the tensor from the old backend and move it to the new\n        // backend.\n        srcBackend.disposeData(dataId, true);\n        info.backend = backend;\n        backend.move(dataId, values, info.shape, info.dtype, refCount);\n        if (this.shouldCheckForMemLeaks()) {\n            // Track the number of moves during a kernel execution to correctly\n            // detect memory leaks.\n            this.state.numDataMovesStack[this.state.numDataMovesStack.length - 1]++;\n        }\n    }\n    tidy(nameOrFn, fn) {\n        let name = null;\n        if (fn == null) {\n            // Called with only 1 argument.\n            if (typeof nameOrFn !== 'function') {\n                throw new Error('Please provide a function to tidy()');\n            }\n            fn = nameOrFn;\n        }\n        else {\n            // Called with 2 arguments.\n            if (typeof nameOrFn !== 'string' && !(nameOrFn instanceof String)) {\n                throw new Error('When calling with two arguments, the first argument ' +\n                    'to tidy() must be a string');\n            }\n            if (typeof fn !== 'function') {\n                throw new Error('When calling with two arguments, the 2nd argument ' +\n                    'to tidy() must be a function');\n            }\n            name = nameOrFn;\n            // TODO(nsthorat,smilkov): Do operation logging and performance\n            // profiling.\n        }\n        let result;\n        return this.scopedRun(() => this.startScope(name), () => this.endScope(result), () => {\n            result = fn();\n            if (result instanceof Promise) {\n                console.error('Cannot return a Promise inside of tidy.');\n            }\n            return result;\n        });\n    }\n    scopedRun(start, end, f) {\n        start();\n        try {\n            const res = f();\n            end();\n            return res;\n        }\n        catch (ex) {\n            end();\n            throw ex;\n        }\n    }\n    nextTensorId() {\n        return Engine.nextTensorId++;\n    }\n    nextVariableId() {\n        return Engine.nextVariableId++;\n    }\n    /**\n     * This method is called instead of the public-facing tensor.clone() when\n     * saving a tensor for backwards pass. It makes sure to add the clone\n     * operation to the tape regardless of being called inside a kernel\n     * execution.\n     */\n    clone(x) {\n        const y = ENGINE.runKernel(Identity, { x });\n        const inputs = { x };\n        const grad = (dy) => ({\n            x: () => {\n                const dtype = 'float32';\n                const gradInputs = { x: dy };\n                const attrs = { dtype };\n                return ENGINE.runKernel(Cast, gradInputs, \n                // tslint:disable-next-line: no-unnecessary-type-assertion\n                attrs);\n            }\n        });\n        const saved = [];\n        this.addTapeNode(this.state.activeScope.name, inputs, [y], grad, saved, {});\n        return y;\n    }\n    /**\n     * Execute a kernel with the given name and return the output tensor.\n     *\n     * @param kernelName The name of the kernel to execute.\n     * @param inputs A map of input names to tensors.\n     * @param attrs A map of attribute names to their values. An attribute is a\n     *     primitive (non-tensor) input to the kernel.\n     * @param inputsToSave A list of tensors, inputs to save for the backprop\n     *     computation.\n     * @param outputsToSave A list of booleans, specifying which output to save\n     *     for the backprop computation. These are booleans since the output\n     * tensors are not visible to the user.\n     */\n    runKernel(kernelName, inputs, attrs) {\n        if (this.backendName == null) {\n            // backend has not been initialized yet (backend initialization is lazy\n            // can be deferred until an op/ kernel is run).\n            // The below getter has side effects that will try to initialize the\n            // backend and set properties like this.backendName\n            // tslint:disable-next-line: no-unused-expression\n            this.backend;\n        }\n        const hasKernel = getKernel(kernelName, this.backendName) != null;\n        if (!hasKernel) {\n            throw new Error(`Kernel '${kernelName}' not registered for backend '${this.backendName}'`);\n        }\n        return this.runKernelFunc({ kernelName, inputs, attrs });\n    }\n    shouldCheckForMemLeaks() {\n        return this.ENV.getBool('IS_TEST');\n    }\n    checkKernelForMemLeak(kernelName, numDataIdsBefore, outInfos) {\n        const numDataIdsAfter = this.backend.numDataIds();\n        // Count the number of data ids associated with the result of the kernel.\n        let numOutputDataIds = 0;\n        outInfos.forEach(info => {\n            // Complex numbers allocate 3 data ids, one for 'real', one for\n            // 'imaginary', and one for the container that holds the former two.\n            numOutputDataIds += (info.dtype === 'complex64' ? 3 : 1);\n        });\n        // Account for the number of moves during kernel execution. A \"data move\"\n        // can happen in the middle of a kernel execution, placing a new (key,value)\n        // pair in the data storage. Since data moves have net zero effect (we\n        // always remove the data from the old backend), we have to cancel them out\n        // when detecting memory leaks.\n        const numMoves = this.state.numDataMovesStack[this.state.numDataMovesStack.length - 1];\n        const dataIdsLeaked = numDataIdsAfter - numDataIdsBefore - numOutputDataIds - numMoves;\n        if (dataIdsLeaked > 0) {\n            throw new Error(`Backend '${this.backendName}' has an internal memory leak ` +\n                `(${dataIdsLeaked} data ids) after running '${kernelName}'`);\n        }\n    }\n    /**\n     * Internal helper method to execute a kernel Func\n     *\n     * Use `runKernel` to execute kernels from outside of engine.\n     */\n    runKernelFunc(kernelParams) {\n        let outputs;\n        let saved = [];\n        const isTapeOn = this.isTapeOn();\n        const startingBytecount = this.state.numBytes;\n        const startingNumTensors = this.state.numTensors;\n        if (this.shouldCheckForMemLeaks()) {\n            this.state.numDataMovesStack.push(0);\n        }\n        let kernelFunc;\n        if (this.backendName == null) {\n            // backend has not been initialized yet (backend initialization is lazy\n            // can be deferred until an op/ kernel is run).\n            // The below getter has side effects that will try to initialize the\n            // backend and set properties like this.backendName\n            // tslint:disable-next-line: no-unused-expression\n            this.backend;\n        }\n        let out;\n        const kernelOrScopeName = isRegisteredKernelInvocation(kernelParams) ?\n            kernelParams.kernelName :\n            this.state.activeScope != null ? this.state.activeScope.name : '';\n        // Create the kernelFunc from either a registered kernel OR passed in\n        // forward/backward functions (used by custom grad). In this context a\n        // kernelFunc wraps a kernel implementation with some bookkeeping.\n        if (isRegisteredKernelInvocation(kernelParams)) {\n            const { kernelName, inputs, attrs } = kernelParams;\n            if (this.backendName == null) {\n                // backend has not been initialized yet (backend initialization is lazy\n                // can be deferred until an op/ kernel is run).\n                // The below getter has side effects that will try to initialize the\n                // backend and set properties like this.backendName\n                // tslint:disable-next-line: no-unused-expression\n                this.backend;\n            }\n            const kernel = getKernel(kernelName, this.backendName);\n            util.assert(kernel != null, () => `Cannot find registered kernel '${kernelName}' for backend '${this.backendName}'`);\n            kernelFunc = () => {\n                const numDataIdsBefore = this.backend.numDataIds();\n                out = kernel.kernelFunc({ inputs, attrs, backend: this.backend });\n                const outInfos = Array.isArray(out) ? out : [out];\n                if (this.shouldCheckForMemLeaks()) {\n                    this.checkKernelForMemLeak(kernelName, numDataIdsBefore, outInfos);\n                }\n                const outTensors = outInfos.map((outInfo) => {\n                    // todo (yassogba) remove this option (Tensor) when node backend\n                    // methods have been modularized and they all return tensorInfo.\n                    // TensorInfos do not have a rank attribute.\n                    if (outInfo.rank != null) {\n                        return outInfo;\n                    }\n                    const { dataId, shape, dtype } = outInfo;\n                    return this.makeTensorFromDataId(dataId, shape, dtype);\n                });\n                // Save any required inputs and outputs.\n                // Do not save unless we are recording to the tape. Otherwise it would\n                // cause a mem leak since there would be no backprop for these tensors\n                // (which would otherwise dispose them).\n                if (isTapeOn) {\n                    const tensorsToSave = this.getTensorsForGradient(kernelName, inputs, outTensors);\n                    saved = this.saveTensorsForBackwardMode(tensorsToSave);\n                }\n                return outTensors;\n            };\n        }\n        else {\n            const { forwardFunc } = kernelParams;\n            // Running a customGrad op.\n            const saveFunc = (tensors) => {\n                // Do not save unless we are recording to the tape. Otherwise it would\n                // cause a mem leak since we would never run backprop, which disposes\n                // the kept tensors.\n                if (!isTapeOn) {\n                    return;\n                }\n                saved = tensors.map(tensor => this.keep(this.clone(tensor)));\n            };\n            kernelFunc = () => {\n                const numDataIdsBefore = this.backend.numDataIds();\n                out = this.tidy(() => forwardFunc(this.backend, saveFunc));\n                const outs = (Array.isArray(out) ? out : [out]);\n                if (this.shouldCheckForMemLeaks()) {\n                    // Scope name is used to print a more helpful error message if needed.\n                    this.checkKernelForMemLeak(kernelOrScopeName, numDataIdsBefore, outs);\n                }\n                return outs;\n            };\n        }\n        //\n        // Run the kernelFunc. Optionally profiling it.\n        //\n        const { inputs, attrs } = kernelParams;\n        const backwardsFunc = isRegisteredKernelInvocation(kernelParams) ?\n            null :\n            kernelParams.backwardsFunc;\n        let kernelProfile;\n        this.scopedRun(\n        // Stop recording to a tape when running a kernel.\n        () => this.state.kernelDepth++, () => this.state.kernelDepth--, () => {\n            if (!this.ENV.getBool('DEBUG') && !this.state.profiling) {\n                outputs = kernelFunc();\n            }\n            else {\n                kernelProfile = this.profiler.profileKernel(kernelOrScopeName, inputs, () => kernelFunc());\n                if (this.ENV.getBool('DEBUG')) {\n                    this.profiler.logKernelProfile(kernelProfile);\n                }\n                outputs = kernelProfile.outputs;\n            }\n        });\n        if (isTapeOn) {\n            this.addTapeNode(kernelOrScopeName, inputs, outputs, backwardsFunc, saved, attrs);\n        }\n        if (this.state.profiling) {\n            this.state.activeProfile.kernels.push({\n                name: kernelOrScopeName,\n                bytesAdded: this.state.numBytes - startingBytecount,\n                totalBytesSnapshot: this.state.numBytes,\n                tensorsAdded: this.state.numTensors - startingNumTensors,\n                totalTensorsSnapshot: this.state.numTensors,\n                inputShapes: Object.keys(inputs).map(key => inputs[key] != null ? inputs[key].shape : null),\n                outputShapes: outputs.map(item => item.shape),\n                kernelTimeMs: kernelProfile.timeMs,\n                extraInfo: kernelProfile.extraInfo\n            });\n        }\n        return (Array.isArray(out) ? outputs : outputs[0]);\n    }\n    /**\n     * Saves tensors used in forward mode for use in backward mode.\n     *\n     * @param tensors the list of tensors to save.\n     */\n    saveTensorsForBackwardMode(tensors) {\n        const saved = tensors.map(tensor => this.keep(this.clone(tensor)));\n        return saved;\n    }\n    /**\n     * Returns a list of tensors to save for a given gradient calculation.\n     *\n     * @param kernelName name of kernel to look up gradient for.\n     * @param inputs a map of input tensors.\n     * @param outputs an array of output tensors from forward mode of kernel.\n     */\n    getTensorsForGradient(kernelName, inputs, outputs) {\n        const gradConfig = getGradient(kernelName);\n        if (gradConfig != null) {\n            const inputsToSave = gradConfig.inputsToSave || [];\n            const outputsToSave = gradConfig.outputsToSave || [];\n            // If saveAllInputs is true, all inputs will be saved. Otherwise, inputs\n            // specified in inputsToSave will be saved.\n            let inputTensorsToSave;\n            if (gradConfig.saveAllInputs) {\n                util.assert(Array.isArray(inputs), () => 'saveAllInputs is true, expected inputs to be an array.');\n                inputTensorsToSave = Object.keys(inputs).map((key) => inputs[key]);\n            }\n            else {\n                inputTensorsToSave = inputsToSave.map((inputName) => inputs[inputName]);\n            }\n            const outputTensorsToSave = outputs.filter((_, i) => outputsToSave[i]);\n            return inputTensorsToSave.concat(outputTensorsToSave);\n        }\n        // We return an empty list rather than throw an error because the kernel we\n        // are looking up may not actually be relevant to backproping through the\n        // overall function\n        //\n        // See 'does not error if irrelevant (pruned) ops are missing grads' test\n        // in gradients_test.ts for an example.\n        return [];\n    }\n    /**\n     * Internal method used by public APIs for tensor creation. Makes a new\n     * tensor with the provided shape, dtype and values. It always\n     * creates a new data id and writes the values to the underlying backend.\n     */\n    makeTensor(values, shape, dtype, backend) {\n        if (values == null) {\n            throw new Error('Values passed to engine.makeTensor() are null');\n        }\n        dtype = dtype || 'float32';\n        backend = backend || this.backend;\n        let backendVals = values;\n        if (dtype === 'string' && util.isString(values[0])) {\n            backendVals = values.map(d => util.encodeString(d));\n        }\n        const dataId = backend.write(backendVals, shape, dtype);\n        const t = new Tensor(shape, dtype, dataId, this.nextTensorId());\n        this.trackTensor(t, backend);\n        // Count bytes for string tensors.\n        if (dtype === 'string') {\n            const info = this.state.tensorInfo.get(dataId);\n            const newBytes = bytesFromStringArray(backendVals);\n            this.state.numBytes += newBytes - info.bytes;\n            info.bytes = newBytes;\n        }\n        return t;\n    }\n    /**\n     * Internal method used by backends. Makes a new tensor\n     * that is a wrapper around an existing data id. It doesn't create\n     * a new data id, only increments the ref count used in memory tracking.\n     */\n    makeTensorFromDataId(dataId, shape, dtype, backend) {\n        dtype = dtype || 'float32';\n        const t = new Tensor(shape, dtype, dataId, this.nextTensorId());\n        this.trackTensor(t, backend);\n        return t;\n    }\n    makeVariable(initialValue, trainable = true, name, dtype) {\n        name = name || this.nextVariableId().toString();\n        if (dtype != null && dtype !== initialValue.dtype) {\n            initialValue = initialValue.cast(dtype);\n        }\n        const v = new Variable(initialValue, trainable, name, this.nextTensorId());\n        if (this.state.registeredVariables[v.name] != null) {\n            throw new Error(`Variable with name ${v.name} was already registered`);\n        }\n        this.state.registeredVariables[v.name] = v;\n        this.incRef(v, this.backend);\n        return v;\n    }\n    trackTensor(a, backend) {\n        this.state.numTensors++;\n        if (a.dtype === 'string') {\n            this.state.numStringTensors++;\n        }\n        // Bytes for complex numbers are counted by their components. Bytes for\n        // string tensors are counted when writing values.\n        let bytes = 0;\n        if (a.dtype !== 'complex64' && a.dtype !== 'string') {\n            bytes = a.size * util.bytesPerElement(a.dtype);\n        }\n        this.state.numBytes += bytes;\n        if (!this.state.tensorInfo.has(a.dataId)) {\n            this.state.numDataBuffers++;\n            this.state.tensorInfo.set(a.dataId, {\n                backend: backend || this.backend,\n                dtype: a.dtype,\n                shape: a.shape,\n                bytes\n            });\n        }\n        if (!(a instanceof Variable)) {\n            this.track(a);\n        }\n    }\n    // Track the tensor by dataId and increase the refCount for the dataId in the\n    // backend.\n    // TODO(pyu10055): This is currently used by makeVariable method, to increase\n    // refCount on the backend for the dataId. It can potentially be replaced with\n    // Identity op indead of calling backend directly.\n    incRef(a, backend) {\n        this.trackTensor(a, backend);\n        this.backend.incRef(a.dataId);\n    }\n    removeDataId(dataId, backend) {\n        if (this.state.tensorInfo.has(dataId) &&\n            this.state.tensorInfo.get(dataId).backend === backend) {\n            this.state.tensorInfo.delete(dataId);\n            this.state.numDataBuffers--;\n        }\n    }\n    disposeTensor(a) {\n        if (!this.state.tensorInfo.has(a.dataId)) {\n            return;\n        }\n        const info = this.state.tensorInfo.get(a.dataId);\n        this.state.numTensors--;\n        if (a.dtype === 'string') {\n            this.state.numStringTensors--;\n            this.state.numBytes -= info.bytes;\n        }\n        // Don't count bytes for complex numbers as they are counted by their\n        // components.\n        if (a.dtype !== 'complex64' && a.dtype !== 'string') {\n            const bytes = a.size * util.bytesPerElement(a.dtype);\n            this.state.numBytes -= bytes;\n        }\n        // Remove the reference to dataId if backend dispose the data successfully\n        if (info.backend.disposeData(a.dataId)) {\n            this.removeDataId(a.dataId, info.backend);\n        }\n        // TODO(nsthorat): Construct an error and save the stack trace for\n        // debugging when in debug mode. Creating a stack trace is too expensive\n        // to do unconditionally.\n    }\n    disposeVariables() {\n        for (const varName in this.state.registeredVariables) {\n            const v = this.state.registeredVariables[varName];\n            this.disposeVariable(v);\n        }\n    }\n    disposeVariable(v) {\n        this.disposeTensor(v);\n        if (this.state.registeredVariables[v.name] != null) {\n            delete this.state.registeredVariables[v.name];\n        }\n    }\n    memory() {\n        const info = this.backend.memory();\n        info.numTensors = this.state.numTensors;\n        info.numDataBuffers = this.state.numDataBuffers;\n        info.numBytes = this.state.numBytes;\n        if (this.state.numStringTensors > 0) {\n            info.unreliable = true;\n            if (info.reasons == null) {\n                info.reasons = [];\n            }\n            info.reasons.push('Memory usage by string tensors is approximate ' +\n                '(2 bytes per character)');\n        }\n        return info;\n    }\n    async profile(query) {\n        this.state.profiling = true;\n        const startBytes = this.state.numBytes;\n        const startNumTensors = this.state.numTensors;\n        this.state.activeProfile.kernels = [];\n        this.state.activeProfile.result = await query();\n        this.state.profiling = false;\n        this.state.activeProfile.peakBytes = Math.max(...this.state.activeProfile.kernels.map(d => d.totalBytesSnapshot));\n        this.state.activeProfile.newBytes = this.state.numBytes - startBytes;\n        this.state.activeProfile.newTensors =\n            this.state.numTensors - startNumTensors;\n        for (const kernel of this.state.activeProfile.kernels) {\n            kernel.kernelTimeMs = await kernel.kernelTimeMs;\n            kernel.extraInfo = await kernel.extraInfo;\n        }\n        return this.state.activeProfile;\n    }\n    isTapeOn() {\n        return this.state.gradientDepth > 0 && this.state.kernelDepth === 0;\n    }\n    addTapeNode(kernelName, inputs, outputs, gradientsFunc, saved, attrs) {\n        const tapeNode = { id: this.state.nextTapeNodeId++, kernelName, inputs, outputs, saved };\n        const gradConfig = getGradient(kernelName);\n        if (gradConfig != null) {\n            gradientsFunc = gradConfig.gradFunc;\n        }\n        if (gradientsFunc != null) {\n            tapeNode.gradient = (dys) => {\n                // TODO(smilkov): To optimize back-prop, pass dys that are not used in\n                // the backprop graph to the user as null instead of zeros\n                dys = dys.map((dy, i) => {\n                    if (dy == null) {\n                        const output = outputs[i];\n                        const vals = util.makeZerosTypedArray(output.size, output.dtype);\n                        return this.makeTensor(vals, output.shape, output.dtype);\n                    }\n                    return dy;\n                });\n                // Grad functions of ops with single outputs expect a dy, while ops\n                // with multiple outputs expect dys (array of dy).\n                return gradientsFunc(dys.length > 1 ? dys : dys[0], saved, attrs);\n            };\n        }\n        this.state.activeTape.push(tapeNode);\n    }\n    keep(result) {\n        result.kept = true;\n        return result;\n    }\n    startTape() {\n        if (this.state.gradientDepth === 0) {\n            this.state.activeTape = [];\n        }\n        this.state.gradientDepth++;\n    }\n    endTape() {\n        this.state.gradientDepth--;\n    }\n    /**\n     * Start a scope. Use this with endScope() to achieve the same functionality\n     * as scope() without the need for a function closure.\n     */\n    startScope(name) {\n        const scopeInfo = {\n            track: [],\n            name: 'unnamed scope',\n            id: this.state.nextScopeId++\n        };\n        if (name) {\n            scopeInfo.name = name;\n        }\n        this.state.scopeStack.push(scopeInfo);\n        this.state.activeScope = scopeInfo;\n    }\n    /**\n     * End a scope. Use this with startScope() to achieve the same functionality\n     * as scope() without the need for a function closure.\n     */\n    endScope(result) {\n        const tensorsToTrackInParent = getTensorsInContainer(result);\n        const tensorsToTrackInParentSet = new Set(tensorsToTrackInParent.map(t => t.id));\n        // Dispose the arrays tracked in this scope.\n        for (let i = 0; i < this.state.activeScope.track.length; i++) {\n            const tensor = this.state.activeScope.track[i];\n            if (!tensor.kept && !tensorsToTrackInParentSet.has(tensor.id)) {\n                tensor.dispose();\n            }\n        }\n        const oldScope = this.state.scopeStack.pop();\n        this.state.activeScope = this.state.scopeStack.length === 0 ?\n            null :\n            this.state.scopeStack[this.state.scopeStack.length - 1];\n        // Track the current result in the parent scope.\n        tensorsToTrackInParent.forEach(tensor => {\n            // Only track the tensor if was allocated in the inner scope and is not\n            // globally kept.\n            if (!tensor.kept && tensor.scopeId === oldScope.id) {\n                this.track(tensor);\n            }\n        });\n    }\n    /**\n     * Returns gradients of `f` with respect to each of the `xs`. The gradients\n     * returned are of the same length as `xs`, but some might be null if `f`\n     * was not a function of that `x`. It also takes optional dy to multiply the\n     * gradient, which defaults to `1`.\n     */\n    gradients(f, xs, dy, allowNoGradients = false) {\n        util.assert(xs.length > 0, () => 'gradients() received an empty list of xs.');\n        if (dy != null && dy.dtype !== 'float32') {\n            throw new Error(`dy must have 'float32' dtype, but has '${dy.dtype}'`);\n        }\n        const y = this.scopedRun(() => this.startTape(), () => this.endTape(), () => this.tidy('forward', f));\n        util.assert(y instanceof Tensor, () => 'The result y returned by f() must be a tensor.');\n        // Filter out the nodes that don't connect x => y.\n        const filteredTape = getFilteredNodesXToY(this.state.activeTape, xs, y);\n        if (!allowNoGradients && filteredTape.length === 0 && xs.length > 0) {\n            throw new Error('Cannot compute gradient of y=f(x) with respect to x. Make sure ' +\n                'that the f you passed encloses all operations that lead from x ' +\n                'to y.');\n        }\n        return this.tidy('backward', () => {\n            const accumulatedGradientMap = {};\n            accumulatedGradientMap[y.id] = (dy == null) ? ones(y.shape) : dy;\n            // Backprop gradients through the filtered nodes.\n            backpropagateGradients(accumulatedGradientMap, filteredTape, \n            // Pass the tidy function to avoid circular dep with `tape.ts`.\n            f => this.tidy(f), \n            // Pass an add function to avoide a circular dep with `tape.ts`.\n            add);\n            const grads = xs.map(x => accumulatedGradientMap[x.id]);\n            if (this.state.gradientDepth === 0) {\n                // This means that we are not computing higher-order gradients\n                // and can clean up the tape.\n                this.state.activeTape.forEach(node => {\n                    for (const tensor of node.saved) {\n                        tensor.dispose();\n                    }\n                });\n                this.state.activeTape = null;\n            }\n            return { value: y, grads };\n        });\n    }\n    customGrad(f) {\n        util.assert(util.isFunction(f), () => 'The f passed in customGrad(f) must be a function.');\n        return (...inputs) => {\n            util.assert(inputs.every(t => t instanceof Tensor), () => 'The args passed in customGrad(f)(x1, x2,...) must all be ' +\n                'tensors');\n            let res;\n            const inputMap = {};\n            inputs.forEach((input, i) => {\n                inputMap[i] = input;\n            });\n            const forwardFunc = (_, save) => {\n                res = f(...[...inputs, save]);\n                util.assert(res.value instanceof Tensor, () => 'The function f passed in customGrad(f) must return an ' +\n                    'object where `obj.value` is a tensor');\n                util.assert(util.isFunction(res.gradFunc), () => 'The function f passed in customGrad(f) must return an ' +\n                    'object where `obj.gradFunc` is a function.');\n                return res.value;\n            };\n            const backwardsFunc = (dy, saved) => {\n                const gradRes = res.gradFunc(dy, saved);\n                const grads = Array.isArray(gradRes) ? gradRes : [gradRes];\n                util.assert(grads.length === inputs.length, () => 'The function f passed in customGrad(f) must return an ' +\n                    'object where `obj.gradFunc` is a function that returns ' +\n                    'the same number of tensors as inputs passed to f(...).');\n                util.assert(grads.every(t => t instanceof Tensor), () => 'The function f passed in customGrad(f) must return an ' +\n                    'object where `obj.gradFunc` is a function that returns ' +\n                    'a list of only tensors.');\n                const gradMap = {};\n                grads.forEach((grad, i) => {\n                    gradMap[i] = () => grad;\n                });\n                return gradMap;\n            };\n            return this.runKernelFunc({\n                forwardFunc,\n                backwardsFunc,\n                inputs: inputMap,\n            });\n        };\n    }\n    readSync(dataId) {\n        // Route the read to the correct backend.\n        const info = this.state.tensorInfo.get(dataId);\n        return info.backend.readSync(dataId);\n    }\n    read(dataId) {\n        // Route the read to the correct backend.\n        const info = this.state.tensorInfo.get(dataId);\n        return info.backend.read(dataId);\n    }\n    readToGPU(dataId, options) {\n        // Route the read to the correct backend.\n        const info = this.state.tensorInfo.get(dataId);\n        return info.backend.readToGPU(dataId, options);\n    }\n    async time(query) {\n        const start = now();\n        const timingInfo = await this.backend.time(query);\n        timingInfo.wallMs = now() - start;\n        return timingInfo;\n    }\n    /**\n     * Tracks a Tensor in the current scope to be automatically cleaned up\n     * when the current scope ends, and returns the value.\n     *\n     * @param result The Tensor to track in the current scope.\n     */\n    track(result) {\n        if (this.state.activeScope != null) {\n            result.scopeId = this.state.activeScope.id;\n            this.state.activeScope.track.push(result);\n        }\n        return result;\n    }\n    get registeredVariables() {\n        return this.state.registeredVariables;\n    }\n    /**\n     * Resets the engine state. Removes all backends but does not remove\n     * registered backend factories.\n     */\n    reset() {\n        // Make any pending promise obsolete.\n        this.pendingBackendInitId++;\n        this.state.dispose();\n        this.ENV.reset();\n        this.state = new EngineState();\n        for (const backendName in this.registry) {\n            this.disposeRegisteredKernels(backendName);\n            this.registry[backendName].dispose();\n            delete this.registry[backendName];\n        }\n        this.backendName = null;\n        this.backendInstance = null;\n        this.pendingBackendInit = null;\n    }\n}\nEngine.nextTensorId = 0;\nEngine.nextVariableId = 0;\nfunction ones(shape) {\n    const values = makeOnesTypedArray(sizeFromShape(shape), 'float32');\n    return ENGINE.makeTensor(values, shape, 'float32');\n}\nexport function getOrMakeEngine() {\n    const ns = getGlobalNamespace();\n    if (ns._tfengine == null) {\n        const environment = new Environment(ns);\n        ns._tfengine = new Engine(environment);\n    }\n    setEnvironmentGlobal(ns._tfengine.ENV);\n    // Tell the current tensor interface that the global engine is responsible\n    // for tracking.\n    setTensorTracker(() => ns._tfengine);\n    return ns._tfengine;\n}\nexport const ENGINE = getOrMakeEngine();\n/**\n * A implementation of the add op for use within engine and tape.\n *\n * This allows us to avoid a circular dependency between add.ts and engine.\n * It is exported to be available in tape tests.\n */\nexport function add(a, b) {\n    // We duplicate Add here to avoid a circular dependency with add.ts.\n    const inputs = { a, b };\n    return ENGINE.runKernel(Add, inputs);\n}\n//# sourceMappingURL=data:application/json;base64,","export const Abs = 'Abs';\nexport const Acos = 'Acos';\nexport const Acosh = 'Acosh';\nexport const Add = 'Add';\nexport const AddN = 'AddN';\nexport const All = 'All';\nexport const Any = 'Any';\nexport const ArgMax = 'ArgMax';\nexport const ArgMin = 'ArgMin';\nexport const Asin = 'Asin';\nexport const Asinh = 'Asinh';\nexport const Atan = 'Atan';\nexport const Atanh = 'Atanh';\nexport const Atan2 = 'Atan2';\nexport const AvgPool = 'AvgPool';\nexport const AvgPoolGrad = 'AvgPoolGrad';\nexport const AvgPool3D = 'AvgPool3D';\nexport const AvgPool3DGrad = 'AvgPool3DGrad';\nexport const BatchMatMul = 'BatchMatMul';\nexport const BatchToSpaceND = 'BatchToSpaceND';\nexport const Bincount = 'Bincount';\nexport const BroadcastTo = 'BroadcastTo';\nexport const BroadcastArgs = 'BroadcastArgs';\nexport const Cast = 'Cast';\nexport const Ceil = 'Ceil';\nexport const ClipByValue = 'ClipByValue';\nexport const Complex = 'Complex';\nexport const ComplexAbs = 'ComplexAbs';\nexport const Concat = 'Concat';\nexport const Conv2D = 'Conv2D';\nexport const Conv2DBackpropFilter = 'Conv2DBackpropFilter';\nexport const Conv2DBackpropInput = 'Conv2DBackpropInput';\nexport const Conv3D = 'Conv3D';\nexport const Conv3DBackpropFilterV2 = 'Conv3DBackpropFilterV2';\nexport const Conv3DBackpropInputV2 = 'Conv3DBackpropInputV2';\nexport const Cos = 'Cos';\nexport const Cosh = 'Cosh';\nexport const Cumprod = 'Cumprod';\nexport const Cumsum = 'Cumsum';\nexport const CropAndResize = 'CropAndResize';\nexport const DenseBincount = 'DenseBincount';\nexport const DepthToSpace = 'DepthToSpace';\nexport const DepthwiseConv2dNative = 'DepthwiseConv2dNative';\nexport const DepthwiseConv2dNativeBackpropFilter = 'DepthwiseConv2dNativeBackpropFilter';\nexport const DepthwiseConv2dNativeBackpropInput = 'DepthwiseConv2dNativeBackpropInput';\nexport const Diag = 'Diag';\nexport const Dilation2D = 'Dilation2D';\nexport const Dilation2DBackpropInput = 'Dilation2DBackpropInput';\nexport const Dilation2DBackpropFilter = 'Dilation2DBackpropFilter';\nexport const RealDiv = 'RealDiv';\nexport const Einsum = 'Einsum';\nexport const Elu = 'Elu';\nexport const EluGrad = 'EluGrad';\nexport const Erf = 'Erf';\nexport const Equal = 'Equal';\nexport const Exp = 'Exp';\nexport const ExpandDims = 'ExpandDims';\nexport const Expm1 = 'Expm1';\nexport const FFT = 'FFT';\nexport const Fill = 'Fill';\nexport const FlipLeftRight = 'FlipLeftRight';\nexport const Floor = 'Floor';\nexport const FloorDiv = 'FloorDiv';\nexport const FusedBatchNorm = 'FusedBatchNorm';\nexport const GatherV2 = 'GatherV2';\nexport const GatherNd = 'GatherNd';\nexport const Greater = 'Greater';\nexport const GreaterEqual = 'GreaterEqual';\nexport const Identity = 'Identity';\nexport const IFFT = 'IFFT';\nexport const Imag = 'Imag';\nexport const IsFinite = 'IsFinite';\nexport const IsInf = 'IsInf';\nexport const IsNan = 'IsNan';\nexport const LeakyRelu = 'LeakyRelu';\nexport const Less = 'Less';\nexport const LessEqual = 'LessEqual';\nexport const LinSpace = 'LinSpace';\nexport const Log = 'Log';\nexport const Log1p = 'Log1p';\nexport const LogicalAnd = 'LogicalAnd';\nexport const LogicalNot = 'LogicalNot';\nexport const LogicalOr = 'LogicalOr';\nexport const LogSoftmax = 'LogSoftmax';\nexport const LRN = 'LRN';\nexport const LRNGrad = 'LRNGrad';\nexport const Max = 'Max';\nexport const Maximum = 'Maximum';\nexport const MaxPool = 'MaxPool';\nexport const MaxPoolGrad = 'MaxPoolGrad';\nexport const MaxPool3D = 'MaxPool3D';\nexport const MaxPool3DGrad = 'MaxPool3DGrad';\nexport const MaxPoolWithArgmax = 'MaxPoolWithArgmax';\nexport const Mean = 'Mean';\nexport const Min = 'Min';\nexport const Minimum = 'Minimum';\nexport const MirrorPad = 'MirrorPad';\nexport const Mod = 'Mod';\nexport const Multinomial = 'Multinomial';\nexport const Multiply = 'Multiply';\nexport const Neg = 'Neg';\nexport const NotEqual = 'NotEqual';\nexport const NonMaxSuppressionV3 = 'NonMaxSuppressionV3';\nexport const NonMaxSuppressionV4 = 'NonMaxSuppressionV4';\nexport const NonMaxSuppressionV5 = 'NonMaxSuppressionV5';\nexport const OnesLike = 'OnesLike';\nexport const OneHot = 'OneHot';\nexport const Pack = 'Pack';\nexport const PadV2 = 'PadV2';\nexport const Pool = 'Pool';\nexport const Pow = 'Pow';\nexport const Prelu = 'Prelu';\nexport const Prod = 'Prod';\nexport const Range = 'Range';\nexport const Real = 'Real';\nexport const Reciprocal = 'Reciprocal';\nexport const Relu = 'Relu';\nexport const Reshape = 'Reshape';\nexport const ResizeNearestNeighbor = 'ResizeNearestNeighbor';\nexport const ResizeNearestNeighborGrad = 'ResizeNearestNeighborGrad';\nexport const ResizeBilinear = 'ResizeBilinear';\nexport const ResizeBilinearGrad = 'ResizeBilinearGrad';\nexport const Relu6 = 'Relu6';\nexport const Reverse = 'Reverse';\nexport const Round = 'Round';\nexport const Rsqrt = 'Rsqrt';\nexport const ScatterNd = 'ScatterNd';\nexport const Select = 'Select';\nexport const Selu = 'Selu';\nexport const Slice = 'Slice';\nexport const Sin = 'Sin';\nexport const Sinh = 'Sinh';\nexport const Sign = 'Sign';\nexport const Sigmoid = 'Sigmoid';\nexport const Softplus = 'Softplus';\nexport const Sqrt = 'Sqrt';\nexport const Sum = 'Sum';\nexport const SpaceToBatchND = 'SpaceToBatchND';\nexport const SplitV = 'SplitV';\nexport const Softmax = 'Softmax';\nexport const SparseFillEmptyRows = 'SparseFillEmptyRows';\nexport const SparseReshape = 'SparseReshape';\nexport const SparseSegmentMean = 'SparseSegmentMean';\nexport const SparseSegmentSum = 'SparseSegmentSum';\nexport const SparseToDense = 'SparseToDense';\nexport const SquaredDifference = 'SquaredDifference';\nexport const Square = 'Square';\nexport const StridedSlice = 'StridedSlice';\nexport const StringNGrams = 'StringNGrams';\nexport const StringSplit = 'StringSplit';\nexport const StringToHashBucketFast = 'StringToHashBucketFast';\nexport const Sub = 'Sub';\nexport const Tan = 'Tan';\nexport const Tanh = 'Tanh';\nexport const Tile = 'Tile';\nexport const TopK = 'TopK';\nexport const Transform = 'Transform';\nexport const Transpose = 'Transpose';\nexport const Unique = 'Unique';\nexport const Unpack = 'Unpack';\nexport const UnsortedSegmentSum = 'UnsortedSegmentSum';\nexport const ZerosLike = 'ZerosLike';\n/**\n * TensorFlow.js-only kernels\n */\nexport const Step = 'Step';\nexport const FromPixels = 'FromPixels';\nexport const RotateWithOffset = 'RotateWithOffset';\nexport const _FusedMatMul = '_FusedMatMul';\nexport const FusedConv2D = 'FusedConv2D';\nexport const FusedDepthwiseConv2D = 'FusedDepthwiseConv2D';\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as util from './util';\n/**\n * Computes a list of TapeNodes that connect x to y, filtering everything else\n * out and preserving the order of the original tape elements.\n *\n * @param tape The tape elements to filter.\n * @param xs The input Tensors.\n * @param y The output Tensor.\n */\nexport function getFilteredNodesXToY(tape, xs, y) {\n    // Forward pass to compute all the nodes and Tensors that are transitively a\n    // function of x.\n    const tensorsFromX = {};\n    const nodesFromX = {};\n    for (let i = 0; i < xs.length; i++) {\n        tensorsFromX[xs[i].id] = true;\n    }\n    for (let i = 0; i < tape.length; i++) {\n        const node = tape[i];\n        const nodeInputs = node.inputs;\n        for (const inputName in nodeInputs) {\n            const input = nodeInputs[inputName];\n            let anyInputFromX = false;\n            for (let j = 0; j < xs.length; j++) {\n                if (tensorsFromX[input.id]) {\n                    node.outputs.forEach(output => tensorsFromX[output.id] = true);\n                    anyInputFromX = true;\n                    nodesFromX[node.id] = true;\n                    break;\n                }\n            }\n            if (anyInputFromX) {\n                break;\n            }\n        }\n    }\n    // Backward pass to find all of the nodes and Tensors that lead to y.\n    const tensorsLeadToY = {};\n    tensorsLeadToY[y.id] = true;\n    const nodesToY = {};\n    for (let i = tape.length - 1; i >= 0; i--) {\n        const node = tape[i];\n        const nodeInputs = node.inputs;\n        // If any of the outputs lead to y, mark all of the inputs as leading to y.\n        for (let j = 0; j < node.outputs.length; j++) {\n            if (tensorsLeadToY[node.outputs[j].id]) {\n                for (const inputName in nodeInputs) {\n                    tensorsLeadToY[nodeInputs[inputName].id] = true;\n                    nodesToY[node.id] = true;\n                }\n                break;\n            }\n        }\n    }\n    // Return the paths that come from x and lead to y.\n    const filteredTape = [];\n    for (let i = 0; i < tape.length; i++) {\n        const node = tape[i];\n        if (nodesFromX[node.id] && nodesToY[node.id]) {\n            // Prune the inputs from the node that aren't a function of x.\n            const prunedInputs = {};\n            for (const inputName in node.inputs) {\n                const nodeInput = node.inputs[inputName];\n                if (tensorsFromX[nodeInput.id]) {\n                    prunedInputs[inputName] = nodeInput;\n                }\n            }\n            // Copy the node and overwrite inputsAndArgs to the pruned version.\n            const prunedNode = Object.assign({}, node);\n            prunedNode.inputs = prunedInputs;\n            prunedNode.outputs = node.outputs;\n            filteredTape.push(prunedNode);\n        }\n    }\n    return filteredTape;\n}\n/**\n * Backpropagate gradients through the filtered TapeNodes.\n *\n * @param tensorAccumulatedGradientMap A map of Tensor to its gradient. This map\n * is mutated by this method.\n * @param filteredTape The filtered TapeNodes to backprop through.\n */\nexport function backpropagateGradients(tensorAccumulatedGradientMap, filteredTape, tidy, add) {\n    // Walk the tape backward and keep a map of Tensor to its gradient.\n    for (let i = filteredTape.length - 1; i >= 0; i--) {\n        const node = filteredTape[i];\n        const dys = [];\n        node.outputs.forEach(o => {\n            const gradTensor = tensorAccumulatedGradientMap[o.id];\n            if (gradTensor != null) {\n                dys.push(gradTensor);\n            }\n            else {\n                // This particular output is not in the back-propagation subgraph, so it\n                // does not affect the final output, thus we put null for its dy.\n                dys.push(null);\n            }\n        });\n        if (node.gradient == null) {\n            throw new Error(`Cannot compute gradient: gradient function not found ` +\n                `for ${node.kernelName}.`);\n        }\n        // Backprop dy through this node and accumulate gradients over the inputs.\n        const inputGradients = node.gradient(dys);\n        for (const inputName in node.inputs) {\n            if (!(inputName in inputGradients)) {\n                throw new Error(`Cannot backprop through input ${inputName}. ` +\n                    `Available gradients found: ${Object.keys(inputGradients)}.`);\n            }\n            // Call the gradient function.\n            const dx = tidy(() => inputGradients[inputName]());\n            if (dx.dtype !== 'float32') {\n                throw new Error(`Error in gradient for op ${node.kernelName}. The gradient of input ` +\n                    `${inputName} must have 'float32' dtype, but has '${dx.dtype}'`);\n            }\n            const x = node.inputs[inputName];\n            if (!util.arraysEqual(dx.shape, x.shape)) {\n                throw new Error(`Error in gradient for op ${node.kernelName}. The gradient of input ` +\n                    `'${inputName}' has shape '${dx.shape}', which does not match ` +\n                    `the shape of the input '${x.shape}'`);\n            }\n            if (tensorAccumulatedGradientMap[x.id] == null) {\n                tensorAccumulatedGradientMap[x.id] = dx;\n            }\n            else {\n                const curGradient = tensorAccumulatedGradientMap[x.id];\n                tensorAccumulatedGradientMap[x.id] = add(curGradient, dx);\n                curGradient.dispose();\n            }\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport './engine';\nimport * as device_util from './device_util';\nimport { env } from './environment';\nconst ENV = env();\n/**\n * This file contains environment-related flag registrations.\n */\n/** Whether to enable debug mode. */\nENV.registerFlag('DEBUG', () => false, debugValue => {\n    if (debugValue) {\n        console.warn('Debugging mode is ON. The output of every math call will ' +\n            'be downloaded to CPU and checked for NaNs. ' +\n            'This significantly impacts performance.');\n    }\n});\n/** Whether we are in a browser (as versus, say, node.js) environment. */\nENV.registerFlag('IS_BROWSER', () => device_util.isBrowser());\n/** Whether we are in a browser (as versus, say, node.js) environment. */\nENV.registerFlag('IS_NODE', () => (typeof process !== 'undefined') &&\n    (typeof process.versions !== 'undefined') &&\n    (typeof process.versions.node !== 'undefined'));\n/** Whether this browser is Chrome. */\nENV.registerFlag('IS_CHROME', () => typeof navigator !== 'undefined' && navigator != null &&\n    navigator.userAgent != null && /Chrome/.test(navigator.userAgent) &&\n    /Google Inc/.test(navigator.vendor));\n/**\n * True when the environment is \"production\" where we disable safety checks\n * to gain performance.\n */\nENV.registerFlag('PROD', () => false);\n/**\n * Whether to do sanity checks when inferring a shape from user-provided\n * values, used when creating a new tensor.\n */\nENV.registerFlag('TENSORLIKE_CHECK_SHAPE_CONSISTENCY', () => ENV.getBool('DEBUG'));\n/** Whether deprecation warnings are enabled. */\nENV.registerFlag('DEPRECATION_WARNINGS_ENABLED', () => true);\n/** True if running unit tests. */\nENV.registerFlag('IS_TEST', () => false);\n/** Whether to check computation result for errors. */\nENV.registerFlag('CHECK_COMPUTATION_FOR_ERRORS', () => true);\n/** Whether the backend needs to wrap input to imageBitmap. */\nENV.registerFlag('WRAP_TO_IMAGEBITMAP', () => false);\n/** Experimental flag, whether enter compile only phase. */\nENV.registerFlag('ENGINE_COMPILE_ONLY', () => false);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxhZ3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL2ZsYWdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUNILE9BQU8sVUFBVSxDQUFDO0FBRWxCLE9BQU8sS0FBSyxXQUFXLE1BQU0sZUFBZSxDQUFDO0FBQzdDLE9BQU8sRUFBQyxHQUFHLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFbEMsTUFBTSxHQUFHLEdBQUcsR0FBRyxFQUFFLENBQUM7QUFFbEI7O0dBRUc7QUFFSCxvQ0FBb0M7QUFDcEMsR0FBRyxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsS0FBSyxFQUFFLFVBQVUsQ0FBQyxFQUFFO0lBQ2xELElBQUksVUFBVSxFQUFFO1FBQ2QsT0FBTyxDQUFDLElBQUksQ0FDUiwyREFBMkQ7WUFDM0QsNkNBQTZDO1lBQzdDLHlDQUF5QyxDQUFDLENBQUM7S0FDaEQ7QUFDSCxDQUFDLENBQUMsQ0FBQztBQUVILHlFQUF5RTtBQUN6RSxHQUFHLENBQUMsWUFBWSxDQUFDLFlBQVksRUFBRSxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQztBQUU5RCx5RUFBeUU7QUFDekUsR0FBRyxDQUFDLFlBQVksQ0FDWixTQUFTLEVBQ1QsR0FBRyxFQUFFLENBQUMsQ0FBQyxPQUFPLE9BQU8sS0FBSyxXQUFXLENBQUM7SUFDbEMsQ0FBQyxPQUFPLE9BQU8sQ0FBQyxRQUFRLEtBQUssV0FBVyxDQUFDO0lBQ3pDLENBQUMsT0FBTyxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksS0FBSyxXQUFXLENBQUMsQ0FBQyxDQUFDO0FBRXhELHNDQUFzQztBQUN0QyxHQUFHLENBQUMsWUFBWSxDQUNaLFdBQVcsRUFDWCxHQUFHLEVBQUUsQ0FBQyxPQUFPLFNBQVMsS0FBSyxXQUFXLElBQUksU0FBUyxJQUFJLElBQUk7SUFDdkQsU0FBUyxDQUFDLFNBQVMsSUFBSSxJQUFJLElBQUksUUFBUSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDO0lBQ2pFLFlBQVksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7QUFFN0M7OztHQUdHO0FBQ0gsR0FBRyxDQUFDLFlBQVksQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUM7QUFFdEM7OztHQUdHO0FBQ0gsR0FBRyxDQUFDLFlBQVksQ0FDWixvQ0FBb0MsRUFBRSxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7QUFFdEUsZ0RBQWdEO0FBQ2hELEdBQUcsQ0FBQyxZQUFZLENBQUMsOEJBQThCLEVBQUUsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7QUFFN0Qsa0NBQWtDO0FBQ2xDLEdBQUcsQ0FBQyxZQUFZLENBQUMsU0FBUyxFQUFFLEdBQUcsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBRXpDLHNEQUFzRDtBQUN0RCxHQUFHLENBQUMsWUFBWSxDQUFDLDhCQUE4QixFQUFFLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBRTdELDhEQUE4RDtBQUM5RCxHQUFHLENBQUMsWUFBWSxDQUFDLHFCQUFxQixFQUFFLEdBQUcsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBRXJELDJEQUEyRDtBQUMzRCxHQUFHLENBQUMsWUFBWSxDQUFDLHFCQUFxQixFQUFFLEdBQUcsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuaW1wb3J0ICcuL2VuZ2luZSc7XG5cbmltcG9ydCAqIGFzIGRldmljZV91dGlsIGZyb20gJy4vZGV2aWNlX3V0aWwnO1xuaW1wb3J0IHtlbnZ9IGZyb20gJy4vZW52aXJvbm1lbnQnO1xuXG5jb25zdCBFTlYgPSBlbnYoKTtcblxuLyoqXG4gKiBUaGlzIGZpbGUgY29udGFpbnMgZW52aXJvbm1lbnQtcmVsYXRlZCBmbGFnIHJlZ2lzdHJhdGlvbnMuXG4gKi9cblxuLyoqIFdoZXRoZXIgdG8gZW5hYmxlIGRlYnVnIG1vZGUuICovXG5FTlYucmVnaXN0ZXJGbGFnKCdERUJVRycsICgpID0+IGZhbHNlLCBkZWJ1Z1ZhbHVlID0+IHtcbiAgaWYgKGRlYnVnVmFsdWUpIHtcbiAgICBjb25zb2xlLndhcm4oXG4gICAgICAgICdEZWJ1Z2dpbmcgbW9kZSBpcyBPTi4gVGhlIG91dHB1dCBvZiBldmVyeSBtYXRoIGNhbGwgd2lsbCAnICtcbiAgICAgICAgJ2JlIGRvd25sb2FkZWQgdG8gQ1BVIGFuZCBjaGVja2VkIGZvciBOYU5zLiAnICtcbiAgICAgICAgJ1RoaXMgc2lnbmlmaWNhbnRseSBpbXBhY3RzIHBlcmZvcm1hbmNlLicpO1xuICB9XG59KTtcblxuLyoqIFdoZXRoZXIgd2UgYXJlIGluIGEgYnJvd3NlciAoYXMgdmVyc3VzLCBzYXksIG5vZGUuanMpIGVudmlyb25tZW50LiAqL1xuRU5WLnJlZ2lzdGVyRmxhZygnSVNfQlJPV1NFUicsICgpID0+IGRldmljZV91dGlsLmlzQnJvd3NlcigpKTtcblxuLyoqIFdoZXRoZXIgd2UgYXJlIGluIGEgYnJvd3NlciAoYXMgdmVyc3VzLCBzYXksIG5vZGUuanMpIGVudmlyb25tZW50LiAqL1xuRU5WLnJlZ2lzdGVyRmxhZyhcbiAgICAnSVNfTk9ERScsXG4gICAgKCkgPT4gKHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJykgJiZcbiAgICAgICAgKHR5cGVvZiBwcm9jZXNzLnZlcnNpb25zICE9PSAndW5kZWZpbmVkJykgJiZcbiAgICAgICAgKHR5cGVvZiBwcm9jZXNzLnZlcnNpb25zLm5vZGUgIT09ICd1bmRlZmluZWQnKSk7XG5cbi8qKiBXaGV0aGVyIHRoaXMgYnJvd3NlciBpcyBDaHJvbWUuICovXG5FTlYucmVnaXN0ZXJGbGFnKFxuICAgICdJU19DSFJPTUUnLFxuICAgICgpID0+IHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIG5hdmlnYXRvciAhPSBudWxsICYmXG4gICAgICAgIG5hdmlnYXRvci51c2VyQWdlbnQgIT0gbnVsbCAmJiAvQ2hyb21lLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpICYmXG4gICAgICAgIC9Hb29nbGUgSW5jLy50ZXN0KG5hdmlnYXRvci52ZW5kb3IpKTtcblxuLyoqXG4gKiBUcnVlIHdoZW4gdGhlIGVudmlyb25tZW50IGlzIFwicHJvZHVjdGlvblwiIHdoZXJlIHdlIGRpc2FibGUgc2FmZXR5IGNoZWNrc1xuICogdG8gZ2FpbiBwZXJmb3JtYW5jZS5cbiAqL1xuRU5WLnJlZ2lzdGVyRmxhZygnUFJPRCcsICgpID0+IGZhbHNlKTtcblxuLyoqXG4gKiBXaGV0aGVyIHRvIGRvIHNhbml0eSBjaGVja3Mgd2hlbiBpbmZlcnJpbmcgYSBzaGFwZSBmcm9tIHVzZXItcHJvdmlkZWRcbiAqIHZhbHVlcywgdXNlZCB3aGVuIGNyZWF0aW5nIGEgbmV3IHRlbnNvci5cbiAqL1xuRU5WLnJlZ2lzdGVyRmxhZyhcbiAgICAnVEVOU09STElLRV9DSEVDS19TSEFQRV9DT05TSVNURU5DWScsICgpID0+IEVOVi5nZXRCb29sKCdERUJVRycpKTtcblxuLyoqIFdoZXRoZXIgZGVwcmVjYXRpb24gd2FybmluZ3MgYXJlIGVuYWJsZWQuICovXG5FTlYucmVnaXN0ZXJGbGFnKCdERVBSRUNBVElPTl9XQVJOSU5HU19FTkFCTEVEJywgKCkgPT4gdHJ1ZSk7XG5cbi8qKiBUcnVlIGlmIHJ1bm5pbmcgdW5pdCB0ZXN0cy4gKi9cbkVOVi5yZWdpc3RlckZsYWcoJ0lTX1RFU1QnLCAoKSA9PiBmYWxzZSk7XG5cbi8qKiBXaGV0aGVyIHRvIGNoZWNrIGNvbXB1dGF0aW9uIHJlc3VsdCBmb3IgZXJyb3JzLiAqL1xuRU5WLnJlZ2lzdGVyRmxhZygnQ0hFQ0tfQ09NUFVUQVRJT05fRk9SX0VSUk9SUycsICgpID0+IHRydWUpO1xuXG4vKiogV2hldGhlciB0aGUgYmFja2VuZCBuZWVkcyB0byB3cmFwIGlucHV0IHRvIGltYWdlQml0bWFwLiAqL1xuRU5WLnJlZ2lzdGVyRmxhZygnV1JBUF9UT19JTUFHRUJJVE1BUCcsICgpID0+IGZhbHNlKTtcblxuLyoqIEV4cGVyaW1lbnRhbCBmbGFnLCB3aGV0aGVyIGVudGVyIGNvbXBpbGUgb25seSBwaGFzZS4gKi9cbkVOVi5yZWdpc3RlckZsYWcoJ0VOR0lORV9DT01QSUxFX09OTFknLCAoKSA9PiBmYWxzZSk7XG4iXX0=","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from './engine';\nimport { env } from './environment';\nimport { Tensor } from './tensor';\nimport { assert, flatten, inferDtype, isTypedArray, toTypedArray } from './util';\nexport function inferShape(val, dtype) {\n    let firstElem = val;\n    if (isTypedArray(val)) {\n        return dtype === 'string' ? [] : [val.length];\n    }\n    if (!Array.isArray(val)) {\n        return []; // Scalar.\n    }\n    const shape = [];\n    while (Array.isArray(firstElem) ||\n        isTypedArray(firstElem) && dtype !== 'string') {\n        shape.push(firstElem.length);\n        firstElem = firstElem[0];\n    }\n    if (Array.isArray(val) &&\n        env().getBool('TENSORLIKE_CHECK_SHAPE_CONSISTENCY')) {\n        deepAssertShapeConsistency(val, shape, []);\n    }\n    return shape;\n}\nfunction deepAssertShapeConsistency(val, shape, indices) {\n    indices = indices || [];\n    if (!(Array.isArray(val)) && !isTypedArray(val)) {\n        assert(shape.length === 0, () => `Element arr[${indices.join('][')}] is a primitive, ` +\n            `but should be an array/TypedArray of ${shape[0]} elements`);\n        return;\n    }\n    assert(shape.length > 0, () => `Element arr[${indices.join('][')}] should be a primitive, ` +\n        `but is an array of ${val.length} elements`);\n    assert(val.length === shape[0], () => `Element arr[${indices.join('][')}] should have ${shape[0]} ` +\n        `elements, but has ${val.length} elements`);\n    const subShape = shape.slice(1);\n    for (let i = 0; i < val.length; ++i) {\n        deepAssertShapeConsistency(val[i], subShape, indices.concat(i));\n    }\n}\nfunction assertDtype(expectedDtype, actualDType, argName, functionName) {\n    if (expectedDtype === 'string_or_numeric') {\n        return;\n    }\n    if (expectedDtype == null) {\n        throw new Error(`Expected dtype cannot be null.`);\n    }\n    if (expectedDtype !== 'numeric' && expectedDtype !== actualDType ||\n        expectedDtype === 'numeric' && actualDType === 'string') {\n        throw new Error(`Argument '${argName}' passed to '${functionName}' must ` +\n            `be ${expectedDtype} tensor, but got ${actualDType} tensor`);\n    }\n}\nexport function convertToTensor(x, argName, functionName, parseAsDtype = 'numeric') {\n    if (x instanceof Tensor) {\n        assertDtype(parseAsDtype, x.dtype, argName, functionName);\n        return x;\n    }\n    let inferredDtype = inferDtype(x);\n    // If the user expects a bool/int/float, use that info to update the\n    // inferredDtype when it is not a string.\n    if (inferredDtype !== 'string' &&\n        ['bool', 'int32', 'float32'].indexOf(parseAsDtype) >= 0) {\n        inferredDtype = parseAsDtype;\n    }\n    assertDtype(parseAsDtype, inferredDtype, argName, functionName);\n    if ((x == null) ||\n        (!isTypedArray(x) && !Array.isArray(x) && typeof x !== 'number' &&\n            typeof x !== 'boolean' && typeof x !== 'string')) {\n        const type = x == null ? 'null' : x.constructor.name;\n        throw new Error(`Argument '${argName}' passed to '${functionName}' must be a ` +\n            `Tensor or TensorLike, but got '${type}'`);\n    }\n    const inferredShape = inferShape(x, inferredDtype);\n    if (!isTypedArray(x) && !Array.isArray(x)) {\n        x = [x];\n    }\n    const skipTypedArray = true;\n    const values = inferredDtype !== 'string' ?\n        toTypedArray(x, inferredDtype) :\n        flatten(x, [], skipTypedArray);\n    return ENGINE.makeTensor(values, inferredShape, inferredDtype);\n}\nexport function convertToTensorArray(arg, argName, functionName, parseAsDtype = 'numeric') {\n    if (!Array.isArray(arg)) {\n        throw new Error(`Argument ${argName} passed to ${functionName} must be a ` +\n            '`Tensor[]` or `TensorLike[]`');\n    }\n    const tensors = arg;\n    return tensors.map((t, i) => convertToTensor(t, `${argName}[${i}]`, functionName, parseAsDtype));\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line:no-any\nfunction _isNavigatorDefined() {\n    return typeof navigator !== 'undefined' && navigator != null;\n}\nlet isMobileMockValue;\nexport function mockIsMobile(value) {\n    isMobileMockValue = value;\n}\nexport function isMobile(nav) {\n    if (isMobileMockValue !== undefined) {\n        return isMobileMockValue;\n    }\n    if (nav || _isNavigatorDefined()) {\n        if (!nav) {\n            nav = navigator;\n        }\n        if (nav.product === 'ReactNative') {\n            return true;\n        }\n        const a = nav.userAgent || nav.vendor ||\n            // tslint:disable-next-line:no-any\n            (typeof window !== 'undefined' ? window.opera : '');\n        // Use `navigator.userAgentData.mobile` as fallback.\n        if (!a) {\n            // tslint:disable-next-line:no-any\n            const navAny = nav;\n            return navAny.userAgentData && navAny.userAgentData.mobile;\n        }\n        // tslint:disable-next-line:max-line-length\n        return /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i\n            .test(a) ||\n            // tslint:disable-next-line:max-line-length\n            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i\n                .test(a.substr(0, 4));\n    }\n    return false;\n}\nexport function isBrowser() {\n    return (typeof window !== 'undefined' && window.document != null) ||\n        //@ts-ignore\n        (typeof WorkerGlobalScope !== 'undefined');\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlX3V0aWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL2RldmljZV91dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILGtDQUFrQztBQUNsQyxTQUFTLG1CQUFtQjtJQUMxQixPQUFPLE9BQU8sU0FBUyxLQUFLLFdBQVcsSUFBSSxTQUFTLElBQUksSUFBSSxDQUFDO0FBQy9ELENBQUM7QUFFRCxJQUFJLGlCQUFvQyxDQUFDO0FBRXpDLE1BQU0sVUFBVSxZQUFZLENBQUMsS0FBd0I7SUFDbkQsaUJBQWlCLEdBQUcsS0FBSyxDQUFDO0FBQzVCLENBQUM7QUFFRCxNQUFNLFVBQVUsUUFBUSxDQUFDLEdBQWU7SUFDdEMsSUFBSSxpQkFBaUIsS0FBSyxTQUFTLEVBQUU7UUFDbkMsT0FBTyxpQkFBaUIsQ0FBQztLQUMxQjtJQUNELElBQUksR0FBRyxJQUFJLG1CQUFtQixFQUFFLEVBQUU7UUFDaEMsSUFBSSxDQUFDLEdBQUcsRUFBRTtZQUNSLEdBQUcsR0FBRyxTQUFTLENBQUM7U0FDakI7UUFDRCxJQUFJLEdBQUcsQ0FBQyxPQUFPLEtBQUssYUFBYSxFQUFFO1lBQ2pDLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFFRCxNQUFNLENBQUMsR0FBRyxHQUFHLENBQUMsU0FBUyxJQUFJLEdBQUcsQ0FBQyxNQUFNO1lBQ2pDLGtDQUFrQztZQUNsQyxDQUFDLE9BQU8sTUFBTSxLQUFLLFdBQVcsQ0FBQyxDQUFDLENBQUUsTUFBYyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDakUsb0RBQW9EO1FBQ3BELElBQUksQ0FBQyxDQUFDLEVBQUU7WUFDTixrQ0FBa0M7WUFDbEMsTUFBTSxNQUFNLEdBQUcsR0FBVSxDQUFDO1lBQzFCLE9BQU8sTUFBTSxDQUFDLGFBQWEsSUFBSSxNQUFNLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQztTQUM1RDtRQUNELDJDQUEyQztRQUMzQyxPQUFPLDBUQUEwVDthQUNyVCxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ2YsMkNBQTJDO1lBQzNDLHlrREFBeWtEO2lCQUNwa0QsSUFBSSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDL0I7SUFDRCxPQUFPLEtBQUssQ0FBQztBQUNmLENBQUM7QUFFRCxNQUFNLFVBQVUsU0FBUztJQUN2QixPQUFPLENBQUMsT0FBTyxNQUFNLEtBQUssV0FBVyxJQUFJLE1BQU0sQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDO1FBQzdELFlBQVk7UUFDWixDQUFDLE9BQU8saUJBQWlCLEtBQUssV0FBVyxDQUFDLENBQUM7QUFDakQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLWFueVxuZnVuY3Rpb24gX2lzTmF2aWdhdG9yRGVmaW5lZCgpOiBib29sZWFuIHtcbiAgcmV0dXJuIHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIG5hdmlnYXRvciAhPSBudWxsO1xufVxuXG5sZXQgaXNNb2JpbGVNb2NrVmFsdWU6IGJvb2xlYW58dW5kZWZpbmVkO1xuXG5leHBvcnQgZnVuY3Rpb24gbW9ja0lzTW9iaWxlKHZhbHVlOiBib29sZWFufHVuZGVmaW5lZCkge1xuICBpc01vYmlsZU1vY2tWYWx1ZSA9IHZhbHVlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNNb2JpbGUobmF2PzogTmF2aWdhdG9yKTogYm9vbGVhbiB7XG4gIGlmIChpc01vYmlsZU1vY2tWYWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuIGlzTW9iaWxlTW9ja1ZhbHVlO1xuICB9XG4gIGlmIChuYXYgfHwgX2lzTmF2aWdhdG9yRGVmaW5lZCgpKSB7XG4gICAgaWYgKCFuYXYpIHtcbiAgICAgIG5hdiA9IG5hdmlnYXRvcjtcbiAgICB9XG4gICAgaWYgKG5hdi5wcm9kdWN0ID09PSAnUmVhY3ROYXRpdmUnKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBjb25zdCBhID0gbmF2LnVzZXJBZ2VudCB8fCBuYXYudmVuZG9yIHx8XG4gICAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1hbnlcbiAgICAgICAgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gKHdpbmRvdyBhcyBhbnkpLm9wZXJhIDogJycpO1xuICAgIC8vIFVzZSBgbmF2aWdhdG9yLnVzZXJBZ2VudERhdGEubW9iaWxlYCBhcyBmYWxsYmFjay5cbiAgICBpZiAoIWEpIHtcbiAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1hbnlcbiAgICAgIGNvbnN0IG5hdkFueSA9IG5hdiBhcyBhbnk7XG4gICAgICByZXR1cm4gbmF2QW55LnVzZXJBZ2VudERhdGEgJiYgbmF2QW55LnVzZXJBZ2VudERhdGEubW9iaWxlO1xuICAgIH1cbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bWF4LWxpbmUtbGVuZ3RoXG4gICAgcmV0dXJuIC8oYW5kcm9pZHxiYlxcZCt8bWVlZ28pLittb2JpbGV8YXZhbnRnb3xiYWRhXFwvfGJsYWNrYmVycnl8YmxhemVyfGNvbXBhbHxlbGFpbmV8ZmVubmVjfGhpcHRvcHxpZW1vYmlsZXxpcChob25lfG9kKXxpcmlzfGtpbmRsZXxsZ2UgfG1hZW1vfG1pZHB8bW1wfG1vYmlsZS4rZmlyZWZveHxuZXRmcm9udHxvcGVyYSBtKG9ifGluKWl8cGFsbSggb3MpP3xwaG9uZXxwKGl4aXxyZSlcXC98cGx1Y2tlcnxwb2NrZXR8cHNwfHNlcmllcyg0fDYpMHxzeW1iaWFufHRyZW98dXBcXC4oYnJvd3NlcnxsaW5rKXx2b2RhZm9uZXx3YXB8d2luZG93cyBjZXx4ZGF8eGlpbm8vaVxuICAgICAgICAgICAgICAgLnRlc3QoYSkgfHxcbiAgICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm1heC1saW5lLWxlbmd0aFxuICAgICAgICAvMTIwN3w2MzEwfDY1OTB8M2dzb3w0dGhwfDUwWzEtNl1pfDc3MHN8ODAyc3xhIHdhfGFiYWN8YWMoZXJ8b298c1xcLSl8YWkoa298cm4pfGFsKGF2fGNhfGNvKXxhbW9pfGFuKGV4fG55fHl3KXxhcHR1fGFyKGNofGdvKXxhcyh0ZXx1cyl8YXR0d3xhdShkaXxcXC1tfHIgfHMgKXxhdmFufGJlKGNrfGxsfG5xKXxiaShsYnxyZCl8YmwoYWN8YXopfGJyKGV8dil3fGJ1bWJ8YndcXC0obnx1KXxjNTVcXC98Y2FwaXxjY3dhfGNkbVxcLXxjZWxsfGNodG18Y2xkY3xjbWRcXC18Y28obXB8bmQpfGNyYXd8ZGEoaXR8bGx8bmcpfGRidGV8ZGNcXC1zfGRldml8ZGljYXxkbW9ifGRvKGN8cClvfGRzKDEyfFxcLWQpfGVsKDQ5fGFpKXxlbShsMnx1bCl8ZXIoaWN8azApfGVzbDh8ZXooWzQtN10wfG9zfHdhfHplKXxmZXRjfGZseShcXC18Xyl8ZzEgdXxnNTYwfGdlbmV8Z2ZcXC01fGdcXC1tb3xnbyhcXC53fG9kKXxncihhZHx1bil8aGFpZXxoY2l0fGhkXFwtKG18cHx0KXxoZWlcXC18aGkocHR8dGEpfGhwKCBpfGlwKXxoc1xcLWN8aHQoYyhcXC18IHxffGF8Z3xwfHN8dCl8dHApfGh1KGF3fHRjKXxpXFwtKDIwfGdvfG1hKXxpMjMwfGlhYyggfFxcLXxcXC8pfGlicm98aWRlYXxpZzAxfGlrb218aW0xa3xpbm5vfGlwYXF8aXJpc3xqYSh0fHYpYXxqYnJvfGplbXV8amlnc3xrZGRpfGtlaml8a2d0KCB8XFwvKXxrbG9ufGtwdCB8a3djXFwtfGt5byhjfGspfGxlKG5vfHhpKXxsZyggZ3xcXC8oa3xsfHUpfDUwfDU0fFxcLVthLXddKXxsaWJ3fGx5bnh8bTFcXC13fG0zZ2F8bTUwXFwvfG1hKHRlfHVpfHhvKXxtYygwMXwyMXxjYSl8bVxcLWNyfG1lKHJjfHJpKXxtaShvOHxvYXx0cyl8bW1lZnxtbygwMXwwMnxiaXxkZXxkb3x0KFxcLXwgfG98dil8enopfG10KDUwfHAxfHYgKXxtd2JwfG15d2F8bjEwWzAtMl18bjIwWzItM118bjMwKDB8Mil8bjUwKDB8Mnw1KXxuNygwKDB8MSl8MTApfG5lKChjfG0pXFwtfG9ufHRmfHdmfHdnfHd0KXxub2soNnxpKXxuenBofG8yaW18b3AodGl8d3YpfG9yYW58b3dnMXxwODAwfHBhbihhfGR8dCl8cGR4Z3xwZygxM3xcXC0oWzEtOF18YykpfHBoaWx8cGlyZXxwbChheXx1Yyl8cG5cXC0yfHBvKGNrfHJ0fHNlKXxwcm94fHBzaW98cHRcXC1nfHFhXFwtYXxxYygwN3wxMnwyMXwzMnw2MHxcXC1bMi03XXxpXFwtKXxxdGVrfHIzODB8cjYwMHxyYWtzfHJpbTl8cm8odmV8em8pfHM1NVxcL3xzYShnZXxtYXxtbXxtc3xueXx2YSl8c2MoMDF8aFxcLXxvb3xwXFwtKXxzZGtcXC98c2UoYyhcXC18MHwxKXw0N3xtY3xuZHxyaSl8c2doXFwtfHNoYXJ8c2llKFxcLXxtKXxza1xcLTB8c2woNDV8aWQpfHNtKGFsfGFyfGIzfGl0fHQ1KXxzbyhmdHxueSl8c3AoMDF8aFxcLXx2XFwtfHYgKXxzeSgwMXxtYil8dDIoMTh8NTApfHQ2KDAwfDEwfDE4KXx0YShndHxsayl8dGNsXFwtfHRkZ1xcLXx0ZWwoaXxtKXx0aW1cXC18dFxcLW1vfHRvKHBsfHNoKXx0cyg3MHxtXFwtfG0zfG01KXx0eFxcLTl8dXAoXFwuYnxnMXxzaSl8dXRzdHx2NDAwfHY3NTB8dmVyaXx2aShyZ3x0ZSl8dmsoNDB8NVswLTNdfFxcLXYpfHZtNDB8dm9kYXx2dWxjfHZ4KDUyfDUzfDYwfDYxfDcwfDgwfDgxfDgzfDg1fDk4KXx3M2MoXFwtfCApfHdlYmN8d2hpdHx3aShnIHxuY3xudyl8d21sYnx3b251fHg3MDB8eWFzXFwtfHlvdXJ8emV0b3x6dGVcXC0vaVxuICAgICAgICAgICAgLnRlc3QoYS5zdWJzdHIoMCwgNCkpO1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzQnJvd3NlcigpOiBib29sZWFuIHtcbiAgcmV0dXJuICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgIT0gbnVsbCkgfHxcbiAgICAgIC8vQHRzLWlnbm9yZVxuICAgICAgKHR5cGVvZiBXb3JrZXJHbG9iYWxTY29wZSAhPT0gJ3VuZGVmaW5lZCcpO1xufVxuIl19","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { isPromise } from '../util';\nexport const OP_SCOPE_SUFFIX = '__op';\n/**\n * Used for wrapping functions that perform math operations on\n * Tensors. The function will be wrapped in a named scope that cleans all\n * memory usage after the function is done.\n */\nexport function op(f) {\n    const keys = Object.keys(f);\n    if (keys.length !== 1) {\n        throw new Error(`Please provide an object with a single key ` +\n            `(operation name) mapping to a function. Got an object with ` +\n            `${keys.length} keys.`);\n    }\n    let opName = keys[0];\n    const fn = f[opName];\n    // Strip the underscore from the end of the function name.\n    if (opName.endsWith('_')) {\n        opName = opName.substring(0, opName.length - 1);\n    }\n    // add an __op suffix to distinguish ops from kernels in tf.profile\n    opName = opName + OP_SCOPE_SUFFIX;\n    // tslint:disable-next-line:no-any\n    const f2 = (...args) => {\n        ENGINE.startScope(opName);\n        try {\n            const result = fn(...args);\n            if (isPromise(result)) {\n                console.error('Cannot return a Promise inside of tidy.');\n            }\n            ENGINE.endScope(result);\n            return result;\n        }\n        catch (ex) {\n            ENGINE.endScope(null);\n            throw ex;\n        }\n    };\n    Object.defineProperty(f2, 'name', { value: opName, configurable: true });\n    // tslint:disable-next-line:no-any\n    return f2;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3BlcmF0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy9vcHMvb3BlcmF0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUNILE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDakMsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLFNBQVMsQ0FBQztBQUVsQyxNQUFNLENBQUMsTUFBTSxlQUFlLEdBQUcsTUFBTSxDQUFDO0FBRXRDOzs7O0dBSUc7QUFDSCxNQUFNLFVBQVUsRUFBRSxDQUFxQixDQUFzQjtJQUMzRCxNQUFNLElBQUksR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzVCLElBQUksSUFBSSxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7UUFDckIsTUFBTSxJQUFJLEtBQUssQ0FDWCw2Q0FBNkM7WUFDN0MsNkRBQTZEO1lBQzdELEdBQUcsSUFBSSxDQUFDLE1BQU0sUUFBUSxDQUFDLENBQUM7S0FDN0I7SUFFRCxJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDckIsTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRXJCLDBEQUEwRDtJQUMxRCxJQUFJLE1BQU0sQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEVBQUU7UUFDeEIsTUFBTSxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7S0FDakQ7SUFFRCxtRUFBbUU7SUFDbkUsTUFBTSxHQUFHLE1BQU0sR0FBRyxlQUFlLENBQUM7SUFFbEMsa0NBQWtDO0lBQ2xDLE1BQU0sRUFBRSxHQUFHLENBQUMsR0FBRyxJQUFXLEVBQUUsRUFBRTtRQUM1QixNQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFCLElBQUk7WUFDRixNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQztZQUMzQixJQUFJLFNBQVMsQ0FBQyxNQUFNLENBQUMsRUFBRTtnQkFDckIsT0FBTyxDQUFDLEtBQUssQ0FBQyx5Q0FBeUMsQ0FBQyxDQUFDO2FBQzFEO1lBQ0QsTUFBTSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUN4QixPQUFPLE1BQU0sQ0FBQztTQUNmO1FBQUMsT0FBTyxFQUFFLEVBQUU7WUFDWCxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3RCLE1BQU0sRUFBRSxDQUFDO1NBQ1Y7SUFDSCxDQUFDLENBQUM7SUFDRixNQUFNLENBQUMsY0FBYyxDQUFDLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBQyxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxJQUFJLEVBQUMsQ0FBQyxDQUFDO0lBRXZFLGtDQUFrQztJQUNsQyxPQUFPLEVBQWMsQ0FBQztBQUN4QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTggR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuaW1wb3J0IHtFTkdJTkV9IGZyb20gJy4uL2VuZ2luZSc7XG5pbXBvcnQge2lzUHJvbWlzZX0gZnJvbSAnLi4vdXRpbCc7XG5cbmV4cG9ydCBjb25zdCBPUF9TQ09QRV9TVUZGSVggPSAnX19vcCc7XG5cbi8qKlxuICogVXNlZCBmb3Igd3JhcHBpbmcgZnVuY3Rpb25zIHRoYXQgcGVyZm9ybSBtYXRoIG9wZXJhdGlvbnMgb25cbiAqIFRlbnNvcnMuIFRoZSBmdW5jdGlvbiB3aWxsIGJlIHdyYXBwZWQgaW4gYSBuYW1lZCBzY29wZSB0aGF0IGNsZWFucyBhbGxcbiAqIG1lbW9yeSB1c2FnZSBhZnRlciB0aGUgZnVuY3Rpb24gaXMgZG9uZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG9wPFQgZXh0ZW5kcyBGdW5jdGlvbj4oZjoge1tuYW1lOiBzdHJpbmddOiBUfSk6IFQge1xuICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMoZik7XG4gIGlmIChrZXlzLmxlbmd0aCAhPT0gMSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgYFBsZWFzZSBwcm92aWRlIGFuIG9iamVjdCB3aXRoIGEgc2luZ2xlIGtleSBgICtcbiAgICAgICAgYChvcGVyYXRpb24gbmFtZSkgbWFwcGluZyB0byBhIGZ1bmN0aW9uLiBHb3QgYW4gb2JqZWN0IHdpdGggYCArXG4gICAgICAgIGAke2tleXMubGVuZ3RofSBrZXlzLmApO1xuICB9XG5cbiAgbGV0IG9wTmFtZSA9IGtleXNbMF07XG4gIGNvbnN0IGZuID0gZltvcE5hbWVdO1xuXG4gIC8vIFN0cmlwIHRoZSB1bmRlcnNjb3JlIGZyb20gdGhlIGVuZCBvZiB0aGUgZnVuY3Rpb24gbmFtZS5cbiAgaWYgKG9wTmFtZS5lbmRzV2l0aCgnXycpKSB7XG4gICAgb3BOYW1lID0gb3BOYW1lLnN1YnN0cmluZygwLCBvcE5hbWUubGVuZ3RoIC0gMSk7XG4gIH1cblxuICAvLyBhZGQgYW4gX19vcCBzdWZmaXggdG8gZGlzdGluZ3Vpc2ggb3BzIGZyb20ga2VybmVscyBpbiB0Zi5wcm9maWxlXG4gIG9wTmFtZSA9IG9wTmFtZSArIE9QX1NDT1BFX1NVRkZJWDtcblxuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tYW55XG4gIGNvbnN0IGYyID0gKC4uLmFyZ3M6IGFueVtdKSA9PiB7XG4gICAgRU5HSU5FLnN0YXJ0U2NvcGUob3BOYW1lKTtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzdWx0ID0gZm4oLi4uYXJncyk7XG4gICAgICBpZiAoaXNQcm9taXNlKHJlc3VsdCkpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignQ2Fubm90IHJldHVybiBhIFByb21pc2UgaW5zaWRlIG9mIHRpZHkuJyk7XG4gICAgICB9XG4gICAgICBFTkdJTkUuZW5kU2NvcGUocmVzdWx0KTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgIEVOR0lORS5lbmRTY29wZShudWxsKTtcbiAgICAgIHRocm93IGV4O1xuICAgIH1cbiAgfTtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGYyLCAnbmFtZScsIHt2YWx1ZTogb3BOYW1lLCBjb25maWd1cmFibGU6IHRydWV9KTtcblxuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tYW55XG4gIHJldHVybiBmMiBhcyBhbnkgYXMgVDtcbn1cbiJdfQ==","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Complex } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Converts two real numbers to a complex number.\n *\n * Given a tensor `real` representing the real part of a complex number, and a\n * tensor `imag` representing the imaginary part of a complex number, this\n * operation returns complex numbers elementwise of the form [r0, i0, r1, i1],\n * where r represents the real part and i represents the imag part.\n *\n * The input tensors real and imag must have the same shape.\n *\n * ```js\n * const real = tf.tensor1d([2.25, 3.25]);\n * const imag = tf.tensor1d([4.75, 5.75]);\n * const complex = tf.complex(real, imag);\n *\n * complex.print();\n * ```\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction complex_(real, imag) {\n    const $real = convertToTensor(real, 'real', 'complex');\n    const $imag = convertToTensor(imag, 'imag', 'complex');\n    util.assertShapesMatch($real.shape, $imag.shape, `real and imag shapes, ${$real.shape} and ${$imag.shape}, ` +\n        `must match in call to tf.complex().`);\n    const inputs = { real: $real, imag: $imag };\n    return ENGINE.runKernel(Complex, inputs);\n}\nexport const complex = op({ complex_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcGxleC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29yZS9zcmMvb3BzL2NvbXBsZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBQ0gsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUNqQyxPQUFPLEVBQUMsT0FBTyxFQUFnQixNQUFNLGlCQUFpQixDQUFDO0FBR3ZELE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUVuRCxPQUFPLEtBQUssSUFBSSxNQUFNLFNBQVMsQ0FBQztBQUVoQyxPQUFPLEVBQUMsRUFBRSxFQUFDLE1BQU0sYUFBYSxDQUFDO0FBRS9COzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBbUJHO0FBQ0gsU0FBUyxRQUFRLENBQW1CLElBQWtCLEVBQUUsSUFBa0I7SUFDeEUsTUFBTSxLQUFLLEdBQUcsZUFBZSxDQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDdkQsTUFBTSxLQUFLLEdBQUcsZUFBZSxDQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDdkQsSUFBSSxDQUFDLGlCQUFpQixDQUNsQixLQUFLLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxLQUFLLEVBQ3hCLHlCQUF5QixLQUFLLENBQUMsS0FBSyxRQUFRLEtBQUssQ0FBQyxLQUFLLElBQUk7UUFDdkQscUNBQXFDLENBQUMsQ0FBQztJQUUvQyxNQUFNLE1BQU0sR0FBa0IsRUFBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUMsQ0FBQztJQUN6RCxPQUFPLE1BQU0sQ0FBQyxTQUFTLENBQUMsT0FBTyxFQUFFLE1BQThCLENBQUMsQ0FBQztBQUNuRSxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxFQUFDLFFBQVEsRUFBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5pbXBvcnQge0VOR0lORX0gZnJvbSAnLi4vZW5naW5lJztcbmltcG9ydCB7Q29tcGxleCwgQ29tcGxleElucHV0c30gZnJvbSAnLi4va2VybmVsX25hbWVzJztcbmltcG9ydCB7VGVuc29yfSBmcm9tICcuLi90ZW5zb3InO1xuaW1wb3J0IHtOYW1lZFRlbnNvck1hcH0gZnJvbSAnLi4vdGVuc29yX3R5cGVzJztcbmltcG9ydCB7Y29udmVydFRvVGVuc29yfSBmcm9tICcuLi90ZW5zb3JfdXRpbF9lbnYnO1xuaW1wb3J0IHtUZW5zb3JMaWtlfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgKiBhcyB1dGlsIGZyb20gJy4uL3V0aWwnO1xuXG5pbXBvcnQge29wfSBmcm9tICcuL29wZXJhdGlvbic7XG5cbi8qKlxuICogQ29udmVydHMgdHdvIHJlYWwgbnVtYmVycyB0byBhIGNvbXBsZXggbnVtYmVyLlxuICpcbiAqIEdpdmVuIGEgdGVuc29yIGByZWFsYCByZXByZXNlbnRpbmcgdGhlIHJlYWwgcGFydCBvZiBhIGNvbXBsZXggbnVtYmVyLCBhbmQgYVxuICogdGVuc29yIGBpbWFnYCByZXByZXNlbnRpbmcgdGhlIGltYWdpbmFyeSBwYXJ0IG9mIGEgY29tcGxleCBudW1iZXIsIHRoaXNcbiAqIG9wZXJhdGlvbiByZXR1cm5zIGNvbXBsZXggbnVtYmVycyBlbGVtZW50d2lzZSBvZiB0aGUgZm9ybSBbcjAsIGkwLCByMSwgaTFdLFxuICogd2hlcmUgciByZXByZXNlbnRzIHRoZSByZWFsIHBhcnQgYW5kIGkgcmVwcmVzZW50cyB0aGUgaW1hZyBwYXJ0LlxuICpcbiAqIFRoZSBpbnB1dCB0ZW5zb3JzIHJlYWwgYW5kIGltYWcgbXVzdCBoYXZlIHRoZSBzYW1lIHNoYXBlLlxuICpcbiAqIGBgYGpzXG4gKiBjb25zdCByZWFsID0gdGYudGVuc29yMWQoWzIuMjUsIDMuMjVdKTtcbiAqIGNvbnN0IGltYWcgPSB0Zi50ZW5zb3IxZChbNC43NSwgNS43NV0pO1xuICogY29uc3QgY29tcGxleCA9IHRmLmNvbXBsZXgocmVhbCwgaW1hZyk7XG4gKlxuICogY29tcGxleC5wcmludCgpO1xuICogYGBgXG4gKlxuICogQGRvYyB7aGVhZGluZzogJ1RlbnNvcnMnLCBzdWJoZWFkaW5nOiAnQ3JlYXRpb24nfVxuICovXG5mdW5jdGlvbiBjb21wbGV4XzxUIGV4dGVuZHMgVGVuc29yPihyZWFsOiBUfFRlbnNvckxpa2UsIGltYWc6IFR8VGVuc29yTGlrZSk6IFQge1xuICBjb25zdCAkcmVhbCA9IGNvbnZlcnRUb1RlbnNvcihyZWFsLCAncmVhbCcsICdjb21wbGV4Jyk7XG4gIGNvbnN0ICRpbWFnID0gY29udmVydFRvVGVuc29yKGltYWcsICdpbWFnJywgJ2NvbXBsZXgnKTtcbiAgdXRpbC5hc3NlcnRTaGFwZXNNYXRjaChcbiAgICAgICRyZWFsLnNoYXBlLCAkaW1hZy5zaGFwZSxcbiAgICAgIGByZWFsIGFuZCBpbWFnIHNoYXBlcywgJHskcmVhbC5zaGFwZX0gYW5kICR7JGltYWcuc2hhcGV9LCBgICtcbiAgICAgICAgICBgbXVzdCBtYXRjaCBpbiBjYWxsIHRvIHRmLmNvbXBsZXgoKS5gKTtcblxuICBjb25zdCBpbnB1dHM6IENvbXBsZXhJbnB1dHMgPSB7cmVhbDogJHJlYWwsIGltYWc6ICRpbWFnfTtcbiAgcmV0dXJuIEVOR0lORS5ydW5LZXJuZWwoQ29tcGxleCwgaW5wdXRzIGFzIHt9IGFzIE5hbWVkVGVuc29yTWFwKTtcbn1cblxuZXhwb3J0IGNvbnN0IGNvbXBsZXggPSBvcCh7Y29tcGxleF99KTtcbiJdfQ==","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { assert, assertNonNegativeIntegerDimensions, flatten, inferDtype, isTypedArray, sizeFromShape, toTypedArray } from '../util';\n/** This is shared code across all tensor creation methods. */\nexport function makeTensor(values, shape, inferredShape, dtype) {\n    if (dtype == null) {\n        dtype = inferDtype(values);\n    }\n    if (dtype === 'complex64') {\n        throw new Error(`Cannot construct a complex64 tensor directly. ` +\n            `Please use tf.complex(real, imag).`);\n    }\n    if (!isTypedArray(values) && !Array.isArray(values) &&\n        typeof values !== 'number' && typeof values !== 'boolean' &&\n        typeof values !== 'string') {\n        throw new Error('values passed to tensor(values) must be a number/boolean/string or ' +\n            'an array of numbers/booleans/strings, or a TypedArray');\n    }\n    if (shape != null) {\n        assertNonNegativeIntegerDimensions(shape);\n        const providedSize = sizeFromShape(shape);\n        const inferredSize = sizeFromShape(inferredShape);\n        assert(providedSize === inferredSize, () => `Based on the provided shape, [${shape}], the tensor should have ` +\n            `${providedSize} values but has ${inferredSize}`);\n        for (let i = 0; i < inferredShape.length; ++i) {\n            const inferred = inferredShape[i];\n            const flatDimsDontMatch = i === inferredShape.length - 1 ?\n                inferred !== sizeFromShape(shape.slice(i)) :\n                true;\n            assert(inferredShape[i] === shape[i] || !flatDimsDontMatch, () => `Error creating a new Tensor. Inferred shape ` +\n                `(${inferredShape}) does not match the provided ` +\n                `shape (${shape}). `);\n        }\n    }\n    if (!isTypedArray(values) && !Array.isArray(values)) {\n        values = [values];\n    }\n    shape = shape || inferredShape;\n    values = dtype !== 'string' ?\n        toTypedArray(values, dtype) :\n        flatten(values, [], true);\n    return ENGINE.makeTensor(values, shape, dtype);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVuc29yX29wc191dGlsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy9vcHMvdGVuc29yX29wc191dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFJakMsT0FBTyxFQUFDLE1BQU0sRUFBRSxrQ0FBa0MsRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxhQUFhLEVBQUUsWUFBWSxFQUFDLE1BQU0sU0FBUyxDQUFDO0FBRW5JLDhEQUE4RDtBQUM5RCxNQUFNLFVBQVUsVUFBVSxDQUN0QixNQUFrQixFQUFFLEtBQWUsRUFBRSxhQUF1QixFQUM1RCxLQUFnQjtJQUNsQixJQUFJLEtBQUssSUFBSSxJQUFJLEVBQUU7UUFDakIsS0FBSyxHQUFHLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQztLQUM1QjtJQUNELElBQUksS0FBSyxLQUFLLFdBQVcsRUFBRTtRQUN6QixNQUFNLElBQUksS0FBSyxDQUNYLGdEQUFnRDtZQUNoRCxvQ0FBb0MsQ0FBQyxDQUFDO0tBQzNDO0lBQ0QsSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDO1FBQy9DLE9BQU8sTUFBTSxLQUFLLFFBQVEsSUFBSSxPQUFPLE1BQU0sS0FBSyxTQUFTO1FBQ3pELE9BQU8sTUFBTSxLQUFLLFFBQVEsRUFBRTtRQUM5QixNQUFNLElBQUksS0FBSyxDQUNYLHFFQUFxRTtZQUNyRSx1REFBdUQsQ0FBQyxDQUFDO0tBQzlEO0lBQ0QsSUFBSSxLQUFLLElBQUksSUFBSSxFQUFFO1FBQ2pCLGtDQUFrQyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRTFDLE1BQU0sWUFBWSxHQUFHLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMxQyxNQUFNLFlBQVksR0FBRyxhQUFhLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDbEQsTUFBTSxDQUNGLFlBQVksS0FBSyxZQUFZLEVBQzdCLEdBQUcsRUFBRSxDQUNELGlDQUFpQyxLQUFLLDRCQUE0QjtZQUNsRSxHQUFHLFlBQVksbUJBQW1CLFlBQVksRUFBRSxDQUFDLENBQUM7UUFFMUQsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLGFBQWEsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLEVBQUU7WUFDN0MsTUFBTSxRQUFRLEdBQUcsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2xDLE1BQU0saUJBQWlCLEdBQUcsQ0FBQyxLQUFLLGFBQWEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7Z0JBQ3RELFFBQVEsS0FBSyxhQUFhLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQzVDLElBQUksQ0FBQztZQUNULE1BQU0sQ0FDRixhQUFhLENBQUMsQ0FBQyxDQUFDLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLEVBQ25ELEdBQUcsRUFBRSxDQUFDLDhDQUE4QztnQkFDaEQsSUFBSSxhQUFhLGdDQUFnQztnQkFDakQsVUFBVSxLQUFLLEtBQUssQ0FBQyxDQUFDO1NBQy9CO0tBQ0Y7SUFFRCxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFBRTtRQUNuRCxNQUFNLEdBQUcsQ0FBQyxNQUFNLENBQWEsQ0FBQztLQUMvQjtJQUVELEtBQUssR0FBRyxLQUFLLElBQUksYUFBYSxDQUFDO0lBQy9CLE1BQU0sR0FBRyxLQUFLLEtBQUssUUFBUSxDQUFDLENBQUM7UUFDekIsWUFBWSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBQzdCLE9BQU8sQ0FBQyxNQUFrQixFQUFFLEVBQUUsRUFBRSxJQUFJLENBQWEsQ0FBQztJQUN0RCxPQUFPLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBb0IsRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDL0QsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE4IEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtFTkdJTkV9IGZyb20gJy4uL2VuZ2luZSc7XG5pbXBvcnQge1RlbnNvcn0gZnJvbSAnLi4vdGVuc29yJztcbmltcG9ydCB7VGVuc29yTGlrZSwgVHlwZWRBcnJheX0gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0IHtEYXRhVHlwZX0gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0IHthc3NlcnQsIGFzc2VydE5vbk5lZ2F0aXZlSW50ZWdlckRpbWVuc2lvbnMsIGZsYXR0ZW4sIGluZmVyRHR5cGUsIGlzVHlwZWRBcnJheSwgc2l6ZUZyb21TaGFwZSwgdG9UeXBlZEFycmF5fSBmcm9tICcuLi91dGlsJztcblxuLyoqIFRoaXMgaXMgc2hhcmVkIGNvZGUgYWNyb3NzIGFsbCB0ZW5zb3IgY3JlYXRpb24gbWV0aG9kcy4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtYWtlVGVuc29yKFxuICAgIHZhbHVlczogVGVuc29yTGlrZSwgc2hhcGU6IG51bWJlcltdLCBpbmZlcnJlZFNoYXBlOiBudW1iZXJbXSxcbiAgICBkdHlwZT86IERhdGFUeXBlKTogVGVuc29yIHtcbiAgaWYgKGR0eXBlID09IG51bGwpIHtcbiAgICBkdHlwZSA9IGluZmVyRHR5cGUodmFsdWVzKTtcbiAgfVxuICBpZiAoZHR5cGUgPT09ICdjb21wbGV4NjQnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBgQ2Fubm90IGNvbnN0cnVjdCBhIGNvbXBsZXg2NCB0ZW5zb3IgZGlyZWN0bHkuIGAgK1xuICAgICAgICBgUGxlYXNlIHVzZSB0Zi5jb21wbGV4KHJlYWwsIGltYWcpLmApO1xuICB9XG4gIGlmICghaXNUeXBlZEFycmF5KHZhbHVlcykgJiYgIUFycmF5LmlzQXJyYXkodmFsdWVzKSAmJlxuICAgICAgdHlwZW9mIHZhbHVlcyAhPT0gJ251bWJlcicgJiYgdHlwZW9mIHZhbHVlcyAhPT0gJ2Jvb2xlYW4nICYmXG4gICAgICB0eXBlb2YgdmFsdWVzICE9PSAnc3RyaW5nJykge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ3ZhbHVlcyBwYXNzZWQgdG8gdGVuc29yKHZhbHVlcykgbXVzdCBiZSBhIG51bWJlci9ib29sZWFuL3N0cmluZyBvciAnICtcbiAgICAgICAgJ2FuIGFycmF5IG9mIG51bWJlcnMvYm9vbGVhbnMvc3RyaW5ncywgb3IgYSBUeXBlZEFycmF5Jyk7XG4gIH1cbiAgaWYgKHNoYXBlICE9IG51bGwpIHtcbiAgICBhc3NlcnROb25OZWdhdGl2ZUludGVnZXJEaW1lbnNpb25zKHNoYXBlKTtcblxuICAgIGNvbnN0IHByb3ZpZGVkU2l6ZSA9IHNpemVGcm9tU2hhcGUoc2hhcGUpO1xuICAgIGNvbnN0IGluZmVycmVkU2l6ZSA9IHNpemVGcm9tU2hhcGUoaW5mZXJyZWRTaGFwZSk7XG4gICAgYXNzZXJ0KFxuICAgICAgICBwcm92aWRlZFNpemUgPT09IGluZmVycmVkU2l6ZSxcbiAgICAgICAgKCkgPT5cbiAgICAgICAgICAgIGBCYXNlZCBvbiB0aGUgcHJvdmlkZWQgc2hhcGUsIFske3NoYXBlfV0sIHRoZSB0ZW5zb3Igc2hvdWxkIGhhdmUgYCArXG4gICAgICAgICAgICBgJHtwcm92aWRlZFNpemV9IHZhbHVlcyBidXQgaGFzICR7aW5mZXJyZWRTaXplfWApO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbmZlcnJlZFNoYXBlLmxlbmd0aDsgKytpKSB7XG4gICAgICBjb25zdCBpbmZlcnJlZCA9IGluZmVycmVkU2hhcGVbaV07XG4gICAgICBjb25zdCBmbGF0RGltc0RvbnRNYXRjaCA9IGkgPT09IGluZmVycmVkU2hhcGUubGVuZ3RoIC0gMSA/XG4gICAgICAgICAgaW5mZXJyZWQgIT09IHNpemVGcm9tU2hhcGUoc2hhcGUuc2xpY2UoaSkpIDpcbiAgICAgICAgICB0cnVlO1xuICAgICAgYXNzZXJ0KFxuICAgICAgICAgIGluZmVycmVkU2hhcGVbaV0gPT09IHNoYXBlW2ldIHx8ICFmbGF0RGltc0RvbnRNYXRjaCxcbiAgICAgICAgICAoKSA9PiBgRXJyb3IgY3JlYXRpbmcgYSBuZXcgVGVuc29yLiBJbmZlcnJlZCBzaGFwZSBgICtcbiAgICAgICAgICAgICAgYCgke2luZmVycmVkU2hhcGV9KSBkb2VzIG5vdCBtYXRjaCB0aGUgcHJvdmlkZWQgYCArXG4gICAgICAgICAgICAgIGBzaGFwZSAoJHtzaGFwZX0pLiBgKTtcbiAgICB9XG4gIH1cblxuICBpZiAoIWlzVHlwZWRBcnJheSh2YWx1ZXMpICYmICFBcnJheS5pc0FycmF5KHZhbHVlcykpIHtcbiAgICB2YWx1ZXMgPSBbdmFsdWVzXSBhcyBudW1iZXJbXTtcbiAgfVxuXG4gIHNoYXBlID0gc2hhcGUgfHwgaW5mZXJyZWRTaGFwZTtcbiAgdmFsdWVzID0gZHR5cGUgIT09ICdzdHJpbmcnID9cbiAgICAgIHRvVHlwZWRBcnJheSh2YWx1ZXMsIGR0eXBlKSA6XG4gICAgICBmbGF0dGVuKHZhbHVlcyBhcyBzdHJpbmdbXSwgW10sIHRydWUpIGFzIHN0cmluZ1tdO1xuICByZXR1cm4gRU5HSU5FLm1ha2VUZW5zb3IodmFsdWVzIGFzIFR5cGVkQXJyYXksIHNoYXBlLCBkdHlwZSk7XG59XG4iXX0=","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { inferShape } from '../tensor_util_env';\nimport { makeTensor } from './tensor_ops_util';\n/**\n * Creates a `tf.Tensor` with the provided values, shape and dtype.\n *\n * ```js\n * // Pass an array of values to create a vector.\n * tf.tensor([1, 2, 3, 4]).print();\n * ```\n *\n * ```js\n * // Pass a nested array of values to make a matrix or a higher\n * // dimensional tensor.\n * tf.tensor([[1, 2], [3, 4]]).print();\n * ```\n *\n * ```js\n * // Pass a flat array and specify a shape yourself.\n * tf.tensor([1, 2, 3, 4], [2, 2]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`. If the values are strings,\n *     they will be encoded as utf-8 and kept as `Uint8Array[]`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function tensor(values, shape, dtype) {\n    const inferredShape = inferShape(values, dtype);\n    return makeTensor(values, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVuc29yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy9vcHMvdGVuc29yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUdILE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUk5QyxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFFN0M7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQTJCRztBQUNILE1BQU0sVUFBVSxNQUFNLENBQ2xCLE1BQWtCLEVBQUUsS0FBbUIsRUFBRSxLQUFnQjtJQUMzRCxNQUFNLGFBQWEsR0FBRyxVQUFVLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ2hELE9BQU8sVUFBVSxDQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUUsYUFBYSxFQUFFLEtBQUssQ0FBYyxDQUFDO0FBQ3RFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7VGVuc29yfSBmcm9tICcuLi90ZW5zb3InO1xuaW1wb3J0IHtpbmZlclNoYXBlfSBmcm9tICcuLi90ZW5zb3JfdXRpbF9lbnYnO1xuaW1wb3J0IHtUZW5zb3JMaWtlfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQge0RhdGFUeXBlLCBSYW5rLCBTaGFwZU1hcH0gZnJvbSAnLi4vdHlwZXMnO1xuXG5pbXBvcnQge21ha2VUZW5zb3J9IGZyb20gJy4vdGVuc29yX29wc191dGlsJztcblxuLyoqXG4gKiBDcmVhdGVzIGEgYHRmLlRlbnNvcmAgd2l0aCB0aGUgcHJvdmlkZWQgdmFsdWVzLCBzaGFwZSBhbmQgZHR5cGUuXG4gKlxuICogYGBganNcbiAqIC8vIFBhc3MgYW4gYXJyYXkgb2YgdmFsdWVzIHRvIGNyZWF0ZSBhIHZlY3Rvci5cbiAqIHRmLnRlbnNvcihbMSwgMiwgMywgNF0pLnByaW50KCk7XG4gKiBgYGBcbiAqXG4gKiBgYGBqc1xuICogLy8gUGFzcyBhIG5lc3RlZCBhcnJheSBvZiB2YWx1ZXMgdG8gbWFrZSBhIG1hdHJpeCBvciBhIGhpZ2hlclxuICogLy8gZGltZW5zaW9uYWwgdGVuc29yLlxuICogdGYudGVuc29yKFtbMSwgMl0sIFszLCA0XV0pLnByaW50KCk7XG4gKiBgYGBcbiAqXG4gKiBgYGBqc1xuICogLy8gUGFzcyBhIGZsYXQgYXJyYXkgYW5kIHNwZWNpZnkgYSBzaGFwZSB5b3Vyc2VsZi5cbiAqIHRmLnRlbnNvcihbMSwgMiwgMywgNF0sIFsyLCAyXSkucHJpbnQoKTtcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB2YWx1ZXMgVGhlIHZhbHVlcyBvZiB0aGUgdGVuc29yLiBDYW4gYmUgbmVzdGVkIGFycmF5IG9mIG51bWJlcnMsXG4gKiAgICAgb3IgYSBmbGF0IGFycmF5LCBvciBhIGBUeXBlZEFycmF5YC4gSWYgdGhlIHZhbHVlcyBhcmUgc3RyaW5ncyxcbiAqICAgICB0aGV5IHdpbGwgYmUgZW5jb2RlZCBhcyB1dGYtOCBhbmQga2VwdCBhcyBgVWludDhBcnJheVtdYC5cbiAqIEBwYXJhbSBzaGFwZSBUaGUgc2hhcGUgb2YgdGhlIHRlbnNvci4gT3B0aW9uYWwuIElmIG5vdCBwcm92aWRlZCxcbiAqICAgaXQgaXMgaW5mZXJyZWQgZnJvbSBgdmFsdWVzYC5cbiAqIEBwYXJhbSBkdHlwZSBUaGUgZGF0YSB0eXBlLlxuICpcbiAqIEBkb2Mge2hlYWRpbmc6ICdUZW5zb3JzJywgc3ViaGVhZGluZzogJ0NyZWF0aW9uJ31cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRlbnNvcjxSIGV4dGVuZHMgUmFuaz4oXG4gICAgdmFsdWVzOiBUZW5zb3JMaWtlLCBzaGFwZT86IFNoYXBlTWFwW1JdLCBkdHlwZT86IERhdGFUeXBlKTogVGVuc29yPFI+IHtcbiAgY29uc3QgaW5mZXJyZWRTaGFwZSA9IGluZmVyU2hhcGUodmFsdWVzLCBkdHlwZSk7XG4gIHJldHVybiBtYWtlVGVuc29yKHZhbHVlcywgc2hhcGUsIGluZmVycmVkU2hhcGUsIGR0eXBlKSBhcyBUZW5zb3I8Uj47XG59XG4iXX0=","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/* Type definitions for exporting and importing of models. */\n/**\n * A map from Tensor dtype to number of bytes per element of the Tensor.\n */\nexport const DTYPE_VALUE_SIZE_MAP = {\n    'float32': 4,\n    'float16': 2,\n    'int32': 4,\n    'uint16': 2,\n    'uint8': 1,\n    'bool': 1,\n    'complex64': 8\n};\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { complex } from '../ops/complex';\nimport { tensor } from '../ops/tensor';\nimport { sizeFromShape } from '../util';\nimport { DTYPE_VALUE_SIZE_MAP } from './types';\n/** Number of bytes reserved for the length of the string. (32bit integer). */\nconst NUM_BYTES_STRING_LENGTH = 4;\n/**\n * Encode a map from names to weight values as an ArrayBuffer, along with an\n * `Array` of `WeightsManifestEntry` as specification of the encoded weights.\n *\n * This function does not perform sharding.\n *\n * This function is the reverse of `decodeWeights`.\n *\n * @param tensors A map (\"dict\") from names to tensors.\n * @param group Group to which the weights belong (optional).\n * @returns A `Promise` of\n *   - A flat `ArrayBuffer` with all the binary values of the `Tensor`s\n *     concatenated.\n *   - An `Array` of `WeightManifestEntry`s, carrying information including\n *     tensor names, `dtype`s and shapes.\n * @throws Error: on unsupported tensor `dtype`.\n */\nexport async function encodeWeights(tensors, group) {\n    // TODO(adarob, cais): Support quantization.\n    const specs = [];\n    const dataPromises = [];\n    const names = Array.isArray(tensors) ?\n        tensors.map(tensor => tensor.name) :\n        Object.keys(tensors);\n    for (let i = 0; i < names.length; ++i) {\n        const name = names[i];\n        const t = Array.isArray(tensors) ? tensors[i].tensor : tensors[name];\n        if (t.dtype !== 'float32' && t.dtype !== 'int32' && t.dtype !== 'bool' &&\n            t.dtype !== 'string' && t.dtype !== 'complex64') {\n            throw new Error(`Unsupported dtype in weight '${name}': ${t.dtype}`);\n        }\n        const spec = { name, shape: t.shape, dtype: t.dtype };\n        if (t.dtype === 'string') {\n            const utf8bytes = new Promise(async (resolve) => {\n                const vals = await t.bytes();\n                const totalNumBytes = vals.reduce((p, c) => p + c.length, 0) +\n                    NUM_BYTES_STRING_LENGTH * vals.length;\n                const bytes = new Uint8Array(totalNumBytes);\n                let offset = 0;\n                for (let i = 0; i < vals.length; i++) {\n                    const val = vals[i];\n                    const bytesOfLength = new Uint8Array(new Uint32Array([val.length]).buffer);\n                    bytes.set(bytesOfLength, offset);\n                    offset += NUM_BYTES_STRING_LENGTH;\n                    bytes.set(val, offset);\n                    offset += val.length;\n                }\n                resolve(bytes);\n            });\n            dataPromises.push(utf8bytes);\n        }\n        else {\n            dataPromises.push(t.data());\n        }\n        if (group != null) {\n            spec.group = group;\n        }\n        specs.push(spec);\n    }\n    const tensorValues = await Promise.all(dataPromises);\n    return { data: concatenateTypedArrays(tensorValues), specs };\n}\n/**\n * Decode flat ArrayBuffer as weights.\n *\n * This function does not handle sharding.\n *\n * This function is the reverse of `encodeWeights`.\n *\n * @param buffer A flat ArrayBuffer carrying the binary values of the tensors\n *   concatenated in the order specified in `specs`.\n * @param specs Specifications of the names, dtypes and shapes of the tensors\n *   whose value are encoded by `buffer`.\n * @return A map from tensor name to tensor value, with the names corresponding\n *   to names in `specs`.\n * @throws Error, if any of the tensors has unsupported dtype.\n */\nexport function decodeWeights(buffer, specs) {\n    // TODO(adarob, cais): Support quantization.\n    const out = {};\n    let float16Decode;\n    let offset = 0;\n    for (const spec of specs) {\n        const name = spec.name;\n        const dtype = spec.dtype;\n        const shape = spec.shape;\n        const size = sizeFromShape(shape);\n        let values;\n        if ('quantization' in spec) {\n            const quantization = spec.quantization;\n            if (quantization.dtype === 'uint8' || quantization.dtype === 'uint16') {\n                if (!('min' in quantization && 'scale' in quantization)) {\n                    throw new Error(`Weight ${spec.name} with quantization ${quantization.dtype} ` +\n                        `doesn't have corresponding metadata min and scale.`);\n                }\n            }\n            else if (quantization.dtype === 'float16') {\n                if (dtype !== 'float32') {\n                    throw new Error(`Weight ${spec.name} is quantized with ${quantization.dtype} ` +\n                        `which only supports weights of type float32 not ${dtype}.`);\n                }\n            }\n            else {\n                throw new Error(`Weight ${spec.name} has unknown ` +\n                    `quantization dtype ${quantization.dtype}. ` +\n                    `Supported quantization dtypes are: ` +\n                    `'uint8', 'uint16', and 'float16'.`);\n            }\n            const quantizationSizeFactor = DTYPE_VALUE_SIZE_MAP[quantization.dtype];\n            const byteBuffer = buffer.slice(offset, offset + size * quantizationSizeFactor);\n            const quantizedArray = (quantization.dtype === 'uint8') ?\n                new Uint8Array(byteBuffer) :\n                new Uint16Array(byteBuffer);\n            if (dtype === 'float32') {\n                if (quantization.dtype === 'uint8' || quantization.dtype === 'uint16') {\n                    values = new Float32Array(quantizedArray.length);\n                    for (let i = 0; i < quantizedArray.length; i++) {\n                        const v = quantizedArray[i];\n                        values[i] = v * quantization.scale + quantization.min;\n                    }\n                }\n                else if (quantization.dtype === 'float16') {\n                    if (float16Decode === undefined) {\n                        float16Decode = getFloat16Decoder();\n                    }\n                    values = float16Decode(quantizedArray);\n                }\n                else {\n                    throw new Error(`Unsupported quantization type ${quantization.dtype} ` +\n                        `for weight type float32.`);\n                }\n            }\n            else if (dtype === 'int32') {\n                if (quantization.dtype !== 'uint8' && quantization.dtype !== 'uint16') {\n                    throw new Error(`Unsupported quantization type ${quantization.dtype} ` +\n                        `for weight type int32.`);\n                }\n                values = new Int32Array(quantizedArray.length);\n                for (let i = 0; i < quantizedArray.length; i++) {\n                    const v = quantizedArray[i];\n                    values[i] = Math.round(v * quantization.scale + quantization.min);\n                }\n            }\n            else {\n                throw new Error(`Unsupported dtype in weight '${name}': ${dtype}`);\n            }\n            offset += size * quantizationSizeFactor;\n        }\n        else if (dtype === 'string') {\n            const size = sizeFromShape(spec.shape);\n            values = [];\n            for (let i = 0; i < size; i++) {\n                const byteLength = new Uint32Array(buffer.slice(offset, offset + NUM_BYTES_STRING_LENGTH))[0];\n                offset += NUM_BYTES_STRING_LENGTH;\n                const bytes = new Uint8Array(buffer.slice(offset, offset + byteLength));\n                values.push(bytes);\n                offset += byteLength;\n            }\n        }\n        else {\n            const dtypeFactor = DTYPE_VALUE_SIZE_MAP[dtype];\n            const byteBuffer = buffer.slice(offset, offset + size * dtypeFactor);\n            if (dtype === 'float32') {\n                values = new Float32Array(byteBuffer);\n            }\n            else if (dtype === 'int32') {\n                values = new Int32Array(byteBuffer);\n            }\n            else if (dtype === 'bool') {\n                values = new Uint8Array(byteBuffer);\n            }\n            else if (dtype === 'complex64') {\n                values = new Float32Array(byteBuffer);\n                const real = new Float32Array(values.length / 2);\n                const image = new Float32Array(values.length / 2);\n                for (let i = 0; i < real.length; i++) {\n                    real[i] = values[i * 2];\n                    image[i] = values[i * 2 + 1];\n                }\n                const realTensor = tensor(real, shape, 'float32');\n                const imageTensor = tensor(image, shape, 'float32');\n                out[name] = complex(realTensor, imageTensor);\n                realTensor.dispose();\n                imageTensor.dispose();\n            }\n            else {\n                throw new Error(`Unsupported dtype in weight '${name}': ${dtype}`);\n            }\n            offset += size * dtypeFactor;\n        }\n        if (dtype !== 'complex64') {\n            out[name] = tensor(values, shape, dtype);\n        }\n    }\n    return out;\n}\n/**\n * Concatenate TypedArrays into an ArrayBuffer.\n */\nexport function concatenateTypedArrays(xs) {\n    // TODO(adarob, cais): Support quantization.\n    if (xs === null) {\n        throw new Error(`Invalid input value: ${JSON.stringify(xs)}`);\n    }\n    let totalByteLength = 0;\n    // `normalizedXs` is here for this reason: a `TypedArray`'s `buffer'\n    // can have a different byte length from that of the `TypedArray` itself,\n    // for example, when the `TypedArray` is created from an offset in an\n    // `ArrayBuffer`. `normliazedXs` holds `TypedArray`s whose `buffer`s match\n    // the `TypedArray` in byte length. If an element of `xs` does not show\n    // this property, a new `TypedArray` that satisfy this property will be\n    // constructed and pushed into `normalizedXs`.\n    const normalizedXs = [];\n    xs.forEach((x) => {\n        totalByteLength += x.byteLength;\n        // tslint:disable:no-any\n        normalizedXs.push(x.byteLength === x.buffer.byteLength ? x :\n            new x.constructor(x));\n        if (!(x instanceof Float32Array || x instanceof Int32Array ||\n            x instanceof Uint8Array)) {\n            throw new Error(`Unsupported TypedArray subtype: ${x.constructor.name}`);\n        }\n        // tslint:enable:no-any\n    });\n    const y = new Uint8Array(totalByteLength);\n    let offset = 0;\n    normalizedXs.forEach((x) => {\n        y.set(new Uint8Array(x.buffer), offset);\n        offset += x.byteLength;\n    });\n    return y.buffer;\n}\n// Use Buffer on Node.js instead of Blob/atob/btoa\nconst useNodeBuffer = typeof Buffer !== 'undefined' &&\n    (typeof Blob === 'undefined' || typeof atob === 'undefined' ||\n        typeof btoa === 'undefined');\n/**\n * Calculate the byte length of a JavaScript string.\n *\n * Note that a JavaScript string can contain wide characters, therefore the\n * length of the string is not necessarily equal to the byte length.\n *\n * @param str Input string.\n * @returns Byte length.\n */\nexport function stringByteLength(str) {\n    if (useNodeBuffer) {\n        return Buffer.byteLength(str);\n    }\n    return new Blob([str]).size;\n}\n/**\n * Encode an ArrayBuffer as a base64 encoded string.\n *\n * @param buffer `ArrayBuffer` to be converted.\n * @returns A string that base64-encodes `buffer`.\n */\nexport function arrayBufferToBase64String(buffer) {\n    if (useNodeBuffer) {\n        return Buffer.from(buffer).toString('base64');\n    }\n    const buf = new Uint8Array(buffer);\n    let s = '';\n    for (let i = 0, l = buf.length; i < l; i++) {\n        s += String.fromCharCode(buf[i]);\n    }\n    return btoa(s);\n}\n/**\n * Decode a base64 string as an ArrayBuffer.\n *\n * @param str Base64 string.\n * @returns Decoded `ArrayBuffer`.\n */\nexport function base64StringToArrayBuffer(str) {\n    if (useNodeBuffer) {\n        const buf = Buffer.from(str, 'base64');\n        return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n    }\n    const s = atob(str);\n    const buffer = new Uint8Array(s.length);\n    for (let i = 0; i < s.length; ++i) {\n        buffer.set([s.charCodeAt(i)], i);\n    }\n    return buffer.buffer;\n}\n/**\n * Concatenate a number of ArrayBuffers into one.\n *\n * @param buffers A number of array buffers to concatenate.\n * @returns Result of concatenating `buffers` in order.\n */\nexport function concatenateArrayBuffers(buffers) {\n    if (buffers.length === 1) {\n        return buffers[0];\n    }\n    let totalByteLength = 0;\n    buffers.forEach((buffer) => {\n        totalByteLength += buffer.byteLength;\n    });\n    const temp = new Uint8Array(totalByteLength);\n    let offset = 0;\n    buffers.forEach((buffer) => {\n        temp.set(new Uint8Array(buffer), offset);\n        offset += buffer.byteLength;\n    });\n    return temp.buffer;\n}\n/**\n * Get the basename of a path.\n *\n * Behaves in a way analogous to Linux's basename command.\n *\n * @param path\n */\nexport function basename(path) {\n    const SEPARATOR = '/';\n    path = path.trim();\n    while (path.endsWith(SEPARATOR)) {\n        path = path.slice(0, path.length - 1);\n    }\n    const items = path.split(SEPARATOR);\n    return items[items.length - 1];\n}\n/**\n * Create `ModelJSON` from `ModelArtifacts`.\n *\n * @param artifacts Model artifacts, describing the model and its weights.\n * @param manifest Weight manifest, describing where the weights of the\n *     `ModelArtifacts` are stored, and some metadata about them.\n * @returns Object representing the `model.json` file describing the model\n *     artifacts and weights\n */\nexport function getModelJSONForModelArtifacts(artifacts, manifest) {\n    const result = {\n        modelTopology: artifacts.modelTopology,\n        format: artifacts.format,\n        generatedBy: artifacts.generatedBy,\n        convertedBy: artifacts.convertedBy,\n        weightsManifest: manifest\n    };\n    if (artifacts.signature != null) {\n        result.signature = artifacts.signature;\n    }\n    if (artifacts.userDefinedMetadata != null) {\n        result.userDefinedMetadata = artifacts.userDefinedMetadata;\n    }\n    if (artifacts.modelInitializer != null) {\n        result.modelInitializer = artifacts.modelInitializer;\n    }\n    if (artifacts.trainingConfig != null) {\n        result.trainingConfig = artifacts.trainingConfig;\n    }\n    return result;\n}\n/**\n * Create `ModelArtifacts` from a JSON file.\n *\n * @param modelJSON Object containing the parsed JSON of `model.json`\n * @param loadWeights Function that takes the JSON file's weights manifest,\n *     reads weights from the listed path(s), and returns a Promise of the\n *     weight manifest entries along with the weights data.\n * @returns A Promise of the `ModelArtifacts`, as described by the JSON file.\n */\nexport async function getModelArtifactsForJSON(modelJSON, loadWeights) {\n    const modelArtifacts = {\n        modelTopology: modelJSON.modelTopology,\n        format: modelJSON.format,\n        generatedBy: modelJSON.generatedBy,\n        convertedBy: modelJSON.convertedBy\n    };\n    if (modelJSON.trainingConfig != null) {\n        modelArtifacts.trainingConfig = modelJSON.trainingConfig;\n    }\n    if (modelJSON.weightsManifest != null) {\n        const [weightSpecs, weightData] = await loadWeights(modelJSON.weightsManifest);\n        modelArtifacts.weightSpecs = weightSpecs;\n        modelArtifacts.weightData = weightData;\n    }\n    if (modelJSON.signature != null) {\n        modelArtifacts.signature = modelJSON.signature;\n    }\n    if (modelJSON.userDefinedMetadata != null) {\n        modelArtifacts.userDefinedMetadata = modelJSON.userDefinedMetadata;\n    }\n    if (modelJSON.modelInitializer != null) {\n        modelArtifacts.modelInitializer = modelJSON.modelInitializer;\n    }\n    return modelArtifacts;\n}\n/**\n * Populate ModelArtifactsInfo fields for a model with JSON topology.\n * @param modelArtifacts\n * @returns A ModelArtifactsInfo object.\n */\nexport function getModelArtifactsInfoForJSON(modelArtifacts) {\n    if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n        throw new Error('Expected JSON model topology, received ArrayBuffer.');\n    }\n    return {\n        dateSaved: new Date(),\n        modelTopologyType: 'JSON',\n        modelTopologyBytes: modelArtifacts.modelTopology == null ?\n            0 :\n            stringByteLength(JSON.stringify(modelArtifacts.modelTopology)),\n        weightSpecsBytes: modelArtifacts.weightSpecs == null ?\n            0 :\n            stringByteLength(JSON.stringify(modelArtifacts.weightSpecs)),\n        weightDataBytes: modelArtifacts.weightData == null ?\n            0 :\n            modelArtifacts.weightData.byteLength,\n    };\n}\n/**\n * Computes mantisa table for casting Float16 to Float32\n * See http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n *\n * @returns Uint32Array, 2048 mantissa lookup values.\n */\nfunction computeFloat16MantisaTable() {\n    const convertMantissa = (i) => {\n        let m = i << 13;\n        let e = 0;\n        while ((m & 0x00800000) === 0) {\n            e -= 0x00800000;\n            m <<= 1;\n        }\n        m &= ~0x00800000;\n        e += 0x38800000;\n        return m | e;\n    };\n    const mantisaTable = new Uint32Array(2048);\n    mantisaTable[0] = 0;\n    for (let i = 1; i < 1024; i++) {\n        mantisaTable[i] = convertMantissa(i);\n    }\n    for (let i = 1024; i < 2048; i++) {\n        mantisaTable[i] = 0x38000000 + ((i - 1024) << 13);\n    }\n    return mantisaTable;\n}\n/**\n * Computes exponent table for casting Float16 to Float32\n * See http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n *\n * @returns Uint32Array, 64 exponent lookup values.\n */\nfunction computeFloat16ExponentTable() {\n    const exponentTable = new Uint32Array(64);\n    exponentTable[0] = 0;\n    exponentTable[31] = 0x47800000;\n    exponentTable[32] = 0x80000000;\n    exponentTable[63] = 0xc7800000;\n    for (let i = 1; i < 31; i++) {\n        exponentTable[i] = i << 23;\n    }\n    for (let i = 33; i < 63; i++) {\n        exponentTable[i] = 0x80000000 + ((i - 32) << 23);\n    }\n    return exponentTable;\n}\n/**\n * Computes offset table for casting Float16 to Float32\n * See http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n *\n * @returns Uint32Array, 6d offset values.\n */\nfunction computeFloat16OffsetTable() {\n    const offsetTable = new Uint32Array(64);\n    for (let i = 0; i < 64; i++) {\n        offsetTable[i] = 1024;\n    }\n    offsetTable[0] = offsetTable[32] = 0;\n    return offsetTable;\n}\n/**\n * Retrieve a Float16 decoder which will decode a ByteArray of Float16 values\n * to a Float32Array.\n *\n * @returns Function (buffer: Uint16Array) => Float32Array which decodes\n *          the Uint16Array of Float16 bytes to a Float32Array.\n */\nexport function getFloat16Decoder() {\n    // Algorithm is based off of\n    // http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n    // Cache lookup tables\n    const mantisaTable = computeFloat16MantisaTable();\n    const exponentTable = computeFloat16ExponentTable();\n    const offsetTable = computeFloat16OffsetTable();\n    return (quantizedArray) => {\n        const buffer = new ArrayBuffer(4 * quantizedArray.length);\n        const bufferUint32View = new Uint32Array(buffer);\n        for (let index = 0; index < quantizedArray.length; index++) {\n            const float16Bits = quantizedArray[index];\n            const float32Bits = mantisaTable[offsetTable[float16Bits >> 10] + (float16Bits & 0x3ff)] +\n                exponentTable[float16Bits >> 10];\n            bufferUint32View[index] = float32Bits;\n        }\n        return new Float32Array(buffer);\n    };\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class IORouterRegistry {\n    constructor() {\n        this.saveRouters = [];\n        this.loadRouters = [];\n    }\n    static getInstance() {\n        if (IORouterRegistry.instance == null) {\n            IORouterRegistry.instance = new IORouterRegistry();\n        }\n        return IORouterRegistry.instance;\n    }\n    /**\n     * Register a save-handler router.\n     *\n     * @param saveRouter A function that maps a URL-like string onto an instance\n     * of `IOHandler` with the `save` method defined or `null`.\n     */\n    static registerSaveRouter(saveRouter) {\n        IORouterRegistry.getInstance().saveRouters.push(saveRouter);\n    }\n    /**\n     * Register a load-handler router.\n     *\n     * @param loadRouter A function that maps a URL-like string onto an instance\n     * of `IOHandler` with the `load` method defined or `null`.\n     */\n    static registerLoadRouter(loadRouter) {\n        IORouterRegistry.getInstance().loadRouters.push(loadRouter);\n    }\n    /**\n     * Look up IOHandler for saving, given a URL-like string.\n     *\n     * @param url\n     * @returns If only one match is found, an instance of IOHandler with the\n     * `save` method defined. If no match is found, `null`.\n     * @throws Error, if more than one match is found.\n     */\n    static getSaveHandlers(url) {\n        return IORouterRegistry.getHandlers(url, 'save');\n    }\n    /**\n     * Look up IOHandler for loading, given a URL-like string.\n     *\n     * @param url\n     * @param loadOptions Optional, custom load options.\n     * @returns All valid handlers for `url`, given the currently registered\n     *   handler routers.\n     */\n    static getLoadHandlers(url, loadOptions) {\n        return IORouterRegistry.getHandlers(url, 'load', loadOptions);\n    }\n    static getHandlers(url, handlerType, loadOptions) {\n        const validHandlers = [];\n        const routers = handlerType === 'load' ?\n            IORouterRegistry.getInstance().loadRouters :\n            IORouterRegistry.getInstance().saveRouters;\n        routers.forEach(router => {\n            const handler = router(url, loadOptions);\n            if (handler !== null) {\n                validHandlers.push(handler);\n            }\n        });\n        return validHandlers;\n    }\n}\nexport const registerSaveRouter = (loudRouter) => IORouterRegistry.registerSaveRouter(loudRouter);\nexport const registerLoadRouter = (loudRouter) => IORouterRegistry.registerLoadRouter(loudRouter);\nexport const getSaveHandlers = (url) => IORouterRegistry.getSaveHandlers(url);\nexport const getLoadHandlers = (url, loadOptions) => IORouterRegistry.getLoadHandlers(url, loadOptions);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyX3JlZ2lzdHJ5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy9pby9yb3V0ZXJfcmVnaXN0cnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBT0gsTUFBTSxPQUFPLGdCQUFnQjtJQU8zQjtRQUNFLElBQUksQ0FBQyxXQUFXLEdBQUcsRUFBRSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxXQUFXLEdBQUcsRUFBRSxDQUFDO0lBQ3hCLENBQUM7SUFFTyxNQUFNLENBQUMsV0FBVztRQUN4QixJQUFJLGdCQUFnQixDQUFDLFFBQVEsSUFBSSxJQUFJLEVBQUU7WUFDckMsZ0JBQWdCLENBQUMsUUFBUSxHQUFHLElBQUksZ0JBQWdCLEVBQUUsQ0FBQztTQUNwRDtRQUNELE9BQU8sZ0JBQWdCLENBQUMsUUFBUSxDQUFDO0lBQ25DLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNILE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxVQUFvQjtRQUM1QyxnQkFBZ0IsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQzlELENBQUM7SUFFRDs7Ozs7T0FLRztJQUNILE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxVQUFvQjtRQUM1QyxnQkFBZ0IsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQzlELENBQUM7SUFFRDs7Ozs7OztPQU9HO0lBQ0gsTUFBTSxDQUFDLGVBQWUsQ0FBQyxHQUFvQjtRQUN6QyxPQUFPLGdCQUFnQixDQUFDLFdBQVcsQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDbkQsQ0FBQztJQUVEOzs7Ozs7O09BT0c7SUFDSCxNQUFNLENBQUMsZUFBZSxDQUFDLEdBQW9CLEVBQUUsV0FBeUI7UUFFcEUsT0FBTyxnQkFBZ0IsQ0FBQyxXQUFXLENBQUMsR0FBRyxFQUFFLE1BQU0sRUFBRSxXQUFXLENBQUMsQ0FBQztJQUNoRSxDQUFDO0lBRU8sTUFBTSxDQUFDLFdBQVcsQ0FDdEIsR0FBb0IsRUFBRSxXQUEwQixFQUNoRCxXQUF5QjtRQUMzQixNQUFNLGFBQWEsR0FBZ0IsRUFBRSxDQUFDO1FBQ3RDLE1BQU0sT0FBTyxHQUFHLFdBQVcsS0FBSyxNQUFNLENBQUMsQ0FBQztZQUNwQyxnQkFBZ0IsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUM1QyxnQkFBZ0IsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxXQUFXLENBQUM7UUFDL0MsT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUN2QixNQUFNLE9BQU8sR0FBRyxNQUFNLENBQUMsR0FBRyxFQUFFLFdBQVcsQ0FBQyxDQUFDO1lBQ3pDLElBQUksT0FBTyxLQUFLLElBQUksRUFBRTtnQkFDcEIsYUFBYSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQzthQUM3QjtRQUNILENBQUMsQ0FBQyxDQUFDO1FBQ0gsT0FBTyxhQUFhLENBQUM7SUFDdkIsQ0FBQztDQUNGO0FBRUQsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQUcsQ0FBQyxVQUFvQixFQUFFLEVBQUUsQ0FDdkQsZ0JBQWdCLENBQUMsa0JBQWtCLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDcEQsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQUcsQ0FBQyxVQUFvQixFQUFFLEVBQUUsQ0FDdkQsZ0JBQWdCLENBQUMsa0JBQWtCLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDcEQsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFHLENBQUMsR0FBb0IsRUFBRSxFQUFFLENBQ3BELGdCQUFnQixDQUFDLGVBQWUsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUMxQyxNQUFNLENBQUMsTUFBTSxlQUFlLEdBQ3hCLENBQUMsR0FBb0IsRUFBRSxXQUF5QixFQUFFLEVBQUUsQ0FDaEQsZ0JBQWdCLENBQUMsZUFBZSxDQUFDLEdBQUcsRUFBRSxXQUFXLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE4IEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtJT0hhbmRsZXIsIExvYWRPcHRpb25zfSBmcm9tICcuL3R5cGVzJztcblxuZXhwb3J0IHR5cGUgSU9Sb3V0ZXIgPSAodXJsOiBzdHJpbmd8c3RyaW5nW10sIGxvYWRPcHRpb25zPzogTG9hZE9wdGlvbnMpID0+XG4gICAgSU9IYW5kbGVyO1xuXG5leHBvcnQgY2xhc3MgSU9Sb3V0ZXJSZWdpc3RyeSB7XG4gIC8vIFNpbmdsZXRvbiBpbnN0YW5jZS5cbiAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IElPUm91dGVyUmVnaXN0cnk7XG5cbiAgcHJpdmF0ZSBzYXZlUm91dGVyczogSU9Sb3V0ZXJbXTtcbiAgcHJpdmF0ZSBsb2FkUm91dGVyczogSU9Sb3V0ZXJbXTtcblxuICBwcml2YXRlIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuc2F2ZVJvdXRlcnMgPSBbXTtcbiAgICB0aGlzLmxvYWRSb3V0ZXJzID0gW107XG4gIH1cblxuICBwcml2YXRlIHN0YXRpYyBnZXRJbnN0YW5jZSgpOiBJT1JvdXRlclJlZ2lzdHJ5IHtcbiAgICBpZiAoSU9Sb3V0ZXJSZWdpc3RyeS5pbnN0YW5jZSA9PSBudWxsKSB7XG4gICAgICBJT1JvdXRlclJlZ2lzdHJ5Lmluc3RhbmNlID0gbmV3IElPUm91dGVyUmVnaXN0cnkoKTtcbiAgICB9XG4gICAgcmV0dXJuIElPUm91dGVyUmVnaXN0cnkuaW5zdGFuY2U7XG4gIH1cblxuICAvKipcbiAgICogUmVnaXN0ZXIgYSBzYXZlLWhhbmRsZXIgcm91dGVyLlxuICAgKlxuICAgKiBAcGFyYW0gc2F2ZVJvdXRlciBBIGZ1bmN0aW9uIHRoYXQgbWFwcyBhIFVSTC1saWtlIHN0cmluZyBvbnRvIGFuIGluc3RhbmNlXG4gICAqIG9mIGBJT0hhbmRsZXJgIHdpdGggdGhlIGBzYXZlYCBtZXRob2QgZGVmaW5lZCBvciBgbnVsbGAuXG4gICAqL1xuICBzdGF0aWMgcmVnaXN0ZXJTYXZlUm91dGVyKHNhdmVSb3V0ZXI6IElPUm91dGVyKSB7XG4gICAgSU9Sb3V0ZXJSZWdpc3RyeS5nZXRJbnN0YW5jZSgpLnNhdmVSb3V0ZXJzLnB1c2goc2F2ZVJvdXRlcik7XG4gIH1cblxuICAvKipcbiAgICogUmVnaXN0ZXIgYSBsb2FkLWhhbmRsZXIgcm91dGVyLlxuICAgKlxuICAgKiBAcGFyYW0gbG9hZFJvdXRlciBBIGZ1bmN0aW9uIHRoYXQgbWFwcyBhIFVSTC1saWtlIHN0cmluZyBvbnRvIGFuIGluc3RhbmNlXG4gICAqIG9mIGBJT0hhbmRsZXJgIHdpdGggdGhlIGBsb2FkYCBtZXRob2QgZGVmaW5lZCBvciBgbnVsbGAuXG4gICAqL1xuICBzdGF0aWMgcmVnaXN0ZXJMb2FkUm91dGVyKGxvYWRSb3V0ZXI6IElPUm91dGVyKSB7XG4gICAgSU9Sb3V0ZXJSZWdpc3RyeS5nZXRJbnN0YW5jZSgpLmxvYWRSb3V0ZXJzLnB1c2gobG9hZFJvdXRlcik7XG4gIH1cblxuICAvKipcbiAgICogTG9vayB1cCBJT0hhbmRsZXIgZm9yIHNhdmluZywgZ2l2ZW4gYSBVUkwtbGlrZSBzdHJpbmcuXG4gICAqXG4gICAqIEBwYXJhbSB1cmxcbiAgICogQHJldHVybnMgSWYgb25seSBvbmUgbWF0Y2ggaXMgZm91bmQsIGFuIGluc3RhbmNlIG9mIElPSGFuZGxlciB3aXRoIHRoZVxuICAgKiBgc2F2ZWAgbWV0aG9kIGRlZmluZWQuIElmIG5vIG1hdGNoIGlzIGZvdW5kLCBgbnVsbGAuXG4gICAqIEB0aHJvd3MgRXJyb3IsIGlmIG1vcmUgdGhhbiBvbmUgbWF0Y2ggaXMgZm91bmQuXG4gICAqL1xuICBzdGF0aWMgZ2V0U2F2ZUhhbmRsZXJzKHVybDogc3RyaW5nfHN0cmluZ1tdKTogSU9IYW5kbGVyW10ge1xuICAgIHJldHVybiBJT1JvdXRlclJlZ2lzdHJ5LmdldEhhbmRsZXJzKHVybCwgJ3NhdmUnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBMb29rIHVwIElPSGFuZGxlciBmb3IgbG9hZGluZywgZ2l2ZW4gYSBVUkwtbGlrZSBzdHJpbmcuXG4gICAqXG4gICAqIEBwYXJhbSB1cmxcbiAgICogQHBhcmFtIGxvYWRPcHRpb25zIE9wdGlvbmFsLCBjdXN0b20gbG9hZCBvcHRpb25zLlxuICAgKiBAcmV0dXJucyBBbGwgdmFsaWQgaGFuZGxlcnMgZm9yIGB1cmxgLCBnaXZlbiB0aGUgY3VycmVudGx5IHJlZ2lzdGVyZWRcbiAgICogICBoYW5kbGVyIHJvdXRlcnMuXG4gICAqL1xuICBzdGF0aWMgZ2V0TG9hZEhhbmRsZXJzKHVybDogc3RyaW5nfHN0cmluZ1tdLCBsb2FkT3B0aW9ucz86IExvYWRPcHRpb25zKTpcbiAgICAgIElPSGFuZGxlcltdIHtcbiAgICByZXR1cm4gSU9Sb3V0ZXJSZWdpc3RyeS5nZXRIYW5kbGVycyh1cmwsICdsb2FkJywgbG9hZE9wdGlvbnMpO1xuICB9XG5cbiAgcHJpdmF0ZSBzdGF0aWMgZ2V0SGFuZGxlcnMoXG4gICAgICB1cmw6IHN0cmluZ3xzdHJpbmdbXSwgaGFuZGxlclR5cGU6ICdzYXZlJ3wnbG9hZCcsXG4gICAgICBsb2FkT3B0aW9ucz86IExvYWRPcHRpb25zKTogSU9IYW5kbGVyW10ge1xuICAgIGNvbnN0IHZhbGlkSGFuZGxlcnM6IElPSGFuZGxlcltdID0gW107XG4gICAgY29uc3Qgcm91dGVycyA9IGhhbmRsZXJUeXBlID09PSAnbG9hZCcgP1xuICAgICAgICBJT1JvdXRlclJlZ2lzdHJ5LmdldEluc3RhbmNlKCkubG9hZFJvdXRlcnMgOlxuICAgICAgICBJT1JvdXRlclJlZ2lzdHJ5LmdldEluc3RhbmNlKCkuc2F2ZVJvdXRlcnM7XG4gICAgcm91dGVycy5mb3JFYWNoKHJvdXRlciA9PiB7XG4gICAgICBjb25zdCBoYW5kbGVyID0gcm91dGVyKHVybCwgbG9hZE9wdGlvbnMpO1xuICAgICAgaWYgKGhhbmRsZXIgIT09IG51bGwpIHtcbiAgICAgICAgdmFsaWRIYW5kbGVycy5wdXNoKGhhbmRsZXIpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiB2YWxpZEhhbmRsZXJzO1xuICB9XG59XG5cbmV4cG9ydCBjb25zdCByZWdpc3RlclNhdmVSb3V0ZXIgPSAobG91ZFJvdXRlcjogSU9Sb3V0ZXIpID0+XG4gICAgSU9Sb3V0ZXJSZWdpc3RyeS5yZWdpc3RlclNhdmVSb3V0ZXIobG91ZFJvdXRlcik7XG5leHBvcnQgY29uc3QgcmVnaXN0ZXJMb2FkUm91dGVyID0gKGxvdWRSb3V0ZXI6IElPUm91dGVyKSA9PlxuICAgIElPUm91dGVyUmVnaXN0cnkucmVnaXN0ZXJMb2FkUm91dGVyKGxvdWRSb3V0ZXIpO1xuZXhwb3J0IGNvbnN0IGdldFNhdmVIYW5kbGVycyA9ICh1cmw6IHN0cmluZ3xzdHJpbmdbXSkgPT5cbiAgICBJT1JvdXRlclJlZ2lzdHJ5LmdldFNhdmVIYW5kbGVycyh1cmwpO1xuZXhwb3J0IGNvbnN0IGdldExvYWRIYW5kbGVycyA9XG4gICAgKHVybDogc3RyaW5nfHN0cmluZ1tdLCBsb2FkT3B0aW9ucz86IExvYWRPcHRpb25zKSA9PlxuICAgICAgICBJT1JvdXRlclJlZ2lzdHJ5LmdldExvYWRIYW5kbGVycyh1cmwsIGxvYWRPcHRpb25zKTtcbiJdfQ==","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport '../flags';\nimport { env } from '../environment';\nimport { getModelArtifactsInfoForJSON } from './io_utils';\nimport { IORouterRegistry } from './router_registry';\nconst DATABASE_NAME = 'tensorflowjs';\nconst DATABASE_VERSION = 1;\n// Model data and ModelArtifactsInfo (metadata) are stored in two separate\n// stores for efficient access of the list of stored models and their metadata.\n// 1. The object store for model data: topology, weights and weight manifests.\nconst MODEL_STORE_NAME = 'models_store';\n// 2. The object store for ModelArtifactsInfo, including meta-information such\n//    as the type of topology (JSON vs binary), byte size of the topology, byte\n//    size of the weights, etc.\nconst INFO_STORE_NAME = 'model_info_store';\n/**\n * Delete the entire database for tensorflow.js, including the models store.\n */\nexport async function deleteDatabase() {\n    const idbFactory = getIndexedDBFactory();\n    return new Promise((resolve, reject) => {\n        const deleteRequest = idbFactory.deleteDatabase(DATABASE_NAME);\n        deleteRequest.onsuccess = () => resolve();\n        deleteRequest.onerror = error => reject(error);\n    });\n}\nfunction getIndexedDBFactory() {\n    if (!env().getBool('IS_BROWSER')) {\n        // TODO(cais): Add more info about what IOHandler subtypes are available.\n        //   Maybe point to a doc page on the web and/or automatically determine\n        //   the available IOHandlers and print them in the error message.\n        throw new Error('Failed to obtain IndexedDB factory because the current environment' +\n            'is not a web browser.');\n    }\n    // tslint:disable-next-line:no-any\n    const theWindow = typeof window === 'undefined' ? self : window;\n    const factory = theWindow.indexedDB || theWindow.mozIndexedDB ||\n        theWindow.webkitIndexedDB || theWindow.msIndexedDB ||\n        theWindow.shimIndexedDB;\n    if (factory == null) {\n        throw new Error('The current browser does not appear to support IndexedDB.');\n    }\n    return factory;\n}\nfunction setUpDatabase(openRequest) {\n    const db = openRequest.result;\n    db.createObjectStore(MODEL_STORE_NAME, { keyPath: 'modelPath' });\n    db.createObjectStore(INFO_STORE_NAME, { keyPath: 'modelPath' });\n}\n/**\n * IOHandler subclass: Browser IndexedDB.\n *\n * See the doc string of `browserIndexedDB` for more details.\n */\nexport class BrowserIndexedDB {\n    constructor(modelPath) {\n        this.indexedDB = getIndexedDBFactory();\n        if (modelPath == null || !modelPath) {\n            throw new Error('For IndexedDB, modelPath must not be null, undefined or empty.');\n        }\n        this.modelPath = modelPath;\n    }\n    async save(modelArtifacts) {\n        // TODO(cais): Support saving GraphDef models.\n        if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n            throw new Error('BrowserLocalStorage.save() does not support saving model topology ' +\n                'in binary formats yet.');\n        }\n        return this.databaseAction(this.modelPath, modelArtifacts);\n    }\n    async load() {\n        return this.databaseAction(this.modelPath);\n    }\n    /**\n     * Perform database action to put model artifacts into or read model artifacts\n     * from IndexedDB object store.\n     *\n     * Whether the action is put or get depends on whether `modelArtifacts` is\n     * specified. If it is specified, the action will be put; otherwise the action\n     * will be get.\n     *\n     * @param modelPath A unique string path for the model.\n     * @param modelArtifacts If specified, it will be the model artifacts to be\n     *   stored in IndexedDB.\n     * @returns A `Promise` of `SaveResult`, if the action is put, or a `Promise`\n     *   of `ModelArtifacts`, if the action is get.\n     */\n    databaseAction(modelPath, modelArtifacts) {\n        return new Promise((resolve, reject) => {\n            const openRequest = this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\n            openRequest.onupgradeneeded = () => setUpDatabase(openRequest);\n            openRequest.onsuccess = () => {\n                const db = openRequest.result;\n                if (modelArtifacts == null) {\n                    // Read model out from object store.\n                    const modelTx = db.transaction(MODEL_STORE_NAME, 'readonly');\n                    const modelStore = modelTx.objectStore(MODEL_STORE_NAME);\n                    const getRequest = modelStore.get(this.modelPath);\n                    getRequest.onsuccess = () => {\n                        if (getRequest.result == null) {\n                            db.close();\n                            return reject(new Error(`Cannot find model with path '${this.modelPath}' ` +\n                                `in IndexedDB.`));\n                        }\n                        else {\n                            resolve(getRequest.result.modelArtifacts);\n                        }\n                    };\n                    getRequest.onerror = error => {\n                        db.close();\n                        return reject(getRequest.error);\n                    };\n                    modelTx.oncomplete = () => db.close();\n                }\n                else {\n                    // Put model into object store.\n                    const modelArtifactsInfo = getModelArtifactsInfoForJSON(modelArtifacts);\n                    // First, put ModelArtifactsInfo into info store.\n                    const infoTx = db.transaction(INFO_STORE_NAME, 'readwrite');\n                    let infoStore = infoTx.objectStore(INFO_STORE_NAME);\n                    const putInfoRequest = infoStore.put({ modelPath: this.modelPath, modelArtifactsInfo });\n                    let modelTx;\n                    putInfoRequest.onsuccess = () => {\n                        // Second, put model data into model store.\n                        modelTx = db.transaction(MODEL_STORE_NAME, 'readwrite');\n                        const modelStore = modelTx.objectStore(MODEL_STORE_NAME);\n                        const putModelRequest = modelStore.put({\n                            modelPath: this.modelPath,\n                            modelArtifacts,\n                            modelArtifactsInfo\n                        });\n                        putModelRequest.onsuccess = () => resolve({ modelArtifactsInfo });\n                        putModelRequest.onerror = error => {\n                            // If the put-model request fails, roll back the info entry as\n                            // well.\n                            infoStore = infoTx.objectStore(INFO_STORE_NAME);\n                            const deleteInfoRequest = infoStore.delete(this.modelPath);\n                            deleteInfoRequest.onsuccess = () => {\n                                db.close();\n                                return reject(putModelRequest.error);\n                            };\n                            deleteInfoRequest.onerror = error => {\n                                db.close();\n                                return reject(putModelRequest.error);\n                            };\n                        };\n                    };\n                    putInfoRequest.onerror = error => {\n                        db.close();\n                        return reject(putInfoRequest.error);\n                    };\n                    infoTx.oncomplete = () => {\n                        if (modelTx == null) {\n                            db.close();\n                        }\n                        else {\n                            modelTx.oncomplete = () => db.close();\n                        }\n                    };\n                }\n            };\n            openRequest.onerror = error => reject(openRequest.error);\n        });\n    }\n}\nBrowserIndexedDB.URL_SCHEME = 'indexeddb://';\nexport const indexedDBRouter = (url) => {\n    if (!env().getBool('IS_BROWSER')) {\n        return null;\n    }\n    else {\n        if (!Array.isArray(url) && url.startsWith(BrowserIndexedDB.URL_SCHEME)) {\n            return browserIndexedDB(url.slice(BrowserIndexedDB.URL_SCHEME.length));\n        }\n        else {\n            return null;\n        }\n    }\n};\nIORouterRegistry.registerSaveRouter(indexedDBRouter);\nIORouterRegistry.registerLoadRouter(indexedDBRouter);\n/**\n * Creates a browser IndexedDB IOHandler for saving and loading models.\n *\n * ```js\n * const model = tf.sequential();\n * model.add(\n *     tf.layers.dense({units: 1, inputShape: [100], activation: 'sigmoid'}));\n *\n * const saveResult = await model.save('indexeddb://MyModel'));\n * console.log(saveResult);\n * ```\n *\n * @param modelPath A unique identifier for the model to be saved. Must be a\n *   non-empty string.\n * @returns An instance of `BrowserIndexedDB` (sublcass of `IOHandler`),\n *   which can be used with, e.g., `tf.Model.save`.\n */\nexport function browserIndexedDB(modelPath) {\n    return new BrowserIndexedDB(modelPath);\n}\nfunction maybeStripScheme(key) {\n    return key.startsWith(BrowserIndexedDB.URL_SCHEME) ?\n        key.slice(BrowserIndexedDB.URL_SCHEME.length) :\n        key;\n}\nexport class BrowserIndexedDBManager {\n    constructor() {\n        this.indexedDB = getIndexedDBFactory();\n    }\n    async listModels() {\n        return new Promise((resolve, reject) => {\n            const openRequest = this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\n            openRequest.onupgradeneeded = () => setUpDatabase(openRequest);\n            openRequest.onsuccess = () => {\n                const db = openRequest.result;\n                const tx = db.transaction(INFO_STORE_NAME, 'readonly');\n                const store = tx.objectStore(INFO_STORE_NAME);\n                // tslint:disable:max-line-length\n                // Need to cast `store` as `any` here because TypeScript's DOM\n                // library does not have the `getAll()` method even though the\n                // method is supported in the latest version of most mainstream\n                // browsers:\n                // https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/getAll\n                // tslint:enable:max-line-length\n                // tslint:disable-next-line:no-any\n                const getAllInfoRequest = store.getAll();\n                getAllInfoRequest.onsuccess = () => {\n                    const out = {};\n                    for (const item of getAllInfoRequest.result) {\n                        out[item.modelPath] = item.modelArtifactsInfo;\n                    }\n                    resolve(out);\n                };\n                getAllInfoRequest.onerror = error => {\n                    db.close();\n                    return reject(getAllInfoRequest.error);\n                };\n                tx.oncomplete = () => db.close();\n            };\n            openRequest.onerror = error => reject(openRequest.error);\n        });\n    }\n    async removeModel(path) {\n        path = maybeStripScheme(path);\n        return new Promise((resolve, reject) => {\n            const openRequest = this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\n            openRequest.onupgradeneeded = () => setUpDatabase(openRequest);\n            openRequest.onsuccess = () => {\n                const db = openRequest.result;\n                const infoTx = db.transaction(INFO_STORE_NAME, 'readwrite');\n                const infoStore = infoTx.objectStore(INFO_STORE_NAME);\n                const getInfoRequest = infoStore.get(path);\n                let modelTx;\n                getInfoRequest.onsuccess = () => {\n                    if (getInfoRequest.result == null) {\n                        db.close();\n                        return reject(new Error(`Cannot find model with path '${path}' ` +\n                            `in IndexedDB.`));\n                    }\n                    else {\n                        // First, delete the entry in the info store.\n                        const deleteInfoRequest = infoStore.delete(path);\n                        const deleteModelData = () => {\n                            // Second, delete the entry in the model store.\n                            modelTx = db.transaction(MODEL_STORE_NAME, 'readwrite');\n                            const modelStore = modelTx.objectStore(MODEL_STORE_NAME);\n                            const deleteModelRequest = modelStore.delete(path);\n                            deleteModelRequest.onsuccess = () => resolve(getInfoRequest.result.modelArtifactsInfo);\n                            deleteModelRequest.onerror = error => reject(getInfoRequest.error);\n                        };\n                        // Proceed with deleting model data regardless of whether deletion\n                        // of info data succeeds or not.\n                        deleteInfoRequest.onsuccess = deleteModelData;\n                        deleteInfoRequest.onerror = error => {\n                            deleteModelData();\n                            db.close();\n                            return reject(getInfoRequest.error);\n                        };\n                    }\n                };\n                getInfoRequest.onerror = error => {\n                    db.close();\n                    return reject(getInfoRequest.error);\n                };\n                infoTx.oncomplete = () => {\n                    if (modelTx == null) {\n                        db.close();\n                    }\n                    else {\n                        modelTx.oncomplete = () => db.close();\n                    }\n                };\n            };\n            openRequest.onerror = error => reject(openRequest.error);\n        });\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport '../flags';\nimport { env } from '../environment';\nimport { assert } from '../util';\nimport { arrayBufferToBase64String, base64StringToArrayBuffer, getModelArtifactsInfoForJSON } from './io_utils';\nimport { IORouterRegistry } from './router_registry';\nconst PATH_SEPARATOR = '/';\nconst PATH_PREFIX = 'tensorflowjs_models';\nconst INFO_SUFFIX = 'info';\nconst MODEL_TOPOLOGY_SUFFIX = 'model_topology';\nconst WEIGHT_SPECS_SUFFIX = 'weight_specs';\nconst WEIGHT_DATA_SUFFIX = 'weight_data';\nconst MODEL_METADATA_SUFFIX = 'model_metadata';\n/**\n * Purge all tensorflow.js-saved model artifacts from local storage.\n *\n * @returns Paths of the models purged.\n */\nexport function purgeLocalStorageArtifacts() {\n    if (!env().getBool('IS_BROWSER') || typeof window === 'undefined' ||\n        typeof window.localStorage === 'undefined') {\n        throw new Error('purgeLocalStorageModels() cannot proceed because local storage is ' +\n            'unavailable in the current environment.');\n    }\n    const LS = window.localStorage;\n    const purgedModelPaths = [];\n    for (let i = 0; i < LS.length; ++i) {\n        const key = LS.key(i);\n        const prefix = PATH_PREFIX + PATH_SEPARATOR;\n        if (key.startsWith(prefix) && key.length > prefix.length) {\n            LS.removeItem(key);\n            const modelName = getModelPathFromKey(key);\n            if (purgedModelPaths.indexOf(modelName) === -1) {\n                purgedModelPaths.push(modelName);\n            }\n        }\n    }\n    return purgedModelPaths;\n}\nfunction getModelKeys(path) {\n    return {\n        info: [PATH_PREFIX, path, INFO_SUFFIX].join(PATH_SEPARATOR),\n        topology: [PATH_PREFIX, path, MODEL_TOPOLOGY_SUFFIX].join(PATH_SEPARATOR),\n        weightSpecs: [PATH_PREFIX, path, WEIGHT_SPECS_SUFFIX].join(PATH_SEPARATOR),\n        weightData: [PATH_PREFIX, path, WEIGHT_DATA_SUFFIX].join(PATH_SEPARATOR),\n        modelMetadata: [PATH_PREFIX, path, MODEL_METADATA_SUFFIX].join(PATH_SEPARATOR)\n    };\n}\nfunction removeItems(keys) {\n    for (const key of Object.values(keys)) {\n        window.localStorage.removeItem(key);\n    }\n}\n/**\n * Get model path from a local-storage key.\n *\n * E.g., 'tensorflowjs_models/my/model/1/info' --> 'my/model/1'\n *\n * @param key\n */\nfunction getModelPathFromKey(key) {\n    const items = key.split(PATH_SEPARATOR);\n    if (items.length < 3) {\n        throw new Error(`Invalid key format: ${key}`);\n    }\n    return items.slice(1, items.length - 1).join(PATH_SEPARATOR);\n}\nfunction maybeStripScheme(key) {\n    return key.startsWith(BrowserLocalStorage.URL_SCHEME) ?\n        key.slice(BrowserLocalStorage.URL_SCHEME.length) :\n        key;\n}\n/**\n * IOHandler subclass: Browser Local Storage.\n *\n * See the doc string to `browserLocalStorage` for more details.\n */\nexport class BrowserLocalStorage {\n    constructor(modelPath) {\n        if (!env().getBool('IS_BROWSER') || typeof window === 'undefined' ||\n            typeof window.localStorage === 'undefined') {\n            // TODO(cais): Add more info about what IOHandler subtypes are\n            // available.\n            //   Maybe point to a doc page on the web and/or automatically determine\n            //   the available IOHandlers and print them in the error message.\n            throw new Error('The current environment does not support local storage.');\n        }\n        this.LS = window.localStorage;\n        if (modelPath == null || !modelPath) {\n            throw new Error('For local storage, modelPath must not be null, undefined or empty.');\n        }\n        this.modelPath = modelPath;\n        this.keys = getModelKeys(this.modelPath);\n    }\n    /**\n     * Save model artifacts to browser local storage.\n     *\n     * See the documentation to `browserLocalStorage` for details on the saved\n     * artifacts.\n     *\n     * @param modelArtifacts The model artifacts to be stored.\n     * @returns An instance of SaveResult.\n     */\n    async save(modelArtifacts) {\n        if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n            throw new Error('BrowserLocalStorage.save() does not support saving model topology ' +\n                'in binary formats yet.');\n        }\n        else {\n            const topology = JSON.stringify(modelArtifacts.modelTopology);\n            const weightSpecs = JSON.stringify(modelArtifacts.weightSpecs);\n            const modelArtifactsInfo = getModelArtifactsInfoForJSON(modelArtifacts);\n            try {\n                this.LS.setItem(this.keys.info, JSON.stringify(modelArtifactsInfo));\n                this.LS.setItem(this.keys.topology, topology);\n                this.LS.setItem(this.keys.weightSpecs, weightSpecs);\n                this.LS.setItem(this.keys.weightData, arrayBufferToBase64String(modelArtifacts.weightData));\n                // Note that JSON.stringify doesn't write out keys that have undefined\n                // values, so for some keys, we set undefined instead of a null-ish\n                // value.\n                const metadata = {\n                    format: modelArtifacts.format,\n                    generatedBy: modelArtifacts.generatedBy,\n                    convertedBy: modelArtifacts.convertedBy,\n                    signature: modelArtifacts.signature != null ?\n                        modelArtifacts.signature :\n                        undefined,\n                    userDefinedMetadata: modelArtifacts.userDefinedMetadata != null ?\n                        modelArtifacts.userDefinedMetadata :\n                        undefined,\n                    modelInitializer: modelArtifacts.modelInitializer != null ?\n                        modelArtifacts.modelInitializer :\n                        undefined,\n                    trainingConfig: modelArtifacts.trainingConfig != null ?\n                        modelArtifacts.trainingConfig :\n                        undefined\n                };\n                this.LS.setItem(this.keys.modelMetadata, JSON.stringify(metadata));\n                return { modelArtifactsInfo };\n            }\n            catch (err) {\n                // If saving failed, clean up all items saved so far.\n                removeItems(this.keys);\n                throw new Error(`Failed to save model '${this.modelPath}' to local storage: ` +\n                    `size quota being exceeded is a possible cause of this failure: ` +\n                    `modelTopologyBytes=${modelArtifactsInfo.modelTopologyBytes}, ` +\n                    `weightSpecsBytes=${modelArtifactsInfo.weightSpecsBytes}, ` +\n                    `weightDataBytes=${modelArtifactsInfo.weightDataBytes}.`);\n            }\n        }\n    }\n    /**\n     * Load a model from local storage.\n     *\n     * See the documentation to `browserLocalStorage` for details on the saved\n     * artifacts.\n     *\n     * @returns The loaded model (if loading succeeds).\n     */\n    async load() {\n        const info = JSON.parse(this.LS.getItem(this.keys.info));\n        if (info == null) {\n            throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);\n        }\n        if (info.modelTopologyType !== 'JSON') {\n            throw new Error('BrowserLocalStorage does not support loading non-JSON model ' +\n                'topology yet.');\n        }\n        const out = {};\n        // Load topology.\n        const topology = JSON.parse(this.LS.getItem(this.keys.topology));\n        if (topology == null) {\n            throw new Error(`In local storage, the topology of model '${this.modelPath}' ` +\n                `is missing.`);\n        }\n        out.modelTopology = topology;\n        // Load weight specs.\n        const weightSpecs = JSON.parse(this.LS.getItem(this.keys.weightSpecs));\n        if (weightSpecs == null) {\n            throw new Error(`In local storage, the weight specs of model '${this.modelPath}' ` +\n                `are missing.`);\n        }\n        out.weightSpecs = weightSpecs;\n        // Load meta-data fields.\n        const metadataString = this.LS.getItem(this.keys.modelMetadata);\n        if (metadataString != null) {\n            const metadata = JSON.parse(metadataString);\n            out.format = metadata.format;\n            out.generatedBy = metadata.generatedBy;\n            out.convertedBy = metadata.convertedBy;\n            if (metadata.signature != null) {\n                out.signature = metadata.signature;\n            }\n            if (metadata.userDefinedMetadata != null) {\n                out.userDefinedMetadata = metadata.userDefinedMetadata;\n            }\n            if (metadata.modelInitializer != null) {\n                out.modelInitializer = metadata.modelInitializer;\n            }\n            if (metadata.trainingConfig != null) {\n                out.trainingConfig = metadata.trainingConfig;\n            }\n        }\n        // Load weight data.\n        const weightDataBase64 = this.LS.getItem(this.keys.weightData);\n        if (weightDataBase64 == null) {\n            throw new Error(`In local storage, the binary weight values of model ` +\n                `'${this.modelPath}' are missing.`);\n        }\n        out.weightData = base64StringToArrayBuffer(weightDataBase64);\n        return out;\n    }\n}\nBrowserLocalStorage.URL_SCHEME = 'localstorage://';\nexport const localStorageRouter = (url) => {\n    if (!env().getBool('IS_BROWSER')) {\n        return null;\n    }\n    else {\n        if (!Array.isArray(url) && url.startsWith(BrowserLocalStorage.URL_SCHEME)) {\n            return browserLocalStorage(url.slice(BrowserLocalStorage.URL_SCHEME.length));\n        }\n        else {\n            return null;\n        }\n    }\n};\nIORouterRegistry.registerSaveRouter(localStorageRouter);\nIORouterRegistry.registerLoadRouter(localStorageRouter);\n/**\n * Factory function for local storage IOHandler.\n *\n * This `IOHandler` supports both `save` and `load`.\n *\n * For each model's saved artifacts, four items are saved to local storage.\n *   - `${PATH_SEPARATOR}/${modelPath}/info`: Contains meta-info about the\n *     model, such as date saved, type of the topology, size in bytes, etc.\n *   - `${PATH_SEPARATOR}/${modelPath}/topology`: Model topology. For Keras-\n *     style models, this is a stringized JSON.\n *   - `${PATH_SEPARATOR}/${modelPath}/weight_specs`: Weight specs of the\n *     model, can be used to decode the saved binary weight values (see\n *     item below).\n *   - `${PATH_SEPARATOR}/${modelPath}/weight_data`: Concatenated binary\n *     weight values, stored as a base64-encoded string.\n *\n * Saving may throw an `Error` if the total size of the artifacts exceed the\n * browser-specific quota.\n *\n * @param modelPath A unique identifier for the model to be saved. Must be a\n *   non-empty string.\n * @returns An instance of `IOHandler`, which can be used with, e.g.,\n *   `tf.Model.save`.\n */\nexport function browserLocalStorage(modelPath) {\n    return new BrowserLocalStorage(modelPath);\n}\nexport class BrowserLocalStorageManager {\n    constructor() {\n        assert(env().getBool('IS_BROWSER'), () => 'Current environment is not a web browser');\n        assert(typeof window === 'undefined' ||\n            typeof window.localStorage !== 'undefined', () => 'Current browser does not appear to support localStorage');\n        this.LS = window.localStorage;\n    }\n    async listModels() {\n        const out = {};\n        const prefix = PATH_PREFIX + PATH_SEPARATOR;\n        const suffix = PATH_SEPARATOR + INFO_SUFFIX;\n        for (let i = 0; i < this.LS.length; ++i) {\n            const key = this.LS.key(i);\n            if (key.startsWith(prefix) && key.endsWith(suffix)) {\n                const modelPath = getModelPathFromKey(key);\n                out[modelPath] = JSON.parse(this.LS.getItem(key));\n            }\n        }\n        return out;\n    }\n    async removeModel(path) {\n        path = maybeStripScheme(path);\n        const keys = getModelKeys(path);\n        if (this.LS.getItem(keys.info) == null) {\n            throw new Error(`Cannot find model at path '${path}'`);\n        }\n        const info = JSON.parse(this.LS.getItem(keys.info));\n        removeItems(keys);\n        return info;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Classes and functions for model management across multiple storage mediums.\n *\n * Supported client actions:\n * - Listing models on all registered storage mediums.\n * - Remove model by URL from any registered storage mediums, by using URL\n *   string.\n * - Moving or copying model from one path to another in the same medium or from\n *   one medium to another, by using URL strings.\n */\nimport { assert } from '../util';\nimport { IORouterRegistry } from './router_registry';\nconst URL_SCHEME_SUFFIX = '://';\nexport class ModelStoreManagerRegistry {\n    constructor() {\n        this.managers = {};\n    }\n    static getInstance() {\n        if (ModelStoreManagerRegistry.instance == null) {\n            ModelStoreManagerRegistry.instance = new ModelStoreManagerRegistry();\n        }\n        return ModelStoreManagerRegistry.instance;\n    }\n    /**\n     * Register a save-handler router.\n     *\n     * @param saveRouter A function that maps a URL-like string onto an instance\n     * of `IOHandler` with the `save` method defined or `null`.\n     */\n    static registerManager(scheme, manager) {\n        assert(scheme != null, () => 'scheme must not be undefined or null.');\n        if (scheme.endsWith(URL_SCHEME_SUFFIX)) {\n            scheme = scheme.slice(0, scheme.indexOf(URL_SCHEME_SUFFIX));\n        }\n        assert(scheme.length > 0, () => 'scheme must not be an empty string.');\n        const registry = ModelStoreManagerRegistry.getInstance();\n        assert(registry.managers[scheme] == null, () => `A model store manager is already registered for scheme '${scheme}'.`);\n        registry.managers[scheme] = manager;\n    }\n    static getManager(scheme) {\n        const manager = this.getInstance().managers[scheme];\n        if (manager == null) {\n            throw new Error(`Cannot find model manager for scheme '${scheme}'`);\n        }\n        return manager;\n    }\n    static getSchemes() {\n        return Object.keys(this.getInstance().managers);\n    }\n}\n/**\n * Helper method for parsing a URL string into a scheme and a path.\n *\n * @param url E.g., 'localstorage://my-model'\n * @returns A dictionary with two fields: scheme and path.\n *   Scheme: e.g., 'localstorage' in the example above.\n *   Path: e.g., 'my-model' in the example above.\n */\nfunction parseURL(url) {\n    if (url.indexOf(URL_SCHEME_SUFFIX) === -1) {\n        throw new Error(`The url string provided does not contain a scheme. ` +\n            `Supported schemes are: ` +\n            `${ModelStoreManagerRegistry.getSchemes().join(',')}`);\n    }\n    return {\n        scheme: url.split(URL_SCHEME_SUFFIX)[0],\n        path: url.split(URL_SCHEME_SUFFIX)[1],\n    };\n}\nasync function cloneModelInternal(sourceURL, destURL, deleteSource = false) {\n    assert(sourceURL !== destURL, () => `Old path and new path are the same: '${sourceURL}'`);\n    const loadHandlers = IORouterRegistry.getLoadHandlers(sourceURL);\n    assert(loadHandlers.length > 0, () => `Copying failed because no load handler is found for source URL ${sourceURL}.`);\n    assert(loadHandlers.length < 2, () => `Copying failed because more than one (${loadHandlers.length}) ` +\n        `load handlers for source URL ${sourceURL}.`);\n    const loadHandler = loadHandlers[0];\n    const saveHandlers = IORouterRegistry.getSaveHandlers(destURL);\n    assert(saveHandlers.length > 0, () => `Copying failed because no save handler is found for destination ` +\n        `URL ${destURL}.`);\n    assert(saveHandlers.length < 2, () => `Copying failed because more than one (${loadHandlers.length}) ` +\n        `save handlers for destination URL ${destURL}.`);\n    const saveHandler = saveHandlers[0];\n    const sourceScheme = parseURL(sourceURL).scheme;\n    const sourcePath = parseURL(sourceURL).path;\n    const sameMedium = sourceScheme === parseURL(sourceURL).scheme;\n    const modelArtifacts = await loadHandler.load();\n    // If moving within the same storage medium, remove the old model as soon as\n    // the loading is done. Without doing this, it is possible that the combined\n    // size of the two models will cause the cloning to fail.\n    if (deleteSource && sameMedium) {\n        await ModelStoreManagerRegistry.getManager(sourceScheme)\n            .removeModel(sourcePath);\n    }\n    const saveResult = await saveHandler.save(modelArtifacts);\n    // If moving between mediums, the deletion is done after the save succeeds.\n    // This guards against the case in which saving to the destination medium\n    // fails.\n    if (deleteSource && !sameMedium) {\n        await ModelStoreManagerRegistry.getManager(sourceScheme)\n            .removeModel(sourcePath);\n    }\n    return saveResult.modelArtifactsInfo;\n}\n/**\n * List all models stored in registered storage mediums.\n *\n * For a web browser environment, the registered mediums are Local Storage and\n * IndexedDB.\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Delete the model.\n * await tf.io.removeModel('localstorage://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n * ```\n *\n * @returns A `Promise` of a dictionary mapping URLs of existing models to\n * their model artifacts info. URLs include medium-specific schemes, e.g.,\n *   'indexeddb://my/model/1'. Model artifacts info include type of the\n * model's topology, byte sizes of the topology, weights, etc.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function listModels() {\n    const schemes = ModelStoreManagerRegistry.getSchemes();\n    const out = {};\n    for (const scheme of schemes) {\n        const schemeOut = await ModelStoreManagerRegistry.getManager(scheme).listModels();\n        for (const path in schemeOut) {\n            const url = scheme + URL_SCHEME_SUFFIX + path;\n            out[url] = schemeOut[path];\n        }\n    }\n    return out;\n}\n/**\n * Remove a model specified by URL from a reigstered storage medium.\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Delete the model.\n * await tf.io.removeModel('localstorage://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n * ```\n *\n * @param url A URL to a stored model, with a scheme prefix, e.g.,\n *   'localstorage://my-model-1', 'indexeddb://my/model/2'.\n * @returns ModelArtifactsInfo of the deleted model (if and only if deletion\n *   is successful).\n * @throws Error if deletion fails, e.g., if no model exists at `path`.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function removeModel(url) {\n    const schemeAndPath = parseURL(url);\n    const manager = ModelStoreManagerRegistry.getManager(schemeAndPath.scheme);\n    return manager.removeModel(schemeAndPath.path);\n}\n/**\n * Copy a model from one URL to another.\n *\n * This function supports:\n *\n * 1. Copying within a storage medium, e.g.,\n *    `tf.io.copyModel('localstorage://model-1', 'localstorage://model-2')`\n * 2. Copying between two storage mediums, e.g.,\n *    `tf.io.copyModel('localstorage://model-1', 'indexeddb://model-1')`\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Copy the model, from Local Storage to IndexedDB.\n * await tf.io.copyModel(\n *     'localstorage://demo/management/model1',\n *     'indexeddb://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Remove both models.\n * await tf.io.removeModel('localstorage://demo/management/model1');\n * await tf.io.removeModel('indexeddb://demo/management/model1');\n * ```\n *\n * @param sourceURL Source URL of copying.\n * @param destURL Destination URL of copying.\n * @returns ModelArtifactsInfo of the copied model (if and only if copying\n *   is successful).\n * @throws Error if copying fails, e.g., if no model exists at `sourceURL`, or\n *   if `oldPath` and `newPath` are identical.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function copyModel(sourceURL, destURL) {\n    const deleteSource = false;\n    return cloneModelInternal(sourceURL, destURL, deleteSource);\n}\n/**\n * Move a model from one URL to another.\n *\n * This function supports:\n *\n * 1. Moving within a storage medium, e.g.,\n *    `tf.io.moveModel('localstorage://model-1', 'localstorage://model-2')`\n * 2. Moving between two storage mediums, e.g.,\n *    `tf.io.moveModel('localstorage://model-1', 'indexeddb://model-1')`\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Move the model, from Local Storage to IndexedDB.\n * await tf.io.moveModel(\n *     'localstorage://demo/management/model1',\n *     'indexeddb://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Remove the moved model.\n * await tf.io.removeModel('indexeddb://demo/management/model1');\n * ```\n *\n * @param sourceURL Source URL of moving.\n * @param destURL Destination URL of moving.\n * @returns ModelArtifactsInfo of the copied model (if and only if copying\n *   is successful).\n * @throws Error if moving fails, e.g., if no model exists at `sourceURL`, or\n *   if `oldPath` and `newPath` are identical.\n *\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function moveModel(sourceURL, destURL) {\n    const deleteSource = true;\n    return cloneModelInternal(sourceURL, destURL, deleteSource);\n}\nexport { moveModel, copyModel, removeModel, listModels };\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport '../flags';\nimport { env } from '../environment';\nimport { BrowserIndexedDB, BrowserIndexedDBManager } from '../io/indexed_db';\nimport { BrowserLocalStorage, BrowserLocalStorageManager } from '../io/local_storage';\nimport { ModelStoreManagerRegistry } from '../io/model_management';\nexport class PlatformBrowser {\n    fetch(path, init) {\n        return fetch(path, init);\n    }\n    now() {\n        return performance.now();\n    }\n    encode(text, encoding) {\n        if (encoding !== 'utf-8' && encoding !== 'utf8') {\n            throw new Error(`Browser's encoder only supports utf-8, but got ${encoding}`);\n        }\n        if (this.textEncoder == null) {\n            this.textEncoder = new TextEncoder();\n        }\n        return this.textEncoder.encode(text);\n    }\n    decode(bytes, encoding) {\n        return new TextDecoder(encoding).decode(bytes);\n    }\n}\nif (env().get('IS_BROWSER')) {\n    env().setPlatform('browser', new PlatformBrowser());\n    // Register LocalStorage IOHandler\n    try {\n        ModelStoreManagerRegistry.registerManager(BrowserLocalStorage.URL_SCHEME, new BrowserLocalStorageManager());\n    }\n    catch (err) {\n    }\n    // Register IndexedDB IOHandler\n    try {\n        ModelStoreManagerRegistry.registerManager(BrowserIndexedDB.URL_SCHEME, new BrowserIndexedDBManager());\n    }\n    catch (err) {\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxhdGZvcm1fYnJvd3Nlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29yZS9zcmMvcGxhdGZvcm1zL3BsYXRmb3JtX2Jyb3dzZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxVQUFVLENBQUM7QUFFbEIsT0FBTyxFQUFDLEdBQUcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQ25DLE9BQU8sRUFBQyxnQkFBZ0IsRUFBRSx1QkFBdUIsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBQzNFLE9BQU8sRUFBQyxtQkFBbUIsRUFBRSwwQkFBMEIsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQ3BGLE9BQU8sRUFBQyx5QkFBeUIsRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBSWpFLE1BQU0sT0FBTyxlQUFlO0lBSzFCLEtBQUssQ0FBQyxJQUFZLEVBQUUsSUFBa0I7UUFDcEMsT0FBTyxLQUFLLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQzNCLENBQUM7SUFFRCxHQUFHO1FBQ0QsT0FBTyxXQUFXLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDM0IsQ0FBQztJQUVELE1BQU0sQ0FBQyxJQUFZLEVBQUUsUUFBZ0I7UUFDbkMsSUFBSSxRQUFRLEtBQUssT0FBTyxJQUFJLFFBQVEsS0FBSyxNQUFNLEVBQUU7WUFDL0MsTUFBTSxJQUFJLEtBQUssQ0FDWCxrREFBa0QsUUFBUSxFQUFFLENBQUMsQ0FBQztTQUNuRTtRQUNELElBQUksSUFBSSxDQUFDLFdBQVcsSUFBSSxJQUFJLEVBQUU7WUFDNUIsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLFdBQVcsRUFBRSxDQUFDO1NBQ3RDO1FBQ0QsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBQ0QsTUFBTSxDQUFDLEtBQWlCLEVBQUUsUUFBZ0I7UUFDeEMsT0FBTyxJQUFJLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDakQsQ0FBQztDQUNGO0FBRUQsSUFBSSxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLEVBQUU7SUFDM0IsR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLFNBQVMsRUFBRSxJQUFJLGVBQWUsRUFBRSxDQUFDLENBQUM7SUFFcEQsa0NBQWtDO0lBQ2xDLElBQUk7UUFDRix5QkFBeUIsQ0FBQyxlQUFlLENBQ3JDLG1CQUFtQixDQUFDLFVBQVUsRUFBRSxJQUFJLDBCQUEwQixFQUFFLENBQUMsQ0FBQztLQUN2RTtJQUFDLE9BQU8sR0FBRyxFQUFFO0tBQ2I7SUFFRCwrQkFBK0I7SUFDL0IsSUFBSTtRQUNGLHlCQUF5QixDQUFDLGVBQWUsQ0FDckMsZ0JBQWdCLENBQUMsVUFBVSxFQUFFLElBQUksdUJBQXVCLEVBQUUsQ0FBQyxDQUFDO0tBQ2pFO0lBQUMsT0FBTyxHQUFHLEVBQUU7S0FDYjtDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQgJy4uL2ZsYWdzJztcblxuaW1wb3J0IHtlbnZ9IGZyb20gJy4uL2Vudmlyb25tZW50JztcbmltcG9ydCB7QnJvd3NlckluZGV4ZWREQiwgQnJvd3NlckluZGV4ZWREQk1hbmFnZXJ9IGZyb20gJy4uL2lvL2luZGV4ZWRfZGInO1xuaW1wb3J0IHtCcm93c2VyTG9jYWxTdG9yYWdlLCBCcm93c2VyTG9jYWxTdG9yYWdlTWFuYWdlcn0gZnJvbSAnLi4vaW8vbG9jYWxfc3RvcmFnZSc7XG5pbXBvcnQge01vZGVsU3RvcmVNYW5hZ2VyUmVnaXN0cnl9IGZyb20gJy4uL2lvL21vZGVsX21hbmFnZW1lbnQnO1xuXG5pbXBvcnQge1BsYXRmb3JtfSBmcm9tICcuL3BsYXRmb3JtJztcblxuZXhwb3J0IGNsYXNzIFBsYXRmb3JtQnJvd3NlciBpbXBsZW1lbnRzIFBsYXRmb3JtIHtcbiAgLy8gQWNjb3JkaW5nIHRvIHRoZSBzcGVjLCB0aGUgYnVpbHQtaW4gZW5jb2RlciBjYW4gZG8gb25seSBVVEYtOCBlbmNvZGluZy5cbiAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1RleHRFbmNvZGVyL1RleHRFbmNvZGVyXG4gIHByaXZhdGUgdGV4dEVuY29kZXI6IFRleHRFbmNvZGVyO1xuXG4gIGZldGNoKHBhdGg6IHN0cmluZywgaW5pdD86IFJlcXVlc3RJbml0KTogUHJvbWlzZTxSZXNwb25zZT4ge1xuICAgIHJldHVybiBmZXRjaChwYXRoLCBpbml0KTtcbiAgfVxuXG4gIG5vdygpOiBudW1iZXIge1xuICAgIHJldHVybiBwZXJmb3JtYW5jZS5ub3coKTtcbiAgfVxuXG4gIGVuY29kZSh0ZXh0OiBzdHJpbmcsIGVuY29kaW5nOiBzdHJpbmcpOiBVaW50OEFycmF5IHtcbiAgICBpZiAoZW5jb2RpbmcgIT09ICd1dGYtOCcgJiYgZW5jb2RpbmcgIT09ICd1dGY4Jykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgIGBCcm93c2VyJ3MgZW5jb2RlciBvbmx5IHN1cHBvcnRzIHV0Zi04LCBidXQgZ290ICR7ZW5jb2Rpbmd9YCk7XG4gICAgfVxuICAgIGlmICh0aGlzLnRleHRFbmNvZGVyID09IG51bGwpIHtcbiAgICAgIHRoaXMudGV4dEVuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMudGV4dEVuY29kZXIuZW5jb2RlKHRleHQpO1xuICB9XG4gIGRlY29kZShieXRlczogVWludDhBcnJheSwgZW5jb2Rpbmc6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgcmV0dXJuIG5ldyBUZXh0RGVjb2RlcihlbmNvZGluZykuZGVjb2RlKGJ5dGVzKTtcbiAgfVxufVxuXG5pZiAoZW52KCkuZ2V0KCdJU19CUk9XU0VSJykpIHtcbiAgZW52KCkuc2V0UGxhdGZvcm0oJ2Jyb3dzZXInLCBuZXcgUGxhdGZvcm1Ccm93c2VyKCkpO1xuXG4gIC8vIFJlZ2lzdGVyIExvY2FsU3RvcmFnZSBJT0hhbmRsZXJcbiAgdHJ5IHtcbiAgICBNb2RlbFN0b3JlTWFuYWdlclJlZ2lzdHJ5LnJlZ2lzdGVyTWFuYWdlcihcbiAgICAgICAgQnJvd3NlckxvY2FsU3RvcmFnZS5VUkxfU0NIRU1FLCBuZXcgQnJvd3NlckxvY2FsU3RvcmFnZU1hbmFnZXIoKSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICB9XG5cbiAgLy8gUmVnaXN0ZXIgSW5kZXhlZERCIElPSGFuZGxlclxuICB0cnkge1xuICAgIE1vZGVsU3RvcmVNYW5hZ2VyUmVnaXN0cnkucmVnaXN0ZXJNYW5hZ2VyKFxuICAgICAgICBCcm93c2VySW5kZXhlZERCLlVSTF9TQ0hFTUUsIG5ldyBCcm93c2VySW5kZXhlZERCTWFuYWdlcigpKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gIH1cbn1cbiJdfQ==","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from '../environment';\n// We are wrapping this within an object so it can be stubbed by Jasmine.\nexport const getNodeFetch = {\n    // tslint:disable-next-line:no-require-imports\n    importFetch: () => require('node-fetch')\n};\nlet systemFetch;\n// These getters and setters are for testing so we don't export a mutable\n// variable.\nexport function resetSystemFetch() {\n    systemFetch = null;\n}\nexport function setSystemFetch(fetchFn) {\n    systemFetch = fetchFn;\n}\nexport function getSystemFetch() {\n    return systemFetch;\n}\nexport class PlatformNode {\n    constructor() {\n        // tslint:disable-next-line:no-require-imports\n        this.util = require('util');\n        // According to the spec, the built-in encoder can do only UTF-8 encoding.\n        // https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder/TextEncoder\n        this.textEncoder = new this.util.TextEncoder();\n    }\n    fetch(path, requestInits) {\n        if (env().global.fetch != null) {\n            return env().global.fetch(path, requestInits);\n        }\n        if (systemFetch == null) {\n            systemFetch = getNodeFetch.importFetch();\n        }\n        return systemFetch(path, requestInits);\n    }\n    now() {\n        const time = process.hrtime();\n        return time[0] * 1000 + time[1] / 1000000;\n    }\n    encode(text, encoding) {\n        if (encoding !== 'utf-8' && encoding !== 'utf8') {\n            throw new Error(`Node built-in encoder only supports utf-8, but got ${encoding}`);\n        }\n        return this.textEncoder.encode(text);\n    }\n    decode(bytes, encoding) {\n        if (bytes.length === 0) {\n            return '';\n        }\n        return new this.util.TextDecoder(encoding).decode(bytes);\n    }\n}\nif (env().get('IS_NODE') && !env().get('IS_BROWSER')) {\n    env().setPlatform('node', new PlatformNode());\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxhdGZvcm1fbm9kZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29yZS9zcmMvcGxhdGZvcm1zL3BsYXRmb3JtX25vZGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBQ0gsT0FBTyxFQUFDLEdBQUcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBR25DLHlFQUF5RTtBQUN6RSxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUc7SUFDMUIsOENBQThDO0lBQzlDLFdBQVcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDO0NBQ3pDLENBQUM7QUFHRixJQUFJLFdBQW9CLENBQUM7QUFDekIseUVBQXlFO0FBQ3pFLFlBQVk7QUFDWixNQUFNLFVBQVUsZ0JBQWdCO0lBQzlCLFdBQVcsR0FBRyxJQUFJLENBQUM7QUFDckIsQ0FBQztBQUNELE1BQU0sVUFBVSxjQUFjLENBQUMsT0FBZ0I7SUFDN0MsV0FBVyxHQUFHLE9BQU8sQ0FBQztBQUN4QixDQUFDO0FBQ0QsTUFBTSxVQUFVLGNBQWM7SUFDNUIsT0FBTyxXQUFXLENBQUM7QUFDckIsQ0FBQztBQUVELE1BQU0sT0FBTyxZQUFZO0lBS3ZCO1FBQ0UsOENBQThDO1FBQzlDLElBQUksQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzVCLDBFQUEwRTtRQUMxRSwyRUFBMkU7UUFDM0UsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDakQsQ0FBQztJQUVELEtBQUssQ0FBQyxJQUFZLEVBQUUsWUFBMEI7UUFDNUMsSUFBSSxHQUFHLEVBQUUsQ0FBQyxNQUFNLENBQUMsS0FBSyxJQUFJLElBQUksRUFBRTtZQUM5QixPQUFPLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLFlBQVksQ0FBQyxDQUFDO1NBQy9DO1FBRUQsSUFBSSxXQUFXLElBQUksSUFBSSxFQUFFO1lBQ3ZCLFdBQVcsR0FBRyxZQUFZLENBQUMsV0FBVyxFQUFFLENBQUM7U0FDMUM7UUFDRCxPQUFPLFdBQVcsQ0FBQyxJQUFJLEVBQUUsWUFBWSxDQUFDLENBQUM7SUFDekMsQ0FBQztJQUVELEdBQUc7UUFDRCxNQUFNLElBQUksR0FBRyxPQUFPLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDOUIsT0FBTyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxPQUFPLENBQUM7SUFDNUMsQ0FBQztJQUVELE1BQU0sQ0FBQyxJQUFZLEVBQUUsUUFBZ0I7UUFDbkMsSUFBSSxRQUFRLEtBQUssT0FBTyxJQUFJLFFBQVEsS0FBSyxNQUFNLEVBQUU7WUFDL0MsTUFBTSxJQUFJLEtBQUssQ0FDWCxzREFBc0QsUUFBUSxFQUFFLENBQUMsQ0FBQztTQUN2RTtRQUNELE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdkMsQ0FBQztJQUNELE1BQU0sQ0FBQyxLQUFpQixFQUFFLFFBQWdCO1FBQ3hDLElBQUksS0FBSyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7WUFDdEIsT0FBTyxFQUFFLENBQUM7U0FDWDtRQUNELE9BQU8sSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDM0QsQ0FBQztDQUNGO0FBRUQsSUFBSSxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLEVBQUU7SUFDcEQsR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLE1BQU0sRUFBRSxJQUFJLFlBQVksRUFBRSxDQUFDLENBQUM7Q0FDL0MiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5pbXBvcnQge2Vudn0gZnJvbSAnLi4vZW52aXJvbm1lbnQnO1xuaW1wb3J0IHtQbGF0Zm9ybX0gZnJvbSAnLi9wbGF0Zm9ybSc7XG5cbi8vIFdlIGFyZSB3cmFwcGluZyB0aGlzIHdpdGhpbiBhbiBvYmplY3Qgc28gaXQgY2FuIGJlIHN0dWJiZWQgYnkgSmFzbWluZS5cbmV4cG9ydCBjb25zdCBnZXROb2RlRmV0Y2ggPSB7XG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1yZXF1aXJlLWltcG9ydHNcbiAgaW1wb3J0RmV0Y2g6ICgpID0+IHJlcXVpcmUoJ25vZGUtZmV0Y2gnKVxufTtcblxudHlwZSBGZXRjaEZuID0gKHVybDogc3RyaW5nLCBpbml0PzogUmVxdWVzdEluaXQpID0+IFByb21pc2U8UmVzcG9uc2U+O1xubGV0IHN5c3RlbUZldGNoOiBGZXRjaEZuO1xuLy8gVGhlc2UgZ2V0dGVycyBhbmQgc2V0dGVycyBhcmUgZm9yIHRlc3Rpbmcgc28gd2UgZG9uJ3QgZXhwb3J0IGEgbXV0YWJsZVxuLy8gdmFyaWFibGUuXG5leHBvcnQgZnVuY3Rpb24gcmVzZXRTeXN0ZW1GZXRjaCgpIHtcbiAgc3lzdGVtRmV0Y2ggPSBudWxsO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHNldFN5c3RlbUZldGNoKGZldGNoRm46IEZldGNoRm4pIHtcbiAgc3lzdGVtRmV0Y2ggPSBmZXRjaEZuO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFN5c3RlbUZldGNoKCk6IEZldGNoRm4ge1xuICByZXR1cm4gc3lzdGVtRmV0Y2g7XG59XG5cbmV4cG9ydCBjbGFzcyBQbGF0Zm9ybU5vZGUgaW1wbGVtZW50cyBQbGF0Zm9ybSB7XG4gIHByaXZhdGUgdGV4dEVuY29kZXI6IFRleHRFbmNvZGVyO1xuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tYW55XG4gIHV0aWw6IGFueTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tcmVxdWlyZS1pbXBvcnRzXG4gICAgdGhpcy51dGlsID0gcmVxdWlyZSgndXRpbCcpO1xuICAgIC8vIEFjY29yZGluZyB0byB0aGUgc3BlYywgdGhlIGJ1aWx0LWluIGVuY29kZXIgY2FuIGRvIG9ubHkgVVRGLTggZW5jb2RpbmcuXG4gICAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1RleHRFbmNvZGVyL1RleHRFbmNvZGVyXG4gICAgdGhpcy50ZXh0RW5jb2RlciA9IG5ldyB0aGlzLnV0aWwuVGV4dEVuY29kZXIoKTtcbiAgfVxuXG4gIGZldGNoKHBhdGg6IHN0cmluZywgcmVxdWVzdEluaXRzPzogUmVxdWVzdEluaXQpOiBQcm9taXNlPFJlc3BvbnNlPiB7XG4gICAgaWYgKGVudigpLmdsb2JhbC5mZXRjaCAhPSBudWxsKSB7XG4gICAgICByZXR1cm4gZW52KCkuZ2xvYmFsLmZldGNoKHBhdGgsIHJlcXVlc3RJbml0cyk7XG4gICAgfVxuXG4gICAgaWYgKHN5c3RlbUZldGNoID09IG51bGwpIHtcbiAgICAgIHN5c3RlbUZldGNoID0gZ2V0Tm9kZUZldGNoLmltcG9ydEZldGNoKCk7XG4gICAgfVxuICAgIHJldHVybiBzeXN0ZW1GZXRjaChwYXRoLCByZXF1ZXN0SW5pdHMpO1xuICB9XG5cbiAgbm93KCk6IG51bWJlciB7XG4gICAgY29uc3QgdGltZSA9IHByb2Nlc3MuaHJ0aW1lKCk7XG4gICAgcmV0dXJuIHRpbWVbMF0gKiAxMDAwICsgdGltZVsxXSAvIDEwMDAwMDA7XG4gIH1cblxuICBlbmNvZGUodGV4dDogc3RyaW5nLCBlbmNvZGluZzogc3RyaW5nKTogVWludDhBcnJheSB7XG4gICAgaWYgKGVuY29kaW5nICE9PSAndXRmLTgnICYmIGVuY29kaW5nICE9PSAndXRmOCcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICBgTm9kZSBidWlsdC1pbiBlbmNvZGVyIG9ubHkgc3VwcG9ydHMgdXRmLTgsIGJ1dCBnb3QgJHtlbmNvZGluZ31gKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMudGV4dEVuY29kZXIuZW5jb2RlKHRleHQpO1xuICB9XG4gIGRlY29kZShieXRlczogVWludDhBcnJheSwgZW5jb2Rpbmc6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgaWYgKGJ5dGVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IHRoaXMudXRpbC5UZXh0RGVjb2RlcihlbmNvZGluZykuZGVjb2RlKGJ5dGVzKTtcbiAgfVxufVxuXG5pZiAoZW52KCkuZ2V0KCdJU19OT0RFJykgJiYgIWVudigpLmdldCgnSVNfQlJPV1NFUicpKSB7XG4gIGVudigpLnNldFBsYXRmb3JtKCdub2RlJywgbmV3IFBsYXRmb3JtTm9kZSgpKTtcbn1cbiJdfQ==","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Cast } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Casts a `tf.Tensor` to a new dtype.\n *\n * ```js\n * const x = tf.tensor1d([1.5, 2.5, 3]);\n * tf.cast(x, 'int32').print();\n * ```\n * @param x The input tensor to be casted.\n * @param dtype The dtype to cast the input tensor to.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction cast_(x, dtype) {\n    const $x = convertToTensor(x, 'x', 'cast');\n    // Sanity checks.\n    if (!util.isValidDtype(dtype)) {\n        throw new Error(`Failed to cast to unknown dtype ${dtype}`);\n    }\n    if (dtype === 'string' && $x.dtype !== 'string' ||\n        dtype !== 'string' && $x.dtype === 'string') {\n        throw new Error('Only strings can be casted to strings');\n    }\n    const inputs = { x: $x };\n    const attrs = { dtype };\n    return ENGINE.runKernel(Cast, inputs, attrs);\n}\nexport const cast = op({ cast_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29yZS9zcmMvb3BzL2Nhc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBQ0gsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUNqQyxPQUFPLEVBQUMsSUFBSSxFQUF3QixNQUFNLGlCQUFpQixDQUFDO0FBSTVELE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUVuRCxPQUFPLEtBQUssSUFBSSxNQUFNLFNBQVMsQ0FBQztBQUVoQyxPQUFPLEVBQUMsRUFBRSxFQUFDLE1BQU0sYUFBYSxDQUFDO0FBRS9COzs7Ozs7Ozs7OztHQVdHO0FBQ0gsU0FBUyxLQUFLLENBQW1CLENBQWUsRUFBRSxLQUFlO0lBQy9ELE1BQU0sRUFBRSxHQUFHLGVBQWUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBRTNDLGlCQUFpQjtJQUNqQixJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsRUFBRTtRQUM3QixNQUFNLElBQUksS0FBSyxDQUFDLG1DQUFtQyxLQUFLLEVBQUUsQ0FBQyxDQUFDO0tBQzdEO0lBQ0QsSUFBSSxLQUFLLEtBQUssUUFBUSxJQUFJLEVBQUUsQ0FBQyxLQUFLLEtBQUssUUFBUTtRQUMzQyxLQUFLLEtBQUssUUFBUSxJQUFJLEVBQUUsQ0FBQyxLQUFLLEtBQUssUUFBUSxFQUFFO1FBQy9DLE1BQU0sSUFBSSxLQUFLLENBQUMsdUNBQXVDLENBQUMsQ0FBQztLQUMxRDtJQUVELE1BQU0sTUFBTSxHQUFlLEVBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBQyxDQUFDO0lBQ25DLE1BQU0sS0FBSyxHQUFjLEVBQUMsS0FBSyxFQUFDLENBQUM7SUFFakMsT0FBTyxNQUFNLENBQUMsU0FBUyxDQUNuQixJQUFJLEVBQUUsTUFBOEIsRUFBRSxLQUEyQixDQUFDLENBQUM7QUFDekUsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBRyxFQUFFLENBQUMsRUFBQyxLQUFLLEVBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuaW1wb3J0IHtFTkdJTkV9IGZyb20gJy4uL2VuZ2luZSc7XG5pbXBvcnQge0Nhc3QsIENhc3RBdHRycywgQ2FzdElucHV0c30gZnJvbSAnLi4va2VybmVsX25hbWVzJztcbmltcG9ydCB7TmFtZWRBdHRyTWFwfSBmcm9tICcuLi9rZXJuZWxfcmVnaXN0cnknO1xuaW1wb3J0IHtUZW5zb3J9IGZyb20gJy4uL3RlbnNvcic7XG5pbXBvcnQge05hbWVkVGVuc29yTWFwfSBmcm9tICcuLi90ZW5zb3JfdHlwZXMnO1xuaW1wb3J0IHtjb252ZXJ0VG9UZW5zb3J9IGZyb20gJy4uL3RlbnNvcl91dGlsX2Vudic7XG5pbXBvcnQge0RhdGFUeXBlLCBUZW5zb3JMaWtlfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgKiBhcyB1dGlsIGZyb20gJy4uL3V0aWwnO1xuXG5pbXBvcnQge29wfSBmcm9tICcuL29wZXJhdGlvbic7XG5cbi8qKlxuICogQ2FzdHMgYSBgdGYuVGVuc29yYCB0byBhIG5ldyBkdHlwZS5cbiAqXG4gKiBgYGBqc1xuICogY29uc3QgeCA9IHRmLnRlbnNvcjFkKFsxLjUsIDIuNSwgM10pO1xuICogdGYuY2FzdCh4LCAnaW50MzInKS5wcmludCgpO1xuICogYGBgXG4gKiBAcGFyYW0geCBUaGUgaW5wdXQgdGVuc29yIHRvIGJlIGNhc3RlZC5cbiAqIEBwYXJhbSBkdHlwZSBUaGUgZHR5cGUgdG8gY2FzdCB0aGUgaW5wdXQgdGVuc29yIHRvLlxuICpcbiAqIEBkb2Mge2hlYWRpbmc6ICdUZW5zb3JzJywgc3ViaGVhZGluZzogJ1RyYW5zZm9ybWF0aW9ucyd9XG4gKi9cbmZ1bmN0aW9uIGNhc3RfPFQgZXh0ZW5kcyBUZW5zb3I+KHg6IFR8VGVuc29yTGlrZSwgZHR5cGU6IERhdGFUeXBlKTogVCB7XG4gIGNvbnN0ICR4ID0gY29udmVydFRvVGVuc29yKHgsICd4JywgJ2Nhc3QnKTtcblxuICAvLyBTYW5pdHkgY2hlY2tzLlxuICBpZiAoIXV0aWwuaXNWYWxpZER0eXBlKGR0eXBlKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIGNhc3QgdG8gdW5rbm93biBkdHlwZSAke2R0eXBlfWApO1xuICB9XG4gIGlmIChkdHlwZSA9PT0gJ3N0cmluZycgJiYgJHguZHR5cGUgIT09ICdzdHJpbmcnIHx8XG4gICAgICBkdHlwZSAhPT0gJ3N0cmluZycgJiYgJHguZHR5cGUgPT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdPbmx5IHN0cmluZ3MgY2FuIGJlIGNhc3RlZCB0byBzdHJpbmdzJyk7XG4gIH1cblxuICBjb25zdCBpbnB1dHM6IENhc3RJbnB1dHMgPSB7eDogJHh9O1xuICBjb25zdCBhdHRyczogQ2FzdEF0dHJzID0ge2R0eXBlfTtcblxuICByZXR1cm4gRU5HSU5FLnJ1bktlcm5lbChcbiAgICAgIENhc3QsIGlucHV0cyBhcyB7fSBhcyBOYW1lZFRlbnNvck1hcCwgYXR0cnMgYXMge30gYXMgTmFtZWRBdHRyTWFwKTtcbn1cblxuZXhwb3J0IGNvbnN0IGNhc3QgPSBvcCh7Y2FzdF99KTtcbiJdfQ==","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Identity } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Creates a new tensor with the same values and shape as the specified\n * tensor.\n *\n * ```js\n * const x = tf.tensor([1, 2]);\n *\n * x.clone().print();\n * ```\n *\n * @param x The tensor to clone.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction clone_(x) {\n    const $x = convertToTensor(x, 'x', 'clone', 'string_or_numeric');\n    const inputs = { x: $x };\n    // Note this op is called tf.identity in python. Hence the kernel name used\n    // here.\n    return ENGINE.runKernel(Identity, inputs);\n}\nexport const clone = op({ clone_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xvbmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL29wcy9jbG9uZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsTUFBTSxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBQ2pDLE9BQU8sRUFBQyxRQUFRLEVBQWlCLE1BQU0saUJBQWlCLENBQUM7QUFHekQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBR25ELE9BQU8sRUFBQyxFQUFFLEVBQUMsTUFBTSxhQUFhLENBQUM7QUFFL0I7Ozs7Ozs7Ozs7Ozs7R0FhRztBQUNILFNBQVMsTUFBTSxDQUFtQixDQUFlO0lBQy9DLE1BQU0sRUFBRSxHQUFHLGVBQWUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO0lBQ2pFLE1BQU0sTUFBTSxHQUFtQixFQUFDLENBQUMsRUFBRSxFQUFFLEVBQUMsQ0FBQztJQUV2QywyRUFBMkU7SUFDM0UsUUFBUTtJQUNSLE9BQU8sTUFBTSxDQUFDLFNBQVMsQ0FBQyxRQUFRLEVBQUUsTUFBOEIsQ0FBQyxDQUFDO0FBQ3BFLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxLQUFLLEdBQUcsRUFBRSxDQUFDLEVBQUMsTUFBTSxFQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtFTkdJTkV9IGZyb20gJy4uL2VuZ2luZSc7XG5pbXBvcnQge0lkZW50aXR5LCBJZGVudGl0eUlucHV0c30gZnJvbSAnLi4va2VybmVsX25hbWVzJztcbmltcG9ydCB7VGVuc29yfSBmcm9tICcuLi90ZW5zb3InO1xuaW1wb3J0IHtOYW1lZFRlbnNvck1hcH0gZnJvbSAnLi4vdGVuc29yX3R5cGVzJztcbmltcG9ydCB7Y29udmVydFRvVGVuc29yfSBmcm9tICcuLi90ZW5zb3JfdXRpbF9lbnYnO1xuaW1wb3J0IHtUZW5zb3JMaWtlfSBmcm9tICcuLi90eXBlcyc7XG5cbmltcG9ydCB7b3B9IGZyb20gJy4vb3BlcmF0aW9uJztcblxuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IHRlbnNvciB3aXRoIHRoZSBzYW1lIHZhbHVlcyBhbmQgc2hhcGUgYXMgdGhlIHNwZWNpZmllZFxuICogdGVuc29yLlxuICpcbiAqIGBgYGpzXG4gKiBjb25zdCB4ID0gdGYudGVuc29yKFsxLCAyXSk7XG4gKlxuICogeC5jbG9uZSgpLnByaW50KCk7XG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0geCBUaGUgdGVuc29yIHRvIGNsb25lLlxuICpcbiAqIEBkb2Mge2hlYWRpbmc6ICdUZW5zb3JzJywgc3ViaGVhZGluZzogJ0NyZWF0aW9uJ31cbiAqL1xuZnVuY3Rpb24gY2xvbmVfPFQgZXh0ZW5kcyBUZW5zb3I+KHg6IFR8VGVuc29yTGlrZSk6IFQge1xuICBjb25zdCAkeCA9IGNvbnZlcnRUb1RlbnNvcih4LCAneCcsICdjbG9uZScsICdzdHJpbmdfb3JfbnVtZXJpYycpO1xuICBjb25zdCBpbnB1dHM6IElkZW50aXR5SW5wdXRzID0ge3g6ICR4fTtcblxuICAvLyBOb3RlIHRoaXMgb3AgaXMgY2FsbGVkIHRmLmlkZW50aXR5IGluIHB5dGhvbi4gSGVuY2UgdGhlIGtlcm5lbCBuYW1lIHVzZWRcbiAgLy8gaGVyZS5cbiAgcmV0dXJuIEVOR0lORS5ydW5LZXJuZWwoSWRlbnRpdHksIGlucHV0cyBhcyB7fSBhcyBOYW1lZFRlbnNvck1hcCk7XG59XG5cbmV4cG9ydCBjb25zdCBjbG9uZSA9IG9wKHtjbG9uZV99KTtcbiJdfQ==","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Required side effectful code for tfjs-core\n// Set up Engine and ENV\nimport { getOrMakeEngine } from './engine';\ngetOrMakeEngine();\n// Register backend-agnostic flags.\nimport './flags';\n// Register platforms\nimport './platforms/platform_browser';\nimport './platforms/platform_node';\n// Set up OpHandler\nimport { buffer } from './ops/buffer';\nimport { cast } from './ops/cast';\nimport { clone } from './ops/clone';\nimport { print } from './ops/print';\nimport { setOpHandler } from './tensor';\nconst opHandler = {\n    buffer,\n    cast,\n    clone,\n    print\n};\nsetOpHandler(opHandler);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZV9zaWRlX2VmZmVjdHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL2Jhc2Vfc2lkZV9lZmZlY3RzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILDZDQUE2QztBQUU3Qyx3QkFBd0I7QUFDeEIsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLFVBQVUsQ0FBQztBQUN6QyxlQUFlLEVBQUUsQ0FBQztBQUVsQixtQ0FBbUM7QUFDbkMsT0FBTyxTQUFTLENBQUM7QUFDakIscUJBQXFCO0FBQ3JCLE9BQU8sOEJBQThCLENBQUM7QUFDdEMsT0FBTywyQkFBMkIsQ0FBQztBQUVuQyxtQkFBbUI7QUFDbkIsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLGNBQWMsQ0FBQztBQUNwQyxPQUFPLEVBQUMsSUFBSSxFQUFDLE1BQU0sWUFBWSxDQUFDO0FBQ2hDLE9BQU8sRUFBQyxLQUFLLEVBQUMsTUFBTSxhQUFhLENBQUM7QUFDbEMsT0FBTyxFQUFDLEtBQUssRUFBQyxNQUFNLGFBQWEsQ0FBQztBQUNsQyxPQUFPLEVBQVksWUFBWSxFQUFDLE1BQU0sVUFBVSxDQUFDO0FBQ2pELE1BQU0sU0FBUyxHQUFjO0lBQzNCLE1BQU07SUFDTixJQUFJO0lBQ0osS0FBSztJQUNMLEtBQUs7Q0FDTixDQUFDO0FBQ0YsWUFBWSxDQUFDLFNBQVMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG4vLyBSZXF1aXJlZCBzaWRlIGVmZmVjdGZ1bCBjb2RlIGZvciB0ZmpzLWNvcmVcblxuLy8gU2V0IHVwIEVuZ2luZSBhbmQgRU5WXG5pbXBvcnQge2dldE9yTWFrZUVuZ2luZX0gZnJvbSAnLi9lbmdpbmUnO1xuZ2V0T3JNYWtlRW5naW5lKCk7XG5cbi8vIFJlZ2lzdGVyIGJhY2tlbmQtYWdub3N0aWMgZmxhZ3MuXG5pbXBvcnQgJy4vZmxhZ3MnO1xuLy8gUmVnaXN0ZXIgcGxhdGZvcm1zXG5pbXBvcnQgJy4vcGxhdGZvcm1zL3BsYXRmb3JtX2Jyb3dzZXInO1xuaW1wb3J0ICcuL3BsYXRmb3Jtcy9wbGF0Zm9ybV9ub2RlJztcblxuLy8gU2V0IHVwIE9wSGFuZGxlclxuaW1wb3J0IHtidWZmZXJ9IGZyb20gJy4vb3BzL2J1ZmZlcic7XG5pbXBvcnQge2Nhc3R9IGZyb20gJy4vb3BzL2Nhc3QnO1xuaW1wb3J0IHtjbG9uZX0gZnJvbSAnLi9vcHMvY2xvbmUnO1xuaW1wb3J0IHtwcmludH0gZnJvbSAnLi9vcHMvcHJpbnQnO1xuaW1wb3J0IHtPcEhhbmRsZXIsIHNldE9wSGFuZGxlcn0gZnJvbSAnLi90ZW5zb3InO1xuY29uc3Qgb3BIYW5kbGVyOiBPcEhhbmRsZXIgPSB7XG4gIGJ1ZmZlcixcbiAgY2FzdCxcbiAgY2xvbmUsXG4gIHByaW50XG59O1xuc2V0T3BIYW5kbGVyKG9wSGFuZGxlcik7XG4iXX0=","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { assert } from '../util';\n/**\n * Monitor Promise.all progress, fire onProgress callback function.\n *\n * @param promises Promise list going to be monitored\n * @param onProgress Callback function. Fired when a promise resolved.\n * @param startFraction Optional fraction start. Default to 0.\n * @param endFraction Optional fraction end. Default to 1.\n */\nexport function monitorPromisesProgress(promises, onProgress, startFraction, endFraction) {\n    checkPromises(promises);\n    startFraction = startFraction == null ? 0 : startFraction;\n    endFraction = endFraction == null ? 1 : endFraction;\n    checkFraction(startFraction, endFraction);\n    let resolvedPromise = 0;\n    const registerMonitor = (promise) => {\n        promise.then(value => {\n            const fraction = startFraction +\n                ++resolvedPromise / promises.length * (endFraction - startFraction);\n            // pass fraction as parameter to callback function.\n            onProgress(fraction);\n            return value;\n        });\n        return promise;\n    };\n    function checkPromises(promises) {\n        assert(promises != null && Array.isArray(promises) && promises.length > 0, () => 'promises must be a none empty array');\n    }\n    function checkFraction(startFraction, endFraction) {\n        assert(startFraction >= 0 && startFraction <= 1, () => `Progress fraction must be in range [0, 1], but ` +\n            `got startFraction ${startFraction}`);\n        assert(endFraction >= 0 && endFraction <= 1, () => `Progress fraction must be in range [0, 1], but ` +\n            `got endFraction ${endFraction}`);\n        assert(endFraction >= startFraction, () => `startFraction must be no more than endFraction, but ` +\n            `got startFraction ${startFraction} and endFraction ` +\n            `${endFraction}`);\n    }\n    return Promise.all(promises.map(registerMonitor));\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL2lvL3Byb2dyZXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxTQUFTLENBQUM7QUFJL0I7Ozs7Ozs7R0FPRztBQUNILE1BQU0sVUFBVSx1QkFBdUIsQ0FDbkMsUUFBaUMsRUFBRSxVQUE4QixFQUNqRSxhQUFzQixFQUFFLFdBQW9CO0lBQzlDLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN4QixhQUFhLEdBQUcsYUFBYSxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUM7SUFDMUQsV0FBVyxHQUFHLFdBQVcsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDO0lBQ3BELGFBQWEsQ0FBQyxhQUFhLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDMUMsSUFBSSxlQUFlLEdBQUcsQ0FBQyxDQUFDO0lBRXhCLE1BQU0sZUFBZSxHQUFHLENBQUMsT0FBb0IsRUFBRSxFQUFFO1FBQy9DLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDbkIsTUFBTSxRQUFRLEdBQUcsYUFBYTtnQkFDMUIsRUFBRSxlQUFlLEdBQUcsUUFBUSxDQUFDLE1BQU0sR0FBRyxDQUFDLFdBQVcsR0FBRyxhQUFhLENBQUMsQ0FBQztZQUN4RSxtREFBbUQ7WUFDbkQsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ3JCLE9BQU8sS0FBSyxDQUFDO1FBQ2YsQ0FBQyxDQUFDLENBQUM7UUFDSCxPQUFPLE9BQU8sQ0FBQztJQUNqQixDQUFDLENBQUM7SUFFRixTQUFTLGFBQWEsQ0FBQyxRQUFpQztRQUN0RCxNQUFNLENBQ0YsUUFBUSxJQUFJLElBQUksSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLFFBQVEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUNsRSxHQUFHLEVBQUUsQ0FBQyxxQ0FBcUMsQ0FBQyxDQUFDO0lBQ25ELENBQUM7SUFFRCxTQUFTLGFBQWEsQ0FBQyxhQUFxQixFQUFFLFdBQW1CO1FBQy9ELE1BQU0sQ0FDRixhQUFhLElBQUksQ0FBQyxJQUFJLGFBQWEsSUFBSSxDQUFDLEVBQ3hDLEdBQUcsRUFBRSxDQUFDLGlEQUFpRDtZQUNuRCxxQkFBcUIsYUFBYSxFQUFFLENBQUMsQ0FBQztRQUM5QyxNQUFNLENBQ0YsV0FBVyxJQUFJLENBQUMsSUFBSSxXQUFXLElBQUksQ0FBQyxFQUNwQyxHQUFHLEVBQUUsQ0FBQyxpREFBaUQ7WUFDbkQsbUJBQW1CLFdBQVcsRUFBRSxDQUFDLENBQUM7UUFDMUMsTUFBTSxDQUNGLFdBQVcsSUFBSSxhQUFhLEVBQzVCLEdBQUcsRUFBRSxDQUFDLHNEQUFzRDtZQUN4RCxxQkFBcUIsYUFBYSxtQkFBbUI7WUFDckQsR0FBRyxXQUFXLEVBQUUsQ0FBQyxDQUFDO0lBQzVCLENBQUM7SUFFRCxPQUFPLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO0FBQ3BELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7YXNzZXJ0fSBmcm9tICcuLi91dGlsJztcblxuaW1wb3J0IHtPblByb2dyZXNzQ2FsbGJhY2t9IGZyb20gJy4vdHlwZXMnO1xuXG4vKipcbiAqIE1vbml0b3IgUHJvbWlzZS5hbGwgcHJvZ3Jlc3MsIGZpcmUgb25Qcm9ncmVzcyBjYWxsYmFjayBmdW5jdGlvbi5cbiAqXG4gKiBAcGFyYW0gcHJvbWlzZXMgUHJvbWlzZSBsaXN0IGdvaW5nIHRvIGJlIG1vbml0b3JlZFxuICogQHBhcmFtIG9uUHJvZ3Jlc3MgQ2FsbGJhY2sgZnVuY3Rpb24uIEZpcmVkIHdoZW4gYSBwcm9taXNlIHJlc29sdmVkLlxuICogQHBhcmFtIHN0YXJ0RnJhY3Rpb24gT3B0aW9uYWwgZnJhY3Rpb24gc3RhcnQuIERlZmF1bHQgdG8gMC5cbiAqIEBwYXJhbSBlbmRGcmFjdGlvbiBPcHRpb25hbCBmcmFjdGlvbiBlbmQuIERlZmF1bHQgdG8gMS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1vbml0b3JQcm9taXNlc1Byb2dyZXNzKFxuICAgIHByb21pc2VzOiBBcnJheTxQcm9taXNlPHt9fHZvaWQ+Piwgb25Qcm9ncmVzczogT25Qcm9ncmVzc0NhbGxiYWNrLFxuICAgIHN0YXJ0RnJhY3Rpb24/OiBudW1iZXIsIGVuZEZyYWN0aW9uPzogbnVtYmVyKSB7XG4gIGNoZWNrUHJvbWlzZXMocHJvbWlzZXMpO1xuICBzdGFydEZyYWN0aW9uID0gc3RhcnRGcmFjdGlvbiA9PSBudWxsID8gMCA6IHN0YXJ0RnJhY3Rpb247XG4gIGVuZEZyYWN0aW9uID0gZW5kRnJhY3Rpb24gPT0gbnVsbCA/IDEgOiBlbmRGcmFjdGlvbjtcbiAgY2hlY2tGcmFjdGlvbihzdGFydEZyYWN0aW9uLCBlbmRGcmFjdGlvbik7XG4gIGxldCByZXNvbHZlZFByb21pc2UgPSAwO1xuXG4gIGNvbnN0IHJlZ2lzdGVyTW9uaXRvciA9IChwcm9taXNlOiBQcm9taXNlPHt9PikgPT4ge1xuICAgIHByb21pc2UudGhlbih2YWx1ZSA9PiB7XG4gICAgICBjb25zdCBmcmFjdGlvbiA9IHN0YXJ0RnJhY3Rpb24gK1xuICAgICAgICAgICsrcmVzb2x2ZWRQcm9taXNlIC8gcHJvbWlzZXMubGVuZ3RoICogKGVuZEZyYWN0aW9uIC0gc3RhcnRGcmFjdGlvbik7XG4gICAgICAvLyBwYXNzIGZyYWN0aW9uIGFzIHBhcmFtZXRlciB0byBjYWxsYmFjayBmdW5jdGlvbi5cbiAgICAgIG9uUHJvZ3Jlc3MoZnJhY3Rpb24pO1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0pO1xuICAgIHJldHVybiBwcm9taXNlO1xuICB9O1xuXG4gIGZ1bmN0aW9uIGNoZWNrUHJvbWlzZXMocHJvbWlzZXM6IEFycmF5PFByb21pc2U8e318dm9pZD4+KTogdm9pZCB7XG4gICAgYXNzZXJ0KFxuICAgICAgICBwcm9taXNlcyAhPSBudWxsICYmIEFycmF5LmlzQXJyYXkocHJvbWlzZXMpICYmIHByb21pc2VzLmxlbmd0aCA+IDAsXG4gICAgICAgICgpID0+ICdwcm9taXNlcyBtdXN0IGJlIGEgbm9uZSBlbXB0eSBhcnJheScpO1xuICB9XG5cbiAgZnVuY3Rpb24gY2hlY2tGcmFjdGlvbihzdGFydEZyYWN0aW9uOiBudW1iZXIsIGVuZEZyYWN0aW9uOiBudW1iZXIpOiB2b2lkIHtcbiAgICBhc3NlcnQoXG4gICAgICAgIHN0YXJ0RnJhY3Rpb24gPj0gMCAmJiBzdGFydEZyYWN0aW9uIDw9IDEsXG4gICAgICAgICgpID0+IGBQcm9ncmVzcyBmcmFjdGlvbiBtdXN0IGJlIGluIHJhbmdlIFswLCAxXSwgYnV0IGAgK1xuICAgICAgICAgICAgYGdvdCBzdGFydEZyYWN0aW9uICR7c3RhcnRGcmFjdGlvbn1gKTtcbiAgICBhc3NlcnQoXG4gICAgICAgIGVuZEZyYWN0aW9uID49IDAgJiYgZW5kRnJhY3Rpb24gPD0gMSxcbiAgICAgICAgKCkgPT4gYFByb2dyZXNzIGZyYWN0aW9uIG11c3QgYmUgaW4gcmFuZ2UgWzAsIDFdLCBidXQgYCArXG4gICAgICAgICAgICBgZ290IGVuZEZyYWN0aW9uICR7ZW5kRnJhY3Rpb259YCk7XG4gICAgYXNzZXJ0KFxuICAgICAgICBlbmRGcmFjdGlvbiA+PSBzdGFydEZyYWN0aW9uLFxuICAgICAgICAoKSA9PiBgc3RhcnRGcmFjdGlvbiBtdXN0IGJlIG5vIG1vcmUgdGhhbiBlbmRGcmFjdGlvbiwgYnV0IGAgK1xuICAgICAgICAgICAgYGdvdCBzdGFydEZyYWN0aW9uICR7c3RhcnRGcmFjdGlvbn0gYW5kIGVuZEZyYWN0aW9uIGAgK1xuICAgICAgICAgICAgYCR7ZW5kRnJhY3Rpb259YCk7XG4gIH1cblxuICByZXR1cm4gUHJvbWlzZS5hbGwocHJvbWlzZXMubWFwKHJlZ2lzdGVyTW9uaXRvcikpO1xufVxuIl19","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env } from '../environment';\nimport * as util from '../util';\nimport { decodeWeights } from './io_utils';\nimport { monitorPromisesProgress } from './progress';\nimport { DTYPE_VALUE_SIZE_MAP } from './types';\n/**\n * Reads binary weights data from a number of URLs.\n *\n * @param fetchURLs URLs to send the HTTP requests at, using `fetch` calls.\n * @param requestOptions RequestInit (options) for the HTTP requests.\n * @param fetchFunc Optional overriding value for the `window.fetch` function.\n * @param onProgress Optional, progress callback function, fired periodically\n *   before the load is completed.\n * @returns A `Promise` of an Array of `ArrayBuffer`. The Array has the same\n *   length as `fetchURLs`.\n */\nexport async function loadWeightsAsArrayBuffer(fetchURLs, loadOptions) {\n    if (loadOptions == null) {\n        loadOptions = {};\n    }\n    const fetchFunc = loadOptions.fetchFunc == null ? env().platform.fetch :\n        loadOptions.fetchFunc;\n    // Create the requests for all of the weights in parallel.\n    const requests = fetchURLs.map(fetchURL => fetchFunc(fetchURL, loadOptions.requestInit, { isBinary: true }));\n    const fetchStartFraction = 0;\n    const fetchEndFraction = 0.5;\n    const responses = loadOptions.onProgress == null ?\n        await Promise.all(requests) :\n        await monitorPromisesProgress(requests, loadOptions.onProgress, fetchStartFraction, fetchEndFraction);\n    const bufferPromises = responses.map(response => response.arrayBuffer());\n    const bufferStartFraction = 0.5;\n    const bufferEndFraction = 1;\n    const buffers = loadOptions.onProgress == null ?\n        await Promise.all(bufferPromises) :\n        await monitorPromisesProgress(bufferPromises, loadOptions.onProgress, bufferStartFraction, bufferEndFraction);\n    return buffers;\n}\n/**\n * Reads a weights manifest JSON configuration, fetches the weights and\n * returns them as `Tensor`s.\n *\n * @param manifest The weights manifest JSON.\n * @param filePathPrefix The path prefix for filenames given in the manifest.\n *     Defaults to the empty string.\n * @param weightNames The names of the weights to be fetched.\n */\nexport async function loadWeights(manifest, filePathPrefix = '', weightNames, requestInit) {\n    // TODO(nsthorat): Groups are currently fetched atomically. If you need a\n    // single weight from a group, the whole group will be fetched. At a future\n    // date, we should support fetching only the individual shards within a\n    // group that are needed to reconstruct the requested weight.\n    // TODO(cais): Use `decodeWeights` for implementation.\n    const fetchWeights = (fetchUrls) => loadWeightsAsArrayBuffer(fetchUrls, { requestInit });\n    const loadWeights = weightsLoaderFactory(fetchWeights);\n    return loadWeights(manifest, filePathPrefix, weightNames);\n}\n/**\n * Creates a function, which reads a weights manifest JSON configuration,\n * fetches the weight files using the specified function and returns them as\n * `Tensor`s.\n *\n * ```js\n * // example for creating a nodejs weight loader, which reads the weight files\n * // from disk using fs.readFileSync\n *\n * import * as fs from 'fs'\n *\n * const fetchWeightsFromDisk = (filePaths: string[]) =>\n *   filePaths.map(filePath => fs.readFileSync(filePath).buffer)\n *\n * const loadWeights = tf.io.weightsLoaderFactory(fetchWeightsFromDisk)\n *\n * const manifest = JSON.parse(\n *   fs.readFileSync('./my_model-weights_manifest').toString()\n * )\n * const weightMap = await loadWeights(manifest, './')\n * ```\n * @param fetchWeightsFunction The function used for fetching the weight files.\n * @returns Weight loading function.\n */\nexport function weightsLoaderFactory(fetchWeightsFunction) {\n    return async (manifest, filePathPrefix = '', weightNames) => {\n        // Collect all the groups, weights, and their relative offsets to be\n        // fetched.\n        const groupIndicesToFetchMap = manifest.map(() => false);\n        const groupWeightsToFetch = {};\n        const weightsFound = weightNames != null ? weightNames.map(() => false) : [];\n        const allManifestWeightNames = [];\n        manifest.forEach((manifestGroupConfig, groupIndex) => {\n            let groupOffset = 0;\n            manifestGroupConfig.weights.forEach(weightsEntry => {\n                const rawDtype = ('quantization' in weightsEntry) ?\n                    weightsEntry.quantization.dtype :\n                    weightsEntry.dtype;\n                const weightsBytes = DTYPE_VALUE_SIZE_MAP[rawDtype] *\n                    util.sizeFromShape(weightsEntry.shape);\n                const enqueueWeightsForFetchingFn = () => {\n                    groupIndicesToFetchMap[groupIndex] = true;\n                    if (groupWeightsToFetch[groupIndex] == null) {\n                        groupWeightsToFetch[groupIndex] = [];\n                    }\n                    groupWeightsToFetch[groupIndex].push({\n                        manifestEntry: weightsEntry,\n                        groupOffset,\n                        sizeBytes: weightsBytes\n                    });\n                };\n                if (weightNames != null) {\n                    weightNames.forEach((weightName, weightIndex) => {\n                        if (weightName === weightsEntry.name) {\n                            enqueueWeightsForFetchingFn();\n                            weightsFound[weightIndex] = true;\n                        }\n                    });\n                }\n                else {\n                    enqueueWeightsForFetchingFn();\n                }\n                allManifestWeightNames.push(weightsEntry.name);\n                groupOffset += weightsBytes;\n            });\n        });\n        if (!weightsFound.every(found => found)) {\n            const weightsNotFound = weightNames.filter((_, i) => !weightsFound[i]);\n            throw new Error(`Could not find weights in manifest with names: ` +\n                `${weightsNotFound.join(', ')}. \\n` +\n                `Manifest JSON has weights with names: ` +\n                `${allManifestWeightNames.join(', ')}.`);\n        }\n        // Convert the one-hot boolean groupId => shouldFetch map to a list of group\n        // IDs.\n        const groupIndicesToFetch = groupIndicesToFetchMap.reduce((accumulator, shouldFetch, i) => {\n            if (shouldFetch) {\n                accumulator.push(i);\n            }\n            return accumulator;\n        }, []);\n        const fetchUrls = [];\n        groupIndicesToFetch.forEach(i => {\n            manifest[i].paths.forEach(filepath => {\n                const fetchUrl = filePathPrefix +\n                    (!filePathPrefix.endsWith('/') ? '/' : '') + filepath;\n                fetchUrls.push(fetchUrl);\n            });\n        });\n        const buffers = await fetchWeightsFunction(fetchUrls);\n        const weightsTensorMap = {};\n        let bufferIndexOffset = 0;\n        groupIndicesToFetch.forEach(i => {\n            const numBuffers = manifest[i].paths.length;\n            let groupBytes = 0;\n            for (let i = 0; i < numBuffers; i++) {\n                groupBytes += buffers[bufferIndexOffset + i].byteLength;\n            }\n            // Create a buffer for the whole group.\n            const groupBuffer = new ArrayBuffer(groupBytes);\n            const groupByteBuffer = new Uint8Array(groupBuffer);\n            let groupBufferOffset = 0;\n            for (let i = 0; i < numBuffers; i++) {\n                const buffer = new Uint8Array(buffers[bufferIndexOffset + i]);\n                groupByteBuffer.set(buffer, groupBufferOffset);\n                groupBufferOffset += buffer.byteLength;\n            }\n            const weightsEntries = groupWeightsToFetch[i];\n            weightsEntries.forEach(weightsEntry => {\n                const byteBuffer = groupBuffer.slice(weightsEntry.groupOffset, weightsEntry.groupOffset + weightsEntry.sizeBytes);\n                const nameToTensorMap = decodeWeights(byteBuffer, [weightsEntry.manifestEntry]);\n                for (const name in nameToTensorMap) {\n                    weightsTensorMap[name] = nameToTensorMap[name];\n                }\n            });\n            bufferIndexOffset += numBuffers;\n        });\n        return weightsTensorMap;\n    };\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { TensorBuffer } from '../tensor';\nimport * as util from '../util';\n/**\n * Creates an empty `tf.TensorBuffer` with the specified `shape` and `dtype`.\n *\n * The values are stored in CPU as `TypedArray`. Fill the buffer using\n * `buffer.set()`, or by modifying directly `buffer.values`.\n *\n * When done, call `buffer.toTensor()` to get an immutable `tf.Tensor` with\n * those values.\n *\n * ```js\n * // Create a buffer and set values at particular indices.\n * const buffer = tf.buffer([2, 2]);\n * buffer.set(3, 0, 0);\n * buffer.set(5, 1, 0);\n *\n * // Convert the buffer back to a tensor.\n * buffer.toTensor().print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param dtype The dtype of the buffer. Defaults to 'float32'.\n * @param values The values of the buffer as `TypedArray`. Defaults to\n * zeros.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function buffer(shape, dtype = 'float32', values) {\n    dtype = dtype || 'float32';\n    util.assertNonNegativeIntegerDimensions(shape);\n    return new TensorBuffer(shape, dtype, values);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVmZmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy9vcHMvYnVmZmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFFdkMsT0FBTyxLQUFLLElBQUksTUFBTSxTQUFTLENBQUM7QUFFaEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0F5Qkc7QUFDSCxNQUFNLFVBQVUsTUFBTSxDQUNsQixLQUFrQixFQUFFLFFBQVcsU0FBYyxFQUM3QyxNQUF1QjtJQUN6QixLQUFLLEdBQUcsS0FBSyxJQUFJLFNBQWMsQ0FBQztJQUNoQyxJQUFJLENBQUMsa0NBQWtDLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDL0MsT0FBTyxJQUFJLFlBQVksQ0FBTyxLQUFLLEVBQUUsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0FBQ3RELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7VGVuc29yQnVmZmVyfSBmcm9tICcuLi90ZW5zb3InO1xuaW1wb3J0IHtEYXRhVHlwZSwgRGF0YVR5cGVNYXAsIFJhbmssIFNoYXBlTWFwfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgKiBhcyB1dGlsIGZyb20gJy4uL3V0aWwnO1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gZW1wdHkgYHRmLlRlbnNvckJ1ZmZlcmAgd2l0aCB0aGUgc3BlY2lmaWVkIGBzaGFwZWAgYW5kIGBkdHlwZWAuXG4gKlxuICogVGhlIHZhbHVlcyBhcmUgc3RvcmVkIGluIENQVSBhcyBgVHlwZWRBcnJheWAuIEZpbGwgdGhlIGJ1ZmZlciB1c2luZ1xuICogYGJ1ZmZlci5zZXQoKWAsIG9yIGJ5IG1vZGlmeWluZyBkaXJlY3RseSBgYnVmZmVyLnZhbHVlc2AuXG4gKlxuICogV2hlbiBkb25lLCBjYWxsIGBidWZmZXIudG9UZW5zb3IoKWAgdG8gZ2V0IGFuIGltbXV0YWJsZSBgdGYuVGVuc29yYCB3aXRoXG4gKiB0aG9zZSB2YWx1ZXMuXG4gKlxuICogYGBganNcbiAqIC8vIENyZWF0ZSBhIGJ1ZmZlciBhbmQgc2V0IHZhbHVlcyBhdCBwYXJ0aWN1bGFyIGluZGljZXMuXG4gKiBjb25zdCBidWZmZXIgPSB0Zi5idWZmZXIoWzIsIDJdKTtcbiAqIGJ1ZmZlci5zZXQoMywgMCwgMCk7XG4gKiBidWZmZXIuc2V0KDUsIDEsIDApO1xuICpcbiAqIC8vIENvbnZlcnQgdGhlIGJ1ZmZlciBiYWNrIHRvIGEgdGVuc29yLlxuICogYnVmZmVyLnRvVGVuc29yKCkucHJpbnQoKTtcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBzaGFwZSBBbiBhcnJheSBvZiBpbnRlZ2VycyBkZWZpbmluZyB0aGUgb3V0cHV0IHRlbnNvciBzaGFwZS5cbiAqIEBwYXJhbSBkdHlwZSBUaGUgZHR5cGUgb2YgdGhlIGJ1ZmZlci4gRGVmYXVsdHMgdG8gJ2Zsb2F0MzInLlxuICogQHBhcmFtIHZhbHVlcyBUaGUgdmFsdWVzIG9mIHRoZSBidWZmZXIgYXMgYFR5cGVkQXJyYXlgLiBEZWZhdWx0cyB0b1xuICogemVyb3MuXG4gKlxuICogQGRvYyB7aGVhZGluZzogJ1RlbnNvcnMnLCBzdWJoZWFkaW5nOiAnQ3JlYXRpb24nfVxuICovXG5leHBvcnQgZnVuY3Rpb24gYnVmZmVyPFIgZXh0ZW5kcyBSYW5rLCBEIGV4dGVuZHMgRGF0YVR5cGUgPSAnZmxvYXQzMic+KFxuICAgIHNoYXBlOiBTaGFwZU1hcFtSXSwgZHR5cGU6IEQgPSAnZmxvYXQzMicgYXMgRCxcbiAgICB2YWx1ZXM/OiBEYXRhVHlwZU1hcFtEXSk6IFRlbnNvckJ1ZmZlcjxSLCBEPiB7XG4gIGR0eXBlID0gZHR5cGUgfHwgJ2Zsb2F0MzInIGFzIEQ7XG4gIHV0aWwuYXNzZXJ0Tm9uTmVnYXRpdmVJbnRlZ2VyRGltZW5zaW9ucyhzaGFwZSk7XG4gIHJldHVybiBuZXcgVGVuc29yQnVmZmVyPFIsIEQ+KHNoYXBlLCBkdHlwZSwgdmFsdWVzKTtcbn1cbiJdfQ==","/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Prints information about the `tf.Tensor` including its data.\n *\n * ```js\n * const verbose = true;\n * tf.tensor2d([1, 2, 3, 4], [2, 2]).print(verbose);\n * ```\n * @param x The tensor to be printed.\n * @param verbose Whether to print verbose information about the ` Tensor`,\n * including dtype and size.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function print(x, verbose = false) {\n    console.log(x.toString(verbose));\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL29wcy9wcmludC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFJSDs7Ozs7Ozs7Ozs7O0dBWUc7QUFDSCxNQUFNLFVBQVUsS0FBSyxDQUFtQixDQUFJLEVBQUUsT0FBTyxHQUFHLEtBQUs7SUFDM0QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7QUFDbkMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtUZW5zb3J9IGZyb20gJy4uL3RlbnNvcic7XG5cbi8qKlxuICogUHJpbnRzIGluZm9ybWF0aW9uIGFib3V0IHRoZSBgdGYuVGVuc29yYCBpbmNsdWRpbmcgaXRzIGRhdGEuXG4gKlxuICogYGBganNcbiAqIGNvbnN0IHZlcmJvc2UgPSB0cnVlO1xuICogdGYudGVuc29yMmQoWzEsIDIsIDMsIDRdLCBbMiwgMl0pLnByaW50KHZlcmJvc2UpO1xuICogYGBgXG4gKiBAcGFyYW0geCBUaGUgdGVuc29yIHRvIGJlIHByaW50ZWQuXG4gKiBAcGFyYW0gdmVyYm9zZSBXaGV0aGVyIHRvIHByaW50IHZlcmJvc2UgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGAgVGVuc29yYCxcbiAqIGluY2x1ZGluZyBkdHlwZSBhbmQgc2l6ZS5cbiAqXG4gKiBAZG9jIHtoZWFkaW5nOiAnVGVuc29ycycsIHN1YmhlYWRpbmc6ICdDcmVhdGlvbid9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwcmludDxUIGV4dGVuZHMgVGVuc29yPih4OiBULCB2ZXJib3NlID0gZmFsc2UpOiB2b2lkIHtcbiAgY29uc29sZS5sb2coeC50b1N0cmluZyh2ZXJib3NlKSk7XG59XG4iXX0=","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { BatchMatMul } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes the dot product of two matrices, A * B. These must be matrices.\n *\n * ```js\n * const a = tf.tensor2d([1, 2], [1, 2]);\n * const b = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * a.matMul(b).print();  // or tf.matMul(a, b)\n * ```\n * @param a First matrix in dot product operation.\n * @param b Second matrix in dot product operation.\n * @param transposeA If true, `a` is transposed before multiplication.\n * @param transposeB If true, `b` is transposed before multiplication.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\nfunction matMul_(a, b, transposeA = false, transposeB = false) {\n    let $a = convertToTensor(a, 'a', 'matMul');\n    let $b = convertToTensor(b, 'b', 'matMul');\n    [$a, $b] = makeTypesMatch($a, $b);\n    const inputs = { a: $a, b: $b };\n    const attrs = { transposeA, transposeB };\n    return ENGINE.runKernel(BatchMatMul, inputs, attrs);\n}\nexport const matMul = op({ matMul_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0X211bC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29yZS9zcmMvb3BzL21hdF9tdWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBQ0gsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUNqQyxPQUFPLEVBQUMsV0FBVyxFQUFzQyxNQUFNLGlCQUFpQixDQUFDO0FBSWpGLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUM5QyxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFHbkQsT0FBTyxFQUFDLEVBQUUsRUFBQyxNQUFNLGFBQWEsQ0FBQztBQUUvQjs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFDSCxTQUFTLE9BQU8sQ0FDWixDQUFvQixFQUFFLENBQW9CLEVBQUUsVUFBVSxHQUFHLEtBQUssRUFDOUQsVUFBVSxHQUFHLEtBQUs7SUFDcEIsSUFBSSxFQUFFLEdBQUcsZUFBZSxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDM0MsSUFBSSxFQUFFLEdBQUcsZUFBZSxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDM0MsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEdBQUcsY0FBYyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUVsQyxNQUFNLE1BQU0sR0FBc0IsRUFBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUMsQ0FBQztJQUNqRCxNQUFNLEtBQUssR0FBcUIsRUFBQyxVQUFVLEVBQUUsVUFBVSxFQUFDLENBQUM7SUFFekQsT0FBTyxNQUFNLENBQUMsU0FBUyxDQUNuQixXQUFXLEVBQUUsTUFBOEIsRUFBRSxLQUEyQixDQUFDLENBQUM7QUFDaEYsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsRUFBQyxPQUFPLEVBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuaW1wb3J0IHtFTkdJTkV9IGZyb20gJy4uL2VuZ2luZSc7XG5pbXBvcnQge0JhdGNoTWF0TXVsLCBCYXRjaE1hdE11bEF0dHJzLCBCYXRjaE1hdE11bElucHV0c30gZnJvbSAnLi4va2VybmVsX25hbWVzJztcbmltcG9ydCB7TmFtZWRBdHRyTWFwfSBmcm9tICcuLi9rZXJuZWxfcmVnaXN0cnknO1xuaW1wb3J0IHtUZW5zb3J9IGZyb20gJy4uL3RlbnNvcic7XG5pbXBvcnQge05hbWVkVGVuc29yTWFwfSBmcm9tICcuLi90ZW5zb3JfdHlwZXMnO1xuaW1wb3J0IHttYWtlVHlwZXNNYXRjaH0gZnJvbSAnLi4vdGVuc29yX3V0aWwnO1xuaW1wb3J0IHtjb252ZXJ0VG9UZW5zb3J9IGZyb20gJy4uL3RlbnNvcl91dGlsX2Vudic7XG5pbXBvcnQge1RlbnNvckxpa2V9IGZyb20gJy4uL3R5cGVzJztcblxuaW1wb3J0IHtvcH0gZnJvbSAnLi9vcGVyYXRpb24nO1xuXG4vKipcbiAqIENvbXB1dGVzIHRoZSBkb3QgcHJvZHVjdCBvZiB0d28gbWF0cmljZXMsIEEgKiBCLiBUaGVzZSBtdXN0IGJlIG1hdHJpY2VzLlxuICpcbiAqIGBgYGpzXG4gKiBjb25zdCBhID0gdGYudGVuc29yMmQoWzEsIDJdLCBbMSwgMl0pO1xuICogY29uc3QgYiA9IHRmLnRlbnNvcjJkKFsxLCAyLCAzLCA0XSwgWzIsIDJdKTtcbiAqXG4gKiBhLm1hdE11bChiKS5wcmludCgpOyAgLy8gb3IgdGYubWF0TXVsKGEsIGIpXG4gKiBgYGBcbiAqIEBwYXJhbSBhIEZpcnN0IG1hdHJpeCBpbiBkb3QgcHJvZHVjdCBvcGVyYXRpb24uXG4gKiBAcGFyYW0gYiBTZWNvbmQgbWF0cml4IGluIGRvdCBwcm9kdWN0IG9wZXJhdGlvbi5cbiAqIEBwYXJhbSB0cmFuc3Bvc2VBIElmIHRydWUsIGBhYCBpcyB0cmFuc3Bvc2VkIGJlZm9yZSBtdWx0aXBsaWNhdGlvbi5cbiAqIEBwYXJhbSB0cmFuc3Bvc2VCIElmIHRydWUsIGBiYCBpcyB0cmFuc3Bvc2VkIGJlZm9yZSBtdWx0aXBsaWNhdGlvbi5cbiAqXG4gKiBAZG9jIHtoZWFkaW5nOiAnT3BlcmF0aW9ucycsIHN1YmhlYWRpbmc6ICdNYXRyaWNlcyd9XG4gKi9cbmZ1bmN0aW9uIG1hdE11bF88VCBleHRlbmRzIFRlbnNvcj4oXG4gICAgYTogVGVuc29yfFRlbnNvckxpa2UsIGI6IFRlbnNvcnxUZW5zb3JMaWtlLCB0cmFuc3Bvc2VBID0gZmFsc2UsXG4gICAgdHJhbnNwb3NlQiA9IGZhbHNlKTogVCB7XG4gIGxldCAkYSA9IGNvbnZlcnRUb1RlbnNvcihhLCAnYScsICdtYXRNdWwnKTtcbiAgbGV0ICRiID0gY29udmVydFRvVGVuc29yKGIsICdiJywgJ21hdE11bCcpO1xuICBbJGEsICRiXSA9IG1ha2VUeXBlc01hdGNoKCRhLCAkYik7XG5cbiAgY29uc3QgaW5wdXRzOiBCYXRjaE1hdE11bElucHV0cyA9IHthOiAkYSwgYjogJGJ9O1xuICBjb25zdCBhdHRyczogQmF0Y2hNYXRNdWxBdHRycyA9IHt0cmFuc3Bvc2VBLCB0cmFuc3Bvc2VCfTtcblxuICByZXR1cm4gRU5HSU5FLnJ1bktlcm5lbChcbiAgICAgIEJhdGNoTWF0TXVsLCBpbnB1dHMgYXMge30gYXMgTmFtZWRUZW5zb3JNYXAsIGF0dHJzIGFzIHt9IGFzIE5hbWVkQXR0ck1hcCk7XG59XG5cbmV4cG9ydCBjb25zdCBtYXRNdWwgPSBvcCh7bWF0TXVsX30pO1xuIl19","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Transpose } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Transposes the `tf.Tensor`. Permutes the dimensions according to `perm`.\n *\n * The returned `tf.Tensor`'s dimension `i` will correspond to the input\n * dimension `perm[i]`. If `perm` is not given, it is set to `[n-1...0]`,\n * where `n` is the rank of the input `tf.Tensor`. Hence by default, this\n * operation performs a regular matrix transpose on 2-D input `tf.Tensor`s.\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n *\n * a.transpose().print();  // or tf.transpose(a)\n * ```\n *\n * @param x The tensor to transpose.\n * @param perm The permutation of the dimensions of a.\n *\n * @doc {heading: 'Operations', subheading: 'Matrices'}\n */\nfunction transpose_(x, perm) {\n    const $x = convertToTensor(x, 'x', 'transpose');\n    if (perm == null) {\n        perm = $x.shape.map((s, i) => i).reverse();\n    }\n    util.assert($x.rank === perm.length, () => `Error in transpose: rank of input ${$x.rank} ` +\n        `must match length of perm ${perm}.`);\n    perm.forEach(axis => {\n        util.assert(axis >= 0 && axis < $x.rank, () => `All entries in 'perm' must be between 0 and ${$x.rank - 1}` +\n            ` but got ${perm}`);\n    });\n    if ($x.rank <= 1) {\n        return $x.clone();\n    }\n    const inputs = { x: $x };\n    const attrs = { perm };\n    return ENGINE.runKernel(Transpose, inputs, attrs);\n}\nexport const transpose = op({ transpose_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNwb3NlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy9vcHMvdHJhbnNwb3NlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDakMsT0FBTyxFQUFDLFNBQVMsRUFBa0MsTUFBTSxpQkFBaUIsQ0FBQztBQUkzRSxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFFbkQsT0FBTyxLQUFLLElBQUksTUFBTSxTQUFTLENBQUM7QUFFaEMsT0FBTyxFQUFDLEVBQUUsRUFBQyxNQUFNLGFBQWEsQ0FBQztBQUUvQjs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBa0JHO0FBQ0gsU0FBUyxVQUFVLENBQW1CLENBQWUsRUFBRSxJQUFlO0lBQ3BFLE1BQU0sRUFBRSxHQUFHLGVBQWUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBRWhELElBQUksSUFBSSxJQUFJLElBQUksRUFBRTtRQUNoQixJQUFJLEdBQUcsRUFBRSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztLQUM1QztJQUNELElBQUksQ0FBQyxNQUFNLENBQ1AsRUFBRSxDQUFDLElBQUksS0FBSyxJQUFJLENBQUMsTUFBTSxFQUN2QixHQUFHLEVBQUUsQ0FBQyxxQ0FBcUMsRUFBRSxDQUFDLElBQUksR0FBRztRQUNqRCw2QkFBNkIsSUFBSSxHQUFHLENBQUMsQ0FBQztJQUM5QyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQ2xCLElBQUksQ0FBQyxNQUFNLENBQ1AsSUFBSSxJQUFJLENBQUMsSUFBSSxJQUFJLEdBQUcsRUFBRSxDQUFDLElBQUksRUFDM0IsR0FBRyxFQUFFLENBQUMsK0NBQStDLEVBQUUsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxFQUFFO1lBQzlELFlBQVksSUFBSSxFQUFFLENBQUMsQ0FBQztJQUM5QixDQUFDLENBQUMsQ0FBQztJQUVILElBQUksRUFBRSxDQUFDLElBQUksSUFBSSxDQUFDLEVBQUU7UUFDaEIsT0FBTyxFQUFFLENBQUMsS0FBSyxFQUFFLENBQUM7S0FDbkI7SUFFRCxNQUFNLE1BQU0sR0FBb0IsRUFBQyxDQUFDLEVBQUUsRUFBRSxFQUFDLENBQUM7SUFDeEMsTUFBTSxLQUFLLEdBQW1CLEVBQUMsSUFBSSxFQUFDLENBQUM7SUFFckMsT0FBTyxNQUFNLENBQUMsU0FBUyxDQUNuQixTQUFTLEVBQUUsTUFBOEIsRUFBRSxLQUEyQixDQUFDLENBQUM7QUFDOUUsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBRyxFQUFFLENBQUMsRUFBQyxVQUFVLEVBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTggR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0VOR0lORX0gZnJvbSAnLi4vZW5naW5lJztcbmltcG9ydCB7VHJhbnNwb3NlLCBUcmFuc3Bvc2VBdHRycywgVHJhbnNwb3NlSW5wdXRzfSBmcm9tICcuLi9rZXJuZWxfbmFtZXMnO1xuaW1wb3J0IHtOYW1lZEF0dHJNYXB9IGZyb20gJy4uL2tlcm5lbF9yZWdpc3RyeSc7XG5pbXBvcnQge1RlbnNvcn0gZnJvbSAnLi4vdGVuc29yJztcbmltcG9ydCB7TmFtZWRUZW5zb3JNYXB9IGZyb20gJy4uL3RlbnNvcl90eXBlcyc7XG5pbXBvcnQge2NvbnZlcnRUb1RlbnNvcn0gZnJvbSAnLi4vdGVuc29yX3V0aWxfZW52JztcbmltcG9ydCB7VGVuc29yTGlrZX0gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0ICogYXMgdXRpbCBmcm9tICcuLi91dGlsJztcblxuaW1wb3J0IHtvcH0gZnJvbSAnLi9vcGVyYXRpb24nO1xuXG4vKipcbiAqIFRyYW5zcG9zZXMgdGhlIGB0Zi5UZW5zb3JgLiBQZXJtdXRlcyB0aGUgZGltZW5zaW9ucyBhY2NvcmRpbmcgdG8gYHBlcm1gLlxuICpcbiAqIFRoZSByZXR1cm5lZCBgdGYuVGVuc29yYCdzIGRpbWVuc2lvbiBgaWAgd2lsbCBjb3JyZXNwb25kIHRvIHRoZSBpbnB1dFxuICogZGltZW5zaW9uIGBwZXJtW2ldYC4gSWYgYHBlcm1gIGlzIG5vdCBnaXZlbiwgaXQgaXMgc2V0IHRvIGBbbi0xLi4uMF1gLFxuICogd2hlcmUgYG5gIGlzIHRoZSByYW5rIG9mIHRoZSBpbnB1dCBgdGYuVGVuc29yYC4gSGVuY2UgYnkgZGVmYXVsdCwgdGhpc1xuICogb3BlcmF0aW9uIHBlcmZvcm1zIGEgcmVndWxhciBtYXRyaXggdHJhbnNwb3NlIG9uIDItRCBpbnB1dCBgdGYuVGVuc29yYHMuXG4gKlxuICogYGBganNcbiAqIGNvbnN0IGEgPSB0Zi50ZW5zb3IyZChbMSwgMiwgMywgNCwgNSwgNl0sIFsyLCAzXSk7XG4gKlxuICogYS50cmFuc3Bvc2UoKS5wcmludCgpOyAgLy8gb3IgdGYudHJhbnNwb3NlKGEpXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0geCBUaGUgdGVuc29yIHRvIHRyYW5zcG9zZS5cbiAqIEBwYXJhbSBwZXJtIFRoZSBwZXJtdXRhdGlvbiBvZiB0aGUgZGltZW5zaW9ucyBvZiBhLlxuICpcbiAqIEBkb2Mge2hlYWRpbmc6ICdPcGVyYXRpb25zJywgc3ViaGVhZGluZzogJ01hdHJpY2VzJ31cbiAqL1xuZnVuY3Rpb24gdHJhbnNwb3NlXzxUIGV4dGVuZHMgVGVuc29yPih4OiBUfFRlbnNvckxpa2UsIHBlcm0/OiBudW1iZXJbXSk6IFQge1xuICBjb25zdCAkeCA9IGNvbnZlcnRUb1RlbnNvcih4LCAneCcsICd0cmFuc3Bvc2UnKTtcblxuICBpZiAocGVybSA9PSBudWxsKSB7XG4gICAgcGVybSA9ICR4LnNoYXBlLm1hcCgocywgaSkgPT4gaSkucmV2ZXJzZSgpO1xuICB9XG4gIHV0aWwuYXNzZXJ0KFxuICAgICAgJHgucmFuayA9PT0gcGVybS5sZW5ndGgsXG4gICAgICAoKSA9PiBgRXJyb3IgaW4gdHJhbnNwb3NlOiByYW5rIG9mIGlucHV0ICR7JHgucmFua30gYCArXG4gICAgICAgICAgYG11c3QgbWF0Y2ggbGVuZ3RoIG9mIHBlcm0gJHtwZXJtfS5gKTtcbiAgcGVybS5mb3JFYWNoKGF4aXMgPT4ge1xuICAgIHV0aWwuYXNzZXJ0KFxuICAgICAgICBheGlzID49IDAgJiYgYXhpcyA8ICR4LnJhbmssXG4gICAgICAgICgpID0+IGBBbGwgZW50cmllcyBpbiAncGVybScgbXVzdCBiZSBiZXR3ZWVuIDAgYW5kICR7JHgucmFuayAtIDF9YCArXG4gICAgICAgICAgICBgIGJ1dCBnb3QgJHtwZXJtfWApO1xuICB9KTtcblxuICBpZiAoJHgucmFuayA8PSAxKSB7XG4gICAgcmV0dXJuICR4LmNsb25lKCk7XG4gIH1cblxuICBjb25zdCBpbnB1dHM6IFRyYW5zcG9zZUlucHV0cyA9IHt4OiAkeH07XG4gIGNvbnN0IGF0dHJzOiBUcmFuc3Bvc2VBdHRycyA9IHtwZXJtfTtcblxuICByZXR1cm4gRU5HSU5FLnJ1bktlcm5lbChcbiAgICAgIFRyYW5zcG9zZSwgaW5wdXRzIGFzIHt9IGFzIE5hbWVkVGVuc29yTWFwLCBhdHRycyBhcyB7fSBhcyBOYW1lZEF0dHJNYXApO1xufVxuXG5leHBvcnQgY29uc3QgdHJhbnNwb3NlID0gb3Aoe3RyYW5zcG9zZV99KTtcbiJdfQ==","/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Returns the dimensions in the input shape that are broadcasted to\n * produce the provided output shape.\n *\n * The returned dimensions are 0-indexed and sorted. An example:\n * inShape = [4, 1, 3]\n * outShape = [5, 4, 3, 3]\n * result = [1]. Dimension 1 (2nd dimension of input) gets broadcasted 1 => 3.\n */\nexport function getBroadcastDims(inShape, outShape) {\n    const inRank = inShape.length;\n    const dims = [];\n    for (let i = 0; i < inRank; i++) {\n        const dim = inRank - 1 - i;\n        const a = inShape[dim] || 1;\n        const b = outShape[outShape.length - 1 - i] || 1;\n        if (b > 1 && a === 1) {\n            dims.unshift(dim);\n        }\n    }\n    return dims;\n}\n/**\n * Returns the axes in the output space that should be reduced to produce\n * the input space.\n */\nexport function getReductionAxes(inShape, outShape) {\n    const result = [];\n    for (let i = 0; i < outShape.length; i++) {\n        const inDim = inShape[inShape.length - i - 1];\n        const outAxis = outShape.length - i - 1;\n        const outDim = outShape[outAxis];\n        if (inDim == null || (inDim === 1 && outDim > 1)) {\n            result.unshift(outAxis);\n        }\n    }\n    return result;\n}\nexport function assertAndGetBroadcastShape(shapeA, shapeB) {\n    const result = [];\n    const l = Math.max(shapeA.length, shapeB.length);\n    for (let i = 0; i < l; i++) {\n        let a = shapeA[shapeA.length - i - 1];\n        if (a == null) {\n            a = 1;\n        }\n        let b = shapeB[shapeB.length - i - 1];\n        if (b == null) {\n            b = 1;\n        }\n        if (a === 1) {\n            result.unshift(b);\n        }\n        else if (b === 1) {\n            result.unshift(a);\n        }\n        else if (a !== b) {\n            const errMsg = `Operands could not be broadcast together with shapes ` +\n                `${shapeA} and ${shapeB}.`;\n            throw Error(errMsg);\n        }\n        else {\n            result.unshift(a);\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJvYWRjYXN0X3V0aWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL29wcy9icm9hZGNhc3RfdXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSDs7Ozs7Ozs7R0FRRztBQUNILE1BQU0sVUFBVSxnQkFBZ0IsQ0FDNUIsT0FBaUIsRUFBRSxRQUFrQjtJQUN2QyxNQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDO0lBQzlCLE1BQU0sSUFBSSxHQUFhLEVBQUUsQ0FBQztJQUMxQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQy9CLE1BQU0sR0FBRyxHQUFHLE1BQU0sR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzNCLE1BQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDNUIsTUFBTSxDQUFDLEdBQUcsUUFBUSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNqRCxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNwQixJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQ25CO0tBQ0Y7SUFDRCxPQUFPLElBQUksQ0FBQztBQUNkLENBQUM7QUFFRDs7O0dBR0c7QUFDSCxNQUFNLFVBQVUsZ0JBQWdCLENBQzVCLE9BQWlCLEVBQUUsUUFBa0I7SUFDdkMsTUFBTSxNQUFNLEdBQWEsRUFBRSxDQUFDO0lBQzVCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxRQUFRLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQ3hDLE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUM5QyxNQUFNLE9BQU8sR0FBRyxRQUFRLENBQUMsTUFBTSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDeEMsTUFBTSxNQUFNLEdBQUcsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2pDLElBQUksS0FBSyxJQUFJLElBQUksSUFBSSxDQUFDLEtBQUssS0FBSyxDQUFDLElBQUksTUFBTSxHQUFHLENBQUMsQ0FBQyxFQUFFO1lBQ2hELE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDekI7S0FDRjtJQUNELE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUM7QUFFRCxNQUFNLFVBQVUsMEJBQTBCLENBQ3RDLE1BQWdCLEVBQUUsTUFBZ0I7SUFDcEMsTUFBTSxNQUFNLEdBQWEsRUFBRSxDQUFDO0lBQzVCLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFakQsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUMxQixJQUFJLENBQUMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDdEMsSUFBSSxDQUFDLElBQUksSUFBSSxFQUFFO1lBQ2IsQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUNQO1FBQ0QsSUFBSSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ3RDLElBQUksQ0FBQyxJQUFJLElBQUksRUFBRTtZQUNiLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDUDtRQUNELElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNYLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDbkI7YUFBTSxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDbEIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNuQjthQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNsQixNQUFNLE1BQU0sR0FBRyx1REFBdUQ7Z0JBQ2xFLEdBQUcsTUFBTSxRQUFRLE1BQU0sR0FBRyxDQUFDO1lBQy9CLE1BQU0sS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3JCO2FBQU07WUFDTCxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ25CO0tBQ0Y7SUFDRCxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG4vKipcbiAqIFJldHVybnMgdGhlIGRpbWVuc2lvbnMgaW4gdGhlIGlucHV0IHNoYXBlIHRoYXQgYXJlIGJyb2FkY2FzdGVkIHRvXG4gKiBwcm9kdWNlIHRoZSBwcm92aWRlZCBvdXRwdXQgc2hhcGUuXG4gKlxuICogVGhlIHJldHVybmVkIGRpbWVuc2lvbnMgYXJlIDAtaW5kZXhlZCBhbmQgc29ydGVkLiBBbiBleGFtcGxlOlxuICogaW5TaGFwZSA9IFs0LCAxLCAzXVxuICogb3V0U2hhcGUgPSBbNSwgNCwgMywgM11cbiAqIHJlc3VsdCA9IFsxXS4gRGltZW5zaW9uIDEgKDJuZCBkaW1lbnNpb24gb2YgaW5wdXQpIGdldHMgYnJvYWRjYXN0ZWQgMSA9PiAzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0QnJvYWRjYXN0RGltcyhcbiAgICBpblNoYXBlOiBudW1iZXJbXSwgb3V0U2hhcGU6IG51bWJlcltdKTogbnVtYmVyW10ge1xuICBjb25zdCBpblJhbmsgPSBpblNoYXBlLmxlbmd0aDtcbiAgY29uc3QgZGltczogbnVtYmVyW10gPSBbXTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBpblJhbms7IGkrKykge1xuICAgIGNvbnN0IGRpbSA9IGluUmFuayAtIDEgLSBpO1xuICAgIGNvbnN0IGEgPSBpblNoYXBlW2RpbV0gfHwgMTtcbiAgICBjb25zdCBiID0gb3V0U2hhcGVbb3V0U2hhcGUubGVuZ3RoIC0gMSAtIGldIHx8IDE7XG4gICAgaWYgKGIgPiAxICYmIGEgPT09IDEpIHtcbiAgICAgIGRpbXMudW5zaGlmdChkaW0pO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZGltcztcbn1cblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBheGVzIGluIHRoZSBvdXRwdXQgc3BhY2UgdGhhdCBzaG91bGQgYmUgcmVkdWNlZCB0byBwcm9kdWNlXG4gKiB0aGUgaW5wdXQgc3BhY2UuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRSZWR1Y3Rpb25BeGVzKFxuICAgIGluU2hhcGU6IG51bWJlcltdLCBvdXRTaGFwZTogbnVtYmVyW10pOiBudW1iZXJbXSB7XG4gIGNvbnN0IHJlc3VsdDogbnVtYmVyW10gPSBbXTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBvdXRTaGFwZS5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGluRGltID0gaW5TaGFwZVtpblNoYXBlLmxlbmd0aCAtIGkgLSAxXTtcbiAgICBjb25zdCBvdXRBeGlzID0gb3V0U2hhcGUubGVuZ3RoIC0gaSAtIDE7XG4gICAgY29uc3Qgb3V0RGltID0gb3V0U2hhcGVbb3V0QXhpc107XG4gICAgaWYgKGluRGltID09IG51bGwgfHwgKGluRGltID09PSAxICYmIG91dERpbSA+IDEpKSB7XG4gICAgICByZXN1bHQudW5zaGlmdChvdXRBeGlzKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydEFuZEdldEJyb2FkY2FzdFNoYXBlKFxuICAgIHNoYXBlQTogbnVtYmVyW10sIHNoYXBlQjogbnVtYmVyW10pOiBudW1iZXJbXSB7XG4gIGNvbnN0IHJlc3VsdDogbnVtYmVyW10gPSBbXTtcbiAgY29uc3QgbCA9IE1hdGgubWF4KHNoYXBlQS5sZW5ndGgsIHNoYXBlQi5sZW5ndGgpO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbDsgaSsrKSB7XG4gICAgbGV0IGEgPSBzaGFwZUFbc2hhcGVBLmxlbmd0aCAtIGkgLSAxXTtcbiAgICBpZiAoYSA9PSBudWxsKSB7XG4gICAgICBhID0gMTtcbiAgICB9XG4gICAgbGV0IGIgPSBzaGFwZUJbc2hhcGVCLmxlbmd0aCAtIGkgLSAxXTtcbiAgICBpZiAoYiA9PSBudWxsKSB7XG4gICAgICBiID0gMTtcbiAgICB9XG4gICAgaWYgKGEgPT09IDEpIHtcbiAgICAgIHJlc3VsdC51bnNoaWZ0KGIpO1xuICAgIH0gZWxzZSBpZiAoYiA9PT0gMSkge1xuICAgICAgcmVzdWx0LnVuc2hpZnQoYSk7XG4gICAgfSBlbHNlIGlmIChhICE9PSBiKSB7XG4gICAgICBjb25zdCBlcnJNc2cgPSBgT3BlcmFuZHMgY291bGQgbm90IGJlIGJyb2FkY2FzdCB0b2dldGhlciB3aXRoIHNoYXBlcyBgICtcbiAgICAgICAgICBgJHtzaGFwZUF9IGFuZCAke3NoYXBlQn0uYDtcbiAgICAgIHRocm93IEVycm9yKGVyck1zZyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3VsdC51bnNoaWZ0KGEpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuIl19","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { inferShape } from '../tensor_util_env';\nimport { assertNonNull } from '../util';\nimport { makeTensor } from './tensor_ops_util';\n/**\n * Creates rank-3 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor3d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor3d([[[1], [2]], [[3], [4]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor3d([1, 2, 3, 4], [2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. If not provided,  it is inferred from\n *     `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function tensor3d(values, shape, dtype) {\n    assertNonNull(values);\n    if (shape != null && shape.length !== 3) {\n        throw new Error('tensor3d() requires shape to have three numbers');\n    }\n    const inferredShape = inferShape(values, dtype);\n    if (inferredShape.length !== 3 && inferredShape.length !== 1) {\n        throw new Error('tensor3d() requires values to be number[][][] or flat/TypedArray');\n    }\n    if (inferredShape.length === 1 && shape == null) {\n        throw new Error('tensor3d() requires shape to be provided when `values` ' +\n            'are a flat array');\n    }\n    return makeTensor(values, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVuc29yM2QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL29wcy90ZW5zb3IzZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFHSCxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFHOUMsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLFNBQVMsQ0FBQztBQUN0QyxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFFN0M7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FzQkc7QUFDSCxNQUFNLFVBQVUsUUFBUSxDQUNwQixNQUFvQixFQUFFLEtBQWdDLEVBQ3RELEtBQWdCO0lBQ2xCLGFBQWEsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN0QixJQUFJLEtBQUssSUFBSSxJQUFJLElBQUksS0FBSyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7UUFDdkMsTUFBTSxJQUFJLEtBQUssQ0FBQyxpREFBaUQsQ0FBQyxDQUFDO0tBQ3BFO0lBQ0QsTUFBTSxhQUFhLEdBQUcsVUFBVSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNoRCxJQUFJLGFBQWEsQ0FBQyxNQUFNLEtBQUssQ0FBQyxJQUFJLGFBQWEsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1FBQzVELE1BQU0sSUFBSSxLQUFLLENBQ1gsa0VBQWtFLENBQUMsQ0FBQztLQUN6RTtJQUNELElBQUksYUFBYSxDQUFDLE1BQU0sS0FBSyxDQUFDLElBQUksS0FBSyxJQUFJLElBQUksRUFBRTtRQUMvQyxNQUFNLElBQUksS0FBSyxDQUNYLHlEQUF5RDtZQUN6RCxrQkFBa0IsQ0FBQyxDQUFDO0tBQ3pCO0lBQ0QsT0FBTyxVQUFVLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxhQUFhLEVBQUUsS0FBSyxDQUFhLENBQUM7QUFDckUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE4IEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtUZW5zb3IzRH0gZnJvbSAnLi4vdGVuc29yJztcbmltcG9ydCB7aW5mZXJTaGFwZX0gZnJvbSAnLi4vdGVuc29yX3V0aWxfZW52JztcbmltcG9ydCB7VGVuc29yTGlrZTNEfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQge0RhdGFUeXBlfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQge2Fzc2VydE5vbk51bGx9IGZyb20gJy4uL3V0aWwnO1xuaW1wb3J0IHttYWtlVGVuc29yfSBmcm9tICcuL3RlbnNvcl9vcHNfdXRpbCc7XG5cbi8qKlxuICogQ3JlYXRlcyByYW5rLTMgYHRmLlRlbnNvcmAgd2l0aCB0aGUgcHJvdmlkZWQgdmFsdWVzLCBzaGFwZSBhbmQgZHR5cGUuXG4gKlxuICogVGhlIHNhbWUgZnVuY3Rpb25hbGl0eSBjYW4gYmUgYWNoaWV2ZWQgd2l0aCBgdGYudGVuc29yYCwgYnV0IGluIGdlbmVyYWxcbiAqIHdlIHJlY29tbWVuZCB1c2luZyBgdGYudGVuc29yM2RgIGFzIGl0IG1ha2VzIHRoZSBjb2RlIG1vcmUgcmVhZGFibGUuXG4gKlxuICogIGBgYGpzXG4gKiAvLyBQYXNzIGEgbmVzdGVkIGFycmF5LlxuICogdGYudGVuc29yM2QoW1tbMV0sIFsyXV0sIFtbM10sIFs0XV1dKS5wcmludCgpO1xuICogYGBgXG4gKiBgYGBqc1xuICogLy8gUGFzcyBhIGZsYXQgYXJyYXkgYW5kIHNwZWNpZnkgYSBzaGFwZS5cbiAqIHRmLnRlbnNvcjNkKFsxLCAyLCAzLCA0XSwgWzIsIDIsIDFdKS5wcmludCgpO1xuICogYGBgXG4gKlxuICogQHBhcmFtIHZhbHVlcyBUaGUgdmFsdWVzIG9mIHRoZSB0ZW5zb3IuIENhbiBiZSBuZXN0ZWQgYXJyYXkgb2YgbnVtYmVycyxcbiAqICAgICBvciBhIGZsYXQgYXJyYXksIG9yIGEgYFR5cGVkQXJyYXlgLlxuICogQHBhcmFtIHNoYXBlIFRoZSBzaGFwZSBvZiB0aGUgdGVuc29yLiBJZiBub3QgcHJvdmlkZWQsICBpdCBpcyBpbmZlcnJlZCBmcm9tXG4gKiAgICAgYHZhbHVlc2AuXG4gKiBAcGFyYW0gZHR5cGUgVGhlIGRhdGEgdHlwZS5cbiAqXG4gKiBAZG9jIHtoZWFkaW5nOiAnVGVuc29ycycsIHN1YmhlYWRpbmc6ICdDcmVhdGlvbid9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0ZW5zb3IzZChcbiAgICB2YWx1ZXM6IFRlbnNvckxpa2UzRCwgc2hhcGU/OiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl0sXG4gICAgZHR5cGU/OiBEYXRhVHlwZSk6IFRlbnNvcjNEIHtcbiAgYXNzZXJ0Tm9uTnVsbCh2YWx1ZXMpO1xuICBpZiAoc2hhcGUgIT0gbnVsbCAmJiBzaGFwZS5sZW5ndGggIT09IDMpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3RlbnNvcjNkKCkgcmVxdWlyZXMgc2hhcGUgdG8gaGF2ZSB0aHJlZSBudW1iZXJzJyk7XG4gIH1cbiAgY29uc3QgaW5mZXJyZWRTaGFwZSA9IGluZmVyU2hhcGUodmFsdWVzLCBkdHlwZSk7XG4gIGlmIChpbmZlcnJlZFNoYXBlLmxlbmd0aCAhPT0gMyAmJiBpbmZlcnJlZFNoYXBlLmxlbmd0aCAhPT0gMSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ3RlbnNvcjNkKCkgcmVxdWlyZXMgdmFsdWVzIHRvIGJlIG51bWJlcltdW11bXSBvciBmbGF0L1R5cGVkQXJyYXknKTtcbiAgfVxuICBpZiAoaW5mZXJyZWRTaGFwZS5sZW5ndGggPT09IDEgJiYgc2hhcGUgPT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ3RlbnNvcjNkKCkgcmVxdWlyZXMgc2hhcGUgdG8gYmUgcHJvdmlkZWQgd2hlbiBgdmFsdWVzYCAnICtcbiAgICAgICAgJ2FyZSBhIGZsYXQgYXJyYXknKTtcbiAgfVxuICByZXR1cm4gbWFrZVRlbnNvcih2YWx1ZXMsIHNoYXBlLCBpbmZlcnJlZFNoYXBlLCBkdHlwZSkgYXMgVGVuc29yM0Q7XG59XG4iXX0=","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { env } from '../environment';\nimport { FromPixels } from '../kernel_names';\nimport { getKernel } from '../kernel_registry';\nimport { Tensor } from '../tensor';\nimport { convertToTensor } from '../tensor_util_env';\nimport { cast } from './cast';\nimport { op } from './operation';\nimport { tensor3d } from './tensor3d';\nlet fromPixels2DContext;\n/**\n * Creates a `tf.Tensor` from an image.\n *\n * ```js\n * const image = new ImageData(1, 1);\n * image.data[0] = 100;\n * image.data[1] = 150;\n * image.data[2] = 200;\n * image.data[3] = 255;\n *\n * tf.browser.fromPixels(image).print();\n * ```\n *\n * @param pixels The input image to construct the tensor from. The\n * supported image types are all 4-channel. You can also pass in an image\n * object with following attributes:\n * `{data: Uint8Array; width: number; height: number}`\n * @param numChannels The number of channels of the output tensor. A\n * numChannels value less than 4 allows you to ignore channels. Defaults to\n * 3 (ignores alpha channel of input image).\n *\n * @returns A Tensor3D with the shape `[height, width, numChannels]`.\n *\n * Note: fromPixels can be lossy in some cases, same image may result in\n * slightly different tensor values, if rendered by different rendering\n * engines. This means that results from different browsers, or even same\n * browser with CPU and GPU rendering engines can be different. See discussion\n * in details:\n * https://github.com/tensorflow/tfjs/issues/5482\n *\n * @doc {heading: 'Browser', namespace: 'browser', ignoreCI: true}\n */\nfunction fromPixels_(pixels, numChannels = 3) {\n    // Sanity checks.\n    if (numChannels > 4) {\n        throw new Error('Cannot construct Tensor with more than 4 channels from pixels.');\n    }\n    if (pixels == null) {\n        throw new Error('pixels passed to tf.browser.fromPixels() can not be null');\n    }\n    let isPixelData = false;\n    let isImageData = false;\n    let isVideo = false;\n    let isImage = false;\n    let isCanvasLike = false;\n    let isImageBitmap = false;\n    if (pixels.data instanceof Uint8Array) {\n        isPixelData = true;\n    }\n    else if (typeof (ImageData) !== 'undefined' && pixels instanceof ImageData) {\n        isImageData = true;\n    }\n    else if (typeof (HTMLVideoElement) !== 'undefined' &&\n        pixels instanceof HTMLVideoElement) {\n        isVideo = true;\n    }\n    else if (typeof (HTMLImageElement) !== 'undefined' &&\n        pixels instanceof HTMLImageElement) {\n        isImage = true;\n        // tslint:disable-next-line: no-any\n    }\n    else if (pixels.getContext != null) {\n        isCanvasLike = true;\n    }\n    else if (typeof (ImageBitmap) !== 'undefined' && pixels instanceof ImageBitmap) {\n        isImageBitmap = true;\n    }\n    else {\n        throw new Error('pixels passed to tf.browser.fromPixels() must be either an ' +\n            `HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData ` +\n            `in browser, or OffscreenCanvas, ImageData in webworker` +\n            ` or {data: Uint32Array, width: number, height: number}, ` +\n            `but was ${pixels.constructor.name}`);\n    }\n    if (isVideo) {\n        const HAVE_CURRENT_DATA_READY_STATE = 2;\n        if (isVideo &&\n            pixels.readyState <\n                HAVE_CURRENT_DATA_READY_STATE) {\n            throw new Error('The video element has not loaded data yet. Please wait for ' +\n                '`loadeddata` event on the <video> element.');\n        }\n    }\n    // If the current backend has 'FromPixels' registered, it has a more\n    // efficient way of handling pixel uploads, so we call that.\n    const kernel = getKernel(FromPixels, ENGINE.backendName);\n    if (kernel != null) {\n        const inputs = { pixels };\n        const attrs = { numChannels };\n        return ENGINE.runKernel(FromPixels, inputs, attrs);\n    }\n    const [width, height] = isVideo ?\n        [\n            pixels.videoWidth,\n            pixels.videoHeight\n        ] :\n        [pixels.width, pixels.height];\n    let vals;\n    if (isCanvasLike) {\n        vals =\n            // tslint:disable-next-line:no-any\n            pixels.getContext('2d').getImageData(0, 0, width, height).data;\n    }\n    else if (isImageData || isPixelData) {\n        vals = pixels.data;\n    }\n    else if (isImage || isVideo || isImageBitmap) {\n        if (fromPixels2DContext == null) {\n            if (typeof document === 'undefined') {\n                if (typeof OffscreenCanvas !== 'undefined' &&\n                    typeof OffscreenCanvasRenderingContext2D !== 'undefined') {\n                    // @ts-ignore\n                    fromPixels2DContext = new OffscreenCanvas(1, 1).getContext('2d');\n                }\n                else {\n                    throw new Error('Cannot parse input in current context. ' +\n                        'Reason: OffscreenCanvas Context2D rendering is not supported.');\n                }\n            }\n            else {\n                fromPixels2DContext = document.createElement('canvas').getContext('2d');\n            }\n        }\n        fromPixels2DContext.canvas.width = width;\n        fromPixels2DContext.canvas.height = height;\n        fromPixels2DContext.drawImage(pixels, 0, 0, width, height);\n        vals = fromPixels2DContext.getImageData(0, 0, width, height).data;\n    }\n    let values;\n    if (numChannels === 4) {\n        values = new Int32Array(vals);\n    }\n    else {\n        const numPixels = width * height;\n        values = new Int32Array(numPixels * numChannels);\n        for (let i = 0; i < numPixels; i++) {\n            for (let channel = 0; channel < numChannels; ++channel) {\n                values[i * numChannels + channel] = vals[i * 4 + channel];\n            }\n        }\n    }\n    const outShape = [height, width, numChannels];\n    return tensor3d(values, outShape, 'int32');\n}\n// Helper functions for |fromPixelsAsync| to check whether the input can\n// be wrapped into imageBitmap.\nfunction isPixelData(pixels) {\n    return (pixels != null) && (pixels.data instanceof Uint8Array);\n}\nfunction isImageBitmapFullySupported() {\n    return typeof window !== 'undefined' &&\n        typeof (ImageBitmap) !== 'undefined' &&\n        window.hasOwnProperty('createImageBitmap');\n}\nfunction isNonEmptyPixels(pixels) {\n    return pixels != null && pixels.width !== 0 && pixels.height !== 0;\n}\nfunction canWrapPixelsToImageBitmap(pixels) {\n    return isImageBitmapFullySupported() && !(pixels instanceof ImageBitmap) &&\n        isNonEmptyPixels(pixels) && !isPixelData(pixels);\n}\n/**\n * Creates a `tf.Tensor` from an image in async way.\n *\n * ```js\n * const image = new ImageData(1, 1);\n * image.data[0] = 100;\n * image.data[1] = 150;\n * image.data[2] = 200;\n * image.data[3] = 255;\n *\n * (await tf.browser.fromPixelsAsync(image)).print();\n * ```\n * This API is the async version of fromPixels. The API will first\n * check |WRAP_TO_IMAGEBITMAP| flag, and try to wrap the input to\n * imageBitmap if the flag is set to true.\n *\n * @param pixels The input image to construct the tensor from. The\n * supported image types are all 4-channel. You can also pass in an image\n * object with following attributes:\n * `{data: Uint8Array; width: number; height: number}`\n * @param numChannels The number of channels of the output tensor. A\n * numChannels value less than 4 allows you to ignore channels. Defaults to\n * 3 (ignores alpha channel of input image).\n *\n * @doc {heading: 'Browser', namespace: 'browser', ignoreCI: true}\n */\nexport async function fromPixelsAsync(pixels, numChannels = 3) {\n    let inputs = null;\n    // Check whether the backend needs to wrap |pixels| to imageBitmap and\n    // whether |pixels| can be wrapped to imageBitmap.\n    if (env().getBool('WRAP_TO_IMAGEBITMAP') &&\n        canWrapPixelsToImageBitmap(pixels)) {\n        // Force the imageBitmap creation to not do any premultiply alpha\n        // ops.\n        let imageBitmap;\n        try {\n            // wrap in try-catch block, because createImageBitmap may not work\n            // properly in some browsers, e.g.\n            // https://bugzilla.mozilla.org/show_bug.cgi?id=1335594\n            // tslint:disable-next-line: no-any\n            imageBitmap = await createImageBitmap(pixels, { premultiplyAlpha: 'none' });\n        }\n        catch (e) {\n            imageBitmap = null;\n        }\n        // createImageBitmap will clip the source size.\n        // In some cases, the input will have larger size than its content.\n        // E.g. new Image(10, 10) but with 1 x 1 content. Using\n        // createImageBitmap will clip the size from 10 x 10 to 1 x 1, which\n        // is not correct. We should avoid wrapping such resouce to\n        // imageBitmap.\n        if (imageBitmap != null && imageBitmap.width === pixels.width &&\n            imageBitmap.height === pixels.height) {\n            inputs = imageBitmap;\n        }\n        else {\n            inputs = pixels;\n        }\n    }\n    else {\n        inputs = pixels;\n    }\n    return fromPixels_(inputs, numChannels);\n}\n/**\n * Draws a `tf.Tensor` of pixel values to a byte array or optionally a\n * canvas.\n *\n * When the dtype of the input is 'float32', we assume values in the range\n * [0-1]. Otherwise, when input is 'int32', we assume values in the range\n * [0-255].\n *\n * Returns a promise that resolves when the canvas has been drawn to.\n *\n * @param img A rank-2 tensor with shape `[height, width]`, or a rank-3 tensor\n * of shape `[height, width, numChannels]`. If rank-2, draws grayscale. If\n * rank-3, must have depth of 1, 3 or 4. When depth of 1, draws\n * grayscale. When depth of 3, we draw with the first three components of\n * the depth dimension corresponding to r, g, b and alpha = 1. When depth of\n * 4, all four components of the depth dimension correspond to r, g, b, a.\n * @param canvas The canvas to draw to.\n *\n * @doc {heading: 'Browser', namespace: 'browser'}\n */\nexport async function toPixels(img, canvas) {\n    let $img = convertToTensor(img, 'img', 'toPixels');\n    if (!(img instanceof Tensor)) {\n        // Assume int32 if user passed a native array.\n        const originalImgTensor = $img;\n        $img = cast(originalImgTensor, 'int32');\n        originalImgTensor.dispose();\n    }\n    if ($img.rank !== 2 && $img.rank !== 3) {\n        throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${$img.rank}.`);\n    }\n    const [height, width] = $img.shape.slice(0, 2);\n    const depth = $img.rank === 2 ? 1 : $img.shape[2];\n    if (depth > 4 || depth === 2) {\n        throw new Error(`toPixels only supports depth of size ` +\n            `1, 3 or 4 but got ${depth}`);\n    }\n    if ($img.dtype !== 'float32' && $img.dtype !== 'int32') {\n        throw new Error(`Unsupported type for toPixels: ${$img.dtype}.` +\n            ` Please use float32 or int32 tensors.`);\n    }\n    const data = await $img.data();\n    const multiplier = $img.dtype === 'float32' ? 255 : 1;\n    const bytes = new Uint8ClampedArray(width * height * 4);\n    for (let i = 0; i < height * width; ++i) {\n        const rgba = [0, 0, 0, 255];\n        for (let d = 0; d < depth; d++) {\n            const value = data[i * depth + d];\n            if ($img.dtype === 'float32') {\n                if (value < 0 || value > 1) {\n                    throw new Error(`Tensor values for a float32 Tensor must be in the ` +\n                        `range [0 - 1] but encountered ${value}.`);\n                }\n            }\n            else if ($img.dtype === 'int32') {\n                if (value < 0 || value > 255) {\n                    throw new Error(`Tensor values for a int32 Tensor must be in the ` +\n                        `range [0 - 255] but encountered ${value}.`);\n                }\n            }\n            if (depth === 1) {\n                rgba[0] = value * multiplier;\n                rgba[1] = value * multiplier;\n                rgba[2] = value * multiplier;\n            }\n            else {\n                rgba[d] = value * multiplier;\n            }\n        }\n        const j = i * 4;\n        bytes[j + 0] = Math.round(rgba[0]);\n        bytes[j + 1] = Math.round(rgba[1]);\n        bytes[j + 2] = Math.round(rgba[2]);\n        bytes[j + 3] = Math.round(rgba[3]);\n    }\n    if (canvas != null) {\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        const imageData = new ImageData(bytes, width, height);\n        ctx.putImageData(imageData, 0, 0);\n    }\n    if ($img !== img) {\n        $img.dispose();\n    }\n    return bytes;\n}\nexport const fromPixels = op({ fromPixels_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJvd3Nlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29yZS9zcmMvb3BzL2Jyb3dzZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUNqQyxPQUFPLEVBQUMsR0FBRyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDbkMsT0FBTyxFQUFDLFVBQVUsRUFBb0MsTUFBTSxpQkFBaUIsQ0FBQztBQUM5RSxPQUFPLEVBQUMsU0FBUyxFQUFlLE1BQU0sb0JBQW9CLENBQUM7QUFDM0QsT0FBTyxFQUFDLE1BQU0sRUFBcUIsTUFBTSxXQUFXLENBQUM7QUFFckQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBR25ELE9BQU8sRUFBQyxJQUFJLEVBQUMsTUFBTSxRQUFRLENBQUM7QUFDNUIsT0FBTyxFQUFDLEVBQUUsRUFBQyxNQUFNLGFBQWEsQ0FBQztBQUMvQixPQUFPLEVBQUMsUUFBUSxFQUFDLE1BQU0sWUFBWSxDQUFDO0FBRXBDLElBQUksbUJBQTZDLENBQUM7QUFFbEQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0ErQkc7QUFDSCxTQUFTLFdBQVcsQ0FDaEIsTUFDNEIsRUFDNUIsV0FBVyxHQUFHLENBQUM7SUFDakIsaUJBQWlCO0lBQ2pCLElBQUksV0FBVyxHQUFHLENBQUMsRUFBRTtRQUNuQixNQUFNLElBQUksS0FBSyxDQUNYLGdFQUFnRSxDQUFDLENBQUM7S0FDdkU7SUFDRCxJQUFJLE1BQU0sSUFBSSxJQUFJLEVBQUU7UUFDbEIsTUFBTSxJQUFJLEtBQUssQ0FBQywwREFBMEQsQ0FBQyxDQUFDO0tBQzdFO0lBQ0QsSUFBSSxXQUFXLEdBQUcsS0FBSyxDQUFDO0lBQ3hCLElBQUksV0FBVyxHQUFHLEtBQUssQ0FBQztJQUN4QixJQUFJLE9BQU8sR0FB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QUNoQixJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7S0FDaEI7SUFDRCxPQUFPLEtBQUssQ0FBQztBQUNmLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsRUFBRSxDQUFDLEVBQUMsV0FBVyxFQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtFTkdJTkV9IGZyb20gJy4uL2VuZ2luZSc7XG5pbXBvcnQge2Vudn0gZnJvbSAnLi4vZW52aXJvbm1lbnQnO1xuaW1wb3J0IHtGcm9tUGl4ZWxzLCBGcm9tUGl4ZWxzQXR0cnMsIEZyb21QaXhlbHNJbnB1dHN9IGZyb20gJy4uL2tlcm5lbF9uYW1lcyc7XG5pbXBvcnQge2dldEtlcm5lbCwgTmFtZWRBdHRyTWFwfSBmcm9tICcuLi9rZXJuZWxfcmVnaXN0cnknO1xuaW1wb3J0IHtUZW5zb3IsIFRlbnNvcjJELCBUZW5zb3IzRH0gZnJvbSAnLi4vdGVuc29yJztcbmltcG9ydCB7TmFtZWRUZW5zb3JNYXB9IGZyb20gJy4uL3RlbnNvcl90eXBlcyc7XG5pbXBvcnQge2NvbnZlcnRUb1RlbnNvcn0gZnJvbSAnLi4vdGVuc29yX3V0aWxfZW52JztcbmltcG9ydCB7UGl4ZWxEYXRhLCBUZW5zb3JMaWtlfSBmcm9tICcuLi90eXBlcyc7XG5cbmltcG9ydCB7Y2FzdH0gZnJvbSAnLi9jYXN0JztcbmltcG9ydCB7b3B9IGZyb20gJy4vb3BlcmF0aW9uJztcbmltcG9ydCB7dGVuc29yM2R9IGZyb20gJy4vdGVuc29yM2QnO1xuXG5sZXQgZnJvbVBpeGVsczJEQ29udGV4dDogQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBgdGYuVGVuc29yYCBmcm9tIGFuIGltYWdlLlxuICpcbiAqIGBgYGpzXG4gKiBjb25zdCBpbWFnZSA9IG5ldyBJbWFnZURhdGEoMSwgMSk7XG4gKiBpbWFnZS5kYXRhWzBdID0gMTAwO1xuICogaW1hZ2UuZGF0YVsxXSA9IDE1MDtcbiAqIGltYWdlLmRhdGFbMl0gPSAyMDA7XG4gKiBpbWFnZS5kYXRhWzNdID0gMjU1O1xuICpcbiAqIHRmLmJyb3dzZXIuZnJvbVBpeGVscyhpbWFnZSkucHJpbnQoKTtcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBwaXhlbHMgVGhlIGlucHV0IGltYWdlIHRvIGNvbnN0cnVjdCB0aGUgdGVuc29yIGZyb20uIFRoZVxuICogc3VwcG9ydGVkIGltYWdlIHR5cGVzIGFyZSBhbGwgNC1jaGFubmVsLiBZb3UgY2FuIGFsc28gcGFzcyBpbiBhbiBpbWFnZVxuICogb2JqZWN0IHdpdGggZm9sbG93aW5nIGF0dHJpYnV0ZXM6XG4gKiBge2RhdGE6IFVpbnQ4QXJyYXk7IHdpZHRoOiBudW1iZXI7IGhlaWdodDogbnVtYmVyfWBcbiAqIEBwYXJhbSBudW1DaGFubmVscyBUaGUgbnVtYmVyIG9mIGNoYW5uZWxzIG9mIHRoZSBvdXRwdXQgdGVuc29yLiBBXG4gKiBudW1DaGFubmVscyB2YWx1ZSBsZXNzIHRoYW4gNCBhbGxvd3MgeW91IHRvIGlnbm9yZSBjaGFubmVscy4gRGVmYXVsdHMgdG9cbiAqIDMgKGlnbm9yZXMgYWxwaGEgY2hhbm5lbCBvZiBpbnB1dCBpbWFnZSkuXG4gKlxuICogQHJldHVybnMgQSBUZW5zb3IzRCB3aXRoIHRoZSBzaGFwZSBgW2hlaWdodCwgd2lkdGgsIG51bUNoYW5uZWxzXWAuXG4gKlxuICogTm90ZTogZnJvbVBpeGVscyBjYW4gYmUgbG9zc3kgaW4gc29tZSBjYXNlcywgc2FtZSBpbWFnZSBtYXkgcmVzdWx0IGluXG4gKiBzbGlnaHRseSBkaWZmZXJlbnQgdGVuc29yIHZhbHVlcywgaWYgcmVuZGVyZWQgYnkgZGlmZmVyZW50IHJlbmRlcmluZ1xuICogZW5naW5lcy4gVGhpcyBtZWFucyB0aGF0IHJlc3VsdHMgZnJvbSBkaWZmZXJlbnQgYnJvd3NlcnMsIG9yIGV2ZW4gc2FtZVxuICogYnJvd3NlciB3aXRoIENQVSBhbmQgR1BVIHJlbmRlcmluZyBlbmdpbmVzIGNhbiBiZSBkaWZmZXJlbnQuIFNlZSBkaXNjdXNzaW9uXG4gKiBpbiBkZXRhaWxzOlxuICogaHR0cHM6Ly9naXRodWIuY29tL3RlbnNvcmZsb3cvdGZqcy9pc3N1ZXMvNTQ4MlxuICpcbiAqIEBkb2Mge2hlYWRpbmc6ICdCcm93c2VyJywgbmFtZXNwYWNlOiAnYnJvd3NlcicsIGlnbm9yZUNJOiB0cnVlfVxuICovXG5mdW5jdGlvbiBmcm9tUGl4ZWxzXyhcbiAgICBwaXhlbHM6IFBpeGVsRGF0YXxJbWFnZURhdGF8SFRNTEltYWdlRWxlbWVudHxIVE1MQ2FudmFzRWxlbWVudHxcbiAgICBIVE1MVmlkZW9FbGVtZW50fEltYWdlQml0bWFwLFxuICAgIG51bUNoYW5uZWxzID0gMyk6IFRlbnNvcjNEIHtcbiAgLy8gU2FuaXR5IGNoZWNrcy5cbiAgaWYgKG51bUNoYW5uZWxzID4gNCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ0Nhbm5vdCBjb25zdHJ1Y3QgVGVuc29yIHdpdGggbW9yZSB0aGFuIDQgY2hhbm5lbHMgZnJvbSBwaXhlbHMuJyk7XG4gIH1cbiAgaWYgKHBpeGVscyA9PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwaXhlbHMgcGFzc2VkIHRvIHRmLmJyb3dzZXIuZnJvbVBpeGVscygpIGNhbiBub3QgYmUgbnVsbCcpO1xuICB9XG4gIGxldCBpc1BpeGVsRGF0YSA9IGZhbHNlO1xuICBsZXQgaXNJbWFnZURhdGEgPSBmYWxzZTtcbiAgbGV0IGlzVmlkZW8gPSBmYWxzZTtcbiAgbGV0IGlzSW1hZ2UgPSBmYWxzZTtcbiAgbGV0IGlzQ2FudmFzTGlrZSA9IGZhbHNlO1xuICBsZXQgaXNJbWFnZUJpdG1hcCA9IGZhbHNlO1xuICBpZiAoKHBpeGVscyBhcyBQaXhlbERhdGEpLmRhdGEgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgaXNQaXhlbERhdGEgPSB0cnVlO1xuICB9IGVsc2UgaWYgKFxuICAgICAgdHlwZW9mIChJbWFnZURhdGEpICE9PSAndW5kZWZpbmVkJyAmJiBwaXhlbHMgaW5zdGFuY2VvZiBJbWFnZURhdGEpIHtcbiAgICBpc0ltYWdlRGF0YSA9IHRydWU7XG4gIH0gZWxzZSBpZiAoXG4gICAgICB0eXBlb2YgKEhUTUxWaWRlb0VsZW1lbnQpICE9PSAndW5kZWZpbmVkJyAmJlxuICAgICAgcGl4ZWxzIGluc3RhbmNlb2YgSFRNTFZpZGVvRWxlbWVudCkge1xuICAgIGlzVmlkZW8gPSB0cnVlO1xuICB9IGVsc2UgaWYgKFxuICAgICAgdHlwZW9mIChIVE1MSW1hZ2VFbGVtZW50KSAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICAgIHBpeGVscyBpbnN0YW5jZW9mIEhUTUxJbWFnZUVsZW1lbnQpIHtcbiAgICBpc0ltYWdlID0gdHJ1ZTtcbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IG5vLWFueVxuICB9IGVsc2UgaWYgKChwaXhlbHMgYXMgYW55KS5nZXRDb250ZXh0ICE9IG51bGwpIHtcbiAgICBpc0NhbnZhc0xpa2UgPSB0cnVlO1xuICB9IGVsc2UgaWYgKFxuICAgICAgdHlwZW9mIChJbWFnZUJpdG1hcCkgIT09ICd1bmRlZmluZWQnICYmIHBpeGVscyBpbnN0YW5jZW9mIEltYWdlQml0bWFwKSB7XG4gICAgaXNJbWFnZUJpdG1hcCA9IHRydWU7XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAncGl4ZWxzIHBhc3NlZCB0byB0Zi5icm93c2VyLmZyb21QaXhlbHMoKSBtdXN0IGJlIGVpdGhlciBhbiAnICtcbiAgICAgICAgYEhUTUxWaWRlb0VsZW1lbnQsIEhUTUxJbWFnZUVsZW1lbnQsIEhUTUxDYW52YXNFbGVtZW50LCBJbWFnZURhdGEgYCArXG4gICAgICAgIGBpbiBicm93c2VyLCBvciBPZmZzY3JlZW5DYW52YXMsIEltYWdlRGF0YSBpbiB3ZWJ3b3JrZXJgICtcbiAgICAgICAgYCBvciB7ZGF0YTogVWludDMyQXJyYXksIHdpZHRoOiBudW1iZXIsIGhlaWdodDogbnVtYmVyfSwgYCArXG4gICAgICAgIGBidXQgd2FzICR7KHBpeGVscyBhcyB7fSkuY29uc3RydWN0b3IubmFtZX1gKTtcbiAgfVxuICBpZiAoaXNWaWRlbykge1xuICAgIGNvbnN0IEhBVkVfQ1VSUkVOVF9EQVRBX1JFQURZX1NUQVRFID0gMjtcbiAgICBpZiAoaXNWaWRlbyAmJlxuICAgICAgICAocGl4ZWxzIGFzIEhUTUxWaWRlb0VsZW1lbnQpLnJlYWR5U3RhdGUgPFxuICAgICAgICAgICAgSEFWRV9DVVJSRU5UX0RBVEFfUkVBRFlfU1RBVEUpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICAnVGhlIHZpZGVvIGVsZW1lbnQgaGFzIG5vdCBsb2FkZWQgZGF0YSB5ZXQuIFBsZWFzZSB3YWl0IGZvciAnICtcbiAgICAgICAgICAnYGxvYWRlZGRhdGFgIGV2ZW50IG9uIHRoZSA8dmlkZW8+IGVsZW1lbnQuJyk7XG4gICAgfVxuICB9XG4gIC8vIElmIHRoZSBjdXJyZW50IGJhY2tlbmQgaGFzICdGcm9tUGl4ZWxzJyByZWdpc3RlcmVkLCBpdCBoYXMgYSBtb3JlXG4gIC8vIGVmZmljaWVudCB3YXkgb2YgaGFuZGxpbmcgcGl4ZWwgdXBsb2Fkcywgc28gd2UgY2FsbCB0aGF0LlxuICBjb25zdCBrZXJuZWwgPSBnZXRLZXJuZWwoRnJvbVBpeGVscywgRU5HSU5FLmJhY2tlbmROYW1lKTtcbiAgaWYgKGtlcm5lbCAhPSBudWxsKSB7XG4gICAgY29uc3QgaW5wdXRzOiBGcm9tUGl4ZWxzSW5wdXRzID0ge3BpeGVsc307XG4gICAgY29uc3QgYXR0cnM6IEZyb21QaXhlbHNBdHRycyA9IHtudW1DaGFubmVsc307XG4gICAgcmV0dXJuIEVOR0lORS5ydW5LZXJuZWwoXG4gICAgICAgIEZyb21QaXhlbHMsIGlucHV0cyBhcyB7fSBhcyBOYW1lZFRlbnNvck1hcCxcbiAgICAgICAgYXR0cnMgYXMge30gYXMgTmFtZWRBdHRyTWFwKTtcbiAgfVxuXG4gIGNvbnN0IFt3aWR0aCwgaGVpZ2h0XSA9IGlzVmlkZW8gP1xuICAgICAgW1xuICAgICAgICAocGl4ZWxzIGFzIEhUTUxWaWRlb0VsZW1lbnQpLnZpZGVvV2lkdGgsXG4gICAgICAgIChwaXhlbHMgYXMgSFRNTFZpZGVvRWxlbWVudCkudmlkZW9IZWlnaHRcbiAgICAgIF0gOlxuICAgICAgW3BpeGVscy53aWR0aCwgcGl4ZWxzLmhlaWdodF07XG4gIGxldCB2YWxzOiBVaW50OENsYW1wZWRBcnJheXxVaW50OEFycmF5O1xuXG4gIGlmIChpc0NhbnZhc0xpa2UpIHtcbiAgICB2YWxzID1cbiAgICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLWFueVxuICAgICAgICAocGl4ZWxzIGFzIGFueSkuZ2V0Q29udGV4dCgnMmQnKS5nZXRJbWFnZURhdGEoMCwgMCwgd2lkdGgsIGhlaWdodCkuZGF0YTtcbiAgfSBlbHNlIGlmIChpc0ltYWdlRGF0YSB8fCBpc1BpeGVsRGF0YSkge1xuICAgIHZhbHMgPSAocGl4ZWxzIGFzIFBpeGVsRGF0YSB8IEltYWdlRGF0YSkuZGF0YTtcbiAgfSBlbHNlIGlmIChpc0ltYWdlIHx8IGlzVmlkZW8gfHwgaXNJbWFnZUJpdG1hcCkge1xuICAgIGlmIChmcm9tUGl4ZWxzMkRDb250ZXh0ID09IG51bGwpIHtcbiAgICAgIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGlmICh0eXBlb2YgT2Zmc2NyZWVuQ2FudmFzICE9PSAndW5kZWZpbmVkJyAmJlxuICAgICAgICAgICAgdHlwZW9mIE9mZnNjcmVlbkNhbnZhc1JlbmRlcmluZ0NvbnRleHQyRCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgICAgZnJvbVBpeGVsczJEQ29udGV4dCA9IG5ldyBPZmZzY3JlZW5DYW52YXMoMSwgMSkuZ2V0Q29udGV4dCgnMmQnKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICAgICdDYW5ub3QgcGFyc2UgaW5wdXQgaW4gY3VycmVudCBjb250ZXh0LiAnICtcbiAgICAgICAgICAgICAgJ1JlYXNvbjogT2Zmc2NyZWVuQ2FudmFzIENvbnRleHQyRCByZW5kZXJpbmcgaXMgbm90IHN1cHBvcnRlZC4nKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZnJvbVBpeGVsczJEQ29udGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpLmdldENvbnRleHQoJzJkJyk7XG4gICAgICB9XG4gICAgfVxuICAgIGZyb21QaXhlbHMyRENvbnRleHQuY2FudmFzLndpZHRoID0gd2lkdGg7XG4gICAgZnJvbVBpeGVsczJEQ29udGV4dC5jYW52YXMuaGVpZ2h0ID0gaGVpZ2h0O1xuICAgIGZyb21QaXhlbHMyRENvbnRleHQuZHJhd0ltYWdlKFxuICAgICAgICBwaXhlbHMgYXMgSFRNTFZpZGVvRWxlbWVudCwgMCwgMCwgd2lkdGgsIGhlaWdodCk7XG4gICAgdmFscyA9IGZyb21QaXhlbHMyRENvbnRleHQuZ2V0SW1hZ2VEYXRhKDAsIDAsIHdpZHRoLCBoZWlnaHQpLmRhdGE7XG4gIH1cbiAgbGV0IHZhbHVlczogSW50MzJBcnJheTtcbiAgaWYgKG51bUNoYW5uZWxzID09PSA0KSB7XG4gICAgdmFsdWVzID0gbmV3IEludDMyQXJyYXkodmFscyk7XG4gIH0gZWxzZSB7XG4gICAgY29uc3QgbnVtUGl4ZWxzID0gd2lkdGggKiBoZWlnaHQ7XG4gICAgdmFsdWVzID0gbmV3IEludDMyQXJyYXkobnVtUGl4ZWxzICogbnVtQ2hhbm5lbHMpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbnVtUGl4ZWxzOyBpKyspIHtcbiAgICAgIGZvciAobGV0IGNoYW5uZWwgPSAwOyBjaGFubmVsIDwgbnVtQ2hhbm5lbHM7ICsrY2hhbm5lbCkge1xuICAgICAgICB2YWx1ZXNbaSAqIG51bUNoYW5uZWxzICsgY2hhbm5lbF0gPSB2YWxzW2kgKiA0ICsgY2hhbm5lbF07XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGNvbnN0IG91dFNoYXBlOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl0gPSBbaGVpZ2h0LCB3aWR0aCwgbnVtQ2hhbm5lbHNdO1xuICByZXR1cm4gdGVuc29yM2QodmFsdWVzLCBvdXRTaGFwZSwgJ2ludDMyJyk7XG59XG5cbi8vIEhlbHBlciBmdW5jdGlvbnMgZm9yIHxmcm9tUGl4ZWxzQXN5bmN8IHRvIGNoZWNrIHdoZXRoZXIgdGhlIGlucHV0IGNhblxuLy8gYmUgd3JhcHBlZCBpbnRvIGltYWdlQml0bWFwLlxuZnVuY3Rpb24gaXNQaXhlbERhdGEocGl4ZWxzOiBQaXhlbERhdGF8SW1hZ2VEYXRhfEhUTUxJbWFnZUVsZW1lbnR8XG4gICAgICAgICAgICAgICAgICAgICBIVE1MQ2FudmFzRWxlbWVudHxIVE1MVmlkZW9FbGVtZW50fFxuICAgICAgICAgICAgICAgICAgICAgSW1hZ2VCaXRtYXApOiBwaXhlbHMgaXMgUGl4ZWxEYXRhIHtcbiAgcmV0dXJuIChwaXhlbHMgIT0gbnVsbCkgJiYgKChwaXhlbHMgYXMgUGl4ZWxEYXRhKS5kYXRhIGluc3RhbmNlb2YgVWludDhBcnJheSk7XG59XG5cbmZ1bmN0aW9uIGlzSW1hZ2VCaXRtYXBGdWxseVN1cHBvcnRlZCgpIHtcbiAgcmV0dXJuIHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmXG4gICAgICB0eXBlb2YgKEltYWdlQml0bWFwKSAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICAgIHdpbmRvdy5oYXNPd25Qcm9wZXJ0eSgnY3JlYXRlSW1hZ2VCaXRtYXAnKTtcbn1cblxuZnVuY3Rpb24gaXNOb25FbXB0eVBpeGVscyhwaXhlbHM6IFBpeGVsRGF0YXxJbWFnZURhdGF8SFRNTEltYWdlRWxlbWVudHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgSFRNTENhbnZhc0VsZW1lbnR8SFRNTFZpZGVvRWxlbWVudHxJbWFnZUJpdG1hcCkge1xuICByZXR1cm4gcGl4ZWxzICE9IG51bGwgJiYgcGl4ZWxzLndpZHRoICE9PSAwICYmIHBpeGVscy5oZWlnaHQgIT09IDA7XG59XG5cbmZ1bmN0aW9uIGNhbldyYXBQaXhlbHNUb0ltYWdlQml0bWFwKHBpeGVsczogUGl4ZWxEYXRhfEltYWdlRGF0YXxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEhUTUxJbWFnZUVsZW1lbnR8SFRNTENhbnZhc0VsZW1lbnR8XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBIVE1MVmlkZW9FbGVtZW50fEltYWdlQml0bWFwKSB7XG4gIHJldHVybiBpc0ltYWdlQml0bWFwRnVsbHlTdXBwb3J0ZWQoKSAmJiAhKHBpeGVscyBpbnN0YW5jZW9mIEltYWdlQml0bWFwKSAmJlxuICAgICAgaXNOb25FbXB0eVBpeGVscyhwaXhlbHMpICYmICFpc1BpeGVsRGF0YShwaXhlbHMpO1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYSBgdGYuVGVuc29yYCBmcm9tIGFuIGltYWdlIGluIGFzeW5jIHdheS5cbiAqXG4gKiBgYGBqc1xuICogY29uc3QgaW1hZ2UgPSBuZXcgSW1hZ2VEYXRhKDEsIDEpO1xuICogaW1hZ2UuZGF0YVswXSA9IDEwMDtcbiAqIGltYWdlLmRhdGFbMV0gPSAxNTA7XG4gKiBpbWFnZS5kYXRhWzJdID0gMjAwO1xuICogaW1hZ2UuZGF0YVszXSA9IDI1NTtcbiAqXG4gKiAoYXdhaXQgdGYuYnJvd3Nlci5mcm9tUGl4ZWxzQXN5bmMoaW1hZ2UpKS5wcmludCgpO1xuICogYGBgXG4gKiBUaGlzIEFQSSBpcyB0aGUgYXN5bmMgdmVyc2lvbiBvZiBmcm9tUGl4ZWxzLiBUaGUgQVBJIHdpbGwgZmlyc3RcbiAqIGNoZWNrIHxXUkFQX1RPX0lNQUdFQklUTUFQfCBmbGFnLCBhbmQgdHJ5IHRvIHdyYXAgdGhlIGlucHV0IHRvXG4gKiBpbWFnZUJpdG1hcCBpZiB0aGUgZmxhZyBpcyBzZXQgdG8gdHJ1ZS5cbiAqXG4gKiBAcGFyYW0gcGl4ZWxzIFRoZSBpbnB1dCBpbWFnZSB0byBjb25zdHJ1Y3QgdGhlIHRlbnNvciBmcm9tLiBUaGVcbiAqIHN1cHBvcnRlZCBpbWFnZSB0eXBlcyBhcmUgYWxsIDQtY2hhbm5lbC4gWW91IGNhbiBhbHNvIHBhc3MgaW4gYW4gaW1hZ2VcbiAqIG9iamVjdCB3aXRoIGZvbGxvd2luZyBhdHRyaWJ1dGVzOlxuICogYHtkYXRhOiBVaW50OEFycmF5OyB3aWR0aDogbnVtYmVyOyBoZWlnaHQ6IG51bWJlcn1gXG4gKiBAcGFyYW0gbnVtQ2hhbm5lbHMgVGhlIG51bWJlciBvZiBjaGFubmVscyBvZiB0aGUgb3V0cHV0IHRlbnNvci4gQVxuICogbnVtQ2hhbm5lbHMgdmFsdWUgbGVzcyB0aGFuIDQgYWxsb3dzIHlvdSB0byBpZ25vcmUgY2hhbm5lbHMuIERlZmF1bHRzIHRvXG4gKiAzIChpZ25vcmVzIGFscGhhIGNoYW5uZWwgb2YgaW5wdXQgaW1hZ2UpLlxuICpcbiAqIEBkb2Mge2hlYWRpbmc6ICdCcm93c2VyJywgbmFtZXNwYWNlOiAnYnJvd3NlcicsIGlnbm9yZUNJOiB0cnVlfVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZnJvbVBpeGVsc0FzeW5jKFxuICAgIHBpeGVsczogUGl4ZWxEYXRhfEltYWdlRGF0YXxIVE1MSW1hZ2VFbGVtZW50fEhUTUxDYW52YXNFbGVtZW50fFxuICAgIEhUTUxWaWRlb0VsZW1lbnR8SW1hZ2VCaXRtYXAsXG4gICAgbnVtQ2hhbm5lbHMgPSAzKSB7XG4gIGxldCBpbnB1dHM6IFBpeGVsRGF0YXxJbWFnZURhdGF8SFRNTEltYWdlRWxlbWVudHxIVE1MQ2FudmFzRWxlbWVudHxcbiAgICAgIEhUTUxWaWRlb0VsZW1lbnR8SW1hZ2VCaXRtYXAgPSBudWxsO1xuXG4gIC8vIENoZWNrIHdoZXRoZXIgdGhlIGJhY2tlbmQgbmVlZHMgdG8gd3JhcCB8cGl4ZWxzfCB0byBpbWFnZUJpdG1hcCBhbmRcbiAgLy8gd2hldGhlciB8cGl4ZWxzfCBjYW4gYmUgd3JhcHBlZCB0byBpbWFnZUJpdG1hcC5cbiAgaWYgKGVudigpLmdldEJvb2woJ1dSQVBfVE9fSU1BR0VCSVRNQVAnKSAmJlxuICAgICAgY2FuV3JhcFBpeGVsc1RvSW1hZ2VCaXRtYXAocGl4ZWxzKSkge1xuICAgIC8vIEZvcmNlIHRoZSBpbWFnZUJpdG1hcCBjcmVhdGlvbiB0byBub3QgZG8gYW55IHByZW11bHRpcGx5IGFscGhhXG4gICAgLy8gb3BzLlxuICAgIGxldCBpbWFnZUJpdG1hcDtcblxuICAgIHRyeSB7XG4gICAgICAvLyB3cmFwIGluIHRyeS1jYXRjaCBibG9jaywgYmVjYXVzZSBjcmVhdGVJbWFnZUJpdG1hcCBtYXkgbm90IHdvcmtcbiAgICAgIC8vIHByb3Blcmx5IGluIHNvbWUgYnJvd3NlcnMsIGUuZy5cbiAgICAgIC8vIGh0dHBzOi8vYnVnemlsbGEubW96aWxsYS5vcmcvc2hvd19idWcuY2dpP2lkPTEzMzU1OTRcbiAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogbm8tYW55XG4gICAgICBpbWFnZUJpdG1hcCA9IGF3YWl0IChjcmVhdGVJbWFnZUJpdG1hcCBhcyBhbnkpKFxuICAgICAgICAgIHBpeGVscyBhcyBJbWFnZUJpdG1hcFNvdXJjZSwge3ByZW11bHRpcGx5QWxwaGE6ICdub25lJ30pO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGltYWdlQml0bWFwID0gbnVsbDtcbiAgICB9XG5cbiAgICAvLyBjcmVhdGVJbWFnZUJpdG1hcCB3aWxsIGNsaXAgdGhlIHNvdXJjZSBzaXplLlxuICAgIC8vIEluIHNvbWUgY2FzZXMsIHRoZSBpbnB1dCB3aWxsIGhhdmUgbGFyZ2VyIHNpemUgdGhhbiBpdHMgY29udGVudC5cbiAgICAvLyBFLmcuIG5ldyBJbWFnZSgxMCwgMTApIGJ1dCB3aXRoIDEgeCAxIGNvbnRlbnQuIFVzaW5nXG4gICAgLy8gY3JlYXRlSW1hZ2VCaXRtYXAgd2lsbCBjbGlwIHRoZSBzaXplIGZyb20gMTAgeCAxMCB0byAxIHggMSwgd2hpY2hcbiAgICAvLyBpcyBub3QgY29ycmVjdC4gV2Ugc2hvdWxkIGF2b2lkIHdyYXBwaW5nIHN1Y2ggcmVzb3VjZSB0b1xuICAgIC8vIGltYWdlQml0bWFwLlxuICAgIGlmIChpbWFnZUJpdG1hcCAhPSBudWxsICYmIGltYWdlQml0bWFwLndpZHRoID09PSBwaXhlbHMud2lkdGggJiZcbiAgICAgICAgaW1hZ2VCaXRtYXAuaGVpZ2h0ID09PSBwaXhlbHMuaGVpZ2h0KSB7XG4gICAgICBpbnB1dHMgPSBpbWFnZUJpdG1hcDtcbiAgICB9IGVsc2Uge1xuICAgICAgaW5wdXRzID0gcGl4ZWxzO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBpbnB1dHMgPSBwaXhlbHM7XG4gIH1cblxuICByZXR1cm4gZnJvbVBpeGVsc18oaW5wdXRzLCBudW1DaGFubmVscyk7XG59XG5cbi8qKlxuICogRHJhd3MgYSBgdGYuVGVuc29yYCBvZiBwaXhlbCB2YWx1ZXMgdG8gYSBieXRlIGFycmF5IG9yIG9wdGlvbmFsbHkgYVxuICogY2FudmFzLlxuICpcbiAqIFdoZW4gdGhlIGR0eXBlIG9mIHRoZSBpbnB1dCBpcyAnZmxvYXQzMicsIHdlIGFzc3VtZSB2YWx1ZXMgaW4gdGhlIHJhbmdlXG4gKiBbMC0xXS4gT3RoZXJ3aXNlLCB3aGVuIGlucHV0IGlzICdpbnQzMicsIHdlIGFzc3VtZSB2YWx1ZXMgaW4gdGhlIHJhbmdlXG4gKiBbMC0yNTVdLlxuICpcbiAqIFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2hlbiB0aGUgY2FudmFzIGhhcyBiZWVuIGRyYXduIHRvLlxuICpcbiAqIEBwYXJhbSBpbWcgQSByYW5rLTIgdGVuc29yIHdpdGggc2hhcGUgYFtoZWlnaHQsIHdpZHRoXWAsIG9yIGEgcmFuay0zIHRlbnNvclxuICogb2Ygc2hhcGUgYFtoZWlnaHQsIHdpZHRoLCBudW1DaGFubmVsc11gLiBJZiByYW5rLTIsIGRyYXdzIGdyYXlzY2FsZS4gSWZcbiAqIHJhbmstMywgbXVzdCBoYXZlIGRlcHRoIG9mIDEsIDMgb3IgNC4gV2hlbiBkZXB0aCBvZiAxLCBkcmF3c1xuICogZ3JheXNjYWxlLiBXaGVuIGRlcHRoIG9mIDMsIHdlIGRyYXcgd2l0aCB0aGUgZmlyc3QgdGhyZWUgY29tcG9uZW50cyBvZlxuICogdGhlIGRlcHRoIGRpbWVuc2lvbiBjb3JyZXNwb25kaW5nIHRvIHIsIGcsIGIgYW5kIGFscGhhID0gMS4gV2hlbiBkZXB0aCBvZlxuICogNCwgYWxsIGZvdXIgY29tcG9uZW50cyBvZiB0aGUgZGVwdGggZGltZW5zaW9uIGNvcnJlc3BvbmQgdG8gciwgZywgYiwgYS5cbiAqIEBwYXJhbSBjYW52YXMgVGhlIGNhbnZhcyB0byBkcmF3IHRvLlxuICpcbiAqIEBkb2Mge2hlYWRpbmc6ICdCcm93c2VyJywgbmFtZXNwYWNlOiAnYnJvd3Nlcid9XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB0b1BpeGVscyhcbiAgICBpbWc6IFRlbnNvcjJEfFRlbnNvcjNEfFRlbnNvckxpa2UsXG4gICAgY2FudmFzPzogSFRNTENhbnZhc0VsZW1lbnQpOiBQcm9taXNlPFVpbnQ4Q2xhbXBlZEFycmF5PiB7XG4gIGxldCAkaW1nID0gY29udmVydFRvVGVuc29yKGltZywgJ2ltZycsICd0b1BpeGVscycpO1xuICBpZiAoIShpbWcgaW5zdGFuY2VvZiBUZW5zb3IpKSB7XG4gICAgLy8gQXNzdW1lIGludDMyIGlmIHVzZXIgcGFzc2VkIGEgbmF0aXZlIGFycmF5LlxuICAgIGNvbnN0IG9yaWdpbmFsSW1nVGVuc29yID0gJGltZztcbiAgICAkaW1nID0gY2FzdChvcmlnaW5hbEltZ1RlbnNvciwgJ2ludDMyJyk7XG4gICAgb3JpZ2luYWxJbWdUZW5zb3IuZGlzcG9zZSgpO1xuICB9XG4gIGlmICgkaW1nLnJhbmsgIT09IDIgJiYgJGltZy5yYW5rICE9PSAzKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBgdG9QaXhlbHMgb25seSBzdXBwb3J0cyByYW5rIDIgb3IgMyB0ZW5zb3JzLCBnb3QgcmFuayAkeyRpbWcucmFua30uYCk7XG4gIH1cbiAgY29uc3QgW2hlaWdodCwgd2lkdGhdID0gJGltZy5zaGFwZS5zbGljZSgwLCAyKTtcbiAgY29uc3QgZGVwdGggPSAkaW1nLnJhbmsgPT09IDIgPyAxIDogJGltZy5zaGFwZVsyXTtcblxuICBpZiAoZGVwdGggPiA0IHx8IGRlcHRoID09PSAyKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBgdG9QaXhlbHMgb25seSBzdXBwb3J0cyBkZXB0aCBvZiBzaXplIGAgK1xuICAgICAgICBgMSwgMyBvciA0IGJ1dCBnb3QgJHtkZXB0aH1gKTtcbiAgfVxuXG4gIGlmICgkaW1nLmR0eXBlICE9PSAnZmxvYXQzMicgJiYgJGltZy5kdHlwZSAhPT0gJ2ludDMyJykge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgYFVuc3VwcG9ydGVkIHR5cGUgZm9yIHRvUGl4ZWxzOiAkeyRpbWcuZHR5cGV9LmAgK1xuICAgICAgICBgIFBsZWFzZSB1c2UgZmxvYXQzMiBvciBpbnQzMiB0ZW5zb3JzLmApO1xuICB9XG5cbiAgY29uc3QgZGF0YSA9IGF3YWl0ICRpbWcuZGF0YSgpO1xuICBjb25zdCBtdWx0aXBsaWVyID0gJGltZy5kdHlwZSA9PT0gJ2Zsb2F0MzInID8gMjU1IDogMTtcbiAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhDbGFtcGVkQXJyYXkod2lkdGggKiBoZWlnaHQgKiA0KTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IGhlaWdodCAqIHdpZHRoOyArK2kpIHtcbiAgICBjb25zdCByZ2JhID0gWzAsIDAsIDAsIDI1NV07XG5cbiAgICBmb3IgKGxldCBkID0gMDsgZCA8IGRlcHRoOyBkKyspIHtcbiAgICAgIGNvbnN0IHZhbHVlID0gZGF0YVtpICogZGVwdGggKyBkXTtcblxuICAgICAgaWYgKCRpbWcuZHR5cGUgPT09ICdmbG9hdDMyJykge1xuICAgICAgICBpZiAodmFsdWUgPCAwIHx8IHZhbHVlID4gMSkge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICAgICAgYFRlbnNvciB2YWx1ZXMgZm9yIGEgZmxvYXQzMiBUZW5zb3IgbXVzdCBiZSBpbiB0aGUgYCArXG4gICAgICAgICAgICAgIGByYW5nZSBbMCAtIDFdIGJ1dCBlbmNvdW50ZXJlZCAke3ZhbHVlfS5gKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICgkaW1nLmR0eXBlID09PSAnaW50MzInKSB7XG4gICAgICAgIGlmICh2YWx1ZSA8IDAgfHwgdmFsdWUgPiAyNTUpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICAgIGBUZW5zb3IgdmFsdWVzIGZvciBhIGludDMyIFRlbnNvciBtdXN0IGJlIGluIHRoZSBgICtcbiAgICAgICAgICAgICAgYHJhbmdlIFswIC0gMjU1XSBidXQgZW5jb3VudGVyZWQgJHt2YWx1ZX0uYCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGRlcHRoID09PSAxKSB7XG4gICAgICAgIHJnYmFbMF0gPSB2YWx1ZSAqIG11bHRpcGxpZXI7XG4gICAgICAgIHJnYmFbMV0gPSB2YWx1ZSAqIG11bHRpcGxpZXI7XG4gICAgICAgIHJnYmFbMl0gPSB2YWx1ZSAqIG11bHRpcGxpZXI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZ2JhW2RdID0gdmFsdWUgKiBtdWx0aXBsaWVyO1xuICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGogPSBpICogNDtcbiAgICBieXRlc1tqICsgMF0gPSBNYXRoLnJvdW5kKHJnYmFbMF0pO1xuICAgIGJ5dGVzW2ogKyAxXSA9IE1hdGgucm91bmQocmdiYVsxXSk7XG4gICAgYnl0ZXNbaiArIDJdID0gTWF0aC5yb3VuZChyZ2JhWzJdKTtcbiAgICBieXRlc1tqICsgM10gPSBNYXRoLnJvdW5kKHJnYmFbM10pO1xuICB9XG5cbiAgaWYgKGNhbnZhcyAhPSBudWxsKSB7XG4gICAgY2FudmFzLndpZHRoID0gd2lkdGg7XG4gICAgY2FudmFzLmhlaWdodCA9IGhlaWdodDtcbiAgICBjb25zdCBjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcbiAgICBjb25zdCBpbWFnZURhdGEgPSBuZXcgSW1hZ2VEYXRhKGJ5dGVzLCB3aWR0aCwgaGVpZ2h0KTtcbiAgICBjdHgucHV0SW1hZ2VEYXRhKGltYWdlRGF0YSwgMCwgMCk7XG4gIH1cbiAgaWYgKCRpbWcgIT09IGltZykge1xuICAgICRpbWcuZGlzcG9zZSgpO1xuICB9XG4gIHJldHVybiBieXRlcztcbn1cblxuZXhwb3J0IGNvbnN0IGZyb21QaXhlbHMgPSBvcCh7ZnJvbVBpeGVsc199KTtcbiJdfQ==","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from './engine';\nimport { env } from './environment';\nimport { setDeprecationWarningFn } from './tensor';\nimport { getTensorsInContainer } from './tensor_util';\n/**\n * Enables production mode which disables correctness checks in favor of\n * performance.\n *\n * @doc {heading: 'Environment'}\n */\nexport function enableProdMode() {\n    env().set('PROD', true);\n}\n/**\n * Enables debug mode which will log information about all executed kernels:\n * the elapsed time of the kernel execution, as well as the rank, shape, and\n * size of the output tensor.\n *\n * Debug mode will significantly slow down your application as it will\n * download the result of every operation to the CPU. This should not be used in\n * production. Debug mode does not affect the timing information of the kernel\n * execution as we do not measure download time in the kernel execution time.\n *\n * See also: `tf.profile`, `tf.memory`.\n *\n * @doc {heading: 'Environment'}\n */\nexport function enableDebugMode() {\n    env().set('DEBUG', true);\n}\n/** Globally disables deprecation warnings */\nexport function disableDeprecationWarnings() {\n    env().set('DEPRECATION_WARNINGS_ENABLED', false);\n    console.warn(`TensorFlow.js deprecation warnings have been disabled.`);\n}\n/** Warn users about deprecated functionality. */\nexport function deprecationWarn(msg) {\n    if (env().getBool('DEPRECATION_WARNINGS_ENABLED')) {\n        console.warn(msg + ' You can disable deprecation warnings with ' +\n            'tf.disableDeprecationWarnings().');\n    }\n}\nsetDeprecationWarningFn(deprecationWarn);\n/**\n * Dispose all variables kept in backend engine.\n *\n * @doc {heading: 'Environment'}\n */\nexport function disposeVariables() {\n    ENGINE.disposeVariables();\n}\n/**\n * It returns the global engine that keeps track of all tensors and backends.\n *\n * @doc {heading: 'Environment'}\n */\nexport function engine() {\n    return ENGINE;\n}\n/**\n * Returns memory info at the current time in the program. The result is an\n * object with the following properties:\n *\n * - `numBytes`: Number of bytes allocated (undisposed) at this time.\n * - `numTensors`: Number of unique tensors allocated.\n * - `numDataBuffers`: Number of unique data buffers allocated\n *   (undisposed) at this time, which is ≤ the number of tensors\n *   (e.g. `a.reshape(newShape)` makes a new Tensor that shares the same\n *   data buffer with `a`).\n * - `unreliable`: True if the memory usage is unreliable. See `reasons` when\n *    `unreliable` is true.\n * - `reasons`: `string[]`, reasons why the memory is unreliable, present if\n *    `unreliable` is true.\n *\n * WebGL Properties:\n * - `numBytesInGPU`: Number of bytes allocated (undisposed) in the GPU only at\n *     this time.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\nexport function memory() {\n    return ENGINE.memory();\n}\n/**\n * Executes the provided function `f()` and returns a promise that resolves\n * with information about the function's memory use:\n * - `newBytes`: the number of new bytes allocated\n * - `newTensors`: the number of new tensors created\n * - `peakBytes`: the peak number of bytes allocated\n * - `kernels`: an array of objects for each kernel involved that reports\n * their input and output shapes, number of bytes used, and number of new\n * tensors created.\n * - `kernelNames`: an array of unique strings with just the names of the\n * kernels in the `kernels` array.\n *\n * ```js\n * const profile = await tf.profile(() => {\n *   const x = tf.tensor1d([1, 2, 3]);\n *   let x2 = x.square();\n *   x2.dispose();\n *   x2 = x.square();\n *   x2.dispose();\n *   return x;\n * });\n *\n * console.log(`newBytes: ${profile.newBytes}`);\n * console.log(`newTensors: ${profile.newTensors}`);\n * console.log(`byte usage over all kernels: ${profile.kernels.map(k =>\n * k.totalBytesSnapshot)}`);\n * ```\n *\n *\n * @doc {heading: 'Performance', subheading: 'Profile'}\n */\nexport function profile(f) {\n    return ENGINE.profile(f);\n}\n/**\n * Executes the provided function `fn` and after it is executed, cleans up all\n * intermediate tensors allocated by `fn` except those returned by `fn`.\n * `fn` must not return a Promise (async functions not allowed). The returned\n * result can be a complex object.\n *\n * Using this method helps avoid memory leaks. In general, wrap calls to\n * operations in `tf.tidy` for automatic memory cleanup.\n *\n * NOTE: Variables do *not* get cleaned up when inside a tidy(). If you want to\n * dispose variables, please use `tf.disposeVariables` or call dispose()\n * directly on variables.\n *\n * ```js\n * // y = 2 ^ 2 + 1\n * const y = tf.tidy(() => {\n *   // a, b, and one will be cleaned up when the tidy ends.\n *   const one = tf.scalar(1);\n *   const a = tf.scalar(2);\n *   const b = a.square();\n *\n *   console.log('numTensors (in tidy): ' + tf.memory().numTensors);\n *\n *   // The value returned inside the tidy function will return\n *   // through the tidy, in this case to the variable y.\n *   return b.add(one);\n * });\n *\n * console.log('numTensors (outside tidy): ' + tf.memory().numTensors);\n * y.print();\n * ```\n *\n * @param nameOrFn The name of the closure, or the function to execute.\n *     If a name is provided, the 2nd argument should be the function.\n *     If debug mode is on, the timing and the memory usage of the function\n *     will be tracked and displayed on the console using the provided name.\n * @param fn The function to execute.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\nexport function tidy(nameOrFn, fn) {\n    return ENGINE.tidy(nameOrFn, fn);\n}\n/**\n * Disposes any `tf.Tensor`s found within the provided object.\n *\n * @param container an object that may be a `tf.Tensor` or may directly\n *     contain `tf.Tensor`s, such as a `Tensor[]` or `{key: Tensor, ...}`. If\n *     the object is not a `tf.Tensor` or does not contain `Tensors`, nothing\n *     happens. In general it is safe to pass any object here, except that\n *     `Promise`s are not supported.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\nexport function dispose(container) {\n    const tensors = getTensorsInContainer(container);\n    tensors.forEach(tensor => tensor.dispose());\n}\n/**\n * Keeps a `tf.Tensor` generated inside a `tf.tidy` from being disposed\n * automatically.\n *\n * ```js\n * let b;\n * const y = tf.tidy(() => {\n *   const one = tf.scalar(1);\n *   const a = tf.scalar(2);\n *\n *   // b will not be cleaned up by the tidy. a and one will be cleaned up\n *   // when the tidy ends.\n *   b = tf.keep(a.square());\n *\n *   console.log('numTensors (in tidy): ' + tf.memory().numTensors);\n *\n *   // The value returned inside the tidy function will return\n *   // through the tidy, in this case to the variable y.\n *   return b.add(one);\n * });\n *\n * console.log('numTensors (outside tidy): ' + tf.memory().numTensors);\n * console.log('y:');\n * y.print();\n * console.log('b:');\n * b.print();\n * ```\n *\n * @param result The tensor to keep from being disposed.\n *\n * @doc {heading: 'Performance', subheading: 'Memory'}\n */\nexport function keep(result) {\n    return ENGINE.keep(result);\n}\n/**\n * Executes `f()` and returns a promise that resolves with timing\n * information.\n *\n * The result is an object with the following properties:\n *\n * - `wallMs`: Wall execution time.\n * - `kernelMs`: Kernel execution time, ignoring data transfer. If using the\n * WebGL backend and the query timer extension is not available, this will\n * return an error object.\n * - On `WebGL` The following additional properties exist:\n *   - `uploadWaitMs`: CPU blocking time on texture uploads.\n *   - `downloadWaitMs`: CPU blocking time on texture downloads (readPixels).\n *\n * ```js\n * const x = tf.randomNormal([20, 20]);\n * const time = await tf.time(() => x.matMul(x));\n *\n * console.log(`kernelMs: ${time.kernelMs}, wallTimeMs: ${time.wallMs}`);\n * ```\n *\n * @param f The function to execute and time.\n *\n * @doc {heading: 'Performance', subheading: 'Timing'}\n */\nexport function time(f) {\n    return ENGINE.time(f);\n}\n/**\n * Sets the backend (cpu, webgl, wasm, etc) responsible for creating tensors and\n * executing operations on those tensors. Returns a promise that resolves\n * to a boolean if the backend initialization was successful.\n *\n * Note this disposes the current backend, if any, as well as any tensors\n * associated with it. A new backend is initialized, even if it is of the\n * same type as the previous one.\n *\n * @param backendName The name of the backend. Currently supports\n *     `'webgl'|'cpu'` in the browser, `'tensorflow'` under node.js\n *     (requires tfjs-node), and `'wasm'` (requires tfjs-backend-wasm).\n *\n * @doc {heading: 'Backends'}\n */\nexport function setBackend(backendName) {\n    return ENGINE.setBackend(backendName);\n}\n/**\n * Returns a promise that resolves when the currently selected backend (or the\n * highest priority one) has initialized. Await this promise when you are using\n * a backend that has async initialization.\n *\n * @doc {heading: 'Backends'}\n */\nexport function ready() {\n    return ENGINE.ready();\n}\n/**\n * Returns the current backend name (cpu, webgl, etc). The backend is\n * responsible for creating tensors and executing operations on those tensors.\n *\n * @doc {heading: 'Backends'}\n */\nexport function getBackend() {\n    return ENGINE.backendName;\n}\n/**\n * Removes a backend and the registered factory.\n *\n * @doc {heading: 'Backends'}\n */\nexport function removeBackend(name) {\n    ENGINE.removeBackend(name);\n}\n/**\n * Finds the backend registered under the provided name. Returns null if the\n * name is not in the registry, or the registration hasn't finished yet.\n */\nexport function findBackend(name) {\n    return ENGINE.findBackend(name);\n}\n/**\n * Finds the backend factory registered under the provided name. Returns a\n * function that produces a new backend when called. Returns null if the name\n * is not in the registry.\n */\nexport function findBackendFactory(name) {\n    return ENGINE.findBackendFactory(name);\n}\n/**\n * Registers a global backend. The registration should happen when importing\n * a module file (e.g. when importing `backend_webgl.ts`), and is used for\n * modular builds (e.g. custom tfjs bundle with only webgl support).\n *\n * @param factory The backend factory function. When called, it should\n * return a backend instance, or a promise of an instance.\n * @param priority The priority of the backend (higher = more important).\n *     In case multiple backends are registered, the priority is used to find\n *     the best backend. Defaults to 1.\n * @return False if there is already a registered backend under this name, true\n *     if not.\n *\n * @doc {heading: 'Backends'}\n */\nexport function registerBackend(name, factory, priority = 1) {\n    return ENGINE.registerBackend(name, factory, priority);\n}\n/**\n * Gets the current backend. If no backends have been initialized, this will\n * attempt to initialize the best backend. Will throw an error if the highest\n * priority backend has async initialization, in which case, you should call\n * 'await tf.ready()' before running other code.\n *\n * @doc {heading: 'Backends'}\n */\nexport function backend() {\n    return ENGINE.backend;\n}\n/**\n * Sets the global platform.\n *\n * @param platformName The name of this platform.\n * @param platform A platform implementation.\n */\nexport function setPlatform(platformName, platform) {\n    env().setPlatform(platformName, platform);\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Add } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Adds two `tf.Tensor`s element-wise, A + B. Supports broadcasting.\n *\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3, 4]);\n * const b = tf.tensor1d([10, 20, 30, 40]);\n *\n * a.add(b).print();  // or tf.add(a, b)\n * ```\n *\n * ```js\n * // Broadcast add a with b.\n * const a = tf.scalar(5);\n * const b = tf.tensor1d([10, 20, 30, 40]);\n *\n * a.add(b).print();  // or tf.add(a, b)\n * ```\n * @param a The first `tf.Tensor` to add.\n * @param b The second `tf.Tensor` to add. Must have the same type as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction add_(a, b) {\n    let $a = convertToTensor(a, 'a', 'add');\n    let $b = convertToTensor(b, 'b', 'add');\n    [$a, $b] = makeTypesMatch($a, $b);\n    const inputs = { a: $a, b: $b };\n    return ENGINE.runKernel(Add, inputs);\n}\nexport const add = op({ add_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy9vcHMvYWRkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUNILE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDakMsT0FBTyxFQUFDLEdBQUcsRUFBWSxNQUFNLGlCQUFpQixDQUFDO0FBRy9DLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUM5QyxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFHbkQsT0FBTyxFQUFDLEVBQUUsRUFBQyxNQUFNLGFBQWEsQ0FBQztBQUUvQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQXNCRztBQUNILFNBQVMsSUFBSSxDQUFtQixDQUFvQixFQUFFLENBQW9CO0lBQ3hFLElBQUksRUFBRSxHQUFHLGVBQWUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3hDLElBQUksRUFBRSxHQUFHLGVBQWUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3hDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxHQUFHLGNBQWMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFFbEMsTUFBTSxNQUFNLEdBQWMsRUFBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUMsQ0FBQztJQUV6QyxPQUFPLE1BQU0sQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFLE1BQThCLENBQUMsQ0FBQztBQUMvRCxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sR0FBRyxHQUFHLEVBQUUsQ0FBQyxFQUFDLElBQUksRUFBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5pbXBvcnQge0VOR0lORX0gZnJvbSAnLi4vZW5naW5lJztcbmltcG9ydCB7QWRkLCBBZGRJbnB1dHN9IGZyb20gJy4uL2tlcm5lbF9uYW1lcyc7XG5pbXBvcnQge1RlbnNvcn0gZnJvbSAnLi4vdGVuc29yJztcbmltcG9ydCB7TmFtZWRUZW5zb3JNYXB9IGZyb20gJy4uL3RlbnNvcl90eXBlcyc7XG5pbXBvcnQge21ha2VUeXBlc01hdGNofSBmcm9tICcuLi90ZW5zb3JfdXRpbCc7XG5pbXBvcnQge2NvbnZlcnRUb1RlbnNvcn0gZnJvbSAnLi4vdGVuc29yX3V0aWxfZW52JztcbmltcG9ydCB7VGVuc29yTGlrZX0gZnJvbSAnLi4vdHlwZXMnO1xuXG5pbXBvcnQge29wfSBmcm9tICcuL29wZXJhdGlvbic7XG5cbi8qKlxuICogQWRkcyB0d28gYHRmLlRlbnNvcmBzIGVsZW1lbnQtd2lzZSwgQSArIEIuIFN1cHBvcnRzIGJyb2FkY2FzdGluZy5cbiAqXG4gKlxuICogYGBganNcbiAqIGNvbnN0IGEgPSB0Zi50ZW5zb3IxZChbMSwgMiwgMywgNF0pO1xuICogY29uc3QgYiA9IHRmLnRlbnNvcjFkKFsxMCwgMjAsIDMwLCA0MF0pO1xuICpcbiAqIGEuYWRkKGIpLnByaW50KCk7ICAvLyBvciB0Zi5hZGQoYSwgYilcbiAqIGBgYFxuICpcbiAqIGBgYGpzXG4gKiAvLyBCcm9hZGNhc3QgYWRkIGEgd2l0aCBiLlxuICogY29uc3QgYSA9IHRmLnNjYWxhcig1KTtcbiAqIGNvbnN0IGIgPSB0Zi50ZW5zb3IxZChbMTAsIDIwLCAzMCwgNDBdKTtcbiAqXG4gKiBhLmFkZChiKS5wcmludCgpOyAgLy8gb3IgdGYuYWRkKGEsIGIpXG4gKiBgYGBcbiAqIEBwYXJhbSBhIFRoZSBmaXJzdCBgdGYuVGVuc29yYCB0byBhZGQuXG4gKiBAcGFyYW0gYiBUaGUgc2Vjb25kIGB0Zi5UZW5zb3JgIHRvIGFkZC4gTXVzdCBoYXZlIHRoZSBzYW1lIHR5cGUgYXMgYGFgLlxuICpcbiAqIEBkb2Mge2hlYWRpbmc6ICdPcGVyYXRpb25zJywgc3ViaGVhZGluZzogJ0FyaXRobWV0aWMnfVxuICovXG5mdW5jdGlvbiBhZGRfPFQgZXh0ZW5kcyBUZW5zb3I+KGE6IFRlbnNvcnxUZW5zb3JMaWtlLCBiOiBUZW5zb3J8VGVuc29yTGlrZSk6IFQge1xuICBsZXQgJGEgPSBjb252ZXJ0VG9UZW5zb3IoYSwgJ2EnLCAnYWRkJyk7XG4gIGxldCAkYiA9IGNvbnZlcnRUb1RlbnNvcihiLCAnYicsICdhZGQnKTtcbiAgWyRhLCAkYl0gPSBtYWtlVHlwZXNNYXRjaCgkYSwgJGIpO1xuXG4gIGNvbnN0IGlucHV0czogQWRkSW5wdXRzID0ge2E6ICRhLCBiOiAkYn07XG5cbiAgcmV0dXJuIEVOR0lORS5ydW5LZXJuZWwoQWRkLCBpbnB1dHMgYXMge30gYXMgTmFtZWRUZW5zb3JNYXApO1xufVxuXG5leHBvcnQgY29uc3QgYWRkID0gb3Aoe2FkZF99KTtcbiJdfQ==","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { FloorDiv } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Divides two `tf.Tensor`s element-wise, A / B. Supports broadcasting.\n * The result is rounded with floor function.\n *\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 9, 16]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n *\n * a.floorDiv(b).print();  // or tf.div(a, b)\n * ```\n *\n * ```js\n * // Broadcast div a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(2);\n *\n * a.floorDiv(b).print();  // or tf.floorDiv(a, b)\n * ```\n *\n * @param a The first tensor as the numerator.\n * @param b The second tensor as the denominator. Must have the same dtype as\n * `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction floorDiv_(a, b) {\n    let $a = convertToTensor(a, 'a', 'floorDiv');\n    let $b = convertToTensor(b, 'b', 'floorDiv');\n    [$a, $b] = makeTypesMatch($a, $b);\n    const inputs = { a: $a, b: $b };\n    return ENGINE.runKernel(FloorDiv, inputs);\n}\nexport const floorDiv = op({ floorDiv_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxvb3JEaXYuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL29wcy9mbG9vckRpdi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsTUFBTSxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBQ2pDLE9BQU8sRUFBQyxRQUFRLEVBQWlCLE1BQU0saUJBQWlCLENBQUM7QUFHekQsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQzlDLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUduRCxPQUFPLEVBQUMsRUFBRSxFQUFDLE1BQU0sYUFBYSxDQUFDO0FBRS9COzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBeUJHO0FBQ0gsU0FBUyxTQUFTLENBQ2QsQ0FBb0IsRUFBRSxDQUFvQjtJQUM1QyxJQUFJLEVBQUUsR0FBRyxlQUFlLENBQUMsQ0FBQyxFQUFFLEdBQUcsRUFBRSxVQUFVLENBQUMsQ0FBQztJQUM3QyxJQUFJLEVBQUUsR0FBRyxlQUFlLENBQUMsQ0FBQyxFQUFFLEdBQUcsRUFBRSxVQUFVLENBQUMsQ0FBQztJQUM3QyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsR0FBRyxjQUFjLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBRWxDLE1BQU0sTUFBTSxHQUFtQixFQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBQyxDQUFDO0lBRTlDLE9BQU8sTUFBTSxDQUFDLFNBQVMsQ0FBQyxRQUFRLEVBQUUsTUFBOEIsQ0FBQyxDQUFDO0FBQ3BFLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsRUFBRSxDQUFDLEVBQUMsU0FBUyxFQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtFTkdJTkV9IGZyb20gJy4uL2VuZ2luZSc7XG5pbXBvcnQge0Zsb29yRGl2LCBGbG9vckRpdklucHV0c30gZnJvbSAnLi4va2VybmVsX25hbWVzJztcbmltcG9ydCB7VGVuc29yfSBmcm9tICcuLi90ZW5zb3InO1xuaW1wb3J0IHtOYW1lZFRlbnNvck1hcH0gZnJvbSAnLi4vdGVuc29yX3R5cGVzJztcbmltcG9ydCB7bWFrZVR5cGVzTWF0Y2h9IGZyb20gJy4uL3RlbnNvcl91dGlsJztcbmltcG9ydCB7Y29udmVydFRvVGVuc29yfSBmcm9tICcuLi90ZW5zb3JfdXRpbF9lbnYnO1xuaW1wb3J0IHtUZW5zb3JMaWtlfSBmcm9tICcuLi90eXBlcyc7XG5cbmltcG9ydCB7b3B9IGZyb20gJy4vb3BlcmF0aW9uJztcblxuLyoqXG4gKiBEaXZpZGVzIHR3byBgdGYuVGVuc29yYHMgZWxlbWVudC13aXNlLCBBIC8gQi4gU3VwcG9ydHMgYnJvYWRjYXN0aW5nLlxuICogVGhlIHJlc3VsdCBpcyByb3VuZGVkIHdpdGggZmxvb3IgZnVuY3Rpb24uXG4gKlxuICpcbiAqIGBgYGpzXG4gKiBjb25zdCBhID0gdGYudGVuc29yMWQoWzEsIDQsIDksIDE2XSk7XG4gKiBjb25zdCBiID0gdGYudGVuc29yMWQoWzEsIDIsIDMsIDRdKTtcbiAqXG4gKiBhLmZsb29yRGl2KGIpLnByaW50KCk7ICAvLyBvciB0Zi5kaXYoYSwgYilcbiAqIGBgYFxuICpcbiAqIGBgYGpzXG4gKiAvLyBCcm9hZGNhc3QgZGl2IGEgd2l0aCBiLlxuICogY29uc3QgYSA9IHRmLnRlbnNvcjFkKFsyLCA0LCA2LCA4XSk7XG4gKiBjb25zdCBiID0gdGYuc2NhbGFyKDIpO1xuICpcbiAqIGEuZmxvb3JEaXYoYikucHJpbnQoKTsgIC8vIG9yIHRmLmZsb29yRGl2KGEsIGIpXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0gYSBUaGUgZmlyc3QgdGVuc29yIGFzIHRoZSBudW1lcmF0b3IuXG4gKiBAcGFyYW0gYiBUaGUgc2Vjb25kIHRlbnNvciBhcyB0aGUgZGVub21pbmF0b3IuIE11c3QgaGF2ZSB0aGUgc2FtZSBkdHlwZSBhc1xuICogYGFgLlxuICpcbiAqIEBkb2Mge2hlYWRpbmc6ICdPcGVyYXRpb25zJywgc3ViaGVhZGluZzogJ0FyaXRobWV0aWMnfVxuICovXG5mdW5jdGlvbiBmbG9vckRpdl88VCBleHRlbmRzIFRlbnNvcj4oXG4gICAgYTogVGVuc29yfFRlbnNvckxpa2UsIGI6IFRlbnNvcnxUZW5zb3JMaWtlKTogVCB7XG4gIGxldCAkYSA9IGNvbnZlcnRUb1RlbnNvcihhLCAnYScsICdmbG9vckRpdicpO1xuICBsZXQgJGIgPSBjb252ZXJ0VG9UZW5zb3IoYiwgJ2InLCAnZmxvb3JEaXYnKTtcbiAgWyRhLCAkYl0gPSBtYWtlVHlwZXNNYXRjaCgkYSwgJGIpO1xuXG4gIGNvbnN0IGlucHV0czogRmxvb3JEaXZJbnB1dHMgPSB7YTogJGEsIGI6ICRifTtcblxuICByZXR1cm4gRU5HSU5FLnJ1bktlcm5lbChGbG9vckRpdiwgaW5wdXRzIGFzIHt9IGFzIE5hbWVkVGVuc29yTWFwKTtcbn1cblxuZXhwb3J0IGNvbnN0IGZsb29yRGl2ID0gb3Aoe2Zsb29yRGl2X30pO1xuIl19","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { RealDiv } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { floorDiv } from './floorDiv';\nimport { op } from './operation';\n/**\n * Divides two `tf.Tensor`s element-wise, A / B. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 9, 16]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n *\n * a.div(b).print();  // or tf.div(a, b)\n * ```\n *\n * ```js\n * // Broadcast div a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(2);\n *\n * a.div(b).print();  // or tf.div(a, b)\n * ```\n *\n * @param a The first tensor as the numerator.\n * @param b The second tensor as the denominator. Must have the same dtype as\n * `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction div_(a, b) {\n    let $a = convertToTensor(a, 'a', 'div');\n    let $b = convertToTensor(b, 'b', 'div');\n    [$a, $b] = makeTypesMatch($a, $b);\n    if ($a.dtype === 'int32' && $b.dtype === 'int32') {\n        return floorDiv($a, $b);\n    }\n    const inputs = { a: $a, b: $b };\n    const attrs = {};\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    return ENGINE.runKernel(RealDiv, inputs, attrs);\n}\nexport const div = op({ div_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGl2LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy9vcHMvZGl2LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDakMsT0FBTyxFQUFDLE9BQU8sRUFBZ0IsTUFBTSxpQkFBaUIsQ0FBQztBQUd2RCxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDOUMsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBR25ELE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxZQUFZLENBQUM7QUFDcEMsT0FBTyxFQUFDLEVBQUUsRUFBQyxNQUFNLGFBQWEsQ0FBQztBQUUvQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0F1Qkc7QUFDSCxTQUFTLElBQUksQ0FBbUIsQ0FBb0IsRUFBRSxDQUFvQjtJQUN4RSxJQUFJLEVBQUUsR0FBRyxlQUFlLENBQUMsQ0FBQyxFQUFFLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUN4QyxJQUFJLEVBQUUsR0FBRyxlQUFlLENBQUMsQ0FBQyxFQUFFLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUN4QyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsR0FBRyxjQUFjLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBRWxDLElBQUksRUFBRSxDQUFDLEtBQUssS0FBSyxPQUFPLElBQUksRUFBRSxDQUFDLEtBQUssS0FBSyxPQUFPLEVBQUU7UUFDaEQsT0FBTyxRQUFRLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0tBQ3pCO0lBRUQsTUFBTSxNQUFNLEdBQWtCLEVBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFDLENBQUM7SUFDN0MsTUFBTSxLQUFLLEdBQUcsRUFBRSxDQUFDO0lBRWpCLDBEQUEwRDtJQUMxRCxPQUFPLE1BQU0sQ0FBQyxTQUFTLENBQUMsT0FBTyxFQUFFLE1BQThCLEVBQUUsS0FBSyxDQUFNLENBQUM7QUFDL0UsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLEdBQUcsR0FBRyxFQUFFLENBQUMsRUFBQyxJQUFJLEVBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0VOR0lORX0gZnJvbSAnLi4vZW5naW5lJztcbmltcG9ydCB7UmVhbERpdiwgUmVhbERpdklucHV0c30gZnJvbSAnLi4va2VybmVsX25hbWVzJztcbmltcG9ydCB7VGVuc29yfSBmcm9tICcuLi90ZW5zb3InO1xuaW1wb3J0IHtOYW1lZFRlbnNvck1hcH0gZnJvbSAnLi4vdGVuc29yX3R5cGVzJztcbmltcG9ydCB7bWFrZVR5cGVzTWF0Y2h9IGZyb20gJy4uL3RlbnNvcl91dGlsJztcbmltcG9ydCB7Y29udmVydFRvVGVuc29yfSBmcm9tICcuLi90ZW5zb3JfdXRpbF9lbnYnO1xuaW1wb3J0IHtUZW5zb3JMaWtlfSBmcm9tICcuLi90eXBlcyc7XG5cbmltcG9ydCB7Zmxvb3JEaXZ9IGZyb20gJy4vZmxvb3JEaXYnO1xuaW1wb3J0IHtvcH0gZnJvbSAnLi9vcGVyYXRpb24nO1xuXG4vKipcbiAqIERpdmlkZXMgdHdvIGB0Zi5UZW5zb3JgcyBlbGVtZW50LXdpc2UsIEEgLyBCLiBTdXBwb3J0cyBicm9hZGNhc3RpbmcuXG4gKlxuICogYGBganNcbiAqIGNvbnN0IGEgPSB0Zi50ZW5zb3IxZChbMSwgNCwgOSwgMTZdKTtcbiAqIGNvbnN0IGIgPSB0Zi50ZW5zb3IxZChbMSwgMiwgMywgNF0pO1xuICpcbiAqIGEuZGl2KGIpLnByaW50KCk7ICAvLyBvciB0Zi5kaXYoYSwgYilcbiAqIGBgYFxuICpcbiAqIGBgYGpzXG4gKiAvLyBCcm9hZGNhc3QgZGl2IGEgd2l0aCBiLlxuICogY29uc3QgYSA9IHRmLnRlbnNvcjFkKFsyLCA0LCA2LCA4XSk7XG4gKiBjb25zdCBiID0gdGYuc2NhbGFyKDIpO1xuICpcbiAqIGEuZGl2KGIpLnByaW50KCk7ICAvLyBvciB0Zi5kaXYoYSwgYilcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBhIFRoZSBmaXJzdCB0ZW5zb3IgYXMgdGhlIG51bWVyYXRvci5cbiAqIEBwYXJhbSBiIFRoZSBzZWNvbmQgdGVuc29yIGFzIHRoZSBkZW5vbWluYXRvci4gTXVzdCBoYXZlIHRoZSBzYW1lIGR0eXBlIGFzXG4gKiBgYWAuXG4gKlxuICogQGRvYyB7aGVhZGluZzogJ09wZXJhdGlvbnMnLCBzdWJoZWFkaW5nOiAnQXJpdGhtZXRpYyd9XG4gKi9cbmZ1bmN0aW9uIGRpdl88VCBleHRlbmRzIFRlbnNvcj4oYTogVGVuc29yfFRlbnNvckxpa2UsIGI6IFRlbnNvcnxUZW5zb3JMaWtlKTogVCB7XG4gIGxldCAkYSA9IGNvbnZlcnRUb1RlbnNvcihhLCAnYScsICdkaXYnKTtcbiAgbGV0ICRiID0gY29udmVydFRvVGVuc29yKGIsICdiJywgJ2RpdicpO1xuICBbJGEsICRiXSA9IG1ha2VUeXBlc01hdGNoKCRhLCAkYik7XG5cbiAgaWYgKCRhLmR0eXBlID09PSAnaW50MzInICYmICRiLmR0eXBlID09PSAnaW50MzInKSB7XG4gICAgcmV0dXJuIGZsb29yRGl2KCRhLCAkYik7XG4gIH1cblxuICBjb25zdCBpbnB1dHM6IFJlYWxEaXZJbnB1dHMgPSB7YTogJGEsIGI6ICRifTtcbiAgY29uc3QgYXR0cnMgPSB7fTtcblxuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IG5vLXVubmVjZXNzYXJ5LXR5cGUtYXNzZXJ0aW9uXG4gIHJldHVybiBFTkdJTkUucnVuS2VybmVsKFJlYWxEaXYsIGlucHV0cyBhcyB7fSBhcyBOYW1lZFRlbnNvck1hcCwgYXR0cnMpIGFzIFQ7XG59XG5cbmV4cG9ydCBjb25zdCBkaXYgPSBvcCh7ZGl2X30pO1xuIl19","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Multiply } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Multiplies two `tf.Tensor`s element-wise, A * B. Supports broadcasting.\n *\n * We also expose `tf.mulStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3, 4]);\n * const b = tf.tensor1d([2, 3, 4, 5]);\n *\n * a.mul(b).print();  // or tf.mul(a, b)\n * ```\n *\n * ```js\n * // Broadcast mul a with b.\n * const a = tf.tensor1d([1, 2, 3, 4]);\n * const b = tf.scalar(5);\n *\n * a.mul(b).print();  // or tf.mul(a, b)\n * ```\n * @param a The first tensor to multiply.\n * @param b The second tensor to multiply. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction mul_(a, b) {\n    let $a = convertToTensor(a, 'a', 'mul');\n    let $b = convertToTensor(b, 'b', 'mul');\n    [$a, $b] = makeTypesMatch($a, $b);\n    const inputs = { a: $a, b: $b };\n    return ENGINE.runKernel(Multiply, inputs);\n}\nexport const mul = op({ mul_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy9vcHMvbXVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDakMsT0FBTyxFQUFDLFFBQVEsRUFBaUIsTUFBTSxpQkFBaUIsQ0FBQztBQUd6RCxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDOUMsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBR25ELE9BQU8sRUFBQyxFQUFFLEVBQUMsTUFBTSxhQUFhLENBQUM7QUFFL0I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQXdCRztBQUNILFNBQVMsSUFBSSxDQUFtQixDQUFvQixFQUFFLENBQW9CO0lBQ3hFLElBQUksRUFBRSxHQUFHLGVBQWUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3hDLElBQUksRUFBRSxHQUFHLGVBQWUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3hDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxHQUFHLGNBQWMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFFbEMsTUFBTSxNQUFNLEdBQW1CLEVBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFDLENBQUM7SUFFOUMsT0FBTyxNQUFNLENBQUMsU0FBUyxDQUFDLFFBQVEsRUFBRSxNQUE4QixDQUFDLENBQUM7QUFDcEUsQ0FBQztBQUNELE1BQU0sQ0FBQyxNQUFNLEdBQUcsR0FBRyxFQUFFLENBQUMsRUFBQyxJQUFJLEVBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0VOR0lORX0gZnJvbSAnLi4vZW5naW5lJztcbmltcG9ydCB7TXVsdGlwbHksIE11bHRpcGx5SW5wdXRzfSBmcm9tICcuLi9rZXJuZWxfbmFtZXMnO1xuaW1wb3J0IHtUZW5zb3J9IGZyb20gJy4uL3RlbnNvcic7XG5pbXBvcnQge05hbWVkVGVuc29yTWFwfSBmcm9tICcuLi90ZW5zb3JfdHlwZXMnO1xuaW1wb3J0IHttYWtlVHlwZXNNYXRjaH0gZnJvbSAnLi4vdGVuc29yX3V0aWwnO1xuaW1wb3J0IHtjb252ZXJ0VG9UZW5zb3J9IGZyb20gJy4uL3RlbnNvcl91dGlsX2Vudic7XG5pbXBvcnQge1RlbnNvckxpa2V9IGZyb20gJy4uL3R5cGVzJztcblxuaW1wb3J0IHtvcH0gZnJvbSAnLi9vcGVyYXRpb24nO1xuXG4vKipcbiAqIE11bHRpcGxpZXMgdHdvIGB0Zi5UZW5zb3JgcyBlbGVtZW50LXdpc2UsIEEgKiBCLiBTdXBwb3J0cyBicm9hZGNhc3RpbmcuXG4gKlxuICogV2UgYWxzbyBleHBvc2UgYHRmLm11bFN0cmljdGAgd2hpY2ggaGFzIHRoZSBzYW1lIHNpZ25hdHVyZSBhcyB0aGlzIG9wIGFuZFxuICogYXNzZXJ0cyB0aGF0IGBhYCBhbmQgYGJgIGFyZSB0aGUgc2FtZSBzaGFwZSAoZG9lcyBub3QgYnJvYWRjYXN0KS5cbiAqXG4gKiBgYGBqc1xuICogY29uc3QgYSA9IHRmLnRlbnNvcjFkKFsxLCAyLCAzLCA0XSk7XG4gKiBjb25zdCBiID0gdGYudGVuc29yMWQoWzIsIDMsIDQsIDVdKTtcbiAqXG4gKiBhLm11bChiKS5wcmludCgpOyAgLy8gb3IgdGYubXVsKGEsIGIpXG4gKiBgYGBcbiAqXG4gKiBgYGBqc1xuICogLy8gQnJvYWRjYXN0IG11bCBhIHdpdGggYi5cbiAqIGNvbnN0IGEgPSB0Zi50ZW5zb3IxZChbMSwgMiwgMywgNF0pO1xuICogY29uc3QgYiA9IHRmLnNjYWxhcig1KTtcbiAqXG4gKiBhLm11bChiKS5wcmludCgpOyAgLy8gb3IgdGYubXVsKGEsIGIpXG4gKiBgYGBcbiAqIEBwYXJhbSBhIFRoZSBmaXJzdCB0ZW5zb3IgdG8gbXVsdGlwbHkuXG4gKiBAcGFyYW0gYiBUaGUgc2Vjb25kIHRlbnNvciB0byBtdWx0aXBseS4gTXVzdCBoYXZlIHRoZSBzYW1lIGR0eXBlIGFzIGBhYC5cbiAqXG4gKiBAZG9jIHtoZWFkaW5nOiAnT3BlcmF0aW9ucycsIHN1YmhlYWRpbmc6ICdBcml0aG1ldGljJ31cbiAqL1xuZnVuY3Rpb24gbXVsXzxUIGV4dGVuZHMgVGVuc29yPihhOiBUZW5zb3J8VGVuc29yTGlrZSwgYjogVGVuc29yfFRlbnNvckxpa2UpOiBUIHtcbiAgbGV0ICRhID0gY29udmVydFRvVGVuc29yKGEsICdhJywgJ211bCcpO1xuICBsZXQgJGIgPSBjb252ZXJ0VG9UZW5zb3IoYiwgJ2InLCAnbXVsJyk7XG4gIFskYSwgJGJdID0gbWFrZVR5cGVzTWF0Y2goJGEsICRiKTtcblxuICBjb25zdCBpbnB1dHM6IE11bHRpcGx5SW5wdXRzID0ge2E6ICRhLCBiOiAkYn07XG5cbiAgcmV0dXJuIEVOR0lORS5ydW5LZXJuZWwoTXVsdGlwbHksIGlucHV0cyBhcyB7fSBhcyBOYW1lZFRlbnNvck1hcCk7XG59XG5leHBvcnQgY29uc3QgbXVsID0gb3Aoe211bF99KTtcbiJdfQ==","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as util from '../util';\n/**\n *\n * @param inputShape Input tensor shape is of the following dimensions:\n *     `[batch, height, width, inChannels]`.\n * @param filterShape The filter shape is of the following dimensions:\n *     `[filterHeight, filterWidth, depth]`.\n * @param strides The strides of the sliding window for each dimension of the\n *     input tensor: `[strideHeight, strideWidth]`.\n *     If `strides` is a single number,\n *     then `strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1*1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dataFormat The data format of the input and output data.\n *     Defaults to 'NHWC'.\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`.\n *     Defaults to `[1, 1]`. If `dilations` is a single number, then\n *     `dilationHeight == dilationWidth`.\n */\nexport function computeDilation2DInfo(inputShape, filterShape, strides, pad, dataFormat = 'NHWC', dilations) {\n    // `computerConv2DInfo` require filterShape to be in the dimension of:\n    // `[filterHeight, filterWidth, depth, outDepth]`, dilation2d doesn't have\n    // outDepth, it should have the same depth as the input.\n    // Input shape: [batch, height, width, inChannels]\n    const inputChannels = inputShape[3];\n    const $filterShape = [...filterShape, inputChannels];\n    const $dataFormat = convertConv2DDataFormat(dataFormat);\n    return computeConv2DInfo(inputShape, $filterShape, strides, dilations, pad, null /* roundingMode */, null /* depthWise */, $dataFormat);\n}\nexport function computePool2DInfo(inShape, filterSize, strides, dilations, pad, roundingMode, dataFormat = 'channelsLast') {\n    const [filterHeight, filterWidth] = parseTupleParam(filterSize);\n    let filterShape;\n    if (dataFormat === 'channelsLast') {\n        filterShape = [filterHeight, filterWidth, inShape[3], inShape[3]];\n    }\n    else if (dataFormat === 'channelsFirst') {\n        filterShape = [filterHeight, filterWidth, inShape[1], inShape[1]];\n    }\n    else {\n        throw new Error(`Unknown dataFormat ${dataFormat}`);\n    }\n    return computeConv2DInfo(inShape, filterShape, strides, dilations, pad, roundingMode, false, dataFormat);\n}\n/**\n * Computes the information for a forward pass of a pooling3D operation.\n */\nexport function computePool3DInfo(inShape, filterSize, strides, dilations, pad, roundingMode, dataFormat = 'NDHWC') {\n    const [filterDepth, filterHeight, filterWidth] = parse3TupleParam(filterSize);\n    let filterShape;\n    let $dataFormat;\n    if (dataFormat === 'NDHWC') {\n        $dataFormat = 'channelsLast';\n        filterShape =\n            [filterDepth, filterHeight, filterWidth, inShape[4], inShape[4]];\n    }\n    else if (dataFormat === 'NCDHW') {\n        $dataFormat = 'channelsFirst';\n        filterShape =\n            [filterDepth, filterHeight, filterWidth, inShape[1], inShape[1]];\n    }\n    else {\n        throw new Error(`Unknown dataFormat ${dataFormat}`);\n    }\n    return computeConv3DInfo(inShape, filterShape, strides, dilations, pad, false, $dataFormat, roundingMode);\n}\n/**\n * Computes the information for a forward pass of a convolution/pooling\n * operation.\n */\nexport function computeConv2DInfo(inShape, filterShape, strides, dilations, pad, roundingMode, depthwise = false, dataFormat = 'channelsLast') {\n    let [batchSize, inHeight, inWidth, inChannels] = [-1, -1, -1, -1];\n    if (dataFormat === 'channelsLast') {\n        [batchSize, inHeight, inWidth, inChannels] = inShape;\n    }\n    else if (dataFormat === 'channelsFirst') {\n        [batchSize, inChannels, inHeight, inWidth] = inShape;\n    }\n    else {\n        throw new Error(`Unknown dataFormat ${dataFormat}`);\n    }\n    const [filterHeight, filterWidth, , filterChannels] = filterShape;\n    const [strideHeight, strideWidth] = parseTupleParam(strides);\n    const [dilationHeight, dilationWidth] = parseTupleParam(dilations);\n    const effectiveFilterHeight = getEffectiveFilterSize(filterHeight, dilationHeight);\n    const effectiveFilterWidth = getEffectiveFilterSize(filterWidth, dilationWidth);\n    const { padInfo, outHeight, outWidth } = getPadAndOutInfo(pad, inHeight, inWidth, strideHeight, strideWidth, effectiveFilterHeight, effectiveFilterWidth, roundingMode, dataFormat);\n    const outChannels = depthwise ? filterChannels * inChannels : filterChannels;\n    let outShape;\n    if (dataFormat === 'channelsFirst') {\n        outShape = [batchSize, outChannels, outHeight, outWidth];\n    }\n    else if (dataFormat === 'channelsLast') {\n        outShape = [batchSize, outHeight, outWidth, outChannels];\n    }\n    return {\n        batchSize,\n        dataFormat,\n        inHeight,\n        inWidth,\n        inChannels,\n        outHeight,\n        outWidth,\n        outChannels,\n        padInfo,\n        strideHeight,\n        strideWidth,\n        filterHeight,\n        filterWidth,\n        effectiveFilterHeight,\n        effectiveFilterWidth,\n        dilationHeight,\n        dilationWidth,\n        inShape,\n        outShape,\n        filterShape\n    };\n}\n/**\n * Computes the information for a forward pass of a 3D convolution/pooling\n * operation.\n */\nexport function computeConv3DInfo(inShape, filterShape, strides, dilations, pad, depthwise = false, dataFormat = 'channelsLast', roundingMode) {\n    let [batchSize, inDepth, inHeight, inWidth, inChannels] = [-1, -1, -1, -1, -1];\n    if (dataFormat === 'channelsLast') {\n        [batchSize, inDepth, inHeight, inWidth, inChannels] = inShape;\n    }\n    else if (dataFormat === 'channelsFirst') {\n        [batchSize, inChannels, inDepth, inHeight, inWidth] = inShape;\n    }\n    else {\n        throw new Error(`Unknown dataFormat ${dataFormat}`);\n    }\n    const [filterDepth, filterHeight, filterWidth, , filterChannels] = filterShape;\n    const [strideDepth, strideHeight, strideWidth] = parse3TupleParam(strides);\n    const [dilationDepth, dilationHeight, dilationWidth] = parse3TupleParam(dilations);\n    const effectiveFilterDepth = getEffectiveFilterSize(filterDepth, dilationDepth);\n    const effectiveFilterHeight = getEffectiveFilterSize(filterHeight, dilationHeight);\n    const effectiveFilterWidth = getEffectiveFilterSize(filterWidth, dilationWidth);\n    const { padInfo, outDepth, outHeight, outWidth } = get3DPadAndOutInfo(pad, inDepth, inHeight, inWidth, strideDepth, strideHeight, strideWidth, effectiveFilterDepth, effectiveFilterHeight, effectiveFilterWidth, roundingMode);\n    const outChannels = depthwise ? filterChannels * inChannels : filterChannels;\n    let outShape;\n    if (dataFormat === 'channelsFirst') {\n        outShape = [batchSize, outChannels, outDepth, outHeight, outWidth];\n    }\n    else if (dataFormat === 'channelsLast') {\n        outShape = [batchSize, outDepth, outHeight, outWidth, outChannels];\n    }\n    return {\n        batchSize,\n        dataFormat,\n        inDepth,\n        inHeight,\n        inWidth,\n        inChannels,\n        outDepth,\n        outHeight,\n        outWidth,\n        outChannels,\n        padInfo,\n        strideDepth,\n        strideHeight,\n        strideWidth,\n        filterDepth,\n        filterHeight,\n        filterWidth,\n        effectiveFilterDepth,\n        effectiveFilterHeight,\n        effectiveFilterWidth,\n        dilationDepth,\n        dilationHeight,\n        dilationWidth,\n        inShape,\n        outShape,\n        filterShape\n    };\n}\nfunction computeOutputShape2D(inShape, fieldSize, stride, zeroPad, roundingMode) {\n    if (zeroPad == null) {\n        zeroPad = computeDefaultPad(inShape, fieldSize, stride);\n    }\n    const inputRows = inShape[0];\n    const inputCols = inShape[1];\n    const outputRows = round((inputRows - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    const outputCols = round((inputCols - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    return [outputRows, outputCols];\n}\nfunction computeOutputShape4D(inShape, fieldSize, outChannels, stride, zeroPad, roundingMode) {\n    if (zeroPad == null) {\n        zeroPad = computeDefaultPad(inShape, fieldSize, stride);\n    }\n    const inputDepth = inShape[0];\n    const inputRows = inShape[1];\n    const inputCols = inShape[2];\n    const outputDepths = round((inputDepth - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    const outputRows = round((inputRows - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    const outputCols = round((inputCols - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n    return [outputDepths, outputRows, outputCols, outChannels];\n}\nexport function computeDefaultPad(inputShape, fieldSize, stride, dilation = 1) {\n    const effectiveFieldSize = getEffectiveFilterSize(fieldSize, dilation);\n    return Math.floor((inputShape[0] * (stride - 1) - stride + effectiveFieldSize) / 2);\n}\nfunction parseTupleParam(param) {\n    if (typeof param === 'number') {\n        return [param, param, param];\n    }\n    if (param.length === 2) {\n        return [param[0], param[1], 1];\n    }\n    return param;\n}\nfunction parse3TupleParam(param) {\n    return typeof param === 'number' ? [param, param, param] : param;\n}\n/* See https://www.tensorflow.org/api_docs/python/tf/nn/atrous_conv2d\n * Atrous convolution is equivalent to standard convolution with upsampled\n * filters with effective_filter_height =\n * filter_height + (filter_height - 1) * (dilation - 1)\n * and effective_filter_width =\n * filter_width + (filter_width - 1) * (dilation - 1),\n * produced by inserting dilation - 1 zeros along consecutive elements across\n * the filters' spatial dimensions.\n * When there is a dilation, this converts a filter dimension to the\n * effective filter dimension, so it can be used in a standard convolution.\n */\nfunction getEffectiveFilterSize(filterSize, dilation) {\n    if (dilation <= 1) {\n        return filterSize;\n    }\n    return filterSize + (filterSize - 1) * (dilation - 1);\n}\nfunction getPadAndOutInfo(pad, inHeight, inWidth, strideHeight, strideWidth, filterHeight, filterWidth, roundingMode, dataFormat) {\n    let padInfo;\n    let outHeight;\n    let outWidth;\n    if (typeof pad === 'number') {\n        const padType = (pad === 0) ? 'VALID' : 'NUMBER';\n        padInfo = { top: pad, bottom: pad, left: pad, right: pad, type: padType };\n        const outShape = computeOutputShape2D([inHeight, inWidth], filterHeight, strideHeight, pad, roundingMode);\n        outHeight = outShape[0];\n        outWidth = outShape[1];\n    }\n    else if (pad === 'same') {\n        outHeight = Math.ceil(inHeight / strideHeight);\n        outWidth = Math.ceil(inWidth / strideWidth);\n        const padAlongHeight = Math.max(0, (outHeight - 1) * strideHeight + filterHeight - inHeight);\n        const padAlongWidth = Math.max(0, (outWidth - 1) * strideWidth + filterWidth - inWidth);\n        const top = Math.floor(padAlongHeight / 2);\n        const bottom = padAlongHeight - top;\n        const left = Math.floor(padAlongWidth / 2);\n        const right = padAlongWidth - left;\n        padInfo = { top, bottom, left, right, type: 'SAME' };\n    }\n    else if (pad === 'valid') {\n        padInfo = { top: 0, bottom: 0, left: 0, right: 0, type: 'VALID' };\n        outHeight = Math.ceil((inHeight - filterHeight + 1) / strideHeight);\n        outWidth = Math.ceil((inWidth - filterWidth + 1) / strideWidth);\n    }\n    else if (typeof pad === 'object') {\n        const top = dataFormat === 'channelsLast' ? pad[1][0] : pad[2][0];\n        const bottom = dataFormat === 'channelsLast' ? pad[1][1] : pad[2][1];\n        const left = dataFormat === 'channelsLast' ? pad[2][0] : pad[3][0];\n        const right = dataFormat === 'channelsLast' ? pad[2][1] : pad[3][1];\n        const padType = (top === 0 && bottom === 0 && left === 0 && right === 0) ?\n            'VALID' :\n            'EXPLICIT';\n        padInfo = { top, bottom, left, right, type: padType };\n        outHeight = round((inHeight - filterHeight + top + bottom) / strideHeight + 1, roundingMode);\n        outWidth = round((inWidth - filterWidth + left + right) / strideWidth + 1, roundingMode);\n    }\n    else {\n        throw Error(`Unknown padding parameter: ${pad}`);\n    }\n    return { padInfo, outHeight, outWidth };\n}\nfunction get3DPadAndOutInfo(pad, inDepth, inHeight, inWidth, strideDepth, strideHeight, strideWidth, filterDepth, filterHeight, filterWidth, roundingMode) {\n    let padInfo;\n    let outDepth;\n    let outHeight;\n    let outWidth;\n    if (typeof pad === 'number') {\n        const padType = (pad === 0) ? 'VALID' : 'NUMBER';\n        padInfo = {\n            top: pad,\n            bottom: pad,\n            left: pad,\n            right: pad,\n            front: pad,\n            back: pad,\n            type: padType\n        };\n        const outShape = computeOutputShape4D([inDepth, inHeight, inWidth, 1], filterDepth, 1, strideDepth, pad, roundingMode);\n        outDepth = outShape[0];\n        outHeight = outShape[1];\n        outWidth = outShape[2];\n    }\n    else if (pad === 'same') {\n        outDepth = Math.ceil(inDepth / strideDepth);\n        outHeight = Math.ceil(inHeight / strideHeight);\n        outWidth = Math.ceil(inWidth / strideWidth);\n        const padAlongDepth = (outDepth - 1) * strideDepth + filterDepth - inDepth;\n        const padAlongHeight = (outHeight - 1) * strideHeight + filterHeight - inHeight;\n        const padAlongWidth = (outWidth - 1) * strideWidth + filterWidth - inWidth;\n        const front = Math.floor(padAlongDepth / 2);\n        const back = padAlongDepth - front;\n        const top = Math.floor(padAlongHeight / 2);\n        const bottom = padAlongHeight - top;\n        const left = Math.floor(padAlongWidth / 2);\n        const right = padAlongWidth - left;\n        padInfo = { top, bottom, left, right, front, back, type: 'SAME' };\n    }\n    else if (pad === 'valid') {\n        padInfo = {\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            front: 0,\n            back: 0,\n            type: 'VALID'\n        };\n        outDepth = Math.ceil((inDepth - filterDepth + 1) / strideDepth);\n        outHeight = Math.ceil((inHeight - filterHeight + 1) / strideHeight);\n        outWidth = Math.ceil((inWidth - filterWidth + 1) / strideWidth);\n    }\n    else {\n        throw Error(`Unknown padding parameter: ${pad}`);\n    }\n    return { padInfo, outDepth, outHeight, outWidth };\n}\n/**\n * Rounds a value depending on the rounding mode\n * @param value\n * @param roundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction round(value, roundingMode) {\n    if (!roundingMode) {\n        return Math.trunc(value);\n    }\n    switch (roundingMode) {\n        case 'round':\n            // used for Caffe Conv\n            return Math.round(value);\n        case 'ceil':\n            // used for Caffe Pool\n            return Math.ceil(value);\n        case 'floor':\n            return Math.floor(value);\n        default:\n            throw new Error(`Unknown roundingMode ${roundingMode}`);\n    }\n}\nexport function tupleValuesAreOne(param) {\n    const [dimA, dimB, dimC] = parseTupleParam(param);\n    return dimA === 1 && dimB === 1 && dimC === 1;\n}\nexport function eitherStridesOrDilationsAreOne(strides, dilations) {\n    return tupleValuesAreOne(strides) || tupleValuesAreOne(dilations);\n}\n/**\n * Convert Conv2D dataFormat from 'NHWC'|'NCHW' to\n *    'channelsLast'|'channelsFirst'\n * @param dataFormat in 'NHWC'|'NCHW' mode\n * @return dataFormat in 'channelsLast'|'channelsFirst' mode\n * @throws unknown dataFormat\n */\nexport function convertConv2DDataFormat(dataFormat) {\n    if (dataFormat === 'NHWC') {\n        return 'channelsLast';\n    }\n    else if (dataFormat === 'NCHW') {\n        return 'channelsFirst';\n    }\n    else {\n        throw new Error(`Unknown dataFormat ${dataFormat}`);\n    }\n}\n/**\n * Check validity of pad when using dimRoundingMode.\n * @param opDesc A string of op description\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid` output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n * @throws unknown padding parameter\n */\nexport function checkPadOnDimRoundingMode(opDesc, pad, dimRoundingMode) {\n    if (dimRoundingMode != null) {\n        if (typeof pad === 'string') {\n            throw Error(`Error in ${opDesc}: pad must be an integer when using ` +\n                `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n        }\n        else if (typeof pad === 'number') {\n            util.assert(util.isInt(pad), () => `Error in ${opDesc}: pad must be an integer when using ` +\n                `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n        }\n        else if (typeof pad === 'object') {\n            pad.forEach(p => {\n                p.forEach(v => {\n                    util.assert(util.isInt(v), () => `Error in ${opDesc}: pad must be an integer when using ` +\n                        `dimRoundingMode ${dimRoundingMode} but got pad ${v}.`);\n                });\n            });\n        }\n        else {\n            throw Error(`Error in ${opDesc}: Unknown padding parameter: ${pad}`);\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Reshape } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Reshapes a `tf.Tensor` to a given shape.\n *\n * Given an input tensor, returns a new tensor with the same values as the\n * input tensor with shape `shape`.\n *\n * If one component of shape is the special value -1, the size of that\n * dimension is computed so that the total size remains constant. In\n * particular, a shape of [-1] flattens into 1-D. At most one component of\n * shape can be -1.\n *\n * If shape is 1-D or higher, then the operation returns a tensor with shape\n * shape filled with the values of tensor. In this case, the number of\n * elements implied by shape must be the same as the number of elements in\n * tensor.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * x.reshape([2, 2]).print();\n * ```\n *\n * @param x The input tensor to be reshaped.\n * @param shape An array of integers defining the output tensor shape.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction reshape_(x, shape) {\n    const $x = convertToTensor(x, 'x', 'reshape', 'string_or_numeric');\n    const inputs = { x: $x };\n    const attrs = { shape };\n    return ENGINE.runKernel(Reshape, inputs, attrs);\n}\nexport const reshape = op({ reshape_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzaGFwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29yZS9zcmMvb3BzL3Jlc2hhcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUNqQyxPQUFPLEVBQUMsT0FBTyxFQUE4QixNQUFNLGlCQUFpQixDQUFDO0FBSXJFLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUduRCxPQUFPLEVBQUMsRUFBRSxFQUFDLE1BQU0sYUFBYSxDQUFDO0FBRS9COzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBeUJHO0FBQ0gsU0FBUyxRQUFRLENBQ2IsQ0FBb0IsRUFBRSxLQUFrQjtJQUMxQyxNQUFNLEVBQUUsR0FBRyxlQUFlLENBQUMsQ0FBQyxFQUFFLEdBQUcsRUFBRSxTQUFTLEVBQUUsbUJBQW1CLENBQUMsQ0FBQztJQUVuRSxNQUFNLE1BQU0sR0FBa0IsRUFBQyxDQUFDLEVBQUUsRUFBRSxFQUFDLENBQUM7SUFDdEMsTUFBTSxLQUFLLEdBQWlCLEVBQUMsS0FBSyxFQUFDLENBQUM7SUFDcEMsT0FBTyxNQUFNLENBQUMsU0FBUyxDQUNuQixPQUFPLEVBQUUsTUFBOEIsRUFBRSxLQUEyQixDQUFDLENBQUM7QUFDNUUsQ0FBQztBQUNELE1BQU0sQ0FBQyxNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsRUFBQyxRQUFRLEVBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0VOR0lORX0gZnJvbSAnLi4vZW5naW5lJztcbmltcG9ydCB7UmVzaGFwZSwgUmVzaGFwZUF0dHJzLCBSZXNoYXBlSW5wdXRzfSBmcm9tICcuLi9rZXJuZWxfbmFtZXMnO1xuaW1wb3J0IHtOYW1lZEF0dHJNYXB9IGZyb20gJy4uL2tlcm5lbF9yZWdpc3RyeSc7XG5pbXBvcnQge1RlbnNvcn0gZnJvbSAnLi4vdGVuc29yJztcbmltcG9ydCB7TmFtZWRUZW5zb3JNYXB9IGZyb20gJy4uL3RlbnNvcl90eXBlcyc7XG5pbXBvcnQge2NvbnZlcnRUb1RlbnNvcn0gZnJvbSAnLi4vdGVuc29yX3V0aWxfZW52JztcbmltcG9ydCB7UmFuaywgU2hhcGVNYXAsIFRlbnNvckxpa2V9IGZyb20gJy4uL3R5cGVzJztcblxuaW1wb3J0IHtvcH0gZnJvbSAnLi9vcGVyYXRpb24nO1xuXG4vKipcbiAqIFJlc2hhcGVzIGEgYHRmLlRlbnNvcmAgdG8gYSBnaXZlbiBzaGFwZS5cbiAqXG4gKiBHaXZlbiBhbiBpbnB1dCB0ZW5zb3IsIHJldHVybnMgYSBuZXcgdGVuc29yIHdpdGggdGhlIHNhbWUgdmFsdWVzIGFzIHRoZVxuICogaW5wdXQgdGVuc29yIHdpdGggc2hhcGUgYHNoYXBlYC5cbiAqXG4gKiBJZiBvbmUgY29tcG9uZW50IG9mIHNoYXBlIGlzIHRoZSBzcGVjaWFsIHZhbHVlIC0xLCB0aGUgc2l6ZSBvZiB0aGF0XG4gKiBkaW1lbnNpb24gaXMgY29tcHV0ZWQgc28gdGhhdCB0aGUgdG90YWwgc2l6ZSByZW1haW5zIGNvbnN0YW50LiBJblxuICogcGFydGljdWxhciwgYSBzaGFwZSBvZiBbLTFdIGZsYXR0ZW5zIGludG8gMS1ELiBBdCBtb3N0IG9uZSBjb21wb25lbnQgb2ZcbiAqIHNoYXBlIGNhbiBiZSAtMS5cbiAqXG4gKiBJZiBzaGFwZSBpcyAxLUQgb3IgaGlnaGVyLCB0aGVuIHRoZSBvcGVyYXRpb24gcmV0dXJucyBhIHRlbnNvciB3aXRoIHNoYXBlXG4gKiBzaGFwZSBmaWxsZWQgd2l0aCB0aGUgdmFsdWVzIG9mIHRlbnNvci4gSW4gdGhpcyBjYXNlLCB0aGUgbnVtYmVyIG9mXG4gKiBlbGVtZW50cyBpbXBsaWVkIGJ5IHNoYXBlIG11c3QgYmUgdGhlIHNhbWUgYXMgdGhlIG51bWJlciBvZiBlbGVtZW50cyBpblxuICogdGVuc29yLlxuICpcbiAqIGBgYGpzXG4gKiBjb25zdCB4ID0gdGYudGVuc29yMWQoWzEsIDIsIDMsIDRdKTtcbiAqIHgucmVzaGFwZShbMiwgMl0pLnByaW50KCk7XG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0geCBUaGUgaW5wdXQgdGVuc29yIHRvIGJlIHJlc2hhcGVkLlxuICogQHBhcmFtIHNoYXBlIEFuIGFycmF5IG9mIGludGVnZXJzIGRlZmluaW5nIHRoZSBvdXRwdXQgdGVuc29yIHNoYXBlLlxuICpcbiAqIEBkb2Mge2hlYWRpbmc6ICdUZW5zb3JzJywgc3ViaGVhZGluZzogJ1RyYW5zZm9ybWF0aW9ucyd9XG4gKi9cbmZ1bmN0aW9uIHJlc2hhcGVfPFIgZXh0ZW5kcyBSYW5rPihcbiAgICB4OiBUZW5zb3J8VGVuc29yTGlrZSwgc2hhcGU6IFNoYXBlTWFwW1JdKTogVGVuc29yPFI+IHtcbiAgY29uc3QgJHggPSBjb252ZXJ0VG9UZW5zb3IoeCwgJ3gnLCAncmVzaGFwZScsICdzdHJpbmdfb3JfbnVtZXJpYycpO1xuXG4gIGNvbnN0IGlucHV0czogUmVzaGFwZUlucHV0cyA9IHt4OiAkeH07XG4gIGNvbnN0IGF0dHJzOiBSZXNoYXBlQXR0cnMgPSB7c2hhcGV9O1xuICByZXR1cm4gRU5HSU5FLnJ1bktlcm5lbChcbiAgICAgIFJlc2hhcGUsIGlucHV0cyBhcyB7fSBhcyBOYW1lZFRlbnNvck1hcCwgYXR0cnMgYXMge30gYXMgTmFtZWRBdHRyTWFwKTtcbn1cbmV4cG9ydCBjb25zdCByZXNoYXBlID0gb3Aoe3Jlc2hhcGVffSk7XG4iXX0=","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { AvgPool } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { cast } from './cast';\nimport * as conv_util from './conv_util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the 2D average pooling of an image.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param pad The type of padding algorithm:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *         https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction avgPool_(x, filterSize, strides, pad, dimRoundingMode) {\n    const $x = convertToTensor(x, 'x', 'avgPool', 'float32');\n    const dilations = 1;\n    util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in avgPool: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    util.assert(x4D.rank === 4, () => `Error in avgPool: x must be rank 4 but got rank ${x4D.rank}.`);\n    conv_util.checkPadOnDimRoundingMode('avgPool', pad, dimRoundingMode);\n    const inputs = { x: x4D };\n    const attrs = { filterSize, strides, pad, dimRoundingMode };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    let res = ENGINE.runKernel(AvgPool, inputs, attrs);\n    res = cast(res, $x.dtype);\n    if (reshapedTo4D) {\n        return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nexport const avgPool = op({ avgPool_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZnX3Bvb2wuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL29wcy9hdmdfcG9vbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsTUFBTSxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBQ2pDLE9BQU8sRUFBQyxPQUFPLEVBQThCLE1BQU0saUJBQWlCLENBQUM7QUFJckUsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBRW5ELE9BQU8sS0FBSyxJQUFJLE1BQU0sU0FBUyxDQUFDO0FBRWhDLE9BQU8sRUFBQyxJQUFJLEVBQUMsTUFBTSxRQUFRLENBQUM7QUFDNUIsT0FBTyxLQUFLLFNBQVMsTUFBTSxhQUFhLENBQUM7QUFDekMsT0FBTyxFQUFDLEVBQUUsRUFBQyxNQUFNLGFBQWEsQ0FBQztBQUMvQixPQUFPLEVBQUMsT0FBTyxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBRWxDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBbUJHO0FBQ0gsU0FBUyxRQUFRLENBQ2IsQ0FBZSxFQUFFLFVBQW1DLEVBQ3BELE9BQWdDLEVBQ2hDLEdBQW9ELEVBQ3BELGVBQXdDO0lBQzFDLE1BQU0sRUFBRSxHQUFHLGVBQWUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLFNBQVMsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUN6RCxNQUFNLFNBQVMsR0FBRyxDQUFDLENBQUM7SUFFcEIsSUFBSSxDQUFDLE1BQU0sQ0FDUCxTQUFTLENBQUMsOEJBQThCLENBQUMsT0FBTyxFQUFFLFNBQVMsQ0FBQyxFQUM1RCxHQUFHLEVBQUUsQ0FBQywyREFBMkQ7UUFDN0QsZUFBZSxPQUFPLG1CQUFtQixTQUFTLEdBQUcsQ0FBQyxDQUFDO0lBRS9ELElBQUksR0FBRyxHQUFHLEVBQWMsQ0FBQztJQUN6QixJQUFJLFlBQVksR0FBRyxLQUFLLENBQUM7SUFDekIsSUFBSSxFQUFFLENBQUMsSUFBSSxLQUFLLENBQUMsRUFBRTtRQUNqQixZQUFZLEdBQUcsSUFBSSxDQUFDO1FBQ3BCLEdBQUcsR0FBRyxPQUFPLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUMvRDtJQUVELElBQUksQ0FBQyxNQUFNLENBQ1AsR0FBRyxDQUFDLElBQUksS0FBSyxDQUFDLEVBQ2QsR0FBRyxFQUFFLENBQUMsbURBQW1ELEdBQUcsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDO0lBQzFFLFNBQVMsQ0FBQyx5QkFBeUIsQ0FBQyxTQUFTLEVBQUUsR0FBRyxFQUFFLGVBQWUsQ0FBQyxDQUFDO0lBQ3JFLE1BQU0sTUFBTSxHQUFrQixFQUFDLENBQUMsRUFBRSxHQUFHLEVBQUMsQ0FBQztJQUN2QyxNQUFNLEtBQUssR0FBaUIsRUFBQyxVQUFVLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxlQUFlLEVBQUMsQ0FBQztJQUV4RSwwREFBMEQ7SUFDMUQsSUFBSSxHQUFHLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FDWixPQUFPLEVBQUUsTUFBOEIsRUFDdkMsS0FBMkIsQ0FBTSxDQUFDO0lBRWhELEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUUxQixJQUFJLFlBQVksRUFBRTtRQUNoQixPQUFPLE9BQU8sQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFNLENBQUM7S0FDdEU7SUFFRCxPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDLEVBQUMsUUFBUSxFQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtFTkdJTkV9IGZyb20gJy4uL2VuZ2luZSc7XG5pbXBvcnQge0F2Z1Bvb2wsIEF2Z1Bvb2xBdHRycywgQXZnUG9vbElucHV0c30gZnJvbSAnLi4va2VybmVsX25hbWVzJztcbmltcG9ydCB7TmFtZWRBdHRyTWFwfSBmcm9tICcuLi9rZXJuZWxfcmVnaXN0cnknO1xuaW1wb3J0IHtUZW5zb3IzRCwgVGVuc29yNER9IGZyb20gJy4uL3RlbnNvcic7XG5pbXBvcnQge05hbWVkVGVuc29yTWFwfSBmcm9tICcuLi90ZW5zb3JfdHlwZXMnO1xuaW1wb3J0IHtjb252ZXJ0VG9UZW5zb3J9IGZyb20gJy4uL3RlbnNvcl91dGlsX2Vudic7XG5pbXBvcnQge1RlbnNvckxpa2V9IGZyb20gJy4uL3R5cGVzJztcbmltcG9ydCAqIGFzIHV0aWwgZnJvbSAnLi4vdXRpbCc7XG5cbmltcG9ydCB7Y2FzdH0gZnJvbSAnLi9jYXN0JztcbmltcG9ydCAqIGFzIGNvbnZfdXRpbCBmcm9tICcuL2NvbnZfdXRpbCc7XG5pbXBvcnQge29wfSBmcm9tICcuL29wZXJhdGlvbic7XG5pbXBvcnQge3Jlc2hhcGV9IGZyb20gJy4vcmVzaGFwZSc7XG5cbi8qKlxuICogQ29tcHV0ZXMgdGhlIDJEIGF2ZXJhZ2UgcG9vbGluZyBvZiBhbiBpbWFnZS5cbiAqXG4gKiBAcGFyYW0geCBUaGUgaW5wdXQgdGVuc29yLCBvZiByYW5rIDQgb3IgcmFuayAzIG9mIHNoYXBlXG4gKiAgICAgYFtiYXRjaCwgaGVpZ2h0LCB3aWR0aCwgaW5DaGFubmVsc11gLiBJZiByYW5rIDMsIGJhdGNoIG9mIDEgaXMgYXNzdW1lZC5cbiAqIEBwYXJhbSBmaWx0ZXJTaXplIFRoZSBmaWx0ZXIgc2l6ZTogYFtmaWx0ZXJIZWlnaHQsIGZpbHRlcldpZHRoXWAuIElmXG4gKiAgICAgYGZpbHRlclNpemVgIGlzIGEgc2luZ2xlIG51bWJlciwgdGhlbiBgZmlsdGVySGVpZ2h0ID09IGZpbHRlcldpZHRoYC5cbiAqIEBwYXJhbSBzdHJpZGVzIFRoZSBzdHJpZGVzIG9mIHRoZSBwb29saW5nOiBgW3N0cmlkZUhlaWdodCwgc3RyaWRlV2lkdGhdYC4gSWZcbiAqICAgICBgc3RyaWRlc2AgaXMgYSBzaW5nbGUgbnVtYmVyLCB0aGVuIGBzdHJpZGVIZWlnaHQgPT0gc3RyaWRlV2lkdGhgLlxuICogQHBhcmFtIHBhZCBUaGUgdHlwZSBvZiBwYWRkaW5nIGFsZ29yaXRobTpcbiAqICAgIC0gYHNhbWVgIGFuZCBzdHJpZGUgMTogb3V0cHV0IHdpbGwgYmUgb2Ygc2FtZSBzaXplIGFzIGlucHV0LFxuICogICAgICAgcmVnYXJkbGVzcyBvZiBmaWx0ZXIgc2l6ZS5cbiAqICAgIC0gYHZhbGlkYDogb3V0cHV0IHdpbGwgYmUgc21hbGxlciB0aGFuIGlucHV0IGlmIGZpbHRlciBpcyBsYXJnZXJcbiAqICAgICAgIHRoYW4gMXgxLlxuICogICAgLSBGb3IgbW9yZSBpbmZvLCBzZWUgdGhpcyBndWlkZTpcbiAqICAgICBbaHR0cHM6Ly93d3cudGVuc29yZmxvdy5vcmcvYXBpX2RvY3MvcHl0aG9uL3RmL25uL2NvbnZvbHV0aW9uXShcbiAqICAgICAgICAgaHR0cHM6Ly93d3cudGVuc29yZmxvdy5vcmcvYXBpX2RvY3MvcHl0aG9uL3RmL25uL2NvbnZvbHV0aW9uKVxuICogQHBhcmFtIGRpbVJvdW5kaW5nTW9kZSBBIHN0cmluZyBmcm9tOiAnY2VpbCcsICdyb3VuZCcsICdmbG9vcicuIElmIG5vbmUgaXNcbiAqICAgICBwcm92aWRlZCwgaXQgd2lsbCBkZWZhdWx0IHRvIHRydW5jYXRlLlxuICovXG5mdW5jdGlvbiBhdmdQb29sXzxUIGV4dGVuZHMgVGVuc29yM0R8VGVuc29yNEQ+KFxuICAgIHg6IFR8VGVuc29yTGlrZSwgZmlsdGVyU2l6ZTogW251bWJlciwgbnVtYmVyXXxudW1iZXIsXG4gICAgc3RyaWRlczogW251bWJlciwgbnVtYmVyXXxudW1iZXIsXG4gICAgcGFkOiAndmFsaWQnfCdzYW1lJ3xudW1iZXJ8Y29udl91dGlsLkV4cGxpY2l0UGFkZGluZyxcbiAgICBkaW1Sb3VuZGluZ01vZGU/OiAnZmxvb3InfCdyb3VuZCd8J2NlaWwnKTogVCB7XG4gIGNvbnN0ICR4ID0gY29udmVydFRvVGVuc29yKHgsICd4JywgJ2F2Z1Bvb2wnLCAnZmxvYXQzMicpO1xuICBjb25zdCBkaWxhdGlvbnMgPSAxO1xuXG4gIHV0aWwuYXNzZXJ0KFxuICAgICAgY29udl91dGlsLmVpdGhlclN0cmlkZXNPckRpbGF0aW9uc0FyZU9uZShzdHJpZGVzLCBkaWxhdGlvbnMpLFxuICAgICAgKCkgPT4gJ0Vycm9yIGluIGF2Z1Bvb2w6IEVpdGhlciBzdHJpZGVzIG9yIGRpbGF0aW9ucyBtdXN0IGJlIDEuICcgK1xuICAgICAgICAgIGBHb3Qgc3RyaWRlcyAke3N0cmlkZXN9IGFuZCBkaWxhdGlvbnMgJyR7ZGlsYXRpb25zfSdgKTtcblxuICBsZXQgeDREID0gJHggYXMgVGVuc29yNEQ7XG4gIGxldCByZXNoYXBlZFRvNEQgPSBmYWxzZTtcbiAgaWYgKCR4LnJhbmsgPT09IDMpIHtcbiAgICByZXNoYXBlZFRvNEQgPSB0cnVlO1xuICAgIHg0RCA9IHJlc2hhcGUoJHgsIFsxLCAkeC5zaGFwZVswXSwgJHguc2hhcGVbMV0sICR4LnNoYXBlWzJdXSk7XG4gIH1cblxuICB1dGlsLmFzc2VydChcbiAgICAgIHg0RC5yYW5rID09PSA0LFxuICAgICAgKCkgPT4gYEVycm9yIGluIGF2Z1Bvb2w6IHggbXVzdCBiZSByYW5rIDQgYnV0IGdvdCByYW5rICR7eDRELnJhbmt9LmApO1xuICBjb252X3V0aWwuY2hlY2tQYWRPbkRpbVJvdW5kaW5nTW9kZSgnYXZnUG9vbCcsIHBhZCwgZGltUm91bmRpbmdNb2RlKTtcbiAgY29uc3QgaW5wdXRzOiBBdmdQb29sSW5wdXRzID0ge3g6IHg0RH07XG4gIGNvbnN0IGF0dHJzOiBBdmdQb29sQXR0cnMgPSB7ZmlsdGVyU2l6ZSwgc3RyaWRlcywgcGFkLCBkaW1Sb3VuZGluZ01vZGV9O1xuXG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogbm8tdW5uZWNlc3NhcnktdHlwZS1hc3NlcnRpb25cbiAgbGV0IHJlcyA9IEVOR0lORS5ydW5LZXJuZWwoXG4gICAgICAgICAgICAgICAgQXZnUG9vbCwgaW5wdXRzIGFzIHt9IGFzIE5hbWVkVGVuc29yTWFwLFxuICAgICAgICAgICAgICAgIGF0dHJzIGFzIHt9IGFzIE5hbWVkQXR0ck1hcCkgYXMgVDtcblxuICByZXMgPSBjYXN0KHJlcywgJHguZHR5cGUpO1xuXG4gIGlmIChyZXNoYXBlZFRvNEQpIHtcbiAgICByZXR1cm4gcmVzaGFwZShyZXMsIFtyZXMuc2hhcGVbMV0sIHJlcy5zaGFwZVsyXSwgcmVzLnNoYXBlWzNdXSkgYXMgVDtcbiAgfVxuXG4gIHJldHVybiByZXM7XG59XG5cbmV4cG9ydCBjb25zdCBhdmdQb29sID0gb3Aoe2F2Z1Bvb2xffSk7XG4iXX0=","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Concat } from '../kernel_names';\nimport { convertToTensorArray } from '../tensor_util_env';\nimport { assert } from '../util';\nimport { clone } from './clone';\nimport { op } from './operation';\n/**\n * Concatenates a list of `tf.Tensor`s along a given axis.\n *\n * The tensors ranks and types must match, and their sizes must match in all\n * dimensions except `axis`.\n *\n * Also available are stricter rank-specific methods that assert that\n * `tensors` are of the given rank:\n *   - `tf.concat1d`\n *   - `tf.concat2d`\n *   - `tf.concat3d`\n *   - `tf.concat4d`\n *\n * Except `tf.concat1d` (which does not have axis param), all methods have\n * same signature as this method.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * a.concat(b).print();  // or a.concat(b)\n * ```\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * const c = tf.tensor1d([5, 6]);\n * tf.concat([a, b, c]).print();\n * ```\n *\n * ```js\n * const a = tf.tensor2d([[1, 2], [10, 20]]);\n * const b = tf.tensor2d([[3, 4], [30, 40]]);\n * const axis = 1;\n * tf.concat([a, b], axis).print();\n * ```\n * @param tensors A list of tensors to concatenate.\n * @param axis The axis to concate along. Defaults to 0 (the first dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction concat_(tensors, axis = 0) {\n    assert(tensors.length >= 1, () => 'Pass at least one tensor to concat');\n    const $tensors = convertToTensorArray(tensors, 'tensors', 'concat', 'string_or_numeric');\n    if ($tensors[0].dtype === 'complex64') {\n        $tensors.forEach(tensor => {\n            if (tensor.dtype !== 'complex64') {\n                throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${tensor.dtype}. `);\n            }\n        });\n    }\n    if ($tensors.length === 1) {\n        return clone($tensors[0]);\n    }\n    const inputs = $tensors;\n    const attr = { axis };\n    return ENGINE.runKernel(Concat, inputs, attr);\n}\nexport const concat = op({ concat_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uY2F0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy9vcHMvY29uY2F0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUNILE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDakMsT0FBTyxFQUFDLE1BQU0sRUFBNEIsTUFBTSxpQkFBaUIsQ0FBQztBQUlsRSxPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUV4RCxPQUFPLEVBQUMsTUFBTSxFQUFDLE1BQU0sU0FBUyxDQUFDO0FBRS9CLE9BQU8sRUFBQyxLQUFLLEVBQUMsTUFBTSxTQUFTLENBQUM7QUFDOUIsT0FBTyxFQUFDLEVBQUUsRUFBQyxNQUFNLGFBQWEsQ0FBQztBQUUvQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBdUNHO0FBQ0gsU0FBUyxPQUFPLENBQW1CLE9BQTRCLEVBQUUsSUFBSSxHQUFHLENBQUM7SUFDdkUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLG9DQUFvQyxDQUFDLENBQUM7SUFFeEUsTUFBTSxRQUFRLEdBQ1Ysb0JBQW9CLENBQUMsT0FBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsbUJBQW1CLENBQUMsQ0FBQztJQUU1RSxJQUFJLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLEtBQUssV0FBVyxFQUFFO1FBQ3JDLFFBQVEsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDeEIsSUFBSSxNQUFNLENBQUMsS0FBSyxLQUFLLFdBQVcsRUFBRTtnQkFDaEMsTUFBTSxJQUFJLEtBQUssQ0FBQzt1QkFDRCxNQUFNLENBQUMsS0FBSyxJQUFJLENBQUMsQ0FBQzthQUNsQztRQUNILENBQUMsQ0FBQyxDQUFDO0tBQ0o7SUFFRCxJQUFJLFFBQVEsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1FBQ3pCLE9BQU8sS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQzNCO0lBRUQsTUFBTSxNQUFNLEdBQWlCLFFBQVEsQ0FBQztJQUN0QyxNQUFNLElBQUksR0FBZ0IsRUFBQyxJQUFJLEVBQUMsQ0FBQztJQUVqQyxPQUFPLE1BQU0sQ0FBQyxTQUFTLENBQ25CLE1BQU0sRUFBRSxNQUE4QixFQUFFLElBQTBCLENBQUMsQ0FBQztBQUMxRSxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sTUFBTSxHQUFHLEVBQUUsQ0FBQyxFQUFDLE9BQU8sRUFBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5pbXBvcnQge0VOR0lORX0gZnJvbSAnLi4vZW5naW5lJztcbmltcG9ydCB7Q29uY2F0LCBDb25jYXRBdHRycywgQ29uY2F0SW5wdXRzfSBmcm9tICcuLi9rZXJuZWxfbmFtZXMnO1xuaW1wb3J0IHtOYW1lZEF0dHJNYXB9IGZyb20gJy4uL2tlcm5lbF9yZWdpc3RyeSc7XG5pbXBvcnQge1RlbnNvcn0gZnJvbSAnLi4vdGVuc29yJztcbmltcG9ydCB7TmFtZWRUZW5zb3JNYXB9IGZyb20gJy4uL3RlbnNvcl90eXBlcyc7XG5pbXBvcnQge2NvbnZlcnRUb1RlbnNvckFycmF5fSBmcm9tICcuLi90ZW5zb3JfdXRpbF9lbnYnO1xuaW1wb3J0IHtUZW5zb3JMaWtlfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQge2Fzc2VydH0gZnJvbSAnLi4vdXRpbCc7XG5cbmltcG9ydCB7Y2xvbmV9IGZyb20gJy4vY2xvbmUnO1xuaW1wb3J0IHtvcH0gZnJvbSAnLi9vcGVyYXRpb24nO1xuXG4vKipcbiAqIENvbmNhdGVuYXRlcyBhIGxpc3Qgb2YgYHRmLlRlbnNvcmBzIGFsb25nIGEgZ2l2ZW4gYXhpcy5cbiAqXG4gKiBUaGUgdGVuc29ycyByYW5rcyBhbmQgdHlwZXMgbXVzdCBtYXRjaCwgYW5kIHRoZWlyIHNpemVzIG11c3QgbWF0Y2ggaW4gYWxsXG4gKiBkaW1lbnNpb25zIGV4Y2VwdCBgYXhpc2AuXG4gKlxuICogQWxzbyBhdmFpbGFibGUgYXJlIHN0cmljdGVyIHJhbmstc3BlY2lmaWMgbWV0aG9kcyB0aGF0IGFzc2VydCB0aGF0XG4gKiBgdGVuc29yc2AgYXJlIG9mIHRoZSBnaXZlbiByYW5rOlxuICogICAtIGB0Zi5jb25jYXQxZGBcbiAqICAgLSBgdGYuY29uY2F0MmRgXG4gKiAgIC0gYHRmLmNvbmNhdDNkYFxuICogICAtIGB0Zi5jb25jYXQ0ZGBcbiAqXG4gKiBFeGNlcHQgYHRmLmNvbmNhdDFkYCAod2hpY2ggZG9lcyBub3QgaGF2ZSBheGlzIHBhcmFtKSwgYWxsIG1ldGhvZHMgaGF2ZVxuICogc2FtZSBzaWduYXR1cmUgYXMgdGhpcyBtZXRob2QuXG4gKlxuICogYGBganNcbiAqIGNvbnN0IGEgPSB0Zi50ZW5zb3IxZChbMSwgMl0pO1xuICogY29uc3QgYiA9IHRmLnRlbnNvcjFkKFszLCA0XSk7XG4gKiBhLmNvbmNhdChiKS5wcmludCgpOyAgLy8gb3IgYS5jb25jYXQoYilcbiAqIGBgYFxuICpcbiAqIGBgYGpzXG4gKiBjb25zdCBhID0gdGYudGVuc29yMWQoWzEsIDJdKTtcbiAqIGNvbnN0IGIgPSB0Zi50ZW5zb3IxZChbMywgNF0pO1xuICogY29uc3QgYyA9IHRmLnRlbnNvcjFkKFs1LCA2XSk7XG4gKiB0Zi5jb25jYXQoW2EsIGIsIGNdKS5wcmludCgpO1xuICogYGBgXG4gKlxuICogYGBganNcbiAqIGNvbnN0IGEgPSB0Zi50ZW5zb3IyZChbWzEsIDJdLCBbMTAsIDIwXV0pO1xuICogY29uc3QgYiA9IHRmLnRlbnNvcjJkKFtbMywgNF0sIFszMCwgNDBdXSk7XG4gKiBjb25zdCBheGlzID0gMTtcbiAqIHRmLmNvbmNhdChbYSwgYl0sIGF4aXMpLnByaW50KCk7XG4gKiBgYGBcbiAqIEBwYXJhbSB0ZW5zb3JzIEEgbGlzdCBvZiB0ZW5zb3JzIHRvIGNvbmNhdGVuYXRlLlxuICogQHBhcmFtIGF4aXMgVGhlIGF4aXMgdG8gY29uY2F0ZSBhbG9uZy4gRGVmYXVsdHMgdG8gMCAodGhlIGZpcnN0IGRpbSkuXG4gKlxuICogQGRvYyB7aGVhZGluZzogJ1RlbnNvcnMnLCBzdWJoZWFkaW5nOiAnU2xpY2luZyBhbmQgSm9pbmluZyd9XG4gKi9cbmZ1bmN0aW9uIGNvbmNhdF88VCBleHRlbmRzIFRlbnNvcj4odGVuc29yczogQXJyYXk8VHxUZW5zb3JMaWtlPiwgYXhpcyA9IDApOiBUIHtcbiAgYXNzZXJ0KHRlbnNvcnMubGVuZ3RoID49IDEsICgpID0+ICdQYXNzIGF0IGxlYXN0IG9uZSB0ZW5zb3IgdG8gY29uY2F0Jyk7XG5cbiAgY29uc3QgJHRlbnNvcnMgPVxuICAgICAgY29udmVydFRvVGVuc29yQXJyYXkodGVuc29ycywgJ3RlbnNvcnMnLCAnY29uY2F0JywgJ3N0cmluZ19vcl9udW1lcmljJyk7XG5cbiAgaWYgKCR0ZW5zb3JzWzBdLmR0eXBlID09PSAnY29tcGxleDY0Jykge1xuICAgICR0ZW5zb3JzLmZvckVhY2godGVuc29yID0+IHtcbiAgICAgIGlmICh0ZW5zb3IuZHR5cGUgIT09ICdjb21wbGV4NjQnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgQ2Fubm90IGNvbmNhdGVuYXRlIGNvbXBsZXg2NCB0ZW5zb3JzIHdpdGggYSB0ZW5zb3JcbiAgICAgICAgICB3aXRoIGR0eXBlICR7dGVuc29yLmR0eXBlfS4gYCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBpZiAoJHRlbnNvcnMubGVuZ3RoID09PSAxKSB7XG4gICAgcmV0dXJuIGNsb25lKCR0ZW5zb3JzWzBdKTtcbiAgfVxuXG4gIGNvbnN0IGlucHV0czogQ29uY2F0SW5wdXRzID0gJHRlbnNvcnM7XG4gIGNvbnN0IGF0dHI6IENvbmNhdEF0dHJzID0ge2F4aXN9O1xuXG4gIHJldHVybiBFTkdJTkUucnVuS2VybmVsKFxuICAgICAgQ29uY2F0LCBpbnB1dHMgYXMge30gYXMgTmFtZWRUZW5zb3JNYXAsIGF0dHIgYXMge30gYXMgTmFtZWRBdHRyTWFwKTtcbn1cblxuZXhwb3J0IGNvbnN0IGNvbmNhdCA9IG9wKHtjb25jYXRffSk7XG4iXX0=","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Sigmoid } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes sigmoid element-wise, `1 / (1 + exp(-x))`\n *\n * ```js\n * const x = tf.tensor1d([0, -1, 2, -3]);\n *\n * x.sigmoid().print();  // or tf.sigmoid(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction sigmoid_(x) {\n    const $x = convertToTensor(x, 'x', 'sigmoid', 'float32');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Sigmoid, inputs);\n}\nexport const sigmoid = op({ sigmoid_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lnbW9pZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29yZS9zcmMvb3BzL3NpZ21vaWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUNqQyxPQUFPLEVBQUMsT0FBTyxFQUFnQixNQUFNLGlCQUFpQixDQUFDO0FBR3ZELE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUduRCxPQUFPLEVBQUMsRUFBRSxFQUFDLE1BQU0sYUFBYSxDQUFDO0FBRS9COzs7Ozs7Ozs7OztHQVdHO0FBQ0gsU0FBUyxRQUFRLENBQW1CLENBQWU7SUFDakQsTUFBTSxFQUFFLEdBQUcsZUFBZSxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsU0FBUyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBRXpELE1BQU0sTUFBTSxHQUFrQixFQUFDLENBQUMsRUFBRSxFQUFFLEVBQUMsQ0FBQztJQUV0QyxPQUFPLE1BQU0sQ0FBQyxTQUFTLENBQUMsT0FBTyxFQUFFLE1BQThCLENBQUMsQ0FBQztBQUNuRSxDQUFDO0FBQ0QsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxFQUFDLFFBQVEsRUFBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7RU5HSU5FfSBmcm9tICcuLi9lbmdpbmUnO1xuaW1wb3J0IHtTaWdtb2lkLCBTaWdtb2lkSW5wdXRzfSBmcm9tICcuLi9rZXJuZWxfbmFtZXMnO1xuaW1wb3J0IHtUZW5zb3J9IGZyb20gJy4uL3RlbnNvcic7XG5pbXBvcnQge05hbWVkVGVuc29yTWFwfSBmcm9tICcuLi90ZW5zb3JfdHlwZXMnO1xuaW1wb3J0IHtjb252ZXJ0VG9UZW5zb3J9IGZyb20gJy4uL3RlbnNvcl91dGlsX2Vudic7XG5pbXBvcnQge1RlbnNvckxpa2V9IGZyb20gJy4uL3R5cGVzJztcblxuaW1wb3J0IHtvcH0gZnJvbSAnLi9vcGVyYXRpb24nO1xuXG4vKipcbiAqIENvbXB1dGVzIHNpZ21vaWQgZWxlbWVudC13aXNlLCBgMSAvICgxICsgZXhwKC14KSlgXG4gKlxuICogYGBganNcbiAqIGNvbnN0IHggPSB0Zi50ZW5zb3IxZChbMCwgLTEsIDIsIC0zXSk7XG4gKlxuICogeC5zaWdtb2lkKCkucHJpbnQoKTsgIC8vIG9yIHRmLnNpZ21vaWQoeClcbiAqIGBgYFxuICogQHBhcmFtIHggVGhlIGlucHV0IHRlbnNvci5cbiAqXG4gKiBAZG9jIHtoZWFkaW5nOiAnT3BlcmF0aW9ucycsIHN1YmhlYWRpbmc6ICdCYXNpYyBtYXRoJ31cbiAqL1xuZnVuY3Rpb24gc2lnbW9pZF88VCBleHRlbmRzIFRlbnNvcj4oeDogVHxUZW5zb3JMaWtlKTogVCB7XG4gIGNvbnN0ICR4ID0gY29udmVydFRvVGVuc29yKHgsICd4JywgJ3NpZ21vaWQnLCAnZmxvYXQzMicpO1xuXG4gIGNvbnN0IGlucHV0czogU2lnbW9pZElucHV0cyA9IHt4OiAkeH07XG5cbiAgcmV0dXJuIEVOR0lORS5ydW5LZXJuZWwoU2lnbW9pZCwgaW5wdXRzIGFzIHt9IGFzIE5hbWVkVGVuc29yTWFwKTtcbn1cbmV4cG9ydCBjb25zdCBzaWdtb2lkID0gb3Aoe3NpZ21vaWRffSk7XG4iXX0=","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Slice } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Extracts a slice from a `tf.Tensor` starting at coordinates `begin`\n * and is of size `size`.\n *\n * Also available are stricter rank-specific methods with the same signature\n * as this method that assert that `x` is of the given rank:\n *   - `tf.slice1d`\n *   - `tf.slice2d`\n *   - `tf.slice3d`\n *   - `tf.slice4d`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * x.slice([1], [2]).print();\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * x.slice([1, 0], [1, 2]).print();\n * ```\n * @param x The input `tf.Tensor` to slice from.\n * @param begin The coordinates to start the slice from. The length can be\n *     less than the rank of x - the rest of the axes will have implicit 0 as\n *     start. Can also be a single number, in which case it specifies the\n *     first axis.\n * @param size The size of the slice. The length can be less than the rank of\n *     x - the rest of the axes will have implicit -1. A value of -1 requests\n *     the rest of the dimensions in the axis. Can also be a single number,\n *     in which case it specifies the size of the first axis.\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction slice_(x, begin, size) {\n    const $x = convertToTensor(x, 'x', 'slice', 'string_or_numeric');\n    if ($x.rank === 0) {\n        throw new Error('Slicing scalar is not possible');\n    }\n    const inputs = { x: $x };\n    const attrs = { begin, size };\n    return ENGINE.runKernel(Slice, inputs, attrs);\n}\nexport const slice = op({ slice_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL29wcy9zbGljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsTUFBTSxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBQ2pDLE9BQU8sRUFBQyxLQUFLLEVBQTBCLE1BQU0saUJBQWlCLENBQUM7QUFJL0QsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBR25ELE9BQU8sRUFBQyxFQUFFLEVBQUMsTUFBTSxhQUFhLENBQUM7QUFFL0I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQWlDRztBQUNILFNBQVMsTUFBTSxDQUNYLENBQWUsRUFBRSxLQUFzQixFQUFFLElBQXNCO0lBQ2pFLE1BQU0sRUFBRSxHQUFHLGVBQWUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO0lBRWpFLElBQUksRUFBRSxDQUFDLElBQUksS0FBSyxDQUFDLEVBQUU7UUFDakIsTUFBTSxJQUFJLEtBQUssQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDO0tBQ25EO0lBRUQsTUFBTSxNQUFNLEdBQWdCLEVBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBQyxDQUFDO0lBQ3BDLE1BQU0sS0FBSyxHQUFlLEVBQUMsS0FBSyxFQUFFLElBQUksRUFBQyxDQUFDO0lBRXhDLE9BQU8sTUFBTSxDQUFDLFNBQVMsQ0FDbkIsS0FBSyxFQUFFLE1BQThCLEVBQUUsS0FBMkIsQ0FBQyxDQUFDO0FBQzFFLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxLQUFLLEdBQUcsRUFBRSxDQUFDLEVBQUMsTUFBTSxFQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE4IEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtFTkdJTkV9IGZyb20gJy4uL2VuZ2luZSc7XG5pbXBvcnQge1NsaWNlLCBTbGljZUF0dHJzLCBTbGljZUlucHV0c30gZnJvbSAnLi4va2VybmVsX25hbWVzJztcbmltcG9ydCB7TmFtZWRBdHRyTWFwfSBmcm9tICcuLi9rZXJuZWxfcmVnaXN0cnknO1xuaW1wb3J0IHtUZW5zb3J9IGZyb20gJy4uL3RlbnNvcic7XG5pbXBvcnQge05hbWVkVGVuc29yTWFwfSBmcm9tICcuLi90ZW5zb3JfdHlwZXMnO1xuaW1wb3J0IHtjb252ZXJ0VG9UZW5zb3J9IGZyb20gJy4uL3RlbnNvcl91dGlsX2Vudic7XG5pbXBvcnQge1JhbmssIFRlbnNvckxpa2V9IGZyb20gJy4uL3R5cGVzJztcblxuaW1wb3J0IHtvcH0gZnJvbSAnLi9vcGVyYXRpb24nO1xuXG4vKipcbiAqIEV4dHJhY3RzIGEgc2xpY2UgZnJvbSBhIGB0Zi5UZW5zb3JgIHN0YXJ0aW5nIGF0IGNvb3JkaW5hdGVzIGBiZWdpbmBcbiAqIGFuZCBpcyBvZiBzaXplIGBzaXplYC5cbiAqXG4gKiBBbHNvIGF2YWlsYWJsZSBhcmUgc3RyaWN0ZXIgcmFuay1zcGVjaWZpYyBtZXRob2RzIHdpdGggdGhlIHNhbWUgc2lnbmF0dXJlXG4gKiBhcyB0aGlzIG1ldGhvZCB0aGF0IGFzc2VydCB0aGF0IGB4YCBpcyBvZiB0aGUgZ2l2ZW4gcmFuazpcbiAqICAgLSBgdGYuc2xpY2UxZGBcbiAqICAgLSBgdGYuc2xpY2UyZGBcbiAqICAgLSBgdGYuc2xpY2UzZGBcbiAqICAgLSBgdGYuc2xpY2U0ZGBcbiAqXG4gKiBgYGBqc1xuICogY29uc3QgeCA9IHRmLnRlbnNvcjFkKFsxLCAyLCAzLCA0XSk7XG4gKlxuICogeC5zbGljZShbMV0sIFsyXSkucHJpbnQoKTtcbiAqIGBgYFxuICpcbiAqIGBgYGpzXG4gKiBjb25zdCB4ID0gdGYudGVuc29yMmQoWzEsIDIsIDMsIDRdLCBbMiwgMl0pO1xuICpcbiAqIHguc2xpY2UoWzEsIDBdLCBbMSwgMl0pLnByaW50KCk7XG4gKiBgYGBcbiAqIEBwYXJhbSB4IFRoZSBpbnB1dCBgdGYuVGVuc29yYCB0byBzbGljZSBmcm9tLlxuICogQHBhcmFtIGJlZ2luIFRoZSBjb29yZGluYXRlcyB0byBzdGFydCB0aGUgc2xpY2UgZnJvbS4gVGhlIGxlbmd0aCBjYW4gYmVcbiAqICAgICBsZXNzIHRoYW4gdGhlIHJhbmsgb2YgeCAtIHRoZSByZXN0IG9mIHRoZSBheGVzIHdpbGwgaGF2ZSBpbXBsaWNpdCAwIGFzXG4gKiAgICAgc3RhcnQuIENhbiBhbHNvIGJlIGEgc2luZ2xlIG51bWJlciwgaW4gd2hpY2ggY2FzZSBpdCBzcGVjaWZpZXMgdGhlXG4gKiAgICAgZmlyc3QgYXhpcy5cbiAqIEBwYXJhbSBzaXplIFRoZSBzaXplIG9mIHRoZSBzbGljZS4gVGhlIGxlbmd0aCBjYW4gYmUgbGVzcyB0aGFuIHRoZSByYW5rIG9mXG4gKiAgICAgeCAtIHRoZSByZXN0IG9mIHRoZSBheGVzIHdpbGwgaGF2ZSBpbXBsaWNpdCAtMS4gQSB2YWx1ZSBvZiAtMSByZXF1ZXN0c1xuICogICAgIHRoZSByZXN0IG9mIHRoZSBkaW1lbnNpb25zIGluIHRoZSBheGlzLiBDYW4gYWxzbyBiZSBhIHNpbmdsZSBudW1iZXIsXG4gKiAgICAgaW4gd2hpY2ggY2FzZSBpdCBzcGVjaWZpZXMgdGhlIHNpemUgb2YgdGhlIGZpcnN0IGF4aXMuXG4gKlxuICogQGRvYyB7aGVhZGluZzogJ1RlbnNvcnMnLCBzdWJoZWFkaW5nOiAnU2xpY2luZyBhbmQgSm9pbmluZyd9XG4gKi9cbmZ1bmN0aW9uIHNsaWNlXzxSIGV4dGVuZHMgUmFuaywgVCBleHRlbmRzIFRlbnNvcjxSPj4oXG4gICAgeDogVHxUZW5zb3JMaWtlLCBiZWdpbjogbnVtYmVyfG51bWJlcltdLCBzaXplPzogbnVtYmVyfG51bWJlcltdKTogVCB7XG4gIGNvbnN0ICR4ID0gY29udmVydFRvVGVuc29yKHgsICd4JywgJ3NsaWNlJywgJ3N0cmluZ19vcl9udW1lcmljJyk7XG5cbiAgaWYgKCR4LnJhbmsgPT09IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ1NsaWNpbmcgc2NhbGFyIGlzIG5vdCBwb3NzaWJsZScpO1xuICB9XG5cbiAgY29uc3QgaW5wdXRzOiBTbGljZUlucHV0cyA9IHt4OiAkeH07XG4gIGNvbnN0IGF0dHJzOiBTbGljZUF0dHJzID0ge2JlZ2luLCBzaXplfTtcblxuICByZXR1cm4gRU5HSU5FLnJ1bktlcm5lbChcbiAgICAgIFNsaWNlLCBpbnB1dHMgYXMge30gYXMgTmFtZWRUZW5zb3JNYXAsIGF0dHJzIGFzIHt9IGFzIE5hbWVkQXR0ck1hcCk7XG59XG5cbmV4cG9ydCBjb25zdCBzbGljZSA9IG9wKHtzbGljZV99KTtcbiJdfQ==","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { FusedBatchNorm } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { xAs4D } from './batchnorm_util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Batch normalization.\n *\n * As described in\n * [http://arxiv.org/abs/1502.03167](http://arxiv.org/abs/1502.03167).\n *\n * Mean, variance, scale, and offset can be of two shapes:\n *   - The same shape as the input.\n *   - In the common case, the depth dimension is the last dimension of x, so\n *     the values would be an `tf.Tensor1D` of shape [depth].\n *\n * Also available are stricter rank-specific methods with the same signature\n * as this method that assert that parameters passed are of given rank\n *   - `tf.batchNorm2d`\n *   - `tf.batchNorm3d`\n *   - `tf.batchNorm4d`\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction batchNorm_(x, mean, variance, offset, scale, varianceEpsilon) {\n    if (varianceEpsilon == null) {\n        varianceEpsilon = 0.001;\n    }\n    const $x = convertToTensor(x, 'x', 'batchNorm');\n    const $mean = convertToTensor(mean, 'mean', 'batchNorm');\n    const $variance = convertToTensor(variance, 'variance', 'batchNorm');\n    let $scale;\n    if (scale != null) {\n        $scale = convertToTensor(scale, 'scale', 'batchNorm');\n    }\n    let $offset;\n    if (offset != null) {\n        $offset = convertToTensor(offset, 'offset', 'batchNorm');\n    }\n    util.assert($mean.rank === $variance.rank, () => 'Batch normalization gradient requires mean and variance to have ' +\n        'equal ranks.');\n    util.assert($offset == null || $mean.rank === $offset.rank, () => 'Batch normalization gradient requires mean and offset to have ' +\n        'equal ranks.');\n    util.assert($scale == null || $mean.rank === $scale.rank, () => 'Batch normalization gradient requires mean and scale to have ' +\n        'equal ranks.');\n    const x4D = xAs4D($x);\n    const inputs = {\n        x: x4D,\n        scale: $scale,\n        offset: $offset,\n        mean: $mean,\n        variance: $variance\n    };\n    const attrs = { varianceEpsilon };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = ENGINE.runKernel(FusedBatchNorm, inputs, attrs);\n    return reshape(res, $x.shape);\n}\nexport const batchNorm = op({ batchNorm_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmF0Y2hub3JtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy9vcHMvYmF0Y2hub3JtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDakMsT0FBTyxFQUFDLGNBQWMsRUFBNEMsTUFBTSxpQkFBaUIsQ0FBQztBQUkxRixPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFFbkQsT0FBTyxLQUFLLElBQUksTUFBTSxTQUFTLENBQUM7QUFFaEMsT0FBTyxFQUFDLEtBQUssRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBQ3ZDLE9BQU8sRUFBQyxFQUFFLEVBQUMsTUFBTSxhQUFhLENBQUM7QUFDL0IsT0FBTyxFQUFDLE9BQU8sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUVsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQXlCRztBQUNILFNBQVMsVUFBVSxDQUNmLENBQXVCLEVBQUUsSUFBbUMsRUFDNUQsUUFBdUMsRUFDdkMsTUFBc0MsRUFDdEMsS0FBcUMsRUFDckMsZUFBd0I7SUFDMUIsSUFBSSxlQUFlLElBQUksSUFBSSxFQUFFO1FBQzNCLGVBQWUsR0FBRyxLQUFLLENBQUM7S0FDekI7SUFDRCxNQUFNLEVBQUUsR0FBRyxlQUFlLENBQUMsQ0FBQyxFQUFFLEdBQUcsRUFBRSxXQUFXLENBQUMsQ0FBQztJQUNoRCxNQUFNLEtBQUssR0FBRyxlQUFlLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxXQUFXLENBQUMsQ0FBQztJQUN6RCxNQUFNLFNBQVMsR0FBRyxlQUFlLENBQUMsUUFBUSxFQUFFLFVBQVUsRUFBRSxXQUFXLENBQUMsQ0FBQztJQUNyRSxJQUFJLE1BQTBCLENBQUM7SUFDL0IsSUFBSSxLQUFLLElBQUksSUFBSSxFQUFFO1FBQ2pCLE1BQU0sR0FBRyxlQUFlLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxXQUFXLENBQUMsQ0FBQztLQUN2RDtJQUNELElBQUksT0FBMkIsQ0FBQztJQUNoQyxJQUFJLE1BQU0sSUFBSSxJQUFJLEVBQUU7UUFDbEIsT0FBTyxHQUFHLGVBQWUsQ0FBQyxNQUFNLEVBQUUsUUFBUSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0tBQzFEO0lBRUQsSUFBSSxDQUFDLE1BQU0sQ0FDUCxLQUFLLENBQUMsSUFBSSxLQUFLLFNBQVMsQ0FBQyxJQUFJLEVBQzdCLEdBQUcsRUFBRSxDQUFDLGtFQUFrRTtRQUNwRSxjQUFjLENBQUMsQ0FBQztJQUN4QixJQUFJLENBQUMsTUFBTSxDQUNQLE9BQU8sSUFBSSxJQUFJLElBQUksS0FBSyxDQUFDLElBQUksS0FBSyxPQUFPLENBQUMsSUFBSSxFQUM5QyxHQUFHLEVBQUUsQ0FBQyxnRUFBZ0U7UUFDbEUsY0FBYyxDQUFDLENBQUM7SUFDeEIsSUFBSSxDQUFDLE1BQU0sQ0FDUCxNQUFNLElBQUksSUFBSSxJQUFJLEtBQUssQ0FBQyxJQUFJLEtBQUssTUFBTSxDQUFDLElBQUksRUFDNUMsR0FBRyxFQUFFLENBQUMsK0RBQStEO1FBQ2pFLGNBQWMsQ0FBQyxDQUFDO0lBRXhCLE1BQU0sR0FBRyxHQUFhLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUVoQyxNQUFNLE1BQU0sR0FBeUI7UUFDbkMsQ0FBQyxFQUFFLEdBQUc7UUFDTixLQUFLLEVBQUUsTUFBTTtRQUNiLE1BQU0sRUFBRSxPQUFPO1FBQ2YsSUFBSSxFQUFFLEtBQUs7UUFDWCxRQUFRLEVBQUUsU0FBUztLQUNwQixDQUFDO0lBRUYsTUFBTSxLQUFLLEdBQXdCLEVBQUMsZUFBZSxFQUFDLENBQUM7SUFFckQsMERBQTBEO0lBQzFELE1BQU0sR0FBRyxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQ1osY0FBYyxFQUFFLE1BQThCLEVBQzlDLEtBQTJCLENBQWMsQ0FBQztJQUUxRCxPQUFPLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ2hDLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsRUFBRSxDQUFDLEVBQUMsVUFBVSxFQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtFTkdJTkV9IGZyb20gJy4uL2VuZ2luZSc7XG5pbXBvcnQge0Z1c2VkQmF0Y2hOb3JtLCBGdXNlZEJhdGNoTm9ybUF0dHJzLCBGdXNlZEJhdGNoTm9ybUlucHV0c30gZnJvbSAnLi4va2VybmVsX25hbWVzJztcbmltcG9ydCB7TmFtZWRBdHRyTWFwfSBmcm9tICcuLi9rZXJuZWxfcmVnaXN0cnknO1xuaW1wb3J0IHtUZW5zb3IsIFRlbnNvcjFELCBUZW5zb3I0RH0gZnJvbSAnLi4vdGVuc29yJztcbmltcG9ydCB7TmFtZWRUZW5zb3JNYXB9IGZyb20gJy4uL3RlbnNvcl90eXBlcyc7XG5pbXBvcnQge2NvbnZlcnRUb1RlbnNvcn0gZnJvbSAnLi4vdGVuc29yX3V0aWxfZW52JztcbmltcG9ydCB7UmFuaywgVGVuc29yTGlrZX0gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0ICogYXMgdXRpbCBmcm9tICcuLi91dGlsJztcblxuaW1wb3J0IHt4QXM0RH0gZnJvbSAnLi9iYXRjaG5vcm1fdXRpbCc7XG5pbXBvcnQge29wfSBmcm9tICcuL29wZXJhdGlvbic7XG5pbXBvcnQge3Jlc2hhcGV9IGZyb20gJy4vcmVzaGFwZSc7XG5cbi8qKlxuICogQmF0Y2ggbm9ybWFsaXphdGlvbi5cbiAqXG4gKiBBcyBkZXNjcmliZWQgaW5cbiAqIFtodHRwOi8vYXJ4aXYub3JnL2Ficy8xNTAyLjAzMTY3XShodHRwOi8vYXJ4aXYub3JnL2Ficy8xNTAyLjAzMTY3KS5cbiAqXG4gKiBNZWFuLCB2YXJpYW5jZSwgc2NhbGUsIGFuZCBvZmZzZXQgY2FuIGJlIG9mIHR3byBzaGFwZXM6XG4gKiAgIC0gVGhlIHNhbWUgc2hhcGUgYXMgdGhlIGlucHV0LlxuICogICAtIEluIHRoZSBjb21tb24gY2FzZSwgdGhlIGRlcHRoIGRpbWVuc2lvbiBpcyB0aGUgbGFzdCBkaW1lbnNpb24gb2YgeCwgc29cbiAqICAgICB0aGUgdmFsdWVzIHdvdWxkIGJlIGFuIGB0Zi5UZW5zb3IxRGAgb2Ygc2hhcGUgW2RlcHRoXS5cbiAqXG4gKiBBbHNvIGF2YWlsYWJsZSBhcmUgc3RyaWN0ZXIgcmFuay1zcGVjaWZpYyBtZXRob2RzIHdpdGggdGhlIHNhbWUgc2lnbmF0dXJlXG4gKiBhcyB0aGlzIG1ldGhvZCB0aGF0IGFzc2VydCB0aGF0IHBhcmFtZXRlcnMgcGFzc2VkIGFyZSBvZiBnaXZlbiByYW5rXG4gKiAgIC0gYHRmLmJhdGNoTm9ybTJkYFxuICogICAtIGB0Zi5iYXRjaE5vcm0zZGBcbiAqICAgLSBgdGYuYmF0Y2hOb3JtNGRgXG4gKlxuICogQHBhcmFtIHggVGhlIGlucHV0IFRlbnNvci5cbiAqIEBwYXJhbSBtZWFuIEEgbWVhbiBUZW5zb3IuXG4gKiBAcGFyYW0gdmFyaWFuY2UgQSB2YXJpYW5jZSBUZW5zb3IuXG4gKiBAcGFyYW0gb2Zmc2V0IEFuIG9mZnNldCBUZW5zb3IuXG4gKiBAcGFyYW0gc2NhbGUgQSBzY2FsZSBUZW5zb3IuXG4gKiBAcGFyYW0gdmFyaWFuY2VFcHNpbG9uIEEgc21hbGwgZmxvYXQgbnVtYmVyIHRvIGF2b2lkIGRpdmlkaW5nIGJ5IDAuXG4gKlxuICogQGRvYyB7aGVhZGluZzogJ09wZXJhdGlvbnMnLCBzdWJoZWFkaW5nOiAnTm9ybWFsaXphdGlvbid9XG4gKi9cbmZ1bmN0aW9uIGJhdGNoTm9ybV88UiBleHRlbmRzIFJhbms+KFxuICAgIHg6IFRlbnNvcjxSPnxUZW5zb3JMaWtlLCBtZWFuOiBUZW5zb3I8Uj58VGVuc29yMUR8VGVuc29yTGlrZSxcbiAgICB2YXJpYW5jZTogVGVuc29yPFI+fFRlbnNvcjFEfFRlbnNvckxpa2UsXG4gICAgb2Zmc2V0PzogVGVuc29yPFI+fFRlbnNvcjFEfFRlbnNvckxpa2UsXG4gICAgc2NhbGU/OiBUZW5zb3I8Uj58VGVuc29yMUR8VGVuc29yTGlrZSxcbiAgICB2YXJpYW5jZUVwc2lsb24/OiBudW1iZXIpOiBUZW5zb3I8Uj4ge1xuICBpZiAodmFyaWFuY2VFcHNpbG9uID09IG51bGwpIHtcbiAgICB2YXJpYW5jZUVwc2lsb24gPSAwLjAwMTtcbiAgfVxuICBjb25zdCAkeCA9IGNvbnZlcnRUb1RlbnNvcih4LCAneCcsICdiYXRjaE5vcm0nKTtcbiAgY29uc3QgJG1lYW4gPSBjb252ZXJ0VG9UZW5zb3IobWVhbiwgJ21lYW4nLCAnYmF0Y2hOb3JtJyk7XG4gIGNvbnN0ICR2YXJpYW5jZSA9IGNvbnZlcnRUb1RlbnNvcih2YXJpYW5jZSwgJ3ZhcmlhbmNlJywgJ2JhdGNoTm9ybScpO1xuICBsZXQgJHNjYWxlOiBUZW5zb3I8Uj58VGVuc29yMUQ7XG4gIGlmIChzY2FsZSAhPSBudWxsKSB7XG4gICAgJHNjYWxlID0gY29udmVydFRvVGVuc29yKHNjYWxlLCAnc2NhbGUnLCAnYmF0Y2hOb3JtJyk7XG4gIH1cbiAgbGV0ICRvZmZzZXQ6IFRlbnNvcjxSPnxUZW5zb3IxRDtcbiAgaWYgKG9mZnNldCAhPSBudWxsKSB7XG4gICAgJG9mZnNldCA9IGNvbnZlcnRUb1RlbnNvcihvZmZzZXQsICdvZmZzZXQnLCAnYmF0Y2hOb3JtJyk7XG4gIH1cblxuICB1dGlsLmFzc2VydChcbiAgICAgICRtZWFuLnJhbmsgPT09ICR2YXJpYW5jZS5yYW5rLFxuICAgICAgKCkgPT4gJ0JhdGNoIG5vcm1hbGl6YXRpb24gZ3JhZGllbnQgcmVxdWlyZXMgbWVhbiBhbmQgdmFyaWFuY2UgdG8gaGF2ZSAnICtcbiAgICAgICAgICAnZXF1YWwgcmFua3MuJyk7XG4gIHV0aWwuYXNzZXJ0KFxuICAgICAgJG9mZnNldCA9PSBudWxsIHx8ICRtZWFuLnJhbmsgPT09ICRvZmZzZXQucmFuayxcbiAgICAgICgpID0+ICdCYXRjaCBub3JtYWxpemF0aW9uIGdyYWRpZW50IHJlcXVpcmVzIG1lYW4gYW5kIG9mZnNldCB0byBoYXZlICcgK1xuICAgICAgICAgICdlcXVhbCByYW5rcy4nKTtcbiAgdXRpbC5hc3NlcnQoXG4gICAgICAkc2NhbGUgPT0gbnVsbCB8fCAkbWVhbi5yYW5rID09PSAkc2NhbGUucmFuayxcbiAgICAgICgpID0+ICdCYXRjaCBub3JtYWxpemF0aW9uIGdyYWRpZW50IHJlcXVpcmVzIG1lYW4gYW5kIHNjYWxlIHRvIGhhdmUgJyArXG4gICAgICAgICAgJ2VxdWFsIHJhbmtzLicpO1xuXG4gIGNvbnN0IHg0RDogVGVuc29yNEQgPSB4QXM0RCgkeCk7XG5cbiAgY29uc3QgaW5wdXRzOiBGdXNlZEJhdGNoTm9ybUlucHV0cyA9IHtcbiAgICB4OiB4NEQsXG4gICAgc2NhbGU6ICRzY2FsZSxcbiAgICBvZmZzZXQ6ICRvZmZzZXQsXG4gICAgbWVhbjogJG1lYW4sXG4gICAgdmFyaWFuY2U6ICR2YXJpYW5jZVxuICB9O1xuXG4gIGNvbnN0IGF0dHJzOiBGdXNlZEJhdGNoTm9ybUF0dHJzID0ge3ZhcmlhbmNlRXBzaWxvbn07XG5cbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby11bm5lY2Vzc2FyeS10eXBlLWFzc2VydGlvblxuICBjb25zdCByZXMgPSBFTkdJTkUucnVuS2VybmVsKFxuICAgICAgICAgICAgICAgICAgRnVzZWRCYXRjaE5vcm0sIGlucHV0cyBhcyB7fSBhcyBOYW1lZFRlbnNvck1hcCxcbiAgICAgICAgICAgICAgICAgIGF0dHJzIGFzIHt9IGFzIE5hbWVkQXR0ck1hcCkgYXMgVGVuc29yPFI+O1xuXG4gIHJldHVybiByZXNoYXBlKHJlcywgJHguc2hhcGUpO1xufVxuXG5leHBvcnQgY29uc3QgYmF0Y2hOb3JtID0gb3Aoe2JhdGNoTm9ybV99KTtcbiJdfQ==","import { reshape } from './reshape';\nexport function xAs4D(x) {\n    let x4D;\n    if (x.rank === 0 || x.rank === 1) {\n        x4D = reshape(x, [1, 1, 1, x.size]);\n    }\n    else if (x.rank === 2) {\n        x4D = reshape(x, [1, 1, x.shape[0], x.shape[1]]);\n    }\n    else if (x.rank === 3) {\n        x4D = reshape(x, [1, x.shape[0], x.shape[1], x.shape[2]]);\n    }\n    else {\n        x4D = x;\n    }\n    return x4D;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmF0Y2hub3JtX3V0aWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL29wcy9iYXRjaG5vcm1fdXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrQkEsT0FBTyxFQUFDLE9BQU8sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUVsQyxNQUFNLFVBQVUsS0FBSyxDQUFpQixDQUFZO0lBQ2hELElBQUksR0FBYSxDQUFDO0lBQ2xCLElBQUksQ0FBQyxDQUFDLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksS0FBSyxDQUFDLEVBQUU7UUFDaEMsR0FBRyxHQUFHLE9BQU8sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztLQUNyQztTQUFNLElBQUksQ0FBQyxDQUFDLElBQUksS0FBSyxDQUFDLEVBQUU7UUFDdkIsR0FBRyxHQUFHLE9BQU8sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDbEQ7U0FBTSxJQUFJLENBQUMsQ0FBQyxJQUFJLEtBQUssQ0FBQyxFQUFFO1FBQ3ZCLEdBQUcsR0FBRyxPQUFPLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUMzRDtTQUFNO1FBQ0wsR0FBRyxHQUFHLENBQWEsQ0FBQztLQUNyQjtJQUVELE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cbmltcG9ydCB7VGVuc29yLCBUZW5zb3I0RH0gZnJvbSAnLi4vdGVuc29yJztcbmltcG9ydCB7UmFua30gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0IHtyZXNoYXBlfSBmcm9tICcuL3Jlc2hhcGUnO1xuXG5leHBvcnQgZnVuY3Rpb24geEFzNEQ8UiBleHRlbmRzIFJhbms+KHg6IFRlbnNvcjxSPikge1xuICBsZXQgeDREOiBUZW5zb3I0RDtcbiAgaWYgKHgucmFuayA9PT0gMCB8fCB4LnJhbmsgPT09IDEpIHtcbiAgICB4NEQgPSByZXNoYXBlKHgsIFsxLCAxLCAxLCB4LnNpemVdKTtcbiAgfSBlbHNlIGlmICh4LnJhbmsgPT09IDIpIHtcbiAgICB4NEQgPSByZXNoYXBlKHgsIFsxLCAxLCB4LnNoYXBlWzBdLCB4LnNoYXBlWzFdXSk7XG4gIH0gZWxzZSBpZiAoeC5yYW5rID09PSAzKSB7XG4gICAgeDREID0gcmVzaGFwZSh4LCBbMSwgeC5zaGFwZVswXSwgeC5zaGFwZVsxXSwgeC5zaGFwZVsyXV0pO1xuICB9IGVsc2Uge1xuICAgIHg0RCA9IHggYXMgVGVuc29yNEQ7XG4gIH1cblxuICByZXR1cm4geDREO1xufVxuIl19","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Bincount } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Outputs a vector with length `size` and the same dtype as `weights`.\n *\n * If `weights` are empty, then index `i` stores the number of times the value\n * `i` is counted in `x`. If `weights` are non-empty, then index `i` stores the\n * sum of the value in `weights` at each index where the corresponding value in\n * `x` is `i`.\n *\n * Values in `x` outside of the range [0, size) are ignored.\n *\n * @param x The input int tensor, rank 1.\n * @param weights The weights tensor, must have the same shape as x, or a\n *     length-0 Tensor, in which case it acts as all weights equal to 1.\n * @param size Non-negative integer.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction bincount_(x, weights, size) {\n    const $x = convertToTensor(x, 'x', 'bincount');\n    const $weights = convertToTensor(weights, 'weights', 'bincount');\n    util.assert($x.dtype === 'int32', () => `Error in bincount: input ` +\n        `dtype must be int32, but got ${$x.dtype}`);\n    util.assert(size >= 0, () => `size must be non-negative, but got ${size}.`);\n    util.assert($weights.size === $x.size || $weights.size === 0, () => `Error in bincount: weights must have the same size as input or` +\n        `0-length, but got input shape: ${$x.shape}, weights shape: ` +\n        `${$weights.shape}.`);\n    const inputs = { x: $x, weights: $weights };\n    const attrs = { size };\n    return ENGINE.runKernel(Bincount, inputs, attrs);\n}\nexport const bincount = op({ bincount_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmluY291bnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL29wcy9iaW5jb3VudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsTUFBTSxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBQ2pDLE9BQU8sRUFBQyxRQUFRLEVBQWdDLE1BQU0saUJBQWlCLENBQUM7QUFJeEUsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBRW5ELE9BQU8sS0FBSyxJQUFJLE1BQU0sU0FBUyxDQUFDO0FBRWhDLE9BQU8sRUFBQyxFQUFFLEVBQUMsTUFBTSxhQUFhLENBQUM7QUFFL0I7Ozs7Ozs7Ozs7Ozs7Ozs7R0FnQkc7QUFDSCxTQUFTLFNBQVMsQ0FDZCxDQUFlLEVBQUUsT0FBcUIsRUFBRSxJQUFZO0lBQ3RELE1BQU0sRUFBRSxHQUFHLGVBQWUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBQy9DLE1BQU0sUUFBUSxHQUFHLGVBQWUsQ0FBQyxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBRWpFLElBQUksQ0FBQyxNQUFNLENBQ1AsRUFBRSxDQUFDLEtBQUssS0FBSyxPQUFPLEVBQ3BCLEdBQUcsRUFBRSxDQUFDLDJCQUEyQjtRQUM3QixnQ0FBZ0MsRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDcEQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLHNDQUFzQyxJQUFJLEdBQUcsQ0FBQyxDQUFDO0lBQzVFLElBQUksQ0FBQyxNQUFNLENBQ1AsUUFBUSxDQUFDLElBQUksS0FBSyxFQUFFLENBQUMsSUFBSSxJQUFJLFFBQVEsQ0FBQyxJQUFJLEtBQUssQ0FBQyxFQUNoRCxHQUFHLEVBQUUsQ0FBQyxnRUFBZ0U7UUFDbEUsa0NBQWtDLEVBQUUsQ0FBQyxLQUFLLG1CQUFtQjtRQUM3RCxHQUFHLFFBQVEsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO0lBRTlCLE1BQU0sTUFBTSxHQUFtQixFQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsT0FBTyxFQUFFLFFBQVEsRUFBQyxDQUFDO0lBQzFELE1BQU0sS0FBSyxHQUFrQixFQUFDLElBQUksRUFBQyxDQUFDO0lBRXBDLE9BQU8sTUFBTSxDQUFDLFNBQVMsQ0FDbkIsUUFBUSxFQUFFLE1BQThCLEVBQUUsS0FBMkIsQ0FBQyxDQUFDO0FBQzdFLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsRUFBRSxDQUFDLEVBQUMsU0FBUyxFQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtFTkdJTkV9IGZyb20gJy4uL2VuZ2luZSc7XG5pbXBvcnQge0JpbmNvdW50LCBCaW5jb3VudEF0dHJzLCBCaW5jb3VudElucHV0c30gZnJvbSAnLi4va2VybmVsX25hbWVzJztcbmltcG9ydCB7TmFtZWRBdHRyTWFwfSBmcm9tICcuLi9rZXJuZWxfcmVnaXN0cnknO1xuaW1wb3J0IHtUZW5zb3IxRH0gZnJvbSAnLi4vdGVuc29yJztcbmltcG9ydCB7TmFtZWRUZW5zb3JNYXB9IGZyb20gJy4uL3RlbnNvcl90eXBlcyc7XG5pbXBvcnQge2NvbnZlcnRUb1RlbnNvcn0gZnJvbSAnLi4vdGVuc29yX3V0aWxfZW52JztcbmltcG9ydCB7VGVuc29yTGlrZX0gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0ICogYXMgdXRpbCBmcm9tICcuLi91dGlsJztcblxuaW1wb3J0IHtvcH0gZnJvbSAnLi9vcGVyYXRpb24nO1xuXG4vKipcbiAqIE91dHB1dHMgYSB2ZWN0b3Igd2l0aCBsZW5ndGggYHNpemVgIGFuZCB0aGUgc2FtZSBkdHlwZSBhcyBgd2VpZ2h0c2AuXG4gKlxuICogSWYgYHdlaWdodHNgIGFyZSBlbXB0eSwgdGhlbiBpbmRleCBgaWAgc3RvcmVzIHRoZSBudW1iZXIgb2YgdGltZXMgdGhlIHZhbHVlXG4gKiBgaWAgaXMgY291bnRlZCBpbiBgeGAuIElmIGB3ZWlnaHRzYCBhcmUgbm9uLWVtcHR5LCB0aGVuIGluZGV4IGBpYCBzdG9yZXMgdGhlXG4gKiBzdW0gb2YgdGhlIHZhbHVlIGluIGB3ZWlnaHRzYCBhdCBlYWNoIGluZGV4IHdoZXJlIHRoZSBjb3JyZXNwb25kaW5nIHZhbHVlIGluXG4gKiBgeGAgaXMgYGlgLlxuICpcbiAqIFZhbHVlcyBpbiBgeGAgb3V0c2lkZSBvZiB0aGUgcmFuZ2UgWzAsIHNpemUpIGFyZSBpZ25vcmVkLlxuICpcbiAqIEBwYXJhbSB4IFRoZSBpbnB1dCBpbnQgdGVuc29yLCByYW5rIDEuXG4gKiBAcGFyYW0gd2VpZ2h0cyBUaGUgd2VpZ2h0cyB0ZW5zb3IsIG11c3QgaGF2ZSB0aGUgc2FtZSBzaGFwZSBhcyB4LCBvciBhXG4gKiAgICAgbGVuZ3RoLTAgVGVuc29yLCBpbiB3aGljaCBjYXNlIGl0IGFjdHMgYXMgYWxsIHdlaWdodHMgZXF1YWwgdG8gMS5cbiAqIEBwYXJhbSBzaXplIE5vbi1uZWdhdGl2ZSBpbnRlZ2VyLlxuICpcbiAqIEBkb2Mge2hlYWRpbmc6ICdPcGVyYXRpb25zJywgc3ViaGVhZGluZzogJ1JlZHVjdGlvbid9XG4gKi9cbmZ1bmN0aW9uIGJpbmNvdW50XzxUIGV4dGVuZHMgVGVuc29yMUQ+KFxuICAgIHg6IFR8VGVuc29yTGlrZSwgd2VpZ2h0czogVHxUZW5zb3JMaWtlLCBzaXplOiBudW1iZXIpOiBUIHtcbiAgY29uc3QgJHggPSBjb252ZXJ0VG9UZW5zb3IoeCwgJ3gnLCAnYmluY291bnQnKTtcbiAgY29uc3QgJHdlaWdodHMgPSBjb252ZXJ0VG9UZW5zb3Iod2VpZ2h0cywgJ3dlaWdodHMnLCAnYmluY291bnQnKTtcblxuICB1dGlsLmFzc2VydChcbiAgICAgICR4LmR0eXBlID09PSAnaW50MzInLFxuICAgICAgKCkgPT4gYEVycm9yIGluIGJpbmNvdW50OiBpbnB1dCBgICtcbiAgICAgICAgICBgZHR5cGUgbXVzdCBiZSBpbnQzMiwgYnV0IGdvdCAkeyR4LmR0eXBlfWApO1xuICB1dGlsLmFzc2VydChzaXplID49IDAsICgpID0+IGBzaXplIG11c3QgYmUgbm9uLW5lZ2F0aXZlLCBidXQgZ290ICR7c2l6ZX0uYCk7XG4gIHV0aWwuYXNzZXJ0KFxuICAgICAgJHdlaWdodHMuc2l6ZSA9PT0gJHguc2l6ZSB8fCAkd2VpZ2h0cy5zaXplID09PSAwLFxuICAgICAgKCkgPT4gYEVycm9yIGluIGJpbmNvdW50OiB3ZWlnaHRzIG11c3QgaGF2ZSB0aGUgc2FtZSBzaXplIGFzIGlucHV0IG9yYCArXG4gICAgICAgICAgYDAtbGVuZ3RoLCBidXQgZ290IGlucHV0IHNoYXBlOiAkeyR4LnNoYXBlfSwgd2VpZ2h0cyBzaGFwZTogYCArXG4gICAgICAgICAgYCR7JHdlaWdodHMuc2hhcGV9LmApO1xuXG4gIGNvbnN0IGlucHV0czogQmluY291bnRJbnB1dHMgPSB7eDogJHgsIHdlaWdodHM6ICR3ZWlnaHRzfTtcbiAgY29uc3QgYXR0cnM6IEJpbmNvdW50QXR0cnMgPSB7c2l6ZX07XG5cbiAgcmV0dXJuIEVOR0lORS5ydW5LZXJuZWwoXG4gICAgICBCaW5jb3VudCwgaW5wdXRzIGFzIHt9IGFzIE5hbWVkVGVuc29yTWFwLCBhdHRycyBhcyB7fSBhcyBOYW1lZEF0dHJNYXApO1xufVxuXG5leHBvcnQgY29uc3QgYmluY291bnQgPSBvcCh7YmluY291bnRffSk7XG4iXX0=","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Tile } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { clone } from './clone';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Broadcast an array to a compatible shape NumPy-style.\n *\n * The tensor's shape is compared to the broadcast shape from end to beginning.\n * Ones are prepended to the tensor's shape until is has the same length as\n * the broadcast shape. If input.shape[i]==shape[i], the (i+1)-th axis is\n * already broadcast-compatible. If input.shape[i]==1 and shape[i]==N, then\n * the input tensor is tiled N times along that axis (using tf.tile).\n *\n * @param input The tensor that is to be broadcasted.\n * @param shape The input is to be broadcast to this shape.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction broadcastTo_(x, shape) {\n    let input = convertToTensor(x, 'broadcastTo', 'x');\n    const xShape = input.shape;\n    if (shape.some(d => !(d > 0) || d % 1 !== 0)) {\n        throw new Error(`broadcastTo(): Invalid broadcast shape [${shape}].`);\n    }\n    if (shape.length < input.rank) {\n        throw new Error(`broadcastTo(): shape.length=${shape.length} < input.rank=${input.rank}.`);\n    }\n    if (shape.length > input.rank) {\n        const newShape = input.shape.slice();\n        while (newShape.length < shape.length) {\n            newShape.unshift(1);\n        }\n        input = reshape(input, newShape);\n    }\n    const inputShape = input.shape;\n    const reps = Array.from(shape);\n    for (let i = shape.length - 1; i >= 0; i--) {\n        if (inputShape[i] === shape[i]) {\n            reps[i] = 1;\n        }\n        else if (input.shape[i] !== 1) {\n            throw new Error(`broadcastTo(): [${xShape}] cannot be broadcast to [${shape}].`);\n        }\n    }\n    const axes = reps.map((n, i) => n > 1 ? i : -1).filter(i => i >= 0);\n    if (axes.length === 0) {\n        return clone(input);\n    }\n    // TODO call broadcastTo kernel directly once backends implement broadcstTo\n    const inputs = { x: input };\n    const attrs = { reps };\n    return ENGINE.runKernel(Tile, inputs, attrs);\n}\nexport const broadcastTo = op({ broadcastTo_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJvYWRjYXN0X3RvLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy9vcHMvYnJvYWRjYXN0X3RvLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDakMsT0FBTyxFQUFDLElBQUksRUFBd0IsTUFBTSxpQkFBaUIsQ0FBQztBQUk1RCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFHbkQsT0FBTyxFQUFDLEtBQUssRUFBQyxNQUFNLFNBQVMsQ0FBQztBQUM5QixPQUFPLEVBQUMsRUFBRSxFQUFDLE1BQU0sYUFBYSxDQUFDO0FBQy9CLE9BQU8sRUFBQyxPQUFPLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFFbEM7Ozs7Ozs7Ozs7Ozs7R0FhRztBQUNILFNBQVMsWUFBWSxDQUNqQixDQUFvQixFQUFFLEtBQWtCO0lBQzFDLElBQUksS0FBSyxHQUFHLGVBQWUsQ0FBQyxDQUFDLEVBQUUsYUFBYSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQ25ELE1BQU0sTUFBTSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUM7SUFFM0IsSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFO1FBQzVDLE1BQU0sSUFBSSxLQUFLLENBQUMsMkNBQTJDLEtBQUssSUFBSSxDQUFDLENBQUM7S0FDdkU7SUFFRCxJQUFJLEtBQUssQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDLElBQUksRUFBRTtRQUM3QixNQUFNLElBQUksS0FBSyxDQUFDLCtCQUErQixLQUFLLENBQUMsTUFBTSxpQkFDdkQsS0FBSyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUM7S0FDcEI7SUFFRCxJQUFJLEtBQUssQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDLElBQUksRUFBRTtRQUM3QixNQUFNLFFBQVEsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3JDLE9BQU8sUUFBUSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFO1lBQ3JDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDckI7UUFDRCxLQUFLLEdBQUcsT0FBTyxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsQ0FBQztLQUNsQztJQUVELE1BQU0sVUFBVSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUM7SUFDL0IsTUFBTSxJQUFJLEdBQWEsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN6QyxLQUFLLElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDMUMsSUFBSSxVQUFVLENBQUMsQ0FBQyxDQUFDLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQzlCLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDYjthQUFNLElBQUksS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDL0IsTUFBTSxJQUFJLEtBQUssQ0FDWCxtQkFBbUIsTUFBTSw2QkFBNkIsS0FBSyxJQUFJLENBQUMsQ0FBQztTQUN0RTtLQUNGO0lBQ0QsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFFcEUsSUFBSSxJQUFJLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtRQUNyQixPQUFPLEtBQUssQ0FBQyxLQUFLLENBQWMsQ0FBQztLQUNsQztJQUVELDJFQUEyRTtJQUMzRSxNQUFNLE1BQU0sR0FBZSxFQUFDLENBQUMsRUFBRSxLQUFLLEVBQUMsQ0FBQztJQUN0QyxNQUFNLEtBQUssR0FBYyxFQUFDLElBQUksRUFBQyxDQUFDO0lBQ2hDLE9BQU8sTUFBTSxDQUFDLFNBQVMsQ0FDbkIsSUFBSSxFQUFFLE1BQThCLEVBQUUsS0FBZ0MsQ0FBQyxDQUFDO0FBQzlFLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsRUFBRSxDQUFDLEVBQUMsWUFBWSxFQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtFTkdJTkV9IGZyb20gJy4uL2VuZ2luZSc7XG5pbXBvcnQge1RpbGUsIFRpbGVBdHRycywgVGlsZUlucHV0c30gZnJvbSAnLi4va2VybmVsX25hbWVzJztcbmltcG9ydCB7TmFtZWRBdHRyTWFwfSBmcm9tICcuLi9rZXJuZWxfcmVnaXN0cnknO1xuaW1wb3J0IHtUZW5zb3J9IGZyb20gJy4uL3RlbnNvcic7XG5pbXBvcnQge05hbWVkVGVuc29yTWFwfSBmcm9tICcuLi90ZW5zb3JfdHlwZXMnO1xuaW1wb3J0IHtjb252ZXJ0VG9UZW5zb3J9IGZyb20gJy4uL3RlbnNvcl91dGlsX2Vudic7XG5pbXBvcnQge1JhbmssIFNoYXBlTWFwLCBUZW5zb3JMaWtlfSBmcm9tICcuLi90eXBlcyc7XG5cbmltcG9ydCB7Y2xvbmV9IGZyb20gJy4vY2xvbmUnO1xuaW1wb3J0IHtvcH0gZnJvbSAnLi9vcGVyYXRpb24nO1xuaW1wb3J0IHtyZXNoYXBlfSBmcm9tICcuL3Jlc2hhcGUnO1xuXG4vKipcbiAqIEJyb2FkY2FzdCBhbiBhcnJheSB0byBhIGNvbXBhdGlibGUgc2hhcGUgTnVtUHktc3R5bGUuXG4gKlxuICogVGhlIHRlbnNvcidzIHNoYXBlIGlzIGNvbXBhcmVkIHRvIHRoZSBicm9hZGNhc3Qgc2hhcGUgZnJvbSBlbmQgdG8gYmVnaW5uaW5nLlxuICogT25lcyBhcmUgcHJlcGVuZGVkIHRvIHRoZSB0ZW5zb3IncyBzaGFwZSB1bnRpbCBpcyBoYXMgdGhlIHNhbWUgbGVuZ3RoIGFzXG4gKiB0aGUgYnJvYWRjYXN0IHNoYXBlLiBJZiBpbnB1dC5zaGFwZVtpXT09c2hhcGVbaV0sIHRoZSAoaSsxKS10aCBheGlzIGlzXG4gKiBhbHJlYWR5IGJyb2FkY2FzdC1jb21wYXRpYmxlLiBJZiBpbnB1dC5zaGFwZVtpXT09MSBhbmQgc2hhcGVbaV09PU4sIHRoZW5cbiAqIHRoZSBpbnB1dCB0ZW5zb3IgaXMgdGlsZWQgTiB0aW1lcyBhbG9uZyB0aGF0IGF4aXMgKHVzaW5nIHRmLnRpbGUpLlxuICpcbiAqIEBwYXJhbSBpbnB1dCBUaGUgdGVuc29yIHRoYXQgaXMgdG8gYmUgYnJvYWRjYXN0ZWQuXG4gKiBAcGFyYW0gc2hhcGUgVGhlIGlucHV0IGlzIHRvIGJlIGJyb2FkY2FzdCB0byB0aGlzIHNoYXBlLlxuICpcbiAqIEBkb2Mge2hlYWRpbmc6ICdUZW5zb3JzJywgc3ViaGVhZGluZzogJ1RyYW5zZm9ybWF0aW9ucyd9XG4gKi9cbmZ1bmN0aW9uIGJyb2FkY2FzdFRvXzxSIGV4dGVuZHMgUmFuaz4oXG4gICAgeDogVGVuc29yfFRlbnNvckxpa2UsIHNoYXBlOiBTaGFwZU1hcFtSXSk6IFRlbnNvcjxSPiB7XG4gIGxldCBpbnB1dCA9IGNvbnZlcnRUb1RlbnNvcih4LCAnYnJvYWRjYXN0VG8nLCAneCcpO1xuICBjb25zdCB4U2hhcGUgPSBpbnB1dC5zaGFwZTtcblxuICBpZiAoc2hhcGUuc29tZShkID0+ICEoZCA+IDApIHx8IGQgJSAxICE9PSAwKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgYnJvYWRjYXN0VG8oKTogSW52YWxpZCBicm9hZGNhc3Qgc2hhcGUgWyR7c2hhcGV9XS5gKTtcbiAgfVxuXG4gIGlmIChzaGFwZS5sZW5ndGggPCBpbnB1dC5yYW5rKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBicm9hZGNhc3RUbygpOiBzaGFwZS5sZW5ndGg9JHtzaGFwZS5sZW5ndGh9IDwgaW5wdXQucmFuaz0ke1xuICAgICAgICBpbnB1dC5yYW5rfS5gKTtcbiAgfVxuXG4gIGlmIChzaGFwZS5sZW5ndGggPiBpbnB1dC5yYW5rKSB7XG4gICAgY29uc3QgbmV3U2hhcGUgPSBpbnB1dC5zaGFwZS5zbGljZSgpO1xuICAgIHdoaWxlIChuZXdTaGFwZS5sZW5ndGggPCBzaGFwZS5sZW5ndGgpIHtcbiAgICAgIG5ld1NoYXBlLnVuc2hpZnQoMSk7XG4gICAgfVxuICAgIGlucHV0ID0gcmVzaGFwZShpbnB1dCwgbmV3U2hhcGUpO1xuICB9XG5cbiAgY29uc3QgaW5wdXRTaGFwZSA9IGlucHV0LnNoYXBlO1xuICBjb25zdCByZXBzOiBudW1iZXJbXSA9IEFycmF5LmZyb20oc2hhcGUpO1xuICBmb3IgKGxldCBpID0gc2hhcGUubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICBpZiAoaW5wdXRTaGFwZVtpXSA9PT0gc2hhcGVbaV0pIHtcbiAgICAgIHJlcHNbaV0gPSAxO1xuICAgIH0gZWxzZSBpZiAoaW5wdXQuc2hhcGVbaV0gIT09IDEpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICBgYnJvYWRjYXN0VG8oKTogWyR7eFNoYXBlfV0gY2Fubm90IGJlIGJyb2FkY2FzdCB0byBbJHtzaGFwZX1dLmApO1xuICAgIH1cbiAgfVxuICBjb25zdCBheGVzID0gcmVwcy5tYXAoKG4sIGkpID0+IG4gPiAxID8gaSA6IC0xKS5maWx0ZXIoaSA9PiBpID49IDApO1xuXG4gIGlmIChheGVzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBjbG9uZShpbnB1dCkgYXMgVGVuc29yPFI+O1xuICB9XG5cbiAgLy8gVE9ETyBjYWxsIGJyb2FkY2FzdFRvIGtlcm5lbCBkaXJlY3RseSBvbmNlIGJhY2tlbmRzIGltcGxlbWVudCBicm9hZGNzdFRvXG4gIGNvbnN0IGlucHV0czogVGlsZUlucHV0cyA9IHt4OiBpbnB1dH07XG4gIGNvbnN0IGF0dHJzOiBUaWxlQXR0cnMgPSB7cmVwc307XG4gIHJldHVybiBFTkdJTkUucnVuS2VybmVsKFxuICAgICAgVGlsZSwgaW5wdXRzIGFzIHt9IGFzIE5hbWVkVGVuc29yTWFwLCBhdHRycyBhcyB1bmtub3duIGFzIE5hbWVkQXR0ck1hcCk7XG59XG5cbmV4cG9ydCBjb25zdCBicm9hZGNhc3RUbyA9IG9wKHticm9hZGNhc3RUb199KTtcbiJdfQ==","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { ClipByValue } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Clips values element-wise. `max(min(x, clipValueMax), clipValueMin)`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.clipByValue(-2, 3).print();  // or tf.clipByValue(x, -2, 3)\n * ```\n * @param x The input tensor.\n * @param clipValueMin Lower-bound of range to be clipped to.\n * @param clipValueMax Upper-bound of range to be clipped to.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction clipByValue_(x, clipValueMin, clipValueMax) {\n    const $x = convertToTensor(x, 'x', 'clipByValue');\n    util.assert((clipValueMin <= clipValueMax), () => `Error in clip: min (${clipValueMin}) must be ` +\n        `less than or equal to max (${clipValueMax}).`);\n    const inputs = { x: $x };\n    const attrs = { clipValueMin, clipValueMax };\n    return ENGINE.runKernel(ClipByValue, inputs, attrs);\n}\nexport const clipByValue = op({ clipByValue_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpcF9ieV92YWx1ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29yZS9zcmMvb3BzL2NsaXBfYnlfdmFsdWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBQ0gsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUNqQyxPQUFPLEVBQUMsV0FBVyxFQUFzQyxNQUFNLGlCQUFpQixDQUFDO0FBSWpGLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUVuRCxPQUFPLEtBQUssSUFBSSxNQUFNLFNBQVMsQ0FBQztBQUVoQyxPQUFPLEVBQUMsRUFBRSxFQUFDLE1BQU0sYUFBYSxDQUFDO0FBRS9COzs7Ozs7Ozs7Ozs7O0dBYUc7QUFDSCxTQUFTLFlBQVksQ0FDakIsQ0FBZSxFQUFFLFlBQW9CLEVBQUUsWUFBb0I7SUFDN0QsTUFBTSxFQUFFLEdBQUcsZUFBZSxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsYUFBYSxDQUFDLENBQUM7SUFDbEQsSUFBSSxDQUFDLE1BQU0sQ0FDUCxDQUFDLFlBQVksSUFBSSxZQUFZLENBQUMsRUFDOUIsR0FBRyxFQUFFLENBQUMsdUJBQXVCLFlBQVksWUFBWTtRQUNqRCw4QkFBOEIsWUFBWSxJQUFJLENBQUMsQ0FBQztJQUV4RCxNQUFNLE1BQU0sR0FBc0IsRUFBQyxDQUFDLEVBQUUsRUFBRSxFQUFDLENBQUM7SUFDMUMsTUFBTSxLQUFLLEdBQXFCLEVBQUMsWUFBWSxFQUFFLFlBQVksRUFBQyxDQUFDO0lBRTdELE9BQU8sTUFBTSxDQUFDLFNBQVMsQ0FDbkIsV0FBVyxFQUFFLE1BQThCLEVBQUUsS0FBMkIsQ0FBQyxDQUFDO0FBQ2hGLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsRUFBRSxDQUFDLEVBQUMsWUFBWSxFQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE4IEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cbmltcG9ydCB7RU5HSU5FfSBmcm9tICcuLi9lbmdpbmUnO1xuaW1wb3J0IHtDbGlwQnlWYWx1ZSwgQ2xpcEJ5VmFsdWVBdHRycywgQ2xpcEJ5VmFsdWVJbnB1dHN9IGZyb20gJy4uL2tlcm5lbF9uYW1lcyc7XG5pbXBvcnQge05hbWVkQXR0ck1hcH0gZnJvbSAnLi4va2VybmVsX3JlZ2lzdHJ5JztcbmltcG9ydCB7VGVuc29yfSBmcm9tICcuLi90ZW5zb3InO1xuaW1wb3J0IHtOYW1lZFRlbnNvck1hcH0gZnJvbSAnLi4vdGVuc29yX3R5cGVzJztcbmltcG9ydCB7Y29udmVydFRvVGVuc29yfSBmcm9tICcuLi90ZW5zb3JfdXRpbF9lbnYnO1xuaW1wb3J0IHtUZW5zb3JMaWtlfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgKiBhcyB1dGlsIGZyb20gJy4uL3V0aWwnO1xuXG5pbXBvcnQge29wfSBmcm9tICcuL29wZXJhdGlvbic7XG5cbi8qKlxuICogQ2xpcHMgdmFsdWVzIGVsZW1lbnQtd2lzZS4gYG1heChtaW4oeCwgY2xpcFZhbHVlTWF4KSwgY2xpcFZhbHVlTWluKWBcbiAqXG4gKiBgYGBqc1xuICogY29uc3QgeCA9IHRmLnRlbnNvcjFkKFstMSwgMiwgLTMsIDRdKTtcbiAqXG4gKiB4LmNsaXBCeVZhbHVlKC0yLCAzKS5wcmludCgpOyAgLy8gb3IgdGYuY2xpcEJ5VmFsdWUoeCwgLTIsIDMpXG4gKiBgYGBcbiAqIEBwYXJhbSB4IFRoZSBpbnB1dCB0ZW5zb3IuXG4gKiBAcGFyYW0gY2xpcFZhbHVlTWluIExvd2VyLWJvdW5kIG9mIHJhbmdlIHRvIGJlIGNsaXBwZWQgdG8uXG4gKiBAcGFyYW0gY2xpcFZhbHVlTWF4IFVwcGVyLWJvdW5kIG9mIHJhbmdlIHRvIGJlIGNsaXBwZWQgdG8uXG4gKlxuICogQGRvYyB7aGVhZGluZzogJ09wZXJhdGlvbnMnLCBzdWJoZWFkaW5nOiAnQmFzaWMgbWF0aCd9XG4gKi9cbmZ1bmN0aW9uIGNsaXBCeVZhbHVlXzxUIGV4dGVuZHMgVGVuc29yPihcbiAgICB4OiBUfFRlbnNvckxpa2UsIGNsaXBWYWx1ZU1pbjogbnVtYmVyLCBjbGlwVmFsdWVNYXg6IG51bWJlcik6IFQge1xuICBjb25zdCAkeCA9IGNvbnZlcnRUb1RlbnNvcih4LCAneCcsICdjbGlwQnlWYWx1ZScpO1xuICB1dGlsLmFzc2VydChcbiAgICAgIChjbGlwVmFsdWVNaW4gPD0gY2xpcFZhbHVlTWF4KSxcbiAgICAgICgpID0+IGBFcnJvciBpbiBjbGlwOiBtaW4gKCR7Y2xpcFZhbHVlTWlufSkgbXVzdCBiZSBgICtcbiAgICAgICAgICBgbGVzcyB0aGFuIG9yIGVxdWFsIHRvIG1heCAoJHtjbGlwVmFsdWVNYXh9KS5gKTtcblxuICBjb25zdCBpbnB1dHM6IENsaXBCeVZhbHVlSW5wdXRzID0ge3g6ICR4fTtcbiAgY29uc3QgYXR0cnM6IENsaXBCeVZhbHVlQXR0cnMgPSB7Y2xpcFZhbHVlTWluLCBjbGlwVmFsdWVNYXh9O1xuXG4gIHJldHVybiBFTkdJTkUucnVuS2VybmVsKFxuICAgICAgQ2xpcEJ5VmFsdWUsIGlucHV0cyBhcyB7fSBhcyBOYW1lZFRlbnNvck1hcCwgYXR0cnMgYXMge30gYXMgTmFtZWRBdHRyTWFwKTtcbn1cblxuZXhwb3J0IGNvbnN0IGNsaXBCeVZhbHVlID0gb3Aoe2NsaXBCeVZhbHVlX30pO1xuIl19","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Conv2D } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport * as conv_util from './conv_util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes a 2D convolution over the input x.\n *\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels].\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `dilations` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction conv2d_(x, filter, strides, pad, dataFormat = 'NHWC', dilations = [1, 1], dimRoundingMode) {\n    const $x = convertToTensor(x, 'x', 'conv2d', 'float32');\n    const $filter = convertToTensor(filter, 'filter', 'conv2d', 'float32');\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    util.assert(x4D.rank === 4, () => `Error in conv2d: input must be rank 4, but got rank ${x4D.rank}.`);\n    util.assert($filter.rank === 4, () => `Error in conv2d: filter must be rank 4, but got rank ` +\n        `${$filter.rank}.`);\n    conv_util.checkPadOnDimRoundingMode('conv2d', pad, dimRoundingMode);\n    const inDepth = dataFormat === 'NHWC' ? x4D.shape[3] : x4D.shape[1];\n    util.assert(inDepth === $filter.shape[2], () => `Error in conv2d: depth of input (${inDepth}) must match ` +\n        `input depth for filter ${$filter.shape[2]}.`);\n    util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in conv2D: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    const inputs = { x: x4D, filter: $filter };\n    const attrs = { strides, pad, dataFormat, dilations, dimRoundingMode };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = ENGINE.runKernel(Conv2D, inputs, attrs);\n    if (reshapedTo4D) {\n        return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nexport const conv2d = op({ conv2d_ });\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { DepthwiseConv2dNative } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport * as conv_util from './conv_util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Depthwise 2D convolution.\n *\n * Given a 4D `input` array and a `filter` array of shape\n * `[filterHeight, filterWidth, inChannels, channelMultiplier]` containing\n * `inChannels` convolutional filters of depth 1, this op applies a\n * different filter to each input channel (expanding from 1 channel to\n * `channelMultiplier` channels for each), then concatenates the results\n * together. The output has `inChannels * channelMultiplier` channels.\n *\n * See\n * [https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d](\n *     https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d)\n * for more details.\n *\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter tensor, rank 4, of shape\n *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`. If strides is a single number, then `strideHeight ==\n * strideWidth`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction depthwiseConv2d_(x, filter, strides, pad, dataFormat = 'NHWC', dilations = [1, 1], dimRoundingMode) {\n    const $x = convertToTensor(x, 'x', 'depthwiseConv2d', 'float32');\n    const $filter = convertToTensor(filter, 'filter', 'depthwiseConv2d', 'float32');\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    util.assert(x4D.rank === 4, () => `Error in depthwiseConv2d: input must be rank 4, but got ` +\n        `rank ${x4D.rank}.`);\n    util.assert($filter.rank === 4, () => `Error in depthwiseConv2d: filter must be rank 4, but got rank ` +\n        `${$filter.rank}.`);\n    util.assert(x4D.shape[3] === $filter.shape[2], () => `Error in depthwiseConv2d: number of input channels ` +\n        `(${x4D.shape[3]}) must match the inChannels dimension in ` +\n        `filter ${$filter.shape[2]}.`);\n    conv_util.checkPadOnDimRoundingMode('depthwiseConv2d', pad, dimRoundingMode);\n    const inputs = { x: x4D, filter: $filter };\n    const attrs = { strides, pad, dataFormat, dilations, dimRoundingMode };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = ENGINE.runKernel(DepthwiseConv2dNative, inputs, attrs);\n    if (reshapedTo4D) {\n        return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nexport const depthwiseConv2d = op({ depthwiseConv2d_ });\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Select } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { broadcastTo } from './broadcast_to';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { op } from './operation';\n/**\n * Returns the elements, either `a` or `b` depending on the `condition`.\n *\n * If the condition is true, select from `a`, otherwise select from `b`.\n *\n * ```js\n * const cond = tf.tensor1d([false, false, true], 'bool');\n * const a = tf.tensor1d([1 , 2, 3]);\n * const b = tf.tensor1d([-1, -2, -3]);\n *\n * a.where(cond, b).print();\n * ```\n *\n * @param condition The input condition. Must be of dtype bool.\n * @param a If `condition` is rank 1, `a` may have a higher rank but\n *     its first dimension must match the size of `condition`.\n * @param b A tensor with the same dtype as `a` and with shape that is\n *     compatible with `a`.\n * @return A tensor with same dtype as `a` and `b`, and shape that is\n *     broadcastable from `a` and `b`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction where_(condition, a, b) {\n    const $a = convertToTensor(a, 'a', 'where');\n    const $b = convertToTensor(b, 'b', 'where');\n    const $condition = convertToTensor(condition, 'condition', 'where', 'bool');\n    // TODO: move this logic to forward function when the broadcastTo op is\n    // implemented in WASM.\n    // Find the broadcastable shape for $condition, $a, and $b.\n    const broadcastShape = assertAndGetBroadcastShape(assertAndGetBroadcastShape($condition.shape, $a.shape), $b.shape);\n    const $broadcastedCondition = broadcastTo($condition, broadcastShape);\n    const $broadcastedA = broadcastTo($a, broadcastShape);\n    const $broadcastedB = broadcastTo($b, broadcastShape);\n    const inputs = {\n        condition: $broadcastedCondition,\n        t: $broadcastedA,\n        e: $broadcastedB\n    };\n    return ENGINE.runKernel(Select, inputs);\n}\nexport const where = op({ where_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2hlcmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL29wcy93aGVyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsTUFBTSxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBQ2pDLE9BQU8sRUFBQyxNQUFNLEVBQWUsTUFBTSxpQkFBaUIsQ0FBQztBQUdyRCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFHbkQsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQzNDLE9BQU8sRUFBQywwQkFBMEIsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBQzVELE9BQU8sRUFBQyxFQUFFLEVBQUMsTUFBTSxhQUFhLENBQUM7QUFFL0I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FzQkc7QUFDSCxTQUFTLE1BQU0sQ0FDWCxTQUE0QixFQUFFLENBQWUsRUFBRSxDQUFlO0lBQ2hFLE1BQU0sRUFBRSxHQUFHLGVBQWUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQzVDLE1BQU0sRUFBRSxHQUFHLGVBQWUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQzVDLE1BQU0sVUFBVSxHQUFHLGVBQWUsQ0FBQyxTQUFTLEVBQUUsV0FBVyxFQUFFLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQztJQUM1RSx1RUFBdUU7SUFDdkUsdUJBQXVCO0lBQ3ZCLDJEQUEyRDtJQUMzRCxNQUFNLGNBQWMsR0FBRywwQkFBMEIsQ0FDN0MsMEJBQTBCLENBQUMsVUFBVSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3RFLE1BQU0scUJBQXFCLEdBQUcsV0FBVyxDQUFDLFVBQVUsRUFBRSxjQUFjLENBQUMsQ0FBQztJQUN0RSxNQUFNLGFBQWEsR0FBRyxXQUFXLENBQUMsRUFBRSxFQUFFLGNBQWMsQ0FBQyxDQUFDO0lBQ3RELE1BQU0sYUFBYSxHQUFHLFdBQVcsQ0FBQyxFQUFFLEVBQUUsY0FBYyxDQUFDLENBQUM7SUFFdEQsTUFBTSxNQUFNLEdBQWlCO1FBQzNCLFNBQVMsRUFBRSxxQkFBcUI7UUFDaEMsQ0FBQyxFQUFFLGFBQWE7UUFDaEIsQ0FBQyxFQUFFLGFBQWE7S0FDakIsQ0FBQztJQUNGLE9BQU8sTUFBTSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsTUFBOEIsQ0FBQyxDQUFDO0FBQ2xFLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxLQUFLLEdBQUcsRUFBRSxDQUFDLEVBQUMsTUFBTSxFQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtFTkdJTkV9IGZyb20gJy4uL2VuZ2luZSc7XG5pbXBvcnQge1NlbGVjdCwgU2VsZWN0SW5wdXRzfSBmcm9tICcuLi9rZXJuZWxfbmFtZXMnO1xuaW1wb3J0IHtUZW5zb3J9IGZyb20gJy4uL3RlbnNvcic7XG5pbXBvcnQge05hbWVkVGVuc29yTWFwfSBmcm9tICcuLi90ZW5zb3JfdHlwZXMnO1xuaW1wb3J0IHtjb252ZXJ0VG9UZW5zb3J9IGZyb20gJy4uL3RlbnNvcl91dGlsX2Vudic7XG5pbXBvcnQge1RlbnNvckxpa2V9IGZyb20gJy4uL3R5cGVzJztcblxuaW1wb3J0IHticm9hZGNhc3RUb30gZnJvbSAnLi9icm9hZGNhc3RfdG8nO1xuaW1wb3J0IHthc3NlcnRBbmRHZXRCcm9hZGNhc3RTaGFwZX0gZnJvbSAnLi9icm9hZGNhc3RfdXRpbCc7XG5pbXBvcnQge29wfSBmcm9tICcuL29wZXJhdGlvbic7XG5cbi8qKlxuICogUmV0dXJucyB0aGUgZWxlbWVudHMsIGVpdGhlciBgYWAgb3IgYGJgIGRlcGVuZGluZyBvbiB0aGUgYGNvbmRpdGlvbmAuXG4gKlxuICogSWYgdGhlIGNvbmRpdGlvbiBpcyB0cnVlLCBzZWxlY3QgZnJvbSBgYWAsIG90aGVyd2lzZSBzZWxlY3QgZnJvbSBgYmAuXG4gKlxuICogYGBganNcbiAqIGNvbnN0IGNvbmQgPSB0Zi50ZW5zb3IxZChbZmFsc2UsIGZhbHNlLCB0cnVlXSwgJ2Jvb2wnKTtcbiAqIGNvbnN0IGEgPSB0Zi50ZW5zb3IxZChbMSAsIDIsIDNdKTtcbiAqIGNvbnN0IGIgPSB0Zi50ZW5zb3IxZChbLTEsIC0yLCAtM10pO1xuICpcbiAqIGEud2hlcmUoY29uZCwgYikucHJpbnQoKTtcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBjb25kaXRpb24gVGhlIGlucHV0IGNvbmRpdGlvbi4gTXVzdCBiZSBvZiBkdHlwZSBib29sLlxuICogQHBhcmFtIGEgSWYgYGNvbmRpdGlvbmAgaXMgcmFuayAxLCBgYWAgbWF5IGhhdmUgYSBoaWdoZXIgcmFuayBidXRcbiAqICAgICBpdHMgZmlyc3QgZGltZW5zaW9uIG11c3QgbWF0Y2ggdGhlIHNpemUgb2YgYGNvbmRpdGlvbmAuXG4gKiBAcGFyYW0gYiBBIHRlbnNvciB3aXRoIHRoZSBzYW1lIGR0eXBlIGFzIGBhYCBhbmQgd2l0aCBzaGFwZSB0aGF0IGlzXG4gKiAgICAgY29tcGF0aWJsZSB3aXRoIGBhYC5cbiAqIEByZXR1cm4gQSB0ZW5zb3Igd2l0aCBzYW1lIGR0eXBlIGFzIGBhYCBhbmQgYGJgLCBhbmQgc2hhcGUgdGhhdCBpc1xuICogICAgIGJyb2FkY2FzdGFibGUgZnJvbSBgYWAgYW5kIGBiYC5cbiAqXG4gKiBAZG9jIHtoZWFkaW5nOiAnT3BlcmF0aW9ucycsIHN1YmhlYWRpbmc6ICdMb2dpY2FsJ31cbiAqL1xuZnVuY3Rpb24gd2hlcmVfPFQgZXh0ZW5kcyBUZW5zb3I+KFxuICAgIGNvbmRpdGlvbjogVGVuc29yfFRlbnNvckxpa2UsIGE6IFR8VGVuc29yTGlrZSwgYjogVHxUZW5zb3JMaWtlKTogVCB7XG4gIGNvbnN0ICRhID0gY29udmVydFRvVGVuc29yKGEsICdhJywgJ3doZXJlJyk7XG4gIGNvbnN0ICRiID0gY29udmVydFRvVGVuc29yKGIsICdiJywgJ3doZXJlJyk7XG4gIGNvbnN0ICRjb25kaXRpb24gPSBjb252ZXJ0VG9UZW5zb3IoY29uZGl0aW9uLCAnY29uZGl0aW9uJywgJ3doZXJlJywgJ2Jvb2wnKTtcbiAgLy8gVE9ETzogbW92ZSB0aGlzIGxvZ2ljIHRvIGZvcndhcmQgZnVuY3Rpb24gd2hlbiB0aGUgYnJvYWRjYXN0VG8gb3AgaXNcbiAgLy8gaW1wbGVtZW50ZWQgaW4gV0FTTS5cbiAgLy8gRmluZCB0aGUgYnJvYWRjYXN0YWJsZSBzaGFwZSBmb3IgJGNvbmRpdGlvbiwgJGEsIGFuZCAkYi5cbiAgY29uc3QgYnJvYWRjYXN0U2hhcGUgPSBhc3NlcnRBbmRHZXRCcm9hZGNhc3RTaGFwZShcbiAgICAgIGFzc2VydEFuZEdldEJyb2FkY2FzdFNoYXBlKCRjb25kaXRpb24uc2hhcGUsICRhLnNoYXBlKSwgJGIuc2hhcGUpO1xuICBjb25zdCAkYnJvYWRjYXN0ZWRDb25kaXRpb24gPSBicm9hZGNhc3RUbygkY29uZGl0aW9uLCBicm9hZGNhc3RTaGFwZSk7XG4gIGNvbnN0ICRicm9hZGNhc3RlZEEgPSBicm9hZGNhc3RUbygkYSwgYnJvYWRjYXN0U2hhcGUpO1xuICBjb25zdCAkYnJvYWRjYXN0ZWRCID0gYnJvYWRjYXN0VG8oJGIsIGJyb2FkY2FzdFNoYXBlKTtcblxuICBjb25zdCBpbnB1dHM6IFNlbGVjdElucHV0cyA9IHtcbiAgICBjb25kaXRpb246ICRicm9hZGNhc3RlZENvbmRpdGlvbixcbiAgICB0OiAkYnJvYWRjYXN0ZWRBLFxuICAgIGU6ICRicm9hZGNhc3RlZEJcbiAgfTtcbiAgcmV0dXJuIEVOR0lORS5ydW5LZXJuZWwoU2VsZWN0LCBpbnB1dHMgYXMge30gYXMgTmFtZWRUZW5zb3JNYXApO1xufVxuXG5leHBvcnQgY29uc3Qgd2hlcmUgPSBvcCh7d2hlcmVffSk7XG4iXX0=","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Exp } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes exponential of the input `tf.Tensor` element-wise. `e ^ x`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, -3]);\n *\n * x.exp().print();  // or tf.exp(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction exp_(x) {\n    const $x = convertToTensor(x, 'x', 'exp');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Exp, inputs);\n}\nexport const exp = op({ exp_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy9vcHMvZXhwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDakMsT0FBTyxFQUFDLEdBQUcsRUFBWSxNQUFNLGlCQUFpQixDQUFDO0FBRy9DLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUduRCxPQUFPLEVBQUMsRUFBRSxFQUFDLE1BQU0sYUFBYSxDQUFDO0FBRS9COzs7Ozs7Ozs7OztHQVdHO0FBQ0gsU0FBUyxJQUFJLENBQW1CLENBQWU7SUFDN0MsTUFBTSxFQUFFLEdBQUcsZUFBZSxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFFMUMsTUFBTSxNQUFNLEdBQWMsRUFBQyxDQUFDLEVBQUUsRUFBRSxFQUFDLENBQUM7SUFDbEMsT0FBTyxNQUFNLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRSxNQUE4QixDQUFDLENBQUM7QUFDL0QsQ0FBQztBQUNELE1BQU0sQ0FBQyxNQUFNLEdBQUcsR0FBRyxFQUFFLENBQUMsRUFBQyxJQUFJLEVBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTggR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0VOR0lORX0gZnJvbSAnLi4vZW5naW5lJztcbmltcG9ydCB7RXhwLCBFeHBJbnB1dHN9IGZyb20gJy4uL2tlcm5lbF9uYW1lcyc7XG5pbXBvcnQge1RlbnNvcn0gZnJvbSAnLi4vdGVuc29yJztcbmltcG9ydCB7TmFtZWRUZW5zb3JNYXB9IGZyb20gJy4uL3RlbnNvcl90eXBlcyc7XG5pbXBvcnQge2NvbnZlcnRUb1RlbnNvcn0gZnJvbSAnLi4vdGVuc29yX3V0aWxfZW52JztcbmltcG9ydCB7VGVuc29yTGlrZX0gZnJvbSAnLi4vdHlwZXMnO1xuXG5pbXBvcnQge29wfSBmcm9tICcuL29wZXJhdGlvbic7XG5cbi8qKlxuICogQ29tcHV0ZXMgZXhwb25lbnRpYWwgb2YgdGhlIGlucHV0IGB0Zi5UZW5zb3JgIGVsZW1lbnQtd2lzZS4gYGUgXiB4YFxuICpcbiAqIGBgYGpzXG4gKiBjb25zdCB4ID0gdGYudGVuc29yMWQoWzEsIDIsIC0zXSk7XG4gKlxuICogeC5leHAoKS5wcmludCgpOyAgLy8gb3IgdGYuZXhwKHgpXG4gKiBgYGBcbiAqIEBwYXJhbSB4IFRoZSBpbnB1dCB0ZW5zb3IuXG4gKlxuICogQGRvYyB7aGVhZGluZzogJ09wZXJhdGlvbnMnLCBzdWJoZWFkaW5nOiAnQmFzaWMgbWF0aCd9XG4gKi9cbmZ1bmN0aW9uIGV4cF88VCBleHRlbmRzIFRlbnNvcj4oeDogVHxUZW5zb3JMaWtlKTogVCB7XG4gIGNvbnN0ICR4ID0gY29udmVydFRvVGVuc29yKHgsICd4JywgJ2V4cCcpO1xuXG4gIGNvbnN0IGlucHV0czogRXhwSW5wdXRzID0ge3g6ICR4fTtcbiAgcmV0dXJuIEVOR0lORS5ydW5LZXJuZWwoRXhwLCBpbnB1dHMgYXMge30gYXMgTmFtZWRUZW5zb3JNYXApO1xufVxuZXhwb3J0IGNvbnN0IGV4cCA9IG9wKHtleHBffSk7XG4iXX0=","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { ExpandDims } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Returns a `tf.Tensor` that has expanded rank, by inserting a dimension\n * into the tensor's shape.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * const axis = 1;\n * x.expandDims(axis).print();\n * ```\n *\n * @param x The input tensor whose dimensions to be expanded.\n * @param axis The dimension index at which to insert shape of `1`. Defaults\n *     to 0 (the first dimension).\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction expandDims_(x, axis = 0) {\n    const $x = convertToTensor(x, 'x', 'expandDims', 'string_or_numeric');\n    util.assert(axis <= $x.rank, () => 'Axis must be <= rank of the tensor');\n    const inputs = { input: $x };\n    const attrs = { dim: axis };\n    return ENGINE.runKernel(ExpandDims, inputs, attrs);\n}\nexport const expandDims = op({ expandDims_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwYW5kX2RpbXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL29wcy9leHBhbmRfZGltcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsTUFBTSxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBQ2pDLE9BQU8sRUFBQyxVQUFVLEVBQW9DLE1BQU0saUJBQWlCLENBQUM7QUFJOUUsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBRW5ELE9BQU8sS0FBSyxJQUFJLE1BQU0sU0FBUyxDQUFDO0FBRWhDLE9BQU8sRUFBQyxFQUFFLEVBQUMsTUFBTSxhQUFhLENBQUM7QUFFL0I7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBQ0gsU0FBUyxXQUFXLENBQW1CLENBQW9CLEVBQUUsSUFBSSxHQUFHLENBQUM7SUFDbkUsTUFBTSxFQUFFLEdBQUcsZUFBZSxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsWUFBWSxFQUFFLG1CQUFtQixDQUFDLENBQUM7SUFFdEUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLElBQUksRUFBRSxDQUFDLElBQUksRUFBRSxHQUFHLEVBQUUsQ0FBQyxvQ0FBb0MsQ0FBQyxDQUFDO0lBRXpFLE1BQU0sTUFBTSxHQUFxQixFQUFDLEtBQUssRUFBRSxFQUFFLEVBQUMsQ0FBQztJQUM3QyxNQUFNLEtBQUssR0FBb0IsRUFBQyxHQUFHLEVBQUUsSUFBSSxFQUFDLENBQUM7SUFFM0MsT0FBTyxNQUFNLENBQUMsU0FBUyxDQUNuQixVQUFVLEVBQUUsTUFBOEIsRUFBRSxLQUEyQixDQUFDLENBQUM7QUFDL0UsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxFQUFFLENBQUMsRUFBQyxXQUFXLEVBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0VOR0lORX0gZnJvbSAnLi4vZW5naW5lJztcbmltcG9ydCB7RXhwYW5kRGltcywgRXhwYW5kRGltc0F0dHJzLCBFeHBhbmREaW1zSW5wdXRzfSBmcm9tICcuLi9rZXJuZWxfbmFtZXMnO1xuaW1wb3J0IHtOYW1lZEF0dHJNYXB9IGZyb20gJy4uL2tlcm5lbF9yZWdpc3RyeSc7XG5pbXBvcnQge1RlbnNvcn0gZnJvbSAnLi4vdGVuc29yJztcbmltcG9ydCB7TmFtZWRUZW5zb3JNYXB9IGZyb20gJy4uL3RlbnNvcl90eXBlcyc7XG5pbXBvcnQge2NvbnZlcnRUb1RlbnNvcn0gZnJvbSAnLi4vdGVuc29yX3V0aWxfZW52JztcbmltcG9ydCB7VGVuc29yTGlrZX0gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0ICogYXMgdXRpbCBmcm9tICcuLi91dGlsJztcblxuaW1wb3J0IHtvcH0gZnJvbSAnLi9vcGVyYXRpb24nO1xuXG4vKipcbiAqIFJldHVybnMgYSBgdGYuVGVuc29yYCB0aGF0IGhhcyBleHBhbmRlZCByYW5rLCBieSBpbnNlcnRpbmcgYSBkaW1lbnNpb25cbiAqIGludG8gdGhlIHRlbnNvcidzIHNoYXBlLlxuICpcbiAqIGBgYGpzXG4gKiBjb25zdCB4ID0gdGYudGVuc29yMWQoWzEsIDIsIDMsIDRdKTtcbiAqIGNvbnN0IGF4aXMgPSAxO1xuICogeC5leHBhbmREaW1zKGF4aXMpLnByaW50KCk7XG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0geCBUaGUgaW5wdXQgdGVuc29yIHdob3NlIGRpbWVuc2lvbnMgdG8gYmUgZXhwYW5kZWQuXG4gKiBAcGFyYW0gYXhpcyBUaGUgZGltZW5zaW9uIGluZGV4IGF0IHdoaWNoIHRvIGluc2VydCBzaGFwZSBvZiBgMWAuIERlZmF1bHRzXG4gKiAgICAgdG8gMCAodGhlIGZpcnN0IGRpbWVuc2lvbikuXG4gKlxuICogQGRvYyB7aGVhZGluZzogJ1RlbnNvcnMnLCBzdWJoZWFkaW5nOiAnVHJhbnNmb3JtYXRpb25zJ31cbiAqL1xuZnVuY3Rpb24gZXhwYW5kRGltc188VCBleHRlbmRzIFRlbnNvcj4oeDogVGVuc29yfFRlbnNvckxpa2UsIGF4aXMgPSAwKTogVCB7XG4gIGNvbnN0ICR4ID0gY29udmVydFRvVGVuc29yKHgsICd4JywgJ2V4cGFuZERpbXMnLCAnc3RyaW5nX29yX251bWVyaWMnKTtcblxuICB1dGlsLmFzc2VydChheGlzIDw9ICR4LnJhbmssICgpID0+ICdBeGlzIG11c3QgYmUgPD0gcmFuayBvZiB0aGUgdGVuc29yJyk7XG5cbiAgY29uc3QgaW5wdXRzOiBFeHBhbmREaW1zSW5wdXRzID0ge2lucHV0OiAkeH07XG4gIGNvbnN0IGF0dHJzOiBFeHBhbmREaW1zQXR0cnMgPSB7ZGltOiBheGlzfTtcblxuICByZXR1cm4gRU5HSU5FLnJ1bktlcm5lbChcbiAgICAgIEV4cGFuZERpbXMsIGlucHV0cyBhcyB7fSBhcyBOYW1lZFRlbnNvck1hcCwgYXR0cnMgYXMge30gYXMgTmFtZWRBdHRyTWFwKTtcbn1cblxuZXhwb3J0IGNvbnN0IGV4cGFuZERpbXMgPSBvcCh7ZXhwYW5kRGltc199KTtcbiJdfQ==","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Tile } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Construct a tensor by repeating it the number of times given by reps.\n *\n * This operation creates a new tensor by replicating `input` `reps`\n * times. The output tensor's i'th dimension has `input.shape[i] *\n * reps[i]` elements, and the values of `input` are replicated\n * `reps[i]` times along the i'th dimension. For example, tiling\n * `[a, b, c, d]` by `[2]` produces `[a, b, c, d, a, b, c, d]`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n *\n * a.tile([2]).print();    // or a.tile([2])\n * ```\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * a.tile([1, 2]).print();  // or a.tile([1, 2])\n * ```\n * @param x The tensor to tile.\n * @param reps Determines the number of replications per dimension.\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction tile_(x, reps) {\n    const $x = convertToTensor(x, 'x', 'tile', 'string_or_numeric');\n    util.assert($x.rank === reps.length, () => `Error in transpose: rank of input ${$x.rank} ` +\n        `must match length of reps ${reps}.`);\n    const inputs = { x: $x };\n    const attrs = { reps };\n    return ENGINE.runKernel(Tile, inputs, attrs);\n}\nexport const tile = op({ tile_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29yZS9zcmMvb3BzL3RpbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUNqQyxPQUFPLEVBQUMsSUFBSSxFQUF3QixNQUFNLGlCQUFpQixDQUFDO0FBSTVELE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUVuRCxPQUFPLEtBQUssSUFBSSxNQUFNLFNBQVMsQ0FBQztBQUVoQyxPQUFPLEVBQUMsRUFBRSxFQUFDLE1BQU0sYUFBYSxDQUFDO0FBRS9COzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0F3Qkc7QUFDSCxTQUFTLEtBQUssQ0FBbUIsQ0FBZSxFQUFFLElBQWM7SUFDOUQsTUFBTSxFQUFFLEdBQUcsZUFBZSxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLG1CQUFtQixDQUFDLENBQUM7SUFDaEUsSUFBSSxDQUFDLE1BQU0sQ0FDUCxFQUFFLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQyxNQUFNLEVBQ3ZCLEdBQUcsRUFBRSxDQUFDLHFDQUFxQyxFQUFFLENBQUMsSUFBSSxHQUFHO1FBQ2pELDZCQUE2QixJQUFJLEdBQUcsQ0FBQyxDQUFDO0lBRTlDLE1BQU0sTUFBTSxHQUFlLEVBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBQyxDQUFDO0lBQ25DLE1BQU0sS0FBSyxHQUFjLEVBQUMsSUFBSSxFQUFDLENBQUM7SUFFaEMsT0FBTyxNQUFNLENBQUMsU0FBUyxDQUNuQixJQUFJLEVBQUUsTUFBbUMsRUFDekMsS0FBZ0MsQ0FBQyxDQUFDO0FBQ3hDLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQUcsRUFBRSxDQUFDLEVBQUMsS0FBSyxFQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtFTkdJTkV9IGZyb20gJy4uL2VuZ2luZSc7XG5pbXBvcnQge1RpbGUsIFRpbGVBdHRycywgVGlsZUlucHV0c30gZnJvbSAnLi4va2VybmVsX25hbWVzJztcbmltcG9ydCB7TmFtZWRBdHRyTWFwfSBmcm9tICcuLi9rZXJuZWxfcmVnaXN0cnknO1xuaW1wb3J0IHtUZW5zb3J9IGZyb20gJy4uL3RlbnNvcic7XG5pbXBvcnQge05hbWVkVGVuc29yTWFwfSBmcm9tICcuLi90ZW5zb3JfdHlwZXMnO1xuaW1wb3J0IHtjb252ZXJ0VG9UZW5zb3J9IGZyb20gJy4uL3RlbnNvcl91dGlsX2Vudic7XG5pbXBvcnQge1RlbnNvckxpa2V9IGZyb20gJy4uL3R5cGVzJztcbmltcG9ydCAqIGFzIHV0aWwgZnJvbSAnLi4vdXRpbCc7XG5cbmltcG9ydCB7b3B9IGZyb20gJy4vb3BlcmF0aW9uJztcblxuLyoqXG4gKiBDb25zdHJ1Y3QgYSB0ZW5zb3IgYnkgcmVwZWF0aW5nIGl0IHRoZSBudW1iZXIgb2YgdGltZXMgZ2l2ZW4gYnkgcmVwcy5cbiAqXG4gKiBUaGlzIG9wZXJhdGlvbiBjcmVhdGVzIGEgbmV3IHRlbnNvciBieSByZXBsaWNhdGluZyBgaW5wdXRgIGByZXBzYFxuICogdGltZXMuIFRoZSBvdXRwdXQgdGVuc29yJ3MgaSd0aCBkaW1lbnNpb24gaGFzIGBpbnB1dC5zaGFwZVtpXSAqXG4gKiByZXBzW2ldYCBlbGVtZW50cywgYW5kIHRoZSB2YWx1ZXMgb2YgYGlucHV0YCBhcmUgcmVwbGljYXRlZFxuICogYHJlcHNbaV1gIHRpbWVzIGFsb25nIHRoZSBpJ3RoIGRpbWVuc2lvbi4gRm9yIGV4YW1wbGUsIHRpbGluZ1xuICogYFthLCBiLCBjLCBkXWAgYnkgYFsyXWAgcHJvZHVjZXMgYFthLCBiLCBjLCBkLCBhLCBiLCBjLCBkXWAuXG4gKlxuICogYGBganNcbiAqIGNvbnN0IGEgPSB0Zi50ZW5zb3IxZChbMSwgMl0pO1xuICpcbiAqIGEudGlsZShbMl0pLnByaW50KCk7ICAgIC8vIG9yIGEudGlsZShbMl0pXG4gKiBgYGBcbiAqXG4gKiBgYGBqc1xuICogY29uc3QgYSA9IHRmLnRlbnNvcjJkKFsxLCAyLCAzLCA0XSwgWzIsIDJdKTtcbiAqXG4gKiBhLnRpbGUoWzEsIDJdKS5wcmludCgpOyAgLy8gb3IgYS50aWxlKFsxLCAyXSlcbiAqIGBgYFxuICogQHBhcmFtIHggVGhlIHRlbnNvciB0byB0aWxlLlxuICogQHBhcmFtIHJlcHMgRGV0ZXJtaW5lcyB0aGUgbnVtYmVyIG9mIHJlcGxpY2F0aW9ucyBwZXIgZGltZW5zaW9uLlxuICpcbiAqIEBkb2Mge2hlYWRpbmc6ICdUZW5zb3JzJywgc3ViaGVhZGluZzogJ1NsaWNpbmcgYW5kIEpvaW5pbmcnfVxuICovXG5mdW5jdGlvbiB0aWxlXzxUIGV4dGVuZHMgVGVuc29yPih4OiBUfFRlbnNvckxpa2UsIHJlcHM6IG51bWJlcltdKTogVCB7XG4gIGNvbnN0ICR4ID0gY29udmVydFRvVGVuc29yKHgsICd4JywgJ3RpbGUnLCAnc3RyaW5nX29yX251bWVyaWMnKTtcbiAgdXRpbC5hc3NlcnQoXG4gICAgICAkeC5yYW5rID09PSByZXBzLmxlbmd0aCxcbiAgICAgICgpID0+IGBFcnJvciBpbiB0cmFuc3Bvc2U6IHJhbmsgb2YgaW5wdXQgJHskeC5yYW5rfSBgICtcbiAgICAgICAgICBgbXVzdCBtYXRjaCBsZW5ndGggb2YgcmVwcyAke3JlcHN9LmApO1xuXG4gIGNvbnN0IGlucHV0czogVGlsZUlucHV0cyA9IHt4OiAkeH07XG4gIGNvbnN0IGF0dHJzOiBUaWxlQXR0cnMgPSB7cmVwc307XG5cbiAgcmV0dXJuIEVOR0lORS5ydW5LZXJuZWwoXG4gICAgICBUaWxlLCBpbnB1dHMgYXMgdW5rbm93biBhcyBOYW1lZFRlbnNvck1hcCxcbiAgICAgIGF0dHJzIGFzIHVua25vd24gYXMgTmFtZWRBdHRyTWFwKTtcbn1cblxuZXhwb3J0IGNvbnN0IHRpbGUgPSBvcCh7dGlsZV99KTtcbiJdfQ==","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Fill } from '../kernel_names';\n/**\n * Creates a `tf.Tensor` filled with a scalar value.\n *\n * ```js\n * tf.fill([2, 2], 4).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param value The scalar value to fill the tensor with.\n * @param dtype The type of an element in the resulting tensor. Defaults to\n * 'float'.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nfunction fill(shape, value, dtype) {\n    const attrs = { shape, value, dtype };\n    return ENGINE.runKernel(Fill, {}, attrs);\n}\nexport { fill };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29yZS9zcmMvb3BzL2ZpbGwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUNqQyxPQUFPLEVBQUMsSUFBSSxFQUFZLE1BQU0saUJBQWlCLENBQUM7QUFLaEQ7Ozs7Ozs7Ozs7Ozs7R0FhRztBQUNILFNBQVMsSUFBSSxDQUNULEtBQWtCLEVBQUUsS0FBb0IsRUFBRSxLQUFnQjtJQUM1RCxNQUFNLEtBQUssR0FBYyxFQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFDLENBQUM7SUFFL0MsT0FBTyxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxFQUFFLEVBQUUsS0FBMkIsQ0FBQyxDQUFDO0FBQ2pFLENBQUM7QUFFRCxPQUFPLEVBQUMsSUFBSSxFQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7RU5HSU5FfSBmcm9tICcuLi9lbmdpbmUnO1xuaW1wb3J0IHtGaWxsLCBGaWxsQXR0cnN9IGZyb20gJy4uL2tlcm5lbF9uYW1lcyc7XG5pbXBvcnQge05hbWVkQXR0ck1hcH0gZnJvbSAnLi4va2VybmVsX3JlZ2lzdHJ5JztcbmltcG9ydCB7VGVuc29yfSBmcm9tICcuLi90ZW5zb3InO1xuaW1wb3J0IHtEYXRhVHlwZSwgUmFuaywgU2hhcGVNYXB9IGZyb20gJy4uL3R5cGVzJztcblxuLyoqXG4gKiBDcmVhdGVzIGEgYHRmLlRlbnNvcmAgZmlsbGVkIHdpdGggYSBzY2FsYXIgdmFsdWUuXG4gKlxuICogYGBganNcbiAqIHRmLmZpbGwoWzIsIDJdLCA0KS5wcmludCgpO1xuICogYGBgXG4gKlxuICogQHBhcmFtIHNoYXBlIEFuIGFycmF5IG9mIGludGVnZXJzIGRlZmluaW5nIHRoZSBvdXRwdXQgdGVuc29yIHNoYXBlLlxuICogQHBhcmFtIHZhbHVlIFRoZSBzY2FsYXIgdmFsdWUgdG8gZmlsbCB0aGUgdGVuc29yIHdpdGguXG4gKiBAcGFyYW0gZHR5cGUgVGhlIHR5cGUgb2YgYW4gZWxlbWVudCBpbiB0aGUgcmVzdWx0aW5nIHRlbnNvci4gRGVmYXVsdHMgdG9cbiAqICdmbG9hdCcuXG4gKlxuICogQGRvYyB7aGVhZGluZzogJ1RlbnNvcnMnLCBzdWJoZWFkaW5nOiAnQ3JlYXRpb24nfVxuICovXG5mdW5jdGlvbiBmaWxsPFIgZXh0ZW5kcyBSYW5rPihcbiAgICBzaGFwZTogU2hhcGVNYXBbUl0sIHZhbHVlOiBudW1iZXJ8c3RyaW5nLCBkdHlwZT86IERhdGFUeXBlKTogVGVuc29yPFI+IHtcbiAgY29uc3QgYXR0cnM6IEZpbGxBdHRycyA9IHtzaGFwZSwgdmFsdWUsIGR0eXBlfTtcblxuICByZXR1cm4gRU5HSU5FLnJ1bktlcm5lbChGaWxsLCB7fSwgYXR0cnMgYXMge30gYXMgTmFtZWRBdHRyTWFwKTtcbn1cblxuZXhwb3J0IHtmaWxsfTtcbiJdfQ==","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Greater } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { op } from './operation';\n/**\n * Returns the truth value of (a > b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.greater(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction greater_(a, b) {\n    let $a = convertToTensor(a, 'a', 'greater', 'string_or_numeric');\n    let $b = convertToTensor(b, 'b', 'greater', 'string_or_numeric');\n    [$a, $b] = makeTypesMatch($a, $b);\n    assertAndGetBroadcastShape($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return ENGINE.runKernel(Greater, inputs);\n}\nexport const greater = op({ greater_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JlYXRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29yZS9zcmMvb3BzL2dyZWF0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBQ0gsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUNqQyxPQUFPLEVBQUMsT0FBTyxFQUFnQixNQUFNLGlCQUFpQixDQUFDO0FBR3ZELE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUM5QyxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFHbkQsT0FBTyxFQUFDLDBCQUEwQixFQUFDLE1BQU0sa0JBQWtCLENBQUM7QUFDNUQsT0FBTyxFQUFDLEVBQUUsRUFBQyxNQUFNLGFBQWEsQ0FBQztBQUUvQjs7Ozs7Ozs7Ozs7Ozs7R0FjRztBQUNILFNBQVMsUUFBUSxDQUNiLENBQW9CLEVBQUUsQ0FBb0I7SUFDNUMsSUFBSSxFQUFFLEdBQUcsZUFBZSxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsU0FBUyxFQUFFLG1CQUFtQixDQUFDLENBQUM7SUFDakUsSUFBSSxFQUFFLEdBQUcsZUFBZSxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsU0FBUyxFQUFFLG1CQUFtQixDQUFDLENBQUM7SUFDakUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEdBQUcsY0FBYyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUVsQywwQkFBMEIsQ0FBQyxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUUvQyxNQUFNLE1BQU0sR0FBa0IsRUFBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUMsQ0FBQztJQUU3QyxPQUFPLE1BQU0sQ0FBQyxTQUFTLENBQUMsT0FBTyxFQUFFLE1BQThCLENBQUMsQ0FBQztBQUNuRSxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxFQUFDLFFBQVEsRUFBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5pbXBvcnQge0VOR0lORX0gZnJvbSAnLi4vZW5naW5lJztcbmltcG9ydCB7R3JlYXRlciwgR3JlYXRlcklucHV0c30gZnJvbSAnLi4va2VybmVsX25hbWVzJztcbmltcG9ydCB7VGVuc29yfSBmcm9tICcuLi90ZW5zb3InO1xuaW1wb3J0IHtOYW1lZFRlbnNvck1hcH0gZnJvbSAnLi4vdGVuc29yX3R5cGVzJztcbmltcG9ydCB7bWFrZVR5cGVzTWF0Y2h9IGZyb20gJy4uL3RlbnNvcl91dGlsJztcbmltcG9ydCB7Y29udmVydFRvVGVuc29yfSBmcm9tICcuLi90ZW5zb3JfdXRpbF9lbnYnO1xuaW1wb3J0IHtUZW5zb3JMaWtlfSBmcm9tICcuLi90eXBlcyc7XG5cbmltcG9ydCB7YXNzZXJ0QW5kR2V0QnJvYWRjYXN0U2hhcGV9IGZyb20gJy4vYnJvYWRjYXN0X3V0aWwnO1xuaW1wb3J0IHtvcH0gZnJvbSAnLi9vcGVyYXRpb24nO1xuXG4vKipcbiAqIFJldHVybnMgdGhlIHRydXRoIHZhbHVlIG9mIChhID4gYikgZWxlbWVudC13aXNlLiBTdXBwb3J0cyBicm9hZGNhc3RpbmcuXG4gKlxuICogYGBganNcbiAqIGNvbnN0IGEgPSB0Zi50ZW5zb3IxZChbMSwgMiwgM10pO1xuICogY29uc3QgYiA9IHRmLnRlbnNvcjFkKFsyLCAyLCAyXSk7XG4gKlxuICogYS5ncmVhdGVyKGIpLnByaW50KCk7XG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0gYSBUaGUgZmlyc3QgaW5wdXQgdGVuc29yLlxuICogQHBhcmFtIGIgVGhlIHNlY29uZCBpbnB1dCB0ZW5zb3IuIE11c3QgaGF2ZSB0aGUgc2FtZSBkdHlwZSBhcyBgYWAuXG4gKlxuICogQGRvYyB7aGVhZGluZzogJ09wZXJhdGlvbnMnLCBzdWJoZWFkaW5nOiAnTG9naWNhbCd9XG4gKi9cbmZ1bmN0aW9uIGdyZWF0ZXJfPFQgZXh0ZW5kcyBUZW5zb3I+KFxuICAgIGE6IFRlbnNvcnxUZW5zb3JMaWtlLCBiOiBUZW5zb3J8VGVuc29yTGlrZSk6IFQge1xuICBsZXQgJGEgPSBjb252ZXJ0VG9UZW5zb3IoYSwgJ2EnLCAnZ3JlYXRlcicsICdzdHJpbmdfb3JfbnVtZXJpYycpO1xuICBsZXQgJGIgPSBjb252ZXJ0VG9UZW5zb3IoYiwgJ2InLCAnZ3JlYXRlcicsICdzdHJpbmdfb3JfbnVtZXJpYycpO1xuICBbJGEsICRiXSA9IG1ha2VUeXBlc01hdGNoKCRhLCAkYik7XG5cbiAgYXNzZXJ0QW5kR2V0QnJvYWRjYXN0U2hhcGUoJGEuc2hhcGUsICRiLnNoYXBlKTtcblxuICBjb25zdCBpbnB1dHM6IEdyZWF0ZXJJbnB1dHMgPSB7YTogJGEsIGI6ICRifTtcblxuICByZXR1cm4gRU5HSU5FLnJ1bktlcm5lbChHcmVhdGVyLCBpbnB1dHMgYXMge30gYXMgTmFtZWRUZW5zb3JNYXApO1xufVxuXG5leHBvcnQgY29uc3QgZ3JlYXRlciA9IG9wKHtncmVhdGVyX30pO1xuIl19","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { LessEqual } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { assertAndGetBroadcastShape } from './broadcast_util';\nimport { op } from './operation';\n/**\n * Returns the truth value of (a <= b) element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.lessEqual(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Logical'}\n */\nfunction lessEqual_(a, b) {\n    let $a = convertToTensor(a, 'a', 'lessEqual', 'string_or_numeric');\n    let $b = convertToTensor(b, 'b', 'lessEqual', 'string_or_numeric');\n    [$a, $b] = makeTypesMatch($a, $b);\n    assertAndGetBroadcastShape($a.shape, $b.shape);\n    const inputs = { a: $a, b: $b };\n    return ENGINE.runKernel(LessEqual, inputs);\n}\nexport const lessEqual = op({ lessEqual_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGVzc19lcXVhbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29yZS9zcmMvb3BzL2xlc3NfZXF1YWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBQ0gsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUNqQyxPQUFPLEVBQUMsU0FBUyxFQUFrQixNQUFNLGlCQUFpQixDQUFDO0FBRzNELE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUM5QyxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFHbkQsT0FBTyxFQUFDLDBCQUEwQixFQUFDLE1BQU0sa0JBQWtCLENBQUM7QUFDNUQsT0FBTyxFQUFDLEVBQUUsRUFBQyxNQUFNLGFBQWEsQ0FBQztBQUUvQjs7Ozs7Ozs7Ozs7Ozs7R0FjRztBQUNILFNBQVMsVUFBVSxDQUNmLENBQW9CLEVBQUUsQ0FBb0I7SUFDNUMsSUFBSSxFQUFFLEdBQUcsZUFBZSxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsV0FBVyxFQUFFLG1CQUFtQixDQUFDLENBQUM7SUFDbkUsSUFBSSxFQUFFLEdBQUcsZUFBZSxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsV0FBVyxFQUFFLG1CQUFtQixDQUFDLENBQUM7SUFDbkUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEdBQUcsY0FBYyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUVsQywwQkFBMEIsQ0FBQyxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUUvQyxNQUFNLE1BQU0sR0FBb0IsRUFBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUMsQ0FBQztJQUUvQyxPQUFPLE1BQU0sQ0FBQyxTQUFTLENBQUMsU0FBUyxFQUFFLE1BQThCLENBQUMsQ0FBQztBQUNyRSxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLEVBQUUsQ0FBQyxFQUFDLFVBQVUsRUFBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5pbXBvcnQge0VOR0lORX0gZnJvbSAnLi4vZW5naW5lJztcbmltcG9ydCB7TGVzc0VxdWFsLCBMZXNzRXF1YWxJbnB1dHN9IGZyb20gJy4uL2tlcm5lbF9uYW1lcyc7XG5pbXBvcnQge1RlbnNvcn0gZnJvbSAnLi4vdGVuc29yJztcbmltcG9ydCB7TmFtZWRUZW5zb3JNYXB9IGZyb20gJy4uL3RlbnNvcl90eXBlcyc7XG5pbXBvcnQge21ha2VUeXBlc01hdGNofSBmcm9tICcuLi90ZW5zb3JfdXRpbCc7XG5pbXBvcnQge2NvbnZlcnRUb1RlbnNvcn0gZnJvbSAnLi4vdGVuc29yX3V0aWxfZW52JztcbmltcG9ydCB7VGVuc29yTGlrZX0gZnJvbSAnLi4vdHlwZXMnO1xuXG5pbXBvcnQge2Fzc2VydEFuZEdldEJyb2FkY2FzdFNoYXBlfSBmcm9tICcuL2Jyb2FkY2FzdF91dGlsJztcbmltcG9ydCB7b3B9IGZyb20gJy4vb3BlcmF0aW9uJztcblxuLyoqXG4gKiBSZXR1cm5zIHRoZSB0cnV0aCB2YWx1ZSBvZiAoYSA8PSBiKSBlbGVtZW50LXdpc2UuIFN1cHBvcnRzIGJyb2FkY2FzdGluZy5cbiAqXG4gKiBgYGBqc1xuICogY29uc3QgYSA9IHRmLnRlbnNvcjFkKFsxLCAyLCAzXSk7XG4gKiBjb25zdCBiID0gdGYudGVuc29yMWQoWzIsIDIsIDJdKTtcbiAqXG4gKiBhLmxlc3NFcXVhbChiKS5wcmludCgpO1xuICogYGBgXG4gKlxuICogQHBhcmFtIGEgVGhlIGZpcnN0IGlucHV0IHRlbnNvci5cbiAqIEBwYXJhbSBiIFRoZSBzZWNvbmQgaW5wdXQgdGVuc29yLiBNdXN0IGhhdmUgdGhlIHNhbWUgZHR5cGUgYXMgYGFgLlxuICpcbiAqIEBkb2Mge2hlYWRpbmc6ICdPcGVyYXRpb25zJywgc3ViaGVhZGluZzogJ0xvZ2ljYWwnfVxuICovXG5mdW5jdGlvbiBsZXNzRXF1YWxfPFQgZXh0ZW5kcyBUZW5zb3I+KFxuICAgIGE6IFRlbnNvcnxUZW5zb3JMaWtlLCBiOiBUZW5zb3J8VGVuc29yTGlrZSk6IFQge1xuICBsZXQgJGEgPSBjb252ZXJ0VG9UZW5zb3IoYSwgJ2EnLCAnbGVzc0VxdWFsJywgJ3N0cmluZ19vcl9udW1lcmljJyk7XG4gIGxldCAkYiA9IGNvbnZlcnRUb1RlbnNvcihiLCAnYicsICdsZXNzRXF1YWwnLCAnc3RyaW5nX29yX251bWVyaWMnKTtcbiAgWyRhLCAkYl0gPSBtYWtlVHlwZXNNYXRjaCgkYSwgJGIpO1xuXG4gIGFzc2VydEFuZEdldEJyb2FkY2FzdFNoYXBlKCRhLnNoYXBlLCAkYi5zaGFwZSk7XG5cbiAgY29uc3QgaW5wdXRzOiBMZXNzRXF1YWxJbnB1dHMgPSB7YTogJGEsIGI6ICRifTtcblxuICByZXR1cm4gRU5HSU5FLnJ1bktlcm5lbChMZXNzRXF1YWwsIGlucHV0cyBhcyB7fSBhcyBOYW1lZFRlbnNvck1hcCk7XG59XG5cbmV4cG9ydCBjb25zdCBsZXNzRXF1YWwgPSBvcCh7bGVzc0VxdWFsX30pO1xuIl19","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Neg } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes `-1 * x` element-wise.\n *\n * ```js\n * const x = tf.tensor2d([1, 2, -2, 0], [2, 2]);\n *\n * x.neg().print();  // or tf.neg(x)\n * ```\n *\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction neg_(x) {\n    const $x = convertToTensor(x, 'x', 'neg');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Neg, inputs);\n}\nexport const neg = op({ neg_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmVnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy9vcHMvbmVnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDakMsT0FBTyxFQUFDLEdBQUcsRUFBWSxNQUFNLGlCQUFpQixDQUFDO0FBRy9DLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUduRCxPQUFPLEVBQUMsRUFBRSxFQUFDLE1BQU0sYUFBYSxDQUFDO0FBRS9COzs7Ozs7Ozs7Ozs7R0FZRztBQUNILFNBQVMsSUFBSSxDQUFtQixDQUFlO0lBQzdDLE1BQU0sRUFBRSxHQUFHLGVBQWUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBRTFDLE1BQU0sTUFBTSxHQUFjLEVBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBQyxDQUFDO0lBQ2xDLE9BQU8sTUFBTSxDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUUsTUFBOEIsQ0FBQyxDQUFDO0FBQy9ELENBQUM7QUFDRCxNQUFNLENBQUMsTUFBTSxHQUFHLEdBQUcsRUFBRSxDQUFDLEVBQUMsSUFBSSxFQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE4IEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtFTkdJTkV9IGZyb20gJy4uL2VuZ2luZSc7XG5pbXBvcnQge05lZywgTmVnSW5wdXRzfSBmcm9tICcuLi9rZXJuZWxfbmFtZXMnO1xuaW1wb3J0IHtUZW5zb3J9IGZyb20gJy4uL3RlbnNvcic7XG5pbXBvcnQge05hbWVkVGVuc29yTWFwfSBmcm9tICcuLi90ZW5zb3JfdHlwZXMnO1xuaW1wb3J0IHtjb252ZXJ0VG9UZW5zb3J9IGZyb20gJy4uL3RlbnNvcl91dGlsX2Vudic7XG5pbXBvcnQge1RlbnNvckxpa2V9IGZyb20gJy4uL3R5cGVzJztcblxuaW1wb3J0IHtvcH0gZnJvbSAnLi9vcGVyYXRpb24nO1xuXG4vKipcbiAqIENvbXB1dGVzIGAtMSAqIHhgIGVsZW1lbnQtd2lzZS5cbiAqXG4gKiBgYGBqc1xuICogY29uc3QgeCA9IHRmLnRlbnNvcjJkKFsxLCAyLCAtMiwgMF0sIFsyLCAyXSk7XG4gKlxuICogeC5uZWcoKS5wcmludCgpOyAgLy8gb3IgdGYubmVnKHgpXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0geCBUaGUgaW5wdXQgdGVuc29yLlxuICpcbiAqIEBkb2Mge2hlYWRpbmc6ICdPcGVyYXRpb25zJywgc3ViaGVhZGluZzogJ0Jhc2ljIG1hdGgnfVxuICovXG5mdW5jdGlvbiBuZWdfPFQgZXh0ZW5kcyBUZW5zb3I+KHg6IFR8VGVuc29yTGlrZSk6IFQge1xuICBjb25zdCAkeCA9IGNvbnZlcnRUb1RlbnNvcih4LCAneCcsICduZWcnKTtcblxuICBjb25zdCBpbnB1dHM6IE5lZ0lucHV0cyA9IHt4OiAkeH07XG4gIHJldHVybiBFTkdJTkUucnVuS2VybmVsKE5lZywgaW5wdXRzIGFzIHt9IGFzIE5hbWVkVGVuc29yTWFwKTtcbn1cbmV4cG9ydCBjb25zdCBuZWcgPSBvcCh7bmVnX30pO1xuIl19","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Max } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes the maximum of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and an\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.max().print();  // or tf.max(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.max(axis).print();  // or tf.max(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction max_(x, axis = null, keepDims = false) {\n    const $x = convertToTensor(x, 'x', 'max');\n    const inputs = { x: $x };\n    const attrs = { reductionIndices: axis, keepDims };\n    return ENGINE.runKernel(Max, inputs, attrs);\n}\nexport const max = op({ max_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF4LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy9vcHMvbWF4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDakMsT0FBTyxFQUFDLEdBQUcsRUFBc0IsTUFBTSxpQkFBaUIsQ0FBQztBQUl6RCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFHbkQsT0FBTyxFQUFDLEVBQUUsRUFBQyxNQUFNLGFBQWEsQ0FBQztBQUUvQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQTRCRztBQUNILFNBQVMsSUFBSSxDQUNULENBQW9CLEVBQUUsT0FBd0IsSUFBSSxFQUFFLFFBQVEsR0FBRyxLQUFLO0lBQ3RFLE1BQU0sRUFBRSxHQUFHLGVBQWUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBRTFDLE1BQU0sTUFBTSxHQUFjLEVBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBQyxDQUFDO0lBQ2xDLE1BQU0sS0FBSyxHQUFhLEVBQUMsZ0JBQWdCLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBQyxDQUFDO0lBRTNELE9BQU8sTUFBTSxDQUFDLFNBQVMsQ0FDbkIsR0FBRyxFQUFFLE1BQThCLEVBQUUsS0FBMkIsQ0FBQyxDQUFDO0FBQ3hFLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxHQUFHLEdBQUcsRUFBRSxDQUFDLEVBQUMsSUFBSSxFQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtFTkdJTkV9IGZyb20gJy4uL2VuZ2luZSc7XG5pbXBvcnQge01heCwgTWF4QXR0cnMsIE1heElucHV0c30gZnJvbSAnLi4va2VybmVsX25hbWVzJztcbmltcG9ydCB7TmFtZWRBdHRyTWFwfSBmcm9tICcuLi9rZXJuZWxfcmVnaXN0cnknO1xuaW1wb3J0IHtUZW5zb3J9IGZyb20gJy4uL3RlbnNvcic7XG5pbXBvcnQge05hbWVkVGVuc29yTWFwfSBmcm9tICcuLi90ZW5zb3JfdHlwZXMnO1xuaW1wb3J0IHtjb252ZXJ0VG9UZW5zb3J9IGZyb20gJy4uL3RlbnNvcl91dGlsX2Vudic7XG5pbXBvcnQge1RlbnNvckxpa2V9IGZyb20gJy4uL3R5cGVzJztcblxuaW1wb3J0IHtvcH0gZnJvbSAnLi9vcGVyYXRpb24nO1xuXG4vKipcbiAqIENvbXB1dGVzIHRoZSBtYXhpbXVtIG9mIGVsZW1lbnRzIGFjcm9zcyBkaW1lbnNpb25zIG9mIGEgYHRmLlRlbnNvcmAuXG4gKlxuICogUmVkdWNlcyB0aGUgaW5wdXQgYWxvbmcgdGhlIGRpbWVuc2lvbnMgZ2l2ZW4gaW4gYGF4ZXNgLiBVbmxlc3MgYGtlZXBEaW1zYFxuICogaXMgdHJ1ZSwgdGhlIHJhbmsgb2YgdGhlIGB0Zi5UZW5zb3JgIGlzIHJlZHVjZWQgYnkgMSBmb3IgZWFjaCBlbnRyeSBpblxuICogYGF4ZXNgLiBJZiBga2VlcERpbXNgIGlzIHRydWUsIHRoZSByZWR1Y2VkIGRpbWVuc2lvbnMgYXJlIHJldGFpbmVkIHdpdGhcbiAqIGxlbmd0aCAxLiBJZiBgYXhlc2AgaGFzIG5vIGVudHJpZXMsIGFsbCBkaW1lbnNpb25zIGFyZSByZWR1Y2VkLCBhbmQgYW5cbiAqIGB0Zi5UZW5zb3JgIHdpdGggYSBzaW5nbGUgZWxlbWVudCBpcyByZXR1cm5lZC5cbiAqXG4gKiBgYGBqc1xuICogY29uc3QgeCA9IHRmLnRlbnNvcjFkKFsxLCAyLCAzXSk7XG4gKlxuICogeC5tYXgoKS5wcmludCgpOyAgLy8gb3IgdGYubWF4KHgpXG4gKiBgYGBcbiAqXG4gKiBgYGBqc1xuICogY29uc3QgeCA9IHRmLnRlbnNvcjJkKFsxLCAyLCAzLCA0XSwgWzIsIDJdKTtcbiAqXG4gKiBjb25zdCBheGlzID0gMTtcbiAqIHgubWF4KGF4aXMpLnByaW50KCk7ICAvLyBvciB0Zi5tYXgoeCwgYXhpcylcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB4IFRoZSBpbnB1dCB0ZW5zb3IuXG4gKiBAcGFyYW0gYXhpcyBUaGUgZGltZW5zaW9uKHMpIHRvIHJlZHVjZS4gQnkgZGVmYXVsdCBpdCByZWR1Y2VzXG4gKiAgICAgYWxsIGRpbWVuc2lvbnMuXG4gKiBAcGFyYW0ga2VlcERpbXMgSWYgdHJ1ZSwgcmV0YWlucyByZWR1Y2VkIGRpbWVuc2lvbnMgd2l0aCBzaXplIDEuXG4gKlxuICogQGRvYyB7aGVhZGluZzogJ09wZXJhdGlvbnMnLCBzdWJoZWFkaW5nOiAnUmVkdWN0aW9uJ31cbiAqL1xuZnVuY3Rpb24gbWF4XzxUIGV4dGVuZHMgVGVuc29yPihcbiAgICB4OiBUZW5zb3J8VGVuc29yTGlrZSwgYXhpczogbnVtYmVyfG51bWJlcltdID0gbnVsbCwga2VlcERpbXMgPSBmYWxzZSk6IFQge1xuICBjb25zdCAkeCA9IGNvbnZlcnRUb1RlbnNvcih4LCAneCcsICdtYXgnKTtcblxuICBjb25zdCBpbnB1dHM6IE1heElucHV0cyA9IHt4OiAkeH07XG4gIGNvbnN0IGF0dHJzOiBNYXhBdHRycyA9IHtyZWR1Y3Rpb25JbmRpY2VzOiBheGlzLCBrZWVwRGltc307XG5cbiAgcmV0dXJuIEVOR0lORS5ydW5LZXJuZWwoXG4gICAgICBNYXgsIGlucHV0cyBhcyB7fSBhcyBOYW1lZFRlbnNvck1hcCwgYXR0cnMgYXMge30gYXMgTmFtZWRBdHRyTWFwKTtcbn1cblxuZXhwb3J0IGNvbnN0IG1heCA9IG9wKHttYXhffSk7XG4iXX0=","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Sub } from '../kernel_names';\nimport { makeTypesMatch } from '../tensor_util';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Subtracts two `tf.Tensor`s element-wise, A - B. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([10, 20, 30, 40]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n *\n * a.sub(b).print();  // or tf.sub(a, b)\n * ```\n *\n * ```js\n * // Broadcast subtract a with b.\n * const a = tf.tensor1d([10, 20, 30, 40]);\n * const b = tf.scalar(5);\n *\n * a.sub(b).print();  // or tf.sub(a, b)\n * ```\n * @param a The first `tf.Tensor` to subtract from.\n * @param b The second `tf.Tensor` to be subtracted. Must have the same dtype as\n * `a`.\n *\n * @doc {heading: 'Operations', subheading: 'Arithmetic'}\n */\nfunction sub_(a, b) {\n    let $a = convertToTensor(a, 'a', 'sub');\n    let $b = convertToTensor(b, 'b', 'sub');\n    [$a, $b] = makeTypesMatch($a, $b);\n    const inputs = { a: $a, b: $b };\n    return ENGINE.runKernel(Sub, inputs);\n}\nexport const sub = op({ sub_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy9vcHMvc3ViLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUNILE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDakMsT0FBTyxFQUFDLEdBQUcsRUFBWSxNQUFNLGlCQUFpQixDQUFDO0FBRy9DLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUM5QyxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFHbkQsT0FBTyxFQUFDLEVBQUUsRUFBQyxNQUFNLGFBQWEsQ0FBQztBQUUvQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQXNCRztBQUNILFNBQVMsSUFBSSxDQUFtQixDQUFvQixFQUFFLENBQW9CO0lBQ3hFLElBQUksRUFBRSxHQUFHLGVBQWUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3hDLElBQUksRUFBRSxHQUFHLGVBQWUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3hDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxHQUFHLGNBQWMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFFbEMsTUFBTSxNQUFNLEdBQWMsRUFBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUMsQ0FBQztJQUV6QyxPQUFPLE1BQU0sQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFLE1BQThCLENBQUMsQ0FBQztBQUMvRCxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sR0FBRyxHQUFHLEVBQUUsQ0FBQyxFQUFDLElBQUksRUFBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5pbXBvcnQge0VOR0lORX0gZnJvbSAnLi4vZW5naW5lJztcbmltcG9ydCB7U3ViLCBTdWJJbnB1dHN9IGZyb20gJy4uL2tlcm5lbF9uYW1lcyc7XG5pbXBvcnQge1RlbnNvcn0gZnJvbSAnLi4vdGVuc29yJztcbmltcG9ydCB7TmFtZWRUZW5zb3JNYXB9IGZyb20gJy4uL3RlbnNvcl90eXBlcyc7XG5pbXBvcnQge21ha2VUeXBlc01hdGNofSBmcm9tICcuLi90ZW5zb3JfdXRpbCc7XG5pbXBvcnQge2NvbnZlcnRUb1RlbnNvcn0gZnJvbSAnLi4vdGVuc29yX3V0aWxfZW52JztcbmltcG9ydCB7VGVuc29yTGlrZX0gZnJvbSAnLi4vdHlwZXMnO1xuXG5pbXBvcnQge29wfSBmcm9tICcuL29wZXJhdGlvbic7XG5cbi8qKlxuICogU3VidHJhY3RzIHR3byBgdGYuVGVuc29yYHMgZWxlbWVudC13aXNlLCBBIC0gQi4gU3VwcG9ydHMgYnJvYWRjYXN0aW5nLlxuICpcbiAqIGBgYGpzXG4gKiBjb25zdCBhID0gdGYudGVuc29yMWQoWzEwLCAyMCwgMzAsIDQwXSk7XG4gKiBjb25zdCBiID0gdGYudGVuc29yMWQoWzEsIDIsIDMsIDRdKTtcbiAqXG4gKiBhLnN1YihiKS5wcmludCgpOyAgLy8gb3IgdGYuc3ViKGEsIGIpXG4gKiBgYGBcbiAqXG4gKiBgYGBqc1xuICogLy8gQnJvYWRjYXN0IHN1YnRyYWN0IGEgd2l0aCBiLlxuICogY29uc3QgYSA9IHRmLnRlbnNvcjFkKFsxMCwgMjAsIDMwLCA0MF0pO1xuICogY29uc3QgYiA9IHRmLnNjYWxhcig1KTtcbiAqXG4gKiBhLnN1YihiKS5wcmludCgpOyAgLy8gb3IgdGYuc3ViKGEsIGIpXG4gKiBgYGBcbiAqIEBwYXJhbSBhIFRoZSBmaXJzdCBgdGYuVGVuc29yYCB0byBzdWJ0cmFjdCBmcm9tLlxuICogQHBhcmFtIGIgVGhlIHNlY29uZCBgdGYuVGVuc29yYCB0byBiZSBzdWJ0cmFjdGVkLiBNdXN0IGhhdmUgdGhlIHNhbWUgZHR5cGUgYXNcbiAqIGBhYC5cbiAqXG4gKiBAZG9jIHtoZWFkaW5nOiAnT3BlcmF0aW9ucycsIHN1YmhlYWRpbmc6ICdBcml0aG1ldGljJ31cbiAqL1xuZnVuY3Rpb24gc3ViXzxUIGV4dGVuZHMgVGVuc29yPihhOiBUZW5zb3J8VGVuc29yTGlrZSwgYjogVGVuc29yfFRlbnNvckxpa2UpOiBUIHtcbiAgbGV0ICRhID0gY29udmVydFRvVGVuc29yKGEsICdhJywgJ3N1YicpO1xuICBsZXQgJGIgPSBjb252ZXJ0VG9UZW5zb3IoYiwgJ2InLCAnc3ViJyk7XG4gIFskYSwgJGJdID0gbWFrZVR5cGVzTWF0Y2goJGEsICRiKTtcblxuICBjb25zdCBpbnB1dHM6IFN1YklucHV0cyA9IHthOiAkYSwgYjogJGJ9O1xuXG4gIHJldHVybiBFTkdJTkUucnVuS2VybmVsKFN1YiwgaW5wdXRzIGFzIHt9IGFzIE5hbWVkVGVuc29yTWFwKTtcbn1cblxuZXhwb3J0IGNvbnN0IHN1YiA9IG9wKHtzdWJffSk7XG4iXX0=","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Sum } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { cast } from './cast';\nimport { op } from './operation';\n/**\n * Computes the sum of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If axes has no entries, all dimensions are reduced, and a\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.sum().print();  // or tf.sum(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.sum(axis).print();  // or tf.sum(x, axis)\n * ```\n *\n * @param x The input tensor to compute the sum over. If the dtype is `bool`\n *   it will be converted to `int32` and the output dtype will be `int32`.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n *\n * @doc {heading: 'Operations', subheading: 'Reduction'}\n */\nfunction sum_(x, axis = null, keepDims = false) {\n    let $x = convertToTensor(x, 'x', 'sum');\n    if ($x.dtype === 'bool') {\n        $x = cast($x, 'int32');\n    }\n    const inputs = { x: $x };\n    const attrs = { axis, keepDims };\n    return ENGINE.runKernel(Sum, inputs, attrs);\n}\nexport const sum = op({ sum_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3VtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy9vcHMvc3VtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUNILE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDakMsT0FBTyxFQUFDLEdBQUcsRUFBc0IsTUFBTSxpQkFBaUIsQ0FBQztBQUl6RCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFHbkQsT0FBTyxFQUFDLElBQUksRUFBQyxNQUFNLFFBQVEsQ0FBQztBQUM1QixPQUFPLEVBQUMsRUFBRSxFQUFDLE1BQU0sYUFBYSxDQUFDO0FBRS9COzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQTZCRztBQUNILFNBQVMsSUFBSSxDQUNULENBQW9CLEVBQUUsT0FBd0IsSUFBSSxFQUFFLFFBQVEsR0FBRyxLQUFLO0lBQ3RFLElBQUksRUFBRSxHQUFHLGVBQWUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3hDLElBQUksRUFBRSxDQUFDLEtBQUssS0FBSyxNQUFNLEVBQUU7UUFDdkIsRUFBRSxHQUFHLElBQUksQ0FBQyxFQUFFLEVBQUUsT0FBTyxDQUFDLENBQUM7S0FDeEI7SUFFRCxNQUFNLE1BQU0sR0FBYyxFQUFDLENBQUMsRUFBRSxFQUFFLEVBQUMsQ0FBQztJQUNsQyxNQUFNLEtBQUssR0FBYSxFQUFDLElBQUksRUFBRSxRQUFRLEVBQUMsQ0FBQztJQUV6QyxPQUFPLE1BQU0sQ0FBQyxTQUFTLENBQ25CLEdBQUcsRUFBRSxNQUE4QixFQUFFLEtBQTJCLENBQUMsQ0FBQztBQUN4RSxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sR0FBRyxHQUFHLEVBQUUsQ0FBQyxFQUFDLElBQUksRUFBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5pbXBvcnQge0VOR0lORX0gZnJvbSAnLi4vZW5naW5lJztcbmltcG9ydCB7U3VtLCBTdW1BdHRycywgU3VtSW5wdXRzfSBmcm9tICcuLi9rZXJuZWxfbmFtZXMnO1xuaW1wb3J0IHtOYW1lZEF0dHJNYXB9IGZyb20gJy4uL2tlcm5lbF9yZWdpc3RyeSc7XG5pbXBvcnQge1RlbnNvcn0gZnJvbSAnLi4vdGVuc29yJztcbmltcG9ydCB7TmFtZWRUZW5zb3JNYXB9IGZyb20gJy4uL3RlbnNvcl90eXBlcyc7XG5pbXBvcnQge2NvbnZlcnRUb1RlbnNvcn0gZnJvbSAnLi4vdGVuc29yX3V0aWxfZW52JztcbmltcG9ydCB7VGVuc29yTGlrZX0gZnJvbSAnLi4vdHlwZXMnO1xuXG5pbXBvcnQge2Nhc3R9IGZyb20gJy4vY2FzdCc7XG5pbXBvcnQge29wfSBmcm9tICcuL29wZXJhdGlvbic7XG5cbi8qKlxuICogQ29tcHV0ZXMgdGhlIHN1bSBvZiBlbGVtZW50cyBhY3Jvc3MgZGltZW5zaW9ucyBvZiBhIGB0Zi5UZW5zb3JgLlxuICpcbiAqIFJlZHVjZXMgdGhlIGlucHV0IGFsb25nIHRoZSBkaW1lbnNpb25zIGdpdmVuIGluIGBheGVzYC4gVW5sZXNzIGBrZWVwRGltc2BcbiAqIGlzIHRydWUsIHRoZSByYW5rIG9mIHRoZSBgdGYuVGVuc29yYCBpcyByZWR1Y2VkIGJ5IDEgZm9yIGVhY2ggZW50cnkgaW5cbiAqIGBheGVzYC4gSWYgYGtlZXBEaW1zYCBpcyB0cnVlLCB0aGUgcmVkdWNlZCBkaW1lbnNpb25zIGFyZSByZXRhaW5lZCB3aXRoXG4gKiBsZW5ndGggMS4gSWYgYXhlcyBoYXMgbm8gZW50cmllcywgYWxsIGRpbWVuc2lvbnMgYXJlIHJlZHVjZWQsIGFuZCBhXG4gKiBgdGYuVGVuc29yYCB3aXRoIGEgc2luZ2xlIGVsZW1lbnQgaXMgcmV0dXJuZWQuXG4gKlxuICogYGBganNcbiAqIGNvbnN0IHggPSB0Zi50ZW5zb3IxZChbMSwgMiwgM10pO1xuICpcbiAqIHguc3VtKCkucHJpbnQoKTsgIC8vIG9yIHRmLnN1bSh4KVxuICogYGBgXG4gKlxuICogYGBganNcbiAqIGNvbnN0IHggPSB0Zi50ZW5zb3IyZChbMSwgMiwgMywgNF0sIFsyLCAyXSk7XG4gKlxuICogY29uc3QgYXhpcyA9IDE7XG4gKiB4LnN1bShheGlzKS5wcmludCgpOyAgLy8gb3IgdGYuc3VtKHgsIGF4aXMpXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0geCBUaGUgaW5wdXQgdGVuc29yIHRvIGNvbXB1dGUgdGhlIHN1bSBvdmVyLiBJZiB0aGUgZHR5cGUgaXMgYGJvb2xgXG4gKiAgIGl0IHdpbGwgYmUgY29udmVydGVkIHRvIGBpbnQzMmAgYW5kIHRoZSBvdXRwdXQgZHR5cGUgd2lsbCBiZSBgaW50MzJgLlxuICogQHBhcmFtIGF4aXMgVGhlIGRpbWVuc2lvbihzKSB0byByZWR1Y2UuIEJ5IGRlZmF1bHQgaXQgcmVkdWNlc1xuICogICAgIGFsbCBkaW1lbnNpb25zLlxuICogQHBhcmFtIGtlZXBEaW1zIElmIHRydWUsIHJldGFpbnMgcmVkdWNlZCBkaW1lbnNpb25zIHdpdGggc2l6ZSAxLlxuICpcbiAqIEBkb2Mge2hlYWRpbmc6ICdPcGVyYXRpb25zJywgc3ViaGVhZGluZzogJ1JlZHVjdGlvbid9XG4gKi9cbmZ1bmN0aW9uIHN1bV88VCBleHRlbmRzIFRlbnNvcj4oXG4gICAgeDogVGVuc29yfFRlbnNvckxpa2UsIGF4aXM6IG51bWJlcnxudW1iZXJbXSA9IG51bGwsIGtlZXBEaW1zID0gZmFsc2UpOiBUIHtcbiAgbGV0ICR4ID0gY29udmVydFRvVGVuc29yKHgsICd4JywgJ3N1bScpO1xuICBpZiAoJHguZHR5cGUgPT09ICdib29sJykge1xuICAgICR4ID0gY2FzdCgkeCwgJ2ludDMyJyk7XG4gIH1cblxuICBjb25zdCBpbnB1dHM6IFN1bUlucHV0cyA9IHt4OiAkeH07XG4gIGNvbnN0IGF0dHJzOiBTdW1BdHRycyA9IHtheGlzLCBrZWVwRGltc307XG5cbiAgcmV0dXJuIEVOR0lORS5ydW5LZXJuZWwoXG4gICAgICBTdW0sIGlucHV0cyBhcyB7fSBhcyBOYW1lZFRlbnNvck1hcCwgYXR0cnMgYXMge30gYXMgTmFtZWRBdHRyTWFwKTtcbn1cblxuZXhwb3J0IGNvbnN0IHN1bSA9IG9wKHtzdW1ffSk7XG4iXX0=","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { MaxPool } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport * as conv_util from './conv_util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the 2D max pooling of an image.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in dilated pooling. Defaults to `[1, 1]`. If `dilations` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction maxPool_(x, filterSize, strides, pad, dimRoundingMode) {\n    const $x = convertToTensor(x, 'x', 'maxPool');\n    const dilations = 1;\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    util.assert(x4D.rank === 4, () => `Error in maxPool: input must be rank 4 but got rank ${x4D.rank}.`);\n    util.assert(conv_util.eitherStridesOrDilationsAreOne(strides, dilations), () => 'Error in maxPool: Either strides or dilations must be 1. ' +\n        `Got strides ${strides} and dilations '${dilations}'`);\n    conv_util.checkPadOnDimRoundingMode('maxPool', pad, dimRoundingMode);\n    const inputs = { x: x4D };\n    const attrs = { filterSize, strides, pad, dimRoundingMode };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = ENGINE.runKernel(MaxPool, inputs, attrs);\n    if (reshapedTo4D) {\n        return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nexport const maxPool = op({ maxPool_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF4X3Bvb2wuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL29wcy9tYXhfcG9vbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsTUFBTSxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBQ2pDLE9BQU8sRUFBQyxPQUFPLEVBQThCLE1BQU0saUJBQWlCLENBQUM7QUFJckUsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBRW5ELE9BQU8sS0FBSyxJQUFJLE1BQU0sU0FBUyxDQUFDO0FBRWhDLE9BQU8sS0FBSyxTQUFTLE1BQU0sYUFBYSxDQUFDO0FBQ3pDLE9BQU8sRUFBQyxFQUFFLEVBQUMsTUFBTSxhQUFhLENBQUM7QUFDL0IsT0FBTyxFQUFDLE9BQU8sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUVsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBd0JHO0FBQ0gsU0FBUyxRQUFRLENBQ2IsQ0FBZSxFQUFFLFVBQW1DLEVBQ3BELE9BQWdDLEVBQ2hDLEdBQW9ELEVBQ3BELGVBQXdDO0lBQzFDLE1BQU0sRUFBRSxHQUFHLGVBQWUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQzlDLE1BQU0sU0FBUyxHQUFHLENBQUMsQ0FBQztJQUVwQixJQUFJLEdBQUcsR0FBRyxFQUFjLENBQUM7SUFDekIsSUFBSSxZQUFZLEdBQUcsS0FBSyxDQUFDO0lBQ3pCLElBQUksRUFBRSxDQUFDLElBQUksS0FBSyxDQUFDLEVBQUU7UUFDakIsWUFBWSxHQUFHLElBQUksQ0FBQztRQUNwQixHQUFHLEdBQUcsT0FBTyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDL0Q7SUFFRCxJQUFJLENBQUMsTUFBTSxDQUNQLEdBQUcsQ0FBQyxJQUFJLEtBQUssQ0FBQyxFQUNkLEdBQUcsRUFBRSxDQUFDLHVEQUF1RCxHQUFHLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQztJQUM5RSxJQUFJLENBQUMsTUFBTSxDQUNQLFNBQVMsQ0FBQyw4QkFBOEIsQ0FBQyxPQUFPLEVBQUUsU0FBUyxDQUFDLEVBQzVELEdBQUcsRUFBRSxDQUFDLDJEQUEyRDtRQUM3RCxlQUFlLE9BQU8sbUJBQW1CLFNBQVMsR0FBRyxDQUFDLENBQUM7SUFDL0QsU0FBUyxDQUFDLHlCQUF5QixDQUFDLFNBQVMsRUFBRSxHQUFHLEVBQUUsZUFBZSxDQUFDLENBQUM7SUFDckUsTUFBTSxNQUFNLEdBQWtCLEVBQUMsQ0FBQyxFQUFFLEdBQUcsRUFBQyxDQUFDO0lBQ3ZDLE1BQU0sS0FBSyxHQUFpQixFQUFDLFVBQVUsRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLGVBQWUsRUFBQyxDQUFDO0lBRXhFLDBEQUEwRDtJQUMxRCxNQUFNLEdBQUcsR0FBRyxNQUFNLENBQUMsU0FBUyxDQUNaLE9BQU8sRUFBRSxNQUE4QixFQUN2QyxLQUEyQixDQUFNLENBQUM7SUFFbEQsSUFBSSxZQUFZLEVBQUU7UUFDaEIsT0FBTyxPQUFPLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBTSxDQUFDO0tBQ3RFO0lBQ0QsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxFQUFDLFFBQVEsRUFBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7RU5HSU5FfSBmcm9tICcuLi9lbmdpbmUnO1xuaW1wb3J0IHtNYXhQb29sLCBNYXhQb29sQXR0cnMsIE1heFBvb2xJbnB1dHN9IGZyb20gJy4uL2tlcm5lbF9uYW1lcyc7XG5pbXBvcnQge05hbWVkQXR0ck1hcH0gZnJvbSAnLi4va2VybmVsX3JlZ2lzdHJ5JztcbmltcG9ydCB7VGVuc29yM0QsIFRlbnNvcjREfSBmcm9tICcuLi90ZW5zb3InO1xuaW1wb3J0IHtOYW1lZFRlbnNvck1hcH0gZnJvbSAnLi4vdGVuc29yX3R5cGVzJztcbmltcG9ydCB7Y29udmVydFRvVGVuc29yfSBmcm9tICcuLi90ZW5zb3JfdXRpbF9lbnYnO1xuaW1wb3J0IHtUZW5zb3JMaWtlfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgKiBhcyB1dGlsIGZyb20gJy4uL3V0aWwnO1xuXG5pbXBvcnQgKiBhcyBjb252X3V0aWwgZnJvbSAnLi9jb252X3V0aWwnO1xuaW1wb3J0IHtvcH0gZnJvbSAnLi9vcGVyYXRpb24nO1xuaW1wb3J0IHtyZXNoYXBlfSBmcm9tICcuL3Jlc2hhcGUnO1xuXG4vKipcbiAqIENvbXB1dGVzIHRoZSAyRCBtYXggcG9vbGluZyBvZiBhbiBpbWFnZS5cbiAqXG4gKiBAcGFyYW0geCBUaGUgaW5wdXQgdGVuc29yLCBvZiByYW5rIDQgb3IgcmFuayAzIG9mIHNoYXBlXG4gKiAgICAgYFtiYXRjaCwgaGVpZ2h0LCB3aWR0aCwgaW5DaGFubmVsc11gLiBJZiByYW5rIDMsIGJhdGNoIG9mIDEgaXMgYXNzdW1lZC5cbiAqIEBwYXJhbSBmaWx0ZXJTaXplIFRoZSBmaWx0ZXIgc2l6ZTogYFtmaWx0ZXJIZWlnaHQsIGZpbHRlcldpZHRoXWAuIElmXG4gKiAgICAgYGZpbHRlclNpemVgIGlzIGEgc2luZ2xlIG51bWJlciwgdGhlbiBgZmlsdGVySGVpZ2h0ID09IGZpbHRlcldpZHRoYC5cbiAqIEBwYXJhbSBzdHJpZGVzIFRoZSBzdHJpZGVzIG9mIHRoZSBwb29saW5nOiBgW3N0cmlkZUhlaWdodCwgc3RyaWRlV2lkdGhdYC4gSWZcbiAqICAgICBgc3RyaWRlc2AgaXMgYSBzaW5nbGUgbnVtYmVyLCB0aGVuIGBzdHJpZGVIZWlnaHQgPT0gc3RyaWRlV2lkdGhgLlxuICogQHBhcmFtIGRpbGF0aW9ucyBUaGUgZGlsYXRpb24gcmF0ZXM6IGBbZGlsYXRpb25IZWlnaHQsIGRpbGF0aW9uV2lkdGhdYFxuICogICAgIGluIHdoaWNoIHdlIHNhbXBsZSBpbnB1dCB2YWx1ZXMgYWNyb3NzIHRoZSBoZWlnaHQgYW5kIHdpZHRoIGRpbWVuc2lvbnNcbiAqICAgICBpbiBkaWxhdGVkIHBvb2xpbmcuIERlZmF1bHRzIHRvIGBbMSwgMV1gLiBJZiBgZGlsYXRpb25zYCBpcyBhIHNpbmdsZVxuICogICAgIG51bWJlciwgdGhlbiBgZGlsYXRpb25IZWlnaHQgPT0gZGlsYXRpb25XaWR0aGAuIElmIGl0IGlzIGdyZWF0ZXIgdGhhblxuICogICAgIDEsIHRoZW4gYWxsIHZhbHVlcyBvZiBgc3RyaWRlc2AgbXVzdCBiZSAxLlxuICogQHBhcmFtIHBhZCBUaGUgdHlwZSBvZiBwYWRkaW5nIGFsZ29yaXRobS5cbiAqICAgIC0gYHNhbWVgIGFuZCBzdHJpZGUgMTogb3V0cHV0IHdpbGwgYmUgb2Ygc2FtZSBzaXplIGFzIGlucHV0LFxuICogICAgICAgcmVnYXJkbGVzcyBvZiBmaWx0ZXIgc2l6ZS5cbiAqICAgIC0gYHZhbGlkYDogb3V0cHV0IHdpbGwgYmUgc21hbGxlciB0aGFuIGlucHV0IGlmIGZpbHRlciBpcyBsYXJnZXJcbiAqICAgICAgIHRoYW4gMXgxLlxuICogICAgLSBGb3IgbW9yZSBpbmZvLCBzZWUgdGhpcyBndWlkZTpcbiAqICAgICBbaHR0cHM6Ly93d3cudGVuc29yZmxvdy5vcmcvYXBpX2RvY3MvcHl0aG9uL3RmL25uL2NvbnZvbHV0aW9uXShcbiAqICAgICAgICAgIGh0dHBzOi8vd3d3LnRlbnNvcmZsb3cub3JnL2FwaV9kb2NzL3B5dGhvbi90Zi9ubi9jb252b2x1dGlvbilcbiAqIEBwYXJhbSBkaW1Sb3VuZGluZ01vZGUgQSBzdHJpbmcgZnJvbTogJ2NlaWwnLCAncm91bmQnLCAnZmxvb3InLiBJZiBub25lIGlzXG4gKiAgICAgcHJvdmlkZWQsIGl0IHdpbGwgZGVmYXVsdCB0byB0cnVuY2F0ZS5cbiAqL1xuZnVuY3Rpb24gbWF4UG9vbF88VCBleHRlbmRzIFRlbnNvcjNEfFRlbnNvcjREPihcbiAgICB4OiBUfFRlbnNvckxpa2UsIGZpbHRlclNpemU6IFtudW1iZXIsIG51bWJlcl18bnVtYmVyLFxuICAgIHN0cmlkZXM6IFtudW1iZXIsIG51bWJlcl18bnVtYmVyLFxuICAgIHBhZDogJ3ZhbGlkJ3wnc2FtZSd8bnVtYmVyfGNvbnZfdXRpbC5FeHBsaWNpdFBhZGRpbmcsXG4gICAgZGltUm91bmRpbmdNb2RlPzogJ2Zsb29yJ3wncm91bmQnfCdjZWlsJyk6IFQge1xuICBjb25zdCAkeCA9IGNvbnZlcnRUb1RlbnNvcih4LCAneCcsICdtYXhQb29sJyk7XG4gIGNvbnN0IGRpbGF0aW9ucyA9IDE7XG5cbiAgbGV0IHg0RCA9ICR4IGFzIFRlbnNvcjREO1xuICBsZXQgcmVzaGFwZWRUbzREID0gZmFsc2U7XG4gIGlmICgkeC5yYW5rID09PSAzKSB7XG4gICAgcmVzaGFwZWRUbzREID0gdHJ1ZTtcbiAgICB4NEQgPSByZXNoYXBlKCR4LCBbMSwgJHguc2hhcGVbMF0sICR4LnNoYXBlWzFdLCAkeC5zaGFwZVsyXV0pO1xuICB9XG5cbiAgdXRpbC5hc3NlcnQoXG4gICAgICB4NEQucmFuayA9PT0gNCxcbiAgICAgICgpID0+IGBFcnJvciBpbiBtYXhQb29sOiBpbnB1dCBtdXN0IGJlIHJhbmsgNCBidXQgZ290IHJhbmsgJHt4NEQucmFua30uYCk7XG4gIHV0aWwuYXNzZXJ0KFxuICAgICAgY29udl91dGlsLmVpdGhlclN0cmlkZXNPckRpbGF0aW9uc0FyZU9uZShzdHJpZGVzLCBkaWxhdGlvbnMpLFxuICAgICAgKCkgPT4gJ0Vycm9yIGluIG1heFBvb2w6IEVpdGhlciBzdHJpZGVzIG9yIGRpbGF0aW9ucyBtdXN0IGJlIDEuICcgK1xuICAgICAgICAgIGBHb3Qgc3RyaWRlcyAke3N0cmlkZXN9IGFuZCBkaWxhdGlvbnMgJyR7ZGlsYXRpb25zfSdgKTtcbiAgY29udl91dGlsLmNoZWNrUGFkT25EaW1Sb3VuZGluZ01vZGUoJ21heFBvb2wnLCBwYWQsIGRpbVJvdW5kaW5nTW9kZSk7XG4gIGNvbnN0IGlucHV0czogTWF4UG9vbElucHV0cyA9IHt4OiB4NER9O1xuICBjb25zdCBhdHRyczogTWF4UG9vbEF0dHJzID0ge2ZpbHRlclNpemUsIHN0cmlkZXMsIHBhZCwgZGltUm91bmRpbmdNb2RlfTtcblxuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IG5vLXVubmVjZXNzYXJ5LXR5cGUtYXNzZXJ0aW9uXG4gIGNvbnN0IHJlcyA9IEVOR0lORS5ydW5LZXJuZWwoXG4gICAgICAgICAgICAgICAgICBNYXhQb29sLCBpbnB1dHMgYXMge30gYXMgTmFtZWRUZW5zb3JNYXAsXG4gICAgICAgICAgICAgICAgICBhdHRycyBhcyB7fSBhcyBOYW1lZEF0dHJNYXApIGFzIFQ7XG5cbiAgaWYgKHJlc2hhcGVkVG80RCkge1xuICAgIHJldHVybiByZXNoYXBlKHJlcywgW3Jlcy5zaGFwZVsxXSwgcmVzLnNoYXBlWzJdLCByZXMuc2hhcGVbM11dKSBhcyBUO1xuICB9XG4gIHJldHVybiByZXM7XG59XG5cbmV4cG9ydCBjb25zdCBtYXhQb29sID0gb3Aoe21heFBvb2xffSk7XG4iXX0=","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { makeZerosTypedArray, sizeFromShape } from '../util';\nimport { complex } from './complex';\n/**\n * Creates a `tf.Tensor` with all elements set to 0.\n *\n * ```js\n * tf.zeros([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param dtype The type of an element in the resulting tensor. Can\n *     be 'float32', 'int32' or 'bool'. Defaults to 'float'.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function zeros(shape, dtype = 'float32') {\n    if (dtype === 'complex64') {\n        const real = zeros(shape, 'float32');\n        const imag = zeros(shape, 'float32');\n        return complex(real, imag);\n    }\n    const values = makeZerosTypedArray(sizeFromShape(shape), dtype);\n    return ENGINE.makeTensor(values, shape, dtype);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiemVyb3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL29wcy96ZXJvcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsTUFBTSxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBR2pDLE9BQU8sRUFBQyxtQkFBbUIsRUFBRSxhQUFhLEVBQUMsTUFBTSxTQUFTLENBQUM7QUFFM0QsT0FBTyxFQUFDLE9BQU8sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUVsQzs7Ozs7Ozs7Ozs7O0dBWUc7QUFDSCxNQUFNLFVBQVUsS0FBSyxDQUNqQixLQUFrQixFQUFFLFFBQWtCLFNBQVM7SUFDakQsSUFBSSxLQUFLLEtBQUssV0FBVyxFQUFFO1FBQ3pCLE1BQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDckMsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQztRQUNyQyxPQUFPLE9BQU8sQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7S0FDNUI7SUFDRCxNQUFNLE1BQU0sR0FBRyxtQkFBbUIsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDaEUsT0FBTyxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFjLENBQUM7QUFDOUQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE4IEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtFTkdJTkV9IGZyb20gJy4uL2VuZ2luZSc7XG5pbXBvcnQge1RlbnNvcn0gZnJvbSAnLi4vdGVuc29yJztcbmltcG9ydCB7RGF0YVR5cGUsIFJhbmssIFNoYXBlTWFwfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQge21ha2VaZXJvc1R5cGVkQXJyYXksIHNpemVGcm9tU2hhcGV9IGZyb20gJy4uL3V0aWwnO1xuXG5pbXBvcnQge2NvbXBsZXh9IGZyb20gJy4vY29tcGxleCc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGB0Zi5UZW5zb3JgIHdpdGggYWxsIGVsZW1lbnRzIHNldCB0byAwLlxuICpcbiAqIGBgYGpzXG4gKiB0Zi56ZXJvcyhbMiwgMl0pLnByaW50KCk7XG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0gc2hhcGUgQW4gYXJyYXkgb2YgaW50ZWdlcnMgZGVmaW5pbmcgdGhlIG91dHB1dCB0ZW5zb3Igc2hhcGUuXG4gKiBAcGFyYW0gZHR5cGUgVGhlIHR5cGUgb2YgYW4gZWxlbWVudCBpbiB0aGUgcmVzdWx0aW5nIHRlbnNvci4gQ2FuXG4gKiAgICAgYmUgJ2Zsb2F0MzInLCAnaW50MzInIG9yICdib29sJy4gRGVmYXVsdHMgdG8gJ2Zsb2F0Jy5cbiAqXG4gKiBAZG9jIHtoZWFkaW5nOiAnVGVuc29ycycsIHN1YmhlYWRpbmc6ICdDcmVhdGlvbid9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB6ZXJvczxSIGV4dGVuZHMgUmFuaz4oXG4gICAgc2hhcGU6IFNoYXBlTWFwW1JdLCBkdHlwZTogRGF0YVR5cGUgPSAnZmxvYXQzMicpOiBUZW5zb3I8Uj4ge1xuICBpZiAoZHR5cGUgPT09ICdjb21wbGV4NjQnKSB7XG4gICAgY29uc3QgcmVhbCA9IHplcm9zKHNoYXBlLCAnZmxvYXQzMicpO1xuICAgIGNvbnN0IGltYWcgPSB6ZXJvcyhzaGFwZSwgJ2Zsb2F0MzInKTtcbiAgICByZXR1cm4gY29tcGxleChyZWFsLCBpbWFnKTtcbiAgfVxuICBjb25zdCB2YWx1ZXMgPSBtYWtlWmVyb3NUeXBlZEFycmF5KHNpemVGcm9tU2hhcGUoc2hhcGUpLCBkdHlwZSk7XG4gIHJldHVybiBFTkdJTkUubWFrZVRlbnNvcih2YWx1ZXMsIHNoYXBlLCBkdHlwZSkgYXMgVGVuc29yPFI+O1xufVxuIl19","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { PadV2 } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Pads a `tf.Tensor` with a given value and paddings.\n *\n * This operation implements `CONSTANT` mode. For `REFLECT` and `SYMMETRIC`,\n * refer to `tf.mirrorPad`\n *\n * Also available are stricter rank-specific methods with the same signature\n * as this method that assert that `paddings` is of given length.\n *   - `tf.pad1d`\n *   - `tf.pad2d`\n *   - `tf.pad3d`\n *   - `tf.pad4d`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * x.pad([[1, 2]]).print();\n * ```\n * @param x The tensor to pad.\n * @param paddings An array of length `R` (the rank of the tensor), where\n * each element is a length-2 tuple of ints `[padBefore, padAfter]`,\n * specifying how much to pad along each dimension of the tensor.\n * @param constantValue The pad value to use. Defaults to 0.\n *\n * @doc {heading: 'Tensors', subheading: 'Transformations'}\n */\nfunction pad_(x, paddings, constantValue = 0) {\n    const $x = convertToTensor(x, 'x', 'pad');\n    if ($x.rank === 0) {\n        throw new Error('pad(scalar) is not defined. Pass non-scalar to pad');\n    }\n    const attrs = { paddings, constantValue };\n    const inputs = { x: $x };\n    return ENGINE.runKernel(PadV2, inputs, attrs);\n}\nexport const pad = op({ pad_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy9vcHMvcGFkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDakMsT0FBTyxFQUFDLEtBQUssRUFBMEIsTUFBTSxpQkFBaUIsQ0FBQztBQUkvRCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFHbkQsT0FBTyxFQUFDLEVBQUUsRUFBQyxNQUFNLGFBQWEsQ0FBQztBQUUvQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBd0JHO0FBQ0gsU0FBUyxJQUFJLENBQ1QsQ0FBZSxFQUFFLFFBQWlDLEVBQUUsYUFBYSxHQUFHLENBQUM7SUFDdkUsTUFBTSxFQUFFLEdBQUcsZUFBZSxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDMUMsSUFBSSxFQUFFLENBQUMsSUFBSSxLQUFLLENBQUMsRUFBRTtRQUNqQixNQUFNLElBQUksS0FBSyxDQUFDLG9EQUFvRCxDQUFDLENBQUM7S0FDdkU7SUFFRCxNQUFNLEtBQUssR0FBZSxFQUFDLFFBQVEsRUFBRSxhQUFhLEVBQUMsQ0FBQztJQUNwRCxNQUFNLE1BQU0sR0FBZ0IsRUFBQyxDQUFDLEVBQUUsRUFBRSxFQUFDLENBQUM7SUFDcEMsT0FBTyxNQUFNLENBQUMsU0FBUyxDQUNuQixLQUFLLEVBQUUsTUFBbUMsRUFDMUMsS0FBZ0MsQ0FBQyxDQUFDO0FBQ3hDLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxHQUFHLEdBQUcsRUFBRSxDQUFDLEVBQUMsSUFBSSxFQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtFTkdJTkV9IGZyb20gJy4uL2VuZ2luZSc7XG5pbXBvcnQge1BhZFYyLCBQYWRWMkF0dHJzLCBQYWRWMklucHV0c30gZnJvbSAnLi4va2VybmVsX25hbWVzJztcbmltcG9ydCB7TmFtZWRBdHRyTWFwfSBmcm9tICcuLi9rZXJuZWxfcmVnaXN0cnknO1xuaW1wb3J0IHtUZW5zb3J9IGZyb20gJy4uL3RlbnNvcic7XG5pbXBvcnQge05hbWVkVGVuc29yTWFwfSBmcm9tICcuLi90ZW5zb3JfdHlwZXMnO1xuaW1wb3J0IHtjb252ZXJ0VG9UZW5zb3J9IGZyb20gJy4uL3RlbnNvcl91dGlsX2Vudic7XG5pbXBvcnQge1RlbnNvckxpa2V9IGZyb20gJy4uL3R5cGVzJztcblxuaW1wb3J0IHtvcH0gZnJvbSAnLi9vcGVyYXRpb24nO1xuXG4vKipcbiAqIFBhZHMgYSBgdGYuVGVuc29yYCB3aXRoIGEgZ2l2ZW4gdmFsdWUgYW5kIHBhZGRpbmdzLlxuICpcbiAqIFRoaXMgb3BlcmF0aW9uIGltcGxlbWVudHMgYENPTlNUQU5UYCBtb2RlLiBGb3IgYFJFRkxFQ1RgIGFuZCBgU1lNTUVUUklDYCxcbiAqIHJlZmVyIHRvIGB0Zi5taXJyb3JQYWRgXG4gKlxuICogQWxzbyBhdmFpbGFibGUgYXJlIHN0cmljdGVyIHJhbmstc3BlY2lmaWMgbWV0aG9kcyB3aXRoIHRoZSBzYW1lIHNpZ25hdHVyZVxuICogYXMgdGhpcyBtZXRob2QgdGhhdCBhc3NlcnQgdGhhdCBgcGFkZGluZ3NgIGlzIG9mIGdpdmVuIGxlbmd0aC5cbiAqICAgLSBgdGYucGFkMWRgXG4gKiAgIC0gYHRmLnBhZDJkYFxuICogICAtIGB0Zi5wYWQzZGBcbiAqICAgLSBgdGYucGFkNGRgXG4gKlxuICogYGBganNcbiAqIGNvbnN0IHggPSB0Zi50ZW5zb3IxZChbMSwgMiwgMywgNF0pO1xuICogeC5wYWQoW1sxLCAyXV0pLnByaW50KCk7XG4gKiBgYGBcbiAqIEBwYXJhbSB4IFRoZSB0ZW5zb3IgdG8gcGFkLlxuICogQHBhcmFtIHBhZGRpbmdzIEFuIGFycmF5IG9mIGxlbmd0aCBgUmAgKHRoZSByYW5rIG9mIHRoZSB0ZW5zb3IpLCB3aGVyZVxuICogZWFjaCBlbGVtZW50IGlzIGEgbGVuZ3RoLTIgdHVwbGUgb2YgaW50cyBgW3BhZEJlZm9yZSwgcGFkQWZ0ZXJdYCxcbiAqIHNwZWNpZnlpbmcgaG93IG11Y2ggdG8gcGFkIGFsb25nIGVhY2ggZGltZW5zaW9uIG9mIHRoZSB0ZW5zb3IuXG4gKiBAcGFyYW0gY29uc3RhbnRWYWx1ZSBUaGUgcGFkIHZhbHVlIHRvIHVzZS4gRGVmYXVsdHMgdG8gMC5cbiAqXG4gKiBAZG9jIHtoZWFkaW5nOiAnVGVuc29ycycsIHN1YmhlYWRpbmc6ICdUcmFuc2Zvcm1hdGlvbnMnfVxuICovXG5mdW5jdGlvbiBwYWRfPFQgZXh0ZW5kcyBUZW5zb3I+KFxuICAgIHg6IFR8VGVuc29yTGlrZSwgcGFkZGluZ3M6IEFycmF5PFtudW1iZXIsIG51bWJlcl0+LCBjb25zdGFudFZhbHVlID0gMCk6IFQge1xuICBjb25zdCAkeCA9IGNvbnZlcnRUb1RlbnNvcih4LCAneCcsICdwYWQnKTtcbiAgaWYgKCR4LnJhbmsgPT09IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3BhZChzY2FsYXIpIGlzIG5vdCBkZWZpbmVkLiBQYXNzIG5vbi1zY2FsYXIgdG8gcGFkJyk7XG4gIH1cblxuICBjb25zdCBhdHRyczogUGFkVjJBdHRycyA9IHtwYWRkaW5ncywgY29uc3RhbnRWYWx1ZX07XG4gIGNvbnN0IGlucHV0czogUGFkVjJJbnB1dHMgPSB7eDogJHh9O1xuICByZXR1cm4gRU5HSU5FLnJ1bktlcm5lbChcbiAgICAgIFBhZFYyLCBpbnB1dHMgYXMgdW5rbm93biBhcyBOYW1lZFRlbnNvck1hcCxcbiAgICAgIGF0dHJzIGFzIHVua25vd24gYXMgTmFtZWRBdHRyTWFwKTtcbn1cblxuZXhwb3J0IGNvbnN0IHBhZCA9IG9wKHtwYWRffSk7XG4iXX0=","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Range } from '../kernel_names';\n/**\n * Creates a new `tf.Tensor1D` filled with the numbers in the range provided.\n *\n * The tensor is a is half-open interval meaning it includes start, but\n * excludes stop. Decrementing ranges and negative step values are also\n * supported.sv\n *\n *\n * ```js\n * tf.range(0, 9, 2).print();\n * ```\n *\n * @param start An integer start value\n * @param stop An integer stop value\n * @param step An integer increment (will default to 1 or -1)\n * @param dtype The data type of the output tensor. Defaults to 'float32'.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function range(start, stop, step = 1, dtype = 'float32') {\n    if (step === 0) {\n        throw new Error('Cannot have a step of zero');\n    }\n    const attrs = { start, stop, step, dtype };\n    return ENGINE.runKernel(Range, {} /* inputs */, attrs);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFuZ2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL29wcy9yYW5nZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsTUFBTSxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBQ2pDLE9BQU8sRUFBQyxLQUFLLEVBQWEsTUFBTSxpQkFBaUIsQ0FBQztBQUlsRDs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBa0JHO0FBQ0gsTUFBTSxVQUFVLEtBQUssQ0FDakIsS0FBYSxFQUFFLElBQVksRUFBRSxJQUFJLEdBQUcsQ0FBQyxFQUNyQyxRQUEyQixTQUFTO0lBQ3RDLElBQUksSUFBSSxLQUFLLENBQUMsRUFBRTtRQUNkLE1BQU0sSUFBSSxLQUFLLENBQUMsNEJBQTRCLENBQUMsQ0FBQztLQUMvQztJQUVELE1BQU0sS0FBSyxHQUFlLEVBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFDLENBQUM7SUFFckQsT0FBTyxNQUFNLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsWUFBWSxFQUFFLEtBQTJCLENBQUMsQ0FBQztBQUMvRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTggR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0VOR0lORX0gZnJvbSAnLi4vZW5naW5lJztcbmltcG9ydCB7UmFuZ2UsIFJhbmdlQXR0cnN9IGZyb20gJy4uL2tlcm5lbF9uYW1lcyc7XG5pbXBvcnQge05hbWVkQXR0ck1hcH0gZnJvbSAnLi4va2VybmVsX3JlZ2lzdHJ5JztcbmltcG9ydCB7VGVuc29yMUR9IGZyb20gJy4uL3RlbnNvcic7XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBgdGYuVGVuc29yMURgIGZpbGxlZCB3aXRoIHRoZSBudW1iZXJzIGluIHRoZSByYW5nZSBwcm92aWRlZC5cbiAqXG4gKiBUaGUgdGVuc29yIGlzIGEgaXMgaGFsZi1vcGVuIGludGVydmFsIG1lYW5pbmcgaXQgaW5jbHVkZXMgc3RhcnQsIGJ1dFxuICogZXhjbHVkZXMgc3RvcC4gRGVjcmVtZW50aW5nIHJhbmdlcyBhbmQgbmVnYXRpdmUgc3RlcCB2YWx1ZXMgYXJlIGFsc29cbiAqIHN1cHBvcnRlZC5zdlxuICpcbiAqXG4gKiBgYGBqc1xuICogdGYucmFuZ2UoMCwgOSwgMikucHJpbnQoKTtcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBzdGFydCBBbiBpbnRlZ2VyIHN0YXJ0IHZhbHVlXG4gKiBAcGFyYW0gc3RvcCBBbiBpbnRlZ2VyIHN0b3AgdmFsdWVcbiAqIEBwYXJhbSBzdGVwIEFuIGludGVnZXIgaW5jcmVtZW50ICh3aWxsIGRlZmF1bHQgdG8gMSBvciAtMSlcbiAqIEBwYXJhbSBkdHlwZSBUaGUgZGF0YSB0eXBlIG9mIHRoZSBvdXRwdXQgdGVuc29yLiBEZWZhdWx0cyB0byAnZmxvYXQzMicuXG4gKlxuICogQGRvYyB7aGVhZGluZzogJ1RlbnNvcnMnLCBzdWJoZWFkaW5nOiAnQ3JlYXRpb24nfVxuICovXG5leHBvcnQgZnVuY3Rpb24gcmFuZ2UoXG4gICAgc3RhcnQ6IG51bWJlciwgc3RvcDogbnVtYmVyLCBzdGVwID0gMSxcbiAgICBkdHlwZTogJ2Zsb2F0MzInfCdpbnQzMicgPSAnZmxvYXQzMicpOiBUZW5zb3IxRCB7XG4gIGlmIChzdGVwID09PSAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgaGF2ZSBhIHN0ZXAgb2YgemVybycpO1xuICB9XG5cbiAgY29uc3QgYXR0cnM6IFJhbmdlQXR0cnMgPSB7c3RhcnQsIHN0b3AsIHN0ZXAsIGR0eXBlfTtcblxuICByZXR1cm4gRU5HSU5FLnJ1bktlcm5lbChSYW5nZSwge30gLyogaW5wdXRzICovLCBhdHRycyBhcyB7fSBhcyBOYW1lZEF0dHJNYXApO1xufVxuIl19","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Relu } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes rectified linear element-wise: `max(x, 0)`.\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.relu().print();  // or tf.relu(x)\n * ```\n * @param x The input tensor. If the dtype is `bool`, the output dtype will be\n *     `int32'.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction relu_(x) {\n    const $x = convertToTensor(x, 'x', 'relu');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Relu, inputs);\n}\nexport const relu = op({ relu_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVsdS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29yZS9zcmMvb3BzL3JlbHUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUNqQyxPQUFPLEVBQUMsSUFBSSxFQUFhLE1BQU0saUJBQWlCLENBQUM7QUFHakQsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBR25ELE9BQU8sRUFBQyxFQUFFLEVBQUMsTUFBTSxhQUFhLENBQUM7QUFFL0I7Ozs7Ozs7Ozs7OztHQVlHO0FBQ0gsU0FBUyxLQUFLLENBQW1CLENBQWU7SUFDOUMsTUFBTSxFQUFFLEdBQUcsZUFBZSxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFFM0MsTUFBTSxNQUFNLEdBQWUsRUFBQyxDQUFDLEVBQUUsRUFBRSxFQUFDLENBQUM7SUFFbkMsT0FBTyxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxNQUE4QixDQUFDLENBQUM7QUFDaEUsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLElBQUksR0FBRyxFQUFFLENBQUMsRUFBQyxLQUFLLEVBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0VOR0lORX0gZnJvbSAnLi4vZW5naW5lJztcbmltcG9ydCB7UmVsdSwgUmVsdUlucHV0c30gZnJvbSAnLi4va2VybmVsX25hbWVzJztcbmltcG9ydCB7VGVuc29yfSBmcm9tICcuLi90ZW5zb3InO1xuaW1wb3J0IHtOYW1lZFRlbnNvck1hcH0gZnJvbSAnLi4vdGVuc29yX3R5cGVzJztcbmltcG9ydCB7Y29udmVydFRvVGVuc29yfSBmcm9tICcuLi90ZW5zb3JfdXRpbF9lbnYnO1xuaW1wb3J0IHtUZW5zb3JMaWtlfSBmcm9tICcuLi90eXBlcyc7XG5cbmltcG9ydCB7b3B9IGZyb20gJy4vb3BlcmF0aW9uJztcblxuLyoqXG4gKiBDb21wdXRlcyByZWN0aWZpZWQgbGluZWFyIGVsZW1lbnQtd2lzZTogYG1heCh4LCAwKWAuXG4gKlxuICogYGBganNcbiAqIGNvbnN0IHggPSB0Zi50ZW5zb3IxZChbLTEsIDIsIC0zLCA0XSk7XG4gKlxuICogeC5yZWx1KCkucHJpbnQoKTsgIC8vIG9yIHRmLnJlbHUoeClcbiAqIGBgYFxuICogQHBhcmFtIHggVGhlIGlucHV0IHRlbnNvci4gSWYgdGhlIGR0eXBlIGlzIGBib29sYCwgdGhlIG91dHB1dCBkdHlwZSB3aWxsIGJlXG4gKiAgICAgYGludDMyJy5cbiAqXG4gKiBAZG9jIHtoZWFkaW5nOiAnT3BlcmF0aW9ucycsIHN1YmhlYWRpbmc6ICdCYXNpYyBtYXRoJ31cbiAqL1xuZnVuY3Rpb24gcmVsdV88VCBleHRlbmRzIFRlbnNvcj4oeDogVHxUZW5zb3JMaWtlKTogVCB7XG4gIGNvbnN0ICR4ID0gY29udmVydFRvVGVuc29yKHgsICd4JywgJ3JlbHUnKTtcblxuICBjb25zdCBpbnB1dHM6IFJlbHVJbnB1dHMgPSB7eDogJHh9O1xuXG4gIHJldHVybiBFTkdJTkUucnVuS2VybmVsKFJlbHUsIGlucHV0cyBhcyB7fSBhcyBOYW1lZFRlbnNvck1hcCk7XG59XG5cbmV4cG9ydCBjb25zdCByZWx1ID0gb3Aoe3JlbHVffSk7XG4iXX0=","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Round } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes round of input `tf.Tensor` element-wise: `round(x)`.\n * It implements banker's rounding.\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3]);\n *\n * x.round().print();  // or tf.round(x)\n * ```\n * @param x The input tensor.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction round_(x) {\n    const $x = convertToTensor(x, 'x', 'round');\n    const inputs = { x: $x };\n    return ENGINE.runKernel(Round, inputs);\n}\nexport const round = op({ round_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91bmQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL29wcy9yb3VuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsTUFBTSxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBQ2pDLE9BQU8sRUFBQyxLQUFLLEVBQWMsTUFBTSxpQkFBaUIsQ0FBQztBQUduRCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFHbkQsT0FBTyxFQUFDLEVBQUUsRUFBQyxNQUFNLGFBQWEsQ0FBQztBQUUvQjs7Ozs7Ozs7Ozs7O0dBWUc7QUFDSCxTQUFTLE1BQU0sQ0FBbUIsQ0FBZTtJQUMvQyxNQUFNLEVBQUUsR0FBRyxlQUFlLENBQUMsQ0FBQyxFQUFFLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUM1QyxNQUFNLE1BQU0sR0FBZ0IsRUFBQyxDQUFDLEVBQUUsRUFBRSxFQUFDLENBQUM7SUFFcEMsT0FBTyxNQUFNLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxNQUE4QixDQUFDLENBQUM7QUFDakUsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBRyxFQUFFLENBQUMsRUFBQyxNQUFNLEVBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTggR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0VOR0lORX0gZnJvbSAnLi4vZW5naW5lJztcbmltcG9ydCB7Um91bmQsIFJvdW5kSW5wdXRzfSBmcm9tICcuLi9rZXJuZWxfbmFtZXMnO1xuaW1wb3J0IHtUZW5zb3J9IGZyb20gJy4uL3RlbnNvcic7XG5pbXBvcnQge05hbWVkVGVuc29yTWFwfSBmcm9tICcuLi90ZW5zb3JfdHlwZXMnO1xuaW1wb3J0IHtjb252ZXJ0VG9UZW5zb3J9IGZyb20gJy4uL3RlbnNvcl91dGlsX2Vudic7XG5pbXBvcnQge1RlbnNvckxpa2V9IGZyb20gJy4uL3R5cGVzJztcblxuaW1wb3J0IHtvcH0gZnJvbSAnLi9vcGVyYXRpb24nO1xuXG4vKipcbiAqIENvbXB1dGVzIHJvdW5kIG9mIGlucHV0IGB0Zi5UZW5zb3JgIGVsZW1lbnQtd2lzZTogYHJvdW5kKHgpYC5cbiAqIEl0IGltcGxlbWVudHMgYmFua2VyJ3Mgcm91bmRpbmcuXG4gKlxuICogYGBganNcbiAqIGNvbnN0IHggPSB0Zi50ZW5zb3IxZChbLjYsIDEuMSwgLTMuM10pO1xuICpcbiAqIHgucm91bmQoKS5wcmludCgpOyAgLy8gb3IgdGYucm91bmQoeClcbiAqIGBgYFxuICogQHBhcmFtIHggVGhlIGlucHV0IHRlbnNvci5cbiAqXG4gKiBAZG9jIHtoZWFkaW5nOiAnT3BlcmF0aW9ucycsIHN1YmhlYWRpbmc6ICdCYXNpYyBtYXRoJ31cbiAqL1xuZnVuY3Rpb24gcm91bmRfPFQgZXh0ZW5kcyBUZW5zb3I+KHg6IFR8VGVuc29yTGlrZSk6IFQge1xuICBjb25zdCAkeCA9IGNvbnZlcnRUb1RlbnNvcih4LCAneCcsICdyb3VuZCcpO1xuICBjb25zdCBpbnB1dHM6IFJvdW5kSW5wdXRzID0ge3g6ICR4fTtcblxuICByZXR1cm4gRU5HSU5FLnJ1bktlcm5lbChSb3VuZCwgaW5wdXRzIGFzIHt9IGFzIE5hbWVkVGVuc29yTWFwKTtcbn1cblxuZXhwb3J0IGNvbnN0IHJvdW5kID0gb3Aoe3JvdW5kX30pO1xuIl19","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { isTypedArray } from '../util';\nimport { makeTensor } from './tensor_ops_util';\n/**\n * Creates rank-0 `tf.Tensor` (scalar) with the provided value and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.scalar` as it makes the code more readable.\n *\n * ```js\n * tf.scalar(3.14).print();\n * ```\n *\n * @param value The value of the scalar.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function scalar(value, dtype) {\n    if (((isTypedArray(value) && dtype !== 'string') || Array.isArray(value)) &&\n        dtype !== 'complex64') {\n        throw new Error('Error creating a new Scalar: value must be a primitive ' +\n            '(number|boolean|string)');\n    }\n    if (dtype === 'string' && isTypedArray(value) &&\n        !(value instanceof Uint8Array)) {\n        throw new Error('When making a scalar from encoded string, ' +\n            'the value must be `Uint8Array`.');\n    }\n    const shape = [];\n    const inferredShape = [];\n    return makeTensor(value, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NhbGFyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy9vcHMvc2NhbGFyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUlILE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxTQUFTLENBQUM7QUFDckMsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLG1CQUFtQixDQUFDO0FBRTdDOzs7Ozs7Ozs7Ozs7OztHQWNHO0FBQ0gsTUFBTSxVQUFVLE1BQU0sQ0FDbEIsS0FBdUMsRUFBRSxLQUFnQjtJQUMzRCxJQUFJLENBQUMsQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLElBQUksS0FBSyxLQUFLLFFBQVEsQ0FBQyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDckUsS0FBSyxLQUFLLFdBQVcsRUFBRTtRQUN6QixNQUFNLElBQUksS0FBSyxDQUNYLHlEQUF5RDtZQUN6RCx5QkFBeUIsQ0FBQyxDQUFDO0tBQ2hDO0lBQ0QsSUFBSSxLQUFLLEtBQUssUUFBUSxJQUFJLFlBQVksQ0FBQyxLQUFLLENBQUM7UUFDekMsQ0FBQyxDQUFDLEtBQUssWUFBWSxVQUFVLENBQUMsRUFBRTtRQUNsQyxNQUFNLElBQUksS0FBSyxDQUNYLDRDQUE0QztZQUM1QyxpQ0FBaUMsQ0FBQyxDQUFDO0tBQ3hDO0lBQ0QsTUFBTSxLQUFLLEdBQWEsRUFBRSxDQUFDO0lBQzNCLE1BQU0sYUFBYSxHQUFhLEVBQUUsQ0FBQztJQUNuQyxPQUFPLFVBQVUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLGFBQWEsRUFBRSxLQUFLLENBQVcsQ0FBQztBQUNsRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTggR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge1NjYWxhcn0gZnJvbSAnLi4vdGVuc29yJztcbmltcG9ydCB7RGF0YVR5cGV9IGZyb20gJy4uL3R5cGVzJztcbmltcG9ydCB7aXNUeXBlZEFycmF5fSBmcm9tICcuLi91dGlsJztcbmltcG9ydCB7bWFrZVRlbnNvcn0gZnJvbSAnLi90ZW5zb3Jfb3BzX3V0aWwnO1xuXG4vKipcbiAqIENyZWF0ZXMgcmFuay0wIGB0Zi5UZW5zb3JgIChzY2FsYXIpIHdpdGggdGhlIHByb3ZpZGVkIHZhbHVlIGFuZCBkdHlwZS5cbiAqXG4gKiBUaGUgc2FtZSBmdW5jdGlvbmFsaXR5IGNhbiBiZSBhY2hpZXZlZCB3aXRoIGB0Zi50ZW5zb3JgLCBidXQgaW4gZ2VuZXJhbFxuICogd2UgcmVjb21tZW5kIHVzaW5nIGB0Zi5zY2FsYXJgIGFzIGl0IG1ha2VzIHRoZSBjb2RlIG1vcmUgcmVhZGFibGUuXG4gKlxuICogYGBganNcbiAqIHRmLnNjYWxhcigzLjE0KS5wcmludCgpO1xuICogYGBgXG4gKlxuICogQHBhcmFtIHZhbHVlIFRoZSB2YWx1ZSBvZiB0aGUgc2NhbGFyLlxuICogQHBhcmFtIGR0eXBlIFRoZSBkYXRhIHR5cGUuXG4gKlxuICogQGRvYyB7aGVhZGluZzogJ1RlbnNvcnMnLCBzdWJoZWFkaW5nOiAnQ3JlYXRpb24nfVxuICovXG5leHBvcnQgZnVuY3Rpb24gc2NhbGFyKFxuICAgIHZhbHVlOiBudW1iZXJ8Ym9vbGVhbnxzdHJpbmd8VWludDhBcnJheSwgZHR5cGU/OiBEYXRhVHlwZSk6IFNjYWxhciB7XG4gIGlmICgoKGlzVHlwZWRBcnJheSh2YWx1ZSkgJiYgZHR5cGUgIT09ICdzdHJpbmcnKSB8fCBBcnJheS5pc0FycmF5KHZhbHVlKSkgJiZcbiAgICAgIGR0eXBlICE9PSAnY29tcGxleDY0Jykge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ0Vycm9yIGNyZWF0aW5nIGEgbmV3IFNjYWxhcjogdmFsdWUgbXVzdCBiZSBhIHByaW1pdGl2ZSAnICtcbiAgICAgICAgJyhudW1iZXJ8Ym9vbGVhbnxzdHJpbmcpJyk7XG4gIH1cbiAgaWYgKGR0eXBlID09PSAnc3RyaW5nJyAmJiBpc1R5cGVkQXJyYXkodmFsdWUpICYmXG4gICAgICAhKHZhbHVlIGluc3RhbmNlb2YgVWludDhBcnJheSkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdXaGVuIG1ha2luZyBhIHNjYWxhciBmcm9tIGVuY29kZWQgc3RyaW5nLCAnICtcbiAgICAgICAgJ3RoZSB2YWx1ZSBtdXN0IGJlIGBVaW50OEFycmF5YC4nKTtcbiAgfVxuICBjb25zdCBzaGFwZTogbnVtYmVyW10gPSBbXTtcbiAgY29uc3QgaW5mZXJyZWRTaGFwZTogbnVtYmVyW10gPSBbXTtcbiAgcmV0dXJuIG1ha2VUZW5zb3IodmFsdWUsIHNoYXBlLCBpbmZlcnJlZFNoYXBlLCBkdHlwZSkgYXMgU2NhbGFyO1xufVxuIl19","import { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { conv2d } from './conv2d';\nimport { depthwiseConv2d } from './depthwise_conv2d';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * 2-D convolution with separable filters.\n *\n * Performs a depthwise convolution that acts separately on channels followed\n * by a pointwise convolution that mixes channels. Note that this is\n * separability between dimensions [1, 2] and 3, not spatial separability\n * between dimensions 1 and 2.\n *\n * See\n * [https://www.tensorflow.org/api_docs/python/tf/nn/separable_conv2d](\n *     https://www.tensorflow.org/api_docs/python/tf/nn/separable_conv2d)\n * for more details.\n *\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param depthwiseFilter The depthwise filter tensor, rank 4, of shape\n *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`. This is\n *     the filter used in the first step.\n * @param pointwiseFilter The pointwise filter tensor, rank 4, of shape\n *     `[1, 1, inChannels * channelMultiplier, outChannels]`. This is\n *     the filter used in the second step.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`. If strides is a single number, then `strideHeight ==\n * strideWidth`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](\n *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n *\n * @doc {heading: 'Operations', subheading: 'Convolution'}\n */\nfunction separableConv2d_(x, depthwiseFilter, pointwiseFilter, strides, pad, dilation = [1, 1], dataFormat = 'NHWC') {\n    const $x = convertToTensor(x, 'x', 'separableConv2d');\n    const $depthwiseFilter = convertToTensor(depthwiseFilter, 'depthwiseFilter', 'separableConv2d');\n    const $pointwiseFilter = convertToTensor(pointwiseFilter, 'pointwiseFilter', 'separableConv2d');\n    let x4D = $x;\n    let reshapedTo4D = false;\n    if ($x.rank === 3) {\n        reshapedTo4D = true;\n        x4D = reshape($x, [1, $x.shape[0], $x.shape[1], $x.shape[2]]);\n    }\n    if (dataFormat === 'NCHW') {\n        throw new Error('separableConv2d currently does not support dataFormat NCHW; only ' +\n            'NHWC is supported');\n    }\n    util.assert(x4D.rank === 4, () => `Error in separableConv2d: input must be rank 4, but got ` +\n        `rank ${x4D.rank}.`);\n    util.assert($depthwiseFilter.rank === 4, () => `Error in separableConv2d: depthwise filter must be rank 4, but ` +\n        `got rank ${$depthwiseFilter.rank}.`);\n    util.assert($pointwiseFilter.rank === 4, () => `Error in separableConv2d: pointwise filter must be rank 4, but ` +\n        `got rank ${$depthwiseFilter.rank}.`);\n    util.assert($pointwiseFilter.shape[0] === 1, () => `Error in separableConv2d: the first dimension of pointwise filter ` +\n        ` must be 1, but got ${$pointwiseFilter.shape[0]}.`);\n    util.assert($pointwiseFilter.shape[1] === 1, () => `Error in separableConv2d: the second dimension of pointwise ` +\n        `filter must be 1, but got ${$pointwiseFilter.shape[1]}.`);\n    const inChannels = $depthwiseFilter.shape[2];\n    const channelMultiplier = $depthwiseFilter.shape[3];\n    util.assert($pointwiseFilter.shape[2] === inChannels * channelMultiplier, () => `Error in separableConv2d: the third dimension of pointwise filter ` +\n        `must be ${inChannels * channelMultiplier}, ` +\n        `but got ${$pointwiseFilter.shape[2]}.`);\n    const depthwise = depthwiseConv2d(x4D, $depthwiseFilter, strides, pad, dataFormat, dilation);\n    const pointwiseStride = 1;\n    const res = conv2d(depthwise, $pointwiseFilter, pointwiseStride, 'valid', dataFormat);\n    if (reshapedTo4D) {\n        return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nexport const separableConv2d = op({ separableConv2d_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VwYXJhYmxlX2NvbnYyZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29yZS9zcmMvb3BzL3NlcGFyYWJsZV9jb252MmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUJBLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUVuRCxPQUFPLEtBQUssSUFBSSxNQUFNLFNBQVMsQ0FBQztBQUVoQyxPQUFPLEVBQUMsTUFBTSxFQUFDLE1BQU0sVUFBVSxDQUFDO0FBQ2hDLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUNuRCxPQUFPLEVBQUMsRUFBRSxFQUFDLE1BQU0sYUFBYSxDQUFDO0FBQy9CLE9BQU8sRUFBQyxPQUFPLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFFbEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBNENHO0FBQ0gsU0FBUyxnQkFBZ0IsQ0FDckIsQ0FBZSxFQUFFLGVBQW9DLEVBQ3JELGVBQW9DLEVBQUUsT0FBZ0MsRUFDdEUsR0FBbUIsRUFBRSxXQUFvQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFDL0QsYUFBNEIsTUFBTTtJQUNwQyxNQUFNLEVBQUUsR0FBRyxlQUFlLENBQUMsQ0FBQyxFQUFFLEdBQUcsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO0lBQ3RELE1BQU0sZ0JBQWdCLEdBQ2xCLGVBQWUsQ0FBQyxlQUFlLEVBQUUsaUJBQWlCLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztJQUMzRSxNQUFNLGdCQUFnQixHQUNsQixlQUFlLENBQUMsZUFBZSxFQUFFLGlCQUFpQixFQUFFLGlCQUFpQixDQUFDLENBQUM7SUFFM0UsSUFBSSxHQUFHLEdBQUcsRUFBYyxDQUFDO0lBQ3pCLElBQUksWUFBWSxHQUFHLEtBQUssQ0FBQztJQUN6QixJQUFJLEVBQUUsQ0FBQyxJQUFJLEtBQUssQ0FBQyxFQUFFO1FBQ2pC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KiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuaW1wb3J0IHtUZW5zb3IzRCwgVGVuc29yNER9IGZyb20gJy4uL3RlbnNvcic7XG5pbXBvcnQge2NvbnZlcnRUb1RlbnNvcn0gZnJvbSAnLi4vdGVuc29yX3V0aWxfZW52JztcbmltcG9ydCB7VGVuc29yTGlrZX0gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0ICogYXMgdXRpbCBmcm9tICcuLi91dGlsJztcblxuaW1wb3J0IHtjb252MmR9IGZyb20gJy4vY29udjJkJztcbmltcG9ydCB7ZGVwdGh3aXNlQ29udjJkfSBmcm9tICcuL2RlcHRod2lzZV9jb252MmQnO1xuaW1wb3J0IHtvcH0gZnJvbSAnLi9vcGVyYXRpb24nO1xuaW1wb3J0IHtyZXNoYXBlfSBmcm9tICcuL3Jlc2hhcGUnO1xuXG4vKipcbiAqIDItRCBjb252b2x1dGlvbiB3aXRoIHNlcGFyYWJsZSBmaWx0ZXJzLlxuICpcbiAqIFBlcmZvcm1zIGEgZGVwdGh3aXNlIGNvbnZvbHV0aW9uIHRoYXQgYWN0cyBzZXBhcmF0ZWx5IG9uIGNoYW5uZWxzIGZvbGxvd2VkXG4gKiBieSBhIHBvaW50d2lzZSBjb252b2x1dGlvbiB0aGF0IG1peGVzIGNoYW5uZWxzLiBOb3RlIHRoYXQgdGhpcyBpc1xuICogc2VwYXJhYmlsaXR5IGJldHdlZW4gZGltZW5zaW9ucyBbMSwgMl0gYW5kIDMsIG5vdCBzcGF0aWFsIHNlcGFyYWJpbGl0eVxuICogYmV0d2VlbiBkaW1lbnNpb25zIDEgYW5kIDIuXG4gKlxuICogU2VlXG4gKiBbaHR0cHM6Ly93d3cudGVuc29yZmxvdy5vcmcvYXBpX2RvY3MvcHl0aG9uL3RmL25uL3NlcGFyYWJsZV9jb252MmRdKFxuICogICAgIGh0dHBzOi8vd3d3LnRlbnNvcmZsb3cub3JnL2FwaV9kb2NzL3B5dGhvbi90Zi9ubi9zZXBhcmFibGVfY29udjJkKVxuICogZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBAcGFyYW0geCBUaGUgaW5wdXQgdGVuc29yLCBvZiByYW5rIDQgb3IgcmFuayAzLCBvZiBzaGFwZVxuICogICAgIGBbYmF0Y2gsIGhlaWdodCwgd2lkdGgsIGluQ2hhbm5lbHNdYC4gSWYgcmFuayAzLCBiYXRjaCBvZiAxIGlzXG4gKiBhc3N1bWVkLlxuICogQHBhcmFtIGRlcHRod2lzZUZpbHRlciBUaGUgZGVwdGh3aXNlIGZpbHRlciB0ZW5zb3IsIHJhbmsgNCwgb2Ygc2hhcGVcbiAqICAgICBgW2ZpbHRlckhlaWdodCwgZmlsdGVyV2lkdGgsIGluQ2hhbm5lbHMsIGNoYW5uZWxNdWx0aXBsaWVyXWAuIFRoaXMgaXNcbiAqICAgICB0aGUgZmlsdGVyIHVzZWQgaW4gdGhlIGZpcnN0IHN0ZXAuXG4gKiBAcGFyYW0gcG9pbnR3aXNlRmlsdGVyIFRoZSBwb2ludHdpc2UgZmlsdGVyIHRlbnNvciwgcmFuayA0LCBvZiBzaGFwZVxuICogICAgIGBbMSwgMSwgaW5DaGFubmVscyAqIGNoYW5uZWxNdWx0aXBsaWVyLCBvdXRDaGFubmVsc11gLiBUaGlzIGlzXG4gKiAgICAgdGhlIGZpbHRlciB1c2VkIGluIHRoZSBzZWNvbmQgc3RlcC5cbiAqIEBwYXJhbSBzdHJpZGVzIFRoZSBzdHJpZGVzIG9mIHRoZSBjb252b2x1dGlvbjogYFtzdHJpZGVIZWlnaHQsXG4gKiBzdHJpZGVXaWR0aF1gLiBJZiBzdHJpZGVzIGlzIGEgc2luZ2xlIG51bWJlciwgdGhlbiBgc3RyaWRlSGVpZ2h0ID09XG4gKiBzdHJpZGVXaWR0aGAuXG4gKiBAcGFyYW0gcGFkIFRoZSB0eXBlIG9mIHBhZGRpbmcgYWxnb3JpdGhtLlxuICogICAtIGBzYW1lYCBhbmQgc3RyaWRlIDE6IG91dHB1dCB3aWxsIGJlIG9mIHNhbWUgc2l6ZSBhcyBpbnB1dCxcbiAqICAgICAgIHJlZ2FyZGxlc3Mgb2YgZmlsdGVyIHNpemUuXG4gKiAgIC0gYHZhbGlkYDogb3V0cHV0IHdpbGwgYmUgc21hbGxlciB0aGFuIGlucHV0IGlmIGZpbHRlciBpcyBsYXJnZXJcbiAqICAgICAgIHRoYW4gMXgxLlxuICogICAtIEZvciBtb3JlIGluZm8sIHNlZSB0aGlzIGd1aWRlOlxuICogICAgIFtodHRwczovL3d3dy50ZW5zb3JmbG93Lm9yZy9hcGlfZG9jcy9weXRob24vdGYvbm4vY29udm9sdXRpb25dKFxuICogICAgICAgICAgaHR0cHM6Ly93d3cudGVuc29yZmxvdy5vcmcvYXBpX2RvY3MvcHl0aG9uL3RmL25uL2NvbnZvbHV0aW9uKVxuICogQHBhcmFtIGRpbGF0aW9ucyBUaGUgZGlsYXRpb24gcmF0ZXM6IGBbZGlsYXRpb25IZWlnaHQsIGRpbGF0aW9uV2lkdGhdYFxuICogICAgIGluIHdoaWNoIHdlIHNhbXBsZSBpbnB1dCB2YWx1ZXMgYWNyb3NzIHRoZSBoZWlnaHQgYW5kIHdpZHRoIGRpbWVuc2lvbnNcbiAqICAgICBpbiBhdHJvdXMgY29udm9sdXRpb24uIERlZmF1bHRzIHRvIGBbMSwgMV1gLiBJZiBgcmF0ZWAgaXMgYSBzaW5nbGVcbiAqICAgICBudW1iZXIsIHRoZW4gYGRpbGF0aW9uSGVpZ2h0ID09IGRpbGF0aW9uV2lkdGhgLiBJZiBpdCBpcyBncmVhdGVyIHRoYW5cbiAqICAgICAxLCB0aGVuIGFsbCB2YWx1ZXMgb2YgYHN0cmlkZXNgIG11c3QgYmUgMS5cbiAqIEBwYXJhbSBkYXRhRm9ybWF0OiBBbiBvcHRpb25hbCBzdHJpbmcgZnJvbTogXCJOSFdDXCIsIFwiTkNIV1wiLiBEZWZhdWx0cyB0b1xuICogICAgIFwiTkhXQ1wiLiBTcGVjaWZ5IHRoZSBkYXRhIGZvcm1hdCBvZiB0aGUgaW5wdXQgYW5kIG91dHB1dCBkYXRhLiBXaXRoIHRoZVxuICogICAgIGRlZmF1bHQgZm9ybWF0IFwiTkhXQ1wiLCB0aGUgZGF0YSBpcyBzdG9yZWQgaW4gdGhlIG9yZGVyIG9mOiBbYmF0Y2gsXG4gKiAgICAgaGVpZ2h0LCB3aWR0aCwgY2hhbm5lbHNdLiBPbmx5IFwiTkhXQ1wiIGlzIGN1cnJlbnRseSBzdXBwb3J0ZWQuXG4gKlxuICogQGRvYyB7aGVhZGluZzogJ09wZXJhdGlvbnMnLCBzdWJoZWFkaW5nOiAnQ29udm9sdXRpb24nfVxuICovXG5mdW5jdGlvbiBzZXBhcmFibGVDb252MmRfPFQgZXh0ZW5kcyBUZW5zb3IzRHxUZW5zb3I0RD4oXG4gICAgeDogVHxUZW5zb3JMaWtlLCBkZXB0aHdpc2VGaWx0ZXI6IFRlbnNvcjREfFRlbnNvckxpa2UsXG4gICAgcG9pbnR3aXNlRmlsdGVyOiBUZW5zb3I0RHxUZW5zb3JMaWtlLCBzdHJpZGVzOiBbbnVtYmVyLCBudW1iZXJdfG51bWJlcixcbiAgICBwYWQ6ICd2YWxpZCd8J3NhbWUnLCBkaWxhdGlvbjogW251bWJlciwgbnVtYmVyXXxudW1iZXIgPSBbMSwgMV0sXG4gICAgZGF0YUZvcm1hdDogJ05IV0MnfCdOQ0hXJyA9ICdOSFdDJyk6IFQge1xuICBjb25zdCAkeCA9IGNvbnZlcnRUb1RlbnNvcih4LCAneCcsICdzZXBhcmFibGVDb252MmQnKTtcbiAgY29uc3QgJGRlcHRod2lzZUZpbHRlciA9XG4gICAgICBjb252ZXJ0VG9UZW5zb3IoZGVwdGh3aXNlRmlsdGVyLCAnZGVwdGh3aXNlRmlsdGVyJywgJ3NlcGFyYWJsZUNvbnYyZCcpO1xuICBjb25zdCAkcG9pbnR3aXNlRmlsdGVyID1cbiAgICAgIGNvbnZlcnRUb1RlbnNvcihwb2ludHdpc2VGaWx0ZXIsICdwb2ludHdpc2VGaWx0ZXInLCAnc2VwYXJhYmxlQ29udjJkJyk7XG5cbiAgbGV0IHg0RCA9ICR4IGFzIFRlbnNvcjREO1xuICBsZXQgcmVzaGFwZWRUbzREID0gZmFsc2U7XG4gIGlmICgkeC5yYW5rID09PSAzKSB7XG4gICAgcmVzaGFwZWRUbzREID0gdHJ1ZTtcbiAgICB4NEQgPSByZXNoYXBlKCR4LCBbMSwgJHguc2hhcGVbMF0sICR4LnNoYXBlWzFdLCAkeC5zaGFwZVsyXV0pO1xuICB9XG5cbiAgaWYgKGRhdGFGb3JtYXQgPT09ICdOQ0hXJykge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ3NlcGFyYWJsZUNvbnYyZCBjdXJyZW50bHkgZG9lcyBub3Qgc3VwcG9ydCBkYXRhRm9ybWF0IE5DSFc7IG9ubHkgJyArXG4gICAgICAgICdOSFdDIGlzIHN1cHBvcnRlZCcpO1xuICB9XG5cbiAgdXRpbC5hc3NlcnQoXG4gICAgICB4NEQucmFuayA9PT0gNCxcbiAgICAgICgpID0+IGBFcnJvciBpbiBzZXBhcmFibGVDb252MmQ6IGlucHV0IG11c3QgYmUgcmFuayA0LCBidXQgZ290IGAgK1xuICAgICAgICAgIGByYW5rICR7eDRELnJhbmt9LmApO1xuICB1dGlsLmFzc2VydChcbiAgICAgICRkZXB0aHdpc2VGaWx0ZXIucmFuayA9PT0gNCxcbiAgICAgICgpID0+IGBFcnJvciBpbiBzZXBhcmFibGVDb252MmQ6IGRlcHRod2lzZSBmaWx0ZXIgbXVzdCBiZSByYW5rIDQsIGJ1dCBgICtcbiAgICAgICAgICBgZ290IHJhbmsgJHskZGVwdGh3aXNlRmlsdGVyLnJhbmt9LmApO1xuICB1dGlsLmFzc2VydChcbiAgICAgICRwb2ludHdpc2VGaWx0ZXIucmFuayA9PT0gNCxcbiAgICAgICgpID0+IGBFcnJvciBpbiBzZXBhcmFibGVDb252MmQ6IHBvaW50d2lzZSBmaWx0ZXIgbXVzdCBiZSByYW5rIDQsIGJ1dCBgICtcbiAgICAgICAgICBgZ290IHJhbmsgJHskZGVwdGh3aXNlRmlsdGVyLnJhbmt9LmApO1xuICB1dGlsLmFzc2VydChcbiAgICAgICRwb2ludHdpc2VGaWx0ZXIuc2hhcGVbMF0gPT09IDEsXG4gICAgICAoKSA9PlxuICAgICAgICAgIGBFcnJvciBpbiBzZXBhcmFibGVDb252MmQ6IHRoZSBmaXJzdCBkaW1lbnNpb24gb2YgcG9pbnR3aXNlIGZpbHRlciBgICtcbiAgICAgICAgICBgIG11c3QgYmUgMSwgYnV0IGdvdCAkeyRwb2ludHdpc2VGaWx0ZXIuc2hhcGVbMF19LmApO1xuICB1dGlsLmFzc2VydChcbiAgICAgICRwb2ludHdpc2VGaWx0ZXIuc2hhcGVbMV0gPT09IDEsXG4gICAgICAoKSA9PiBgRXJyb3IgaW4gc2VwYXJhYmxlQ29udjJkOiB0aGUgc2Vjb25kIGRpbWVuc2lvbiBvZiBwb2ludHdpc2UgYCArXG4gICAgICAgICAgYGZpbHRlciBtdXN0IGJlIDEsIGJ1dCBnb3QgJHskcG9pbnR3aXNlRmlsdGVyLnNoYXBlWzFdfS5gKTtcblxuICBjb25zdCBpbkNoYW5uZWxzID0gJGRlcHRod2lzZUZpbHRlci5zaGFwZVsyXTtcbiAgY29uc3QgY2hhbm5lbE11bHRpcGxpZXIgPSAkZGVwdGh3aXNlRmlsdGVyLnNoYXBlWzNdO1xuICB1dGlsLmFzc2VydChcbiAgICAgICRwb2ludHdpc2VGaWx0ZXIuc2hhcGVbMl0gPT09IGluQ2hhbm5lbHMgKiBjaGFubmVsTXVsdGlwbGllcixcbiAgICAgICgpID0+XG4gICAgICAgICAgYEVycm9yIGluIHNlcGFyYWJsZUNvbnYyZDogdGhlIHRoaXJkIGRpbWVuc2lvbiBvZiBwb2ludHdpc2UgZmlsdGVyIGAgK1xuICAgICAgICAgIGBtdXN0IGJlICR7aW5DaGFubmVscyAqIGNoYW5uZWxNdWx0aXBsaWVyfSwgYCArXG4gICAgICAgICAgYGJ1dCBnb3QgJHskcG9pbnR3aXNlRmlsdGVyLnNoYXBlWzJdfS5gKTtcblxuICBjb25zdCBkZXB0aHdpc2UgPSBkZXB0aHdpc2VDb252MmQoXG4gICAgICB4NEQsICRkZXB0aHdpc2VGaWx0ZXIsIHN0cmlkZXMsIHBhZCwgZGF0YUZvcm1hdCwgZGlsYXRpb24pO1xuICBjb25zdCBwb2ludHdpc2VTdHJpZGUgPSAxO1xuICBjb25zdCByZXMgPVxuICAgICAgY29udjJkKGRlcHRod2lzZSwgJHBvaW50d2lzZUZpbHRlciwgcG9pbnR3aXNlU3RyaWRlLCAndmFsaWQnLCBkYXRhRm9ybWF0KTtcblxuICBpZiAocmVzaGFwZWRUbzREKSB7XG4gICAgcmV0dXJuIHJlc2hhcGUocmVzLCBbcmVzLnNoYXBlWzFdLCByZXMuc2hhcGVbMl0sIHJlcy5zaGFwZVszXV0pIGFzIFQ7XG4gIH1cbiAgcmV0dXJuIHJlcyBhcyBUO1xufVxuXG5leHBvcnQgY29uc3Qgc2VwYXJhYmxlQ29udjJkID0gb3Aoe3NlcGFyYWJsZUNvbnYyZF99KTtcbiJdfQ==","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\nimport { slice } from './slice';\n/**\n * Extracts a 3D slice from a 3D array starting at coordinates `begin` and\n * is of size `size`. See `slice` for details.\n */\nfunction slice3d_(x, begin, size) {\n    const $x = convertToTensor(x, 'x', 'slice3d');\n    util.assert($x.rank === 3, () => `slice3d expects a rank-3 tensor, but got a rank-${$x.rank} tensor`);\n    return slice($x, begin, size);\n}\nexport const slice3d = op({ slice3d_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpY2UzZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29yZS9zcmMvb3BzL3NsaWNlM2QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBR0gsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBRW5ELE9BQU8sS0FBSyxJQUFJLE1BQU0sU0FBUyxDQUFDO0FBRWhDLE9BQU8sRUFBQyxFQUFFLEVBQUMsTUFBTSxhQUFhLENBQUM7QUFDL0IsT0FBTyxFQUFDLEtBQUssRUFBQyxNQUFNLFNBQVMsQ0FBQztBQUU5Qjs7O0dBR0c7QUFDSCxTQUFTLFFBQVEsQ0FDYixDQUFzQixFQUFFLEtBQStCLEVBQ3ZELElBQThCO0lBQ2hDLE1BQU0sRUFBRSxHQUFHLGVBQWUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQzlDLElBQUksQ0FBQyxNQUFNLENBQ1AsRUFBRSxDQUFDLElBQUksS0FBSyxDQUFDLEVBQ2IsR0FBRyxFQUFFLENBQ0QsbURBQW1ELEVBQUUsQ0FBQyxJQUFJLFNBQVMsQ0FBQyxDQUFDO0lBQzdFLE9BQU8sS0FBSyxDQUFDLEVBQUUsRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDaEMsQ0FBQztBQUNELE1BQU0sQ0FBQyxNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsRUFBQyxRQUFRLEVBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTggR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge1RlbnNvcjNEfSBmcm9tICcuLi90ZW5zb3InO1xuaW1wb3J0IHtjb252ZXJ0VG9UZW5zb3J9IGZyb20gJy4uL3RlbnNvcl91dGlsX2Vudic7XG5pbXBvcnQge1RlbnNvckxpa2V9IGZyb20gJy4uL3R5cGVzJztcbmltcG9ydCAqIGFzIHV0aWwgZnJvbSAnLi4vdXRpbCc7XG5cbmltcG9ydCB7b3B9IGZyb20gJy4vb3BlcmF0aW9uJztcbmltcG9ydCB7c2xpY2V9IGZyb20gJy4vc2xpY2UnO1xuXG4vKipcbiAqIEV4dHJhY3RzIGEgM0Qgc2xpY2UgZnJvbSBhIDNEIGFycmF5IHN0YXJ0aW5nIGF0IGNvb3JkaW5hdGVzIGBiZWdpbmAgYW5kXG4gKiBpcyBvZiBzaXplIGBzaXplYC4gU2VlIGBzbGljZWAgZm9yIGRldGFpbHMuXG4gKi9cbmZ1bmN0aW9uIHNsaWNlM2RfKFxuICAgIHg6IFRlbnNvcjNEfFRlbnNvckxpa2UsIGJlZ2luOiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl0sXG4gICAgc2l6ZTogW251bWJlciwgbnVtYmVyLCBudW1iZXJdKTogVGVuc29yM0Qge1xuICBjb25zdCAkeCA9IGNvbnZlcnRUb1RlbnNvcih4LCAneCcsICdzbGljZTNkJyk7XG4gIHV0aWwuYXNzZXJ0KFxuICAgICAgJHgucmFuayA9PT0gMyxcbiAgICAgICgpID0+XG4gICAgICAgICAgYHNsaWNlM2QgZXhwZWN0cyBhIHJhbmstMyB0ZW5zb3IsIGJ1dCBnb3QgYSByYW5rLSR7JHgucmFua30gdGVuc29yYCk7XG4gIHJldHVybiBzbGljZSgkeCwgYmVnaW4sIHNpemUpO1xufVxuZXhwb3J0IGNvbnN0IHNsaWNlM2QgPSBvcCh7c2xpY2UzZF99KTtcbiJdfQ==","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Softmax } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes the softmax normalized vector given the logits.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n *\n * a.softmax().print();  // or tf.softmax(a)\n * ```\n *\n * ```js\n * const a = tf.tensor2d([2, 4, 6, 1, 2, 3], [2, 3]);\n *\n * a.softmax().print();  // or tf.softmax(a)\n * ```\n *\n * @param logits The logits array.\n * @param dim The dimension softmax would be performed on. Defaults to `-1`\n *     which indicates the last dimension.\n *\n * @doc {heading: 'Operations', subheading: 'Normalization'}\n */\nfunction softmax_(logits, dim = -1) {\n    const $logits = convertToTensor(logits, 'logits', 'softmax', 'float32');\n    if (dim === -1) {\n        dim = $logits.rank - 1;\n    }\n    if (dim !== $logits.rank - 1) {\n        throw Error('Softmax along a non-last dimension is not yet supported. ' +\n            `Logits was rank ${$logits.rank} and dim was ${dim}`);\n    }\n    const inputs = { logits: $logits };\n    const attrs = { dim };\n    return ENGINE.runKernel(Softmax, inputs, attrs);\n}\nexport const softmax = op({ softmax_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29mdG1heC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29yZS9zcmMvb3BzL3NvZnRtYXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUNqQyxPQUFPLEVBQUMsT0FBTyxFQUE4QixNQUFNLGlCQUFpQixDQUFDO0FBSXJFLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUduRCxPQUFPLEVBQUMsRUFBRSxFQUFDLE1BQU0sYUFBYSxDQUFDO0FBRS9COzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW9CRztBQUNILFNBQVMsUUFBUSxDQUFtQixNQUFvQixFQUFFLEdBQUcsR0FBRyxDQUFDLENBQUM7SUFDaEUsTUFBTSxPQUFPLEdBQUcsZUFBZSxDQUFDLE1BQU0sRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBRXhFLElBQUksR0FBRyxLQUFLLENBQUMsQ0FBQyxFQUFFO1FBQ2QsR0FBRyxHQUFHLE9BQU8sQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDO0tBQ3hCO0lBQ0QsSUFBSSxHQUFHLEtBQUssT0FBTyxDQUFDLElBQUksR0FBRyxDQUFDLEVBQUU7UUFDNUIsTUFBTSxLQUFLLENBQ1AsMkRBQTJEO1lBQzNELG1CQUFtQixPQUFPLENBQUMsSUFBSSxnQkFBZ0IsR0FBRyxFQUFFLENBQUMsQ0FBQztLQUMzRDtJQUVELE1BQU0sTUFBTSxHQUFrQixFQUFDLE1BQU0sRUFBRSxPQUFPLEVBQUMsQ0FBQztJQUNoRCxNQUFNLEtBQUssR0FBaUIsRUFBQyxHQUFHLEVBQUMsQ0FBQztJQUVsQyxPQUFPLE1BQU0sQ0FBQyxTQUFTLENBQ25CLE9BQU8sRUFBRSxNQUE4QixFQUFFLEtBQTJCLENBQUMsQ0FBQztBQUM1RSxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQyxFQUFDLFFBQVEsRUFBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7RU5HSU5FfSBmcm9tICcuLi9lbmdpbmUnO1xuaW1wb3J0IHtTb2Z0bWF4LCBTb2Z0bWF4QXR0cnMsIFNvZnRtYXhJbnB1dHN9IGZyb20gJy4uL2tlcm5lbF9uYW1lcyc7XG5pbXBvcnQge05hbWVkQXR0ck1hcH0gZnJvbSAnLi4va2VybmVsX3JlZ2lzdHJ5JztcbmltcG9ydCB7VGVuc29yfSBmcm9tICcuLi90ZW5zb3InO1xuaW1wb3J0IHtOYW1lZFRlbnNvck1hcH0gZnJvbSAnLi4vdGVuc29yX3R5cGVzJztcbmltcG9ydCB7Y29udmVydFRvVGVuc29yfSBmcm9tICcuLi90ZW5zb3JfdXRpbF9lbnYnO1xuaW1wb3J0IHtUZW5zb3JMaWtlfSBmcm9tICcuLi90eXBlcyc7XG5cbmltcG9ydCB7b3B9IGZyb20gJy4vb3BlcmF0aW9uJztcblxuLyoqXG4gKiBDb21wdXRlcyB0aGUgc29mdG1heCBub3JtYWxpemVkIHZlY3RvciBnaXZlbiB0aGUgbG9naXRzLlxuICpcbiAqIGBgYGpzXG4gKiBjb25zdCBhID0gdGYudGVuc29yMWQoWzEsIDIsIDNdKTtcbiAqXG4gKiBhLnNvZnRtYXgoKS5wcmludCgpOyAgLy8gb3IgdGYuc29mdG1heChhKVxuICogYGBgXG4gKlxuICogYGBganNcbiAqIGNvbnN0IGEgPSB0Zi50ZW5zb3IyZChbMiwgNCwgNiwgMSwgMiwgM10sIFsyLCAzXSk7XG4gKlxuICogYS5zb2Z0bWF4KCkucHJpbnQoKTsgIC8vIG9yIHRmLnNvZnRtYXgoYSlcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBsb2dpdHMgVGhlIGxvZ2l0cyBhcnJheS5cbiAqIEBwYXJhbSBkaW0gVGhlIGRpbWVuc2lvbiBzb2Z0bWF4IHdvdWxkIGJlIHBlcmZvcm1lZCBvbi4gRGVmYXVsdHMgdG8gYC0xYFxuICogICAgIHdoaWNoIGluZGljYXRlcyB0aGUgbGFzdCBkaW1lbnNpb24uXG4gKlxuICogQGRvYyB7aGVhZGluZzogJ09wZXJhdGlvbnMnLCBzdWJoZWFkaW5nOiAnTm9ybWFsaXphdGlvbid9XG4gKi9cbmZ1bmN0aW9uIHNvZnRtYXhfPFQgZXh0ZW5kcyBUZW5zb3I+KGxvZ2l0czogVHxUZW5zb3JMaWtlLCBkaW0gPSAtMSk6IFQge1xuICBjb25zdCAkbG9naXRzID0gY29udmVydFRvVGVuc29yKGxvZ2l0cywgJ2xvZ2l0cycsICdzb2Z0bWF4JywgJ2Zsb2F0MzInKTtcblxuICBpZiAoZGltID09PSAtMSkge1xuICAgIGRpbSA9ICRsb2dpdHMucmFuayAtIDE7XG4gIH1cbiAgaWYgKGRpbSAhPT0gJGxvZ2l0cy5yYW5rIC0gMSkge1xuICAgIHRocm93IEVycm9yKFxuICAgICAgICAnU29mdG1heCBhbG9uZyBhIG5vbi1sYXN0IGRpbWVuc2lvbiBpcyBub3QgeWV0IHN1cHBvcnRlZC4gJyArXG4gICAgICAgIGBMb2dpdHMgd2FzIHJhbmsgJHskbG9naXRzLnJhbmt9IGFuZCBkaW0gd2FzICR7ZGltfWApO1xuICB9XG5cbiAgY29uc3QgaW5wdXRzOiBTb2Z0bWF4SW5wdXRzID0ge2xvZ2l0czogJGxvZ2l0c307XG4gIGNvbnN0IGF0dHJzOiBTb2Z0bWF4QXR0cnMgPSB7ZGltfTtcblxuICByZXR1cm4gRU5HSU5FLnJ1bktlcm5lbChcbiAgICAgIFNvZnRtYXgsIGlucHV0cyBhcyB7fSBhcyBOYW1lZFRlbnNvck1hcCwgYXR0cnMgYXMge30gYXMgTmFtZWRBdHRyTWFwKTtcbn1cblxuZXhwb3J0IGNvbnN0IHNvZnRtYXggPSBvcCh7c29mdG1heF99KTtcbiJdfQ==","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { SplitV } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Splits a `tf.Tensor` into sub tensors.\n *\n * If `numOrSizeSplits` is a number, splits `x` along dimension `axis`\n * into `numOrSizeSplits` smaller tensors.\n * Requires that `numOrSizeSplits` evenly divides `x.shape[axis]`.\n *\n * If `numOrSizeSplits` is a number array, splits `x` into\n * `numOrSizeSplits.length` pieces. The shape of the `i`-th piece has the\n * same size as `x` except along dimension `axis` where the size is\n * `numOrSizeSplits[i]`.\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4, 5, 6, 7, 8], [2, 4]);\n * const [a, b] = tf.split(x, 2, 1);\n * a.print();\n * b.print();\n *\n * const [c, d, e] = tf.split(x, [1, 2, 1], 1);\n * c.print();\n * d.print();\n * e.print();\n * ```\n *\n * @param x The input tensor to split.\n * @param numOrSizeSplits Either an integer indicating the number of\n * splits along the axis or an array of integers containing the sizes of\n * each output tensor along the axis. If a number then it must evenly divide\n * `x.shape[axis]`; otherwise the sum of sizes must match `x.shape[axis]`.\n * Can contain one -1 indicating that dimension is to be inferred.\n * @param axis The dimension along which to split. Defaults to 0 (the first\n * dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction split_(x, numOrSizeSplits, axis = 0) {\n    const $x = convertToTensor(x, 'x', 'split');\n    const inputs = { x: $x };\n    const attr = { numOrSizeSplits, axis };\n    return ENGINE.runKernel(SplitV, inputs, attr);\n}\nexport const split = op({ split_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BsaXQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL29wcy9zcGxpdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFDSCxPQUFPLEVBQUMsTUFBTSxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBQ2pDLE9BQU8sRUFBQyxNQUFNLEVBQTRCLE1BQU0saUJBQWlCLENBQUM7QUFJbEUsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBR25ELE9BQU8sRUFBQyxFQUFFLEVBQUMsTUFBTSxhQUFhLENBQUM7QUFFL0I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FrQ0c7QUFDSCxTQUFTLE1BQU0sQ0FDWCxDQUFvQixFQUFFLGVBQWdDLEVBQUUsSUFBSSxHQUFHLENBQUM7SUFDbEUsTUFBTSxFQUFFLEdBQUcsZUFBZSxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFFNUMsTUFBTSxNQUFNLEdBQWlCLEVBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBQyxDQUFDO0lBQ3JDLE1BQU0sSUFBSSxHQUFnQixFQUFDLGVBQWUsRUFBRSxJQUFJLEVBQUMsQ0FBQztJQUVsRCxPQUFPLE1BQU0sQ0FBQyxTQUFTLENBQ1osTUFBTSxFQUFFLE1BQThCLEVBQ3RDLElBQTBCLENBQWMsQ0FBQztBQUN0RCxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sS0FBSyxHQUFHLEVBQUUsQ0FBQyxFQUFDLE1BQU0sRUFBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5pbXBvcnQge0VOR0lORX0gZnJvbSAnLi4vZW5naW5lJztcbmltcG9ydCB7U3BsaXRWLCBTcGxpdFZBdHRycywgU3BsaXRWSW5wdXRzfSBmcm9tICcuLi9rZXJuZWxfbmFtZXMnO1xuaW1wb3J0IHtOYW1lZEF0dHJNYXB9IGZyb20gJy4uL2tlcm5lbF9yZWdpc3RyeSc7XG5pbXBvcnQge1RlbnNvcn0gZnJvbSAnLi4vdGVuc29yJztcbmltcG9ydCB7TmFtZWRUZW5zb3JNYXB9IGZyb20gJy4uL3RlbnNvcl90eXBlcyc7XG5pbXBvcnQge2NvbnZlcnRUb1RlbnNvcn0gZnJvbSAnLi4vdGVuc29yX3V0aWxfZW52JztcbmltcG9ydCB7VGVuc29yTGlrZX0gZnJvbSAnLi4vdHlwZXMnO1xuXG5pbXBvcnQge29wfSBmcm9tICcuL29wZXJhdGlvbic7XG5cbi8qKlxuICogU3BsaXRzIGEgYHRmLlRlbnNvcmAgaW50byBzdWIgdGVuc29ycy5cbiAqXG4gKiBJZiBgbnVtT3JTaXplU3BsaXRzYCBpcyBhIG51bWJlciwgc3BsaXRzIGB4YCBhbG9uZyBkaW1lbnNpb24gYGF4aXNgXG4gKiBpbnRvIGBudW1PclNpemVTcGxpdHNgIHNtYWxsZXIgdGVuc29ycy5cbiAqIFJlcXVpcmVzIHRoYXQgYG51bU9yU2l6ZVNwbGl0c2AgZXZlbmx5IGRpdmlkZXMgYHguc2hhcGVbYXhpc11gLlxuICpcbiAqIElmIGBudW1PclNpemVTcGxpdHNgIGlzIGEgbnVtYmVyIGFycmF5LCBzcGxpdHMgYHhgIGludG9cbiAqIGBudW1PclNpemVTcGxpdHMubGVuZ3RoYCBwaWVjZXMuIFRoZSBzaGFwZSBvZiB0aGUgYGlgLXRoIHBpZWNlIGhhcyB0aGVcbiAqIHNhbWUgc2l6ZSBhcyBgeGAgZXhjZXB0IGFsb25nIGRpbWVuc2lvbiBgYXhpc2Agd2hlcmUgdGhlIHNpemUgaXNcbiAqIGBudW1PclNpemVTcGxpdHNbaV1gLlxuICpcbiAqIGBgYGpzXG4gKiBjb25zdCB4ID0gdGYudGVuc29yMmQoWzEsIDIsIDMsIDQsIDUsIDYsIDcsIDhdLCBbMiwgNF0pO1xuICogY29uc3QgW2EsIGJdID0gdGYuc3BsaXQoeCwgMiwgMSk7XG4gKiBhLnByaW50KCk7XG4gKiBiLnByaW50KCk7XG4gKlxuICogY29uc3QgW2MsIGQsIGVdID0gdGYuc3BsaXQoeCwgWzEsIDIsIDFdLCAxKTtcbiAqIGMucHJpbnQoKTtcbiAqIGQucHJpbnQoKTtcbiAqIGUucHJpbnQoKTtcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB4IFRoZSBpbnB1dCB0ZW5zb3IgdG8gc3BsaXQuXG4gKiBAcGFyYW0gbnVtT3JTaXplU3BsaXRzIEVpdGhlciBhbiBpbnRlZ2VyIGluZGljYXRpbmcgdGhlIG51bWJlciBvZlxuICogc3BsaXRzIGFsb25nIHRoZSBheGlzIG9yIGFuIGFycmF5IG9mIGludGVnZXJzIGNvbnRhaW5pbmcgdGhlIHNpemVzIG9mXG4gKiBlYWNoIG91dHB1dCB0ZW5zb3IgYWxvbmcgdGhlIGF4aXMuIElmIGEgbnVtYmVyIHRoZW4gaXQgbXVzdCBldmVubHkgZGl2aWRlXG4gKiBgeC5zaGFwZVtheGlzXWA7IG90aGVyd2lzZSB0aGUgc3VtIG9mIHNpemVzIG11c3QgbWF0Y2ggYHguc2hhcGVbYXhpc11gLlxuICogQ2FuIGNvbnRhaW4gb25lIC0xIGluZGljYXRpbmcgdGhhdCBkaW1lbnNpb24gaXMgdG8gYmUgaW5mZXJyZWQuXG4gKiBAcGFyYW0gYXhpcyBUaGUgZGltZW5zaW9uIGFsb25nIHdoaWNoIHRvIHNwbGl0LiBEZWZhdWx0cyB0byAwICh0aGUgZmlyc3RcbiAqIGRpbSkuXG4gKlxuICogQGRvYyB7aGVhZGluZzogJ1RlbnNvcnMnLCBzdWJoZWFkaW5nOiAnU2xpY2luZyBhbmQgSm9pbmluZyd9XG4gKi9cbmZ1bmN0aW9uIHNwbGl0XzxUIGV4dGVuZHMgVGVuc29yPihcbiAgICB4OiBUZW5zb3J8VGVuc29yTGlrZSwgbnVtT3JTaXplU3BsaXRzOiBudW1iZXJbXXxudW1iZXIsIGF4aXMgPSAwKTogVFtdIHtcbiAgY29uc3QgJHggPSBjb252ZXJ0VG9UZW5zb3IoeCwgJ3gnLCAnc3BsaXQnKTtcblxuICBjb25zdCBpbnB1dHM6IFNwbGl0VklucHV0cyA9IHt4OiAkeH07XG4gIGNvbnN0IGF0dHI6IFNwbGl0VkF0dHJzID0ge251bU9yU2l6ZVNwbGl0cywgYXhpc307XG5cbiAgcmV0dXJuIEVOR0lORS5ydW5LZXJuZWwoXG4gICAgICAgICAgICAgU3BsaXRWLCBpbnB1dHMgYXMge30gYXMgTmFtZWRUZW5zb3JNYXAsXG4gICAgICAgICAgICAgYXR0ciBhcyB7fSBhcyBOYW1lZEF0dHJNYXApIGFzIHt9IGFzIFRbXTtcbn1cblxuZXhwb3J0IGNvbnN0IHNwbGl0ID0gb3Aoe3NwbGl0X30pO1xuIl19","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Pack } from '../kernel_names';\nimport { convertToTensorArray } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Stacks a list of rank-`R` `tf.Tensor`s into one rank-`(R+1)` `tf.Tensor`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * const c = tf.tensor1d([5, 6]);\n * tf.stack([a, b, c]).print();\n * ```\n *\n * @param tensors A list of tensor objects with the same shape and dtype.\n * @param axis The axis to stack along. Defaults to 0 (the first dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction stack_(tensors, axis = 0) {\n    const $tensors = convertToTensorArray(tensors, 'tensors', 'stack', 'string_or_numeric');\n    util.assert($tensors.length >= 1, () => 'Pass at least one tensor to tf.stack');\n    if ($tensors.length > 0) {\n        util.assert(axis <= $tensors[0].rank, () => 'Axis must be <= rank of the tensor');\n    }\n    const inputs = $tensors;\n    const attrs = { axis };\n    return ENGINE.runKernel(Pack, inputs, attrs);\n}\nexport const stack = op({ stack_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhY2suanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL29wcy9zdGFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsTUFBTSxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBQ2pDLE9BQU8sRUFBQyxJQUFJLEVBQXdCLE1BQU0saUJBQWlCLENBQUM7QUFJNUQsT0FBTyxFQUFDLG9CQUFvQixFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFFeEQsT0FBTyxLQUFLLElBQUksTUFBTSxTQUFTLENBQUM7QUFFaEMsT0FBTyxFQUFDLEVBQUUsRUFBQyxNQUFNLGFBQWEsQ0FBQztBQUUvQjs7Ozs7Ozs7Ozs7Ozs7R0FjRztBQUNILFNBQVMsTUFBTSxDQUNYLE9BQTRCLEVBQUUsSUFBSSxHQUFHLENBQUM7SUFDeEMsTUFBTSxRQUFRLEdBQ1Ysb0JBQW9CLENBQUMsT0FBTyxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUUsbUJBQW1CLENBQUMsQ0FBQztJQUUzRSxJQUFJLENBQUMsTUFBTSxDQUNQLFFBQVEsQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLHNDQUFzQyxDQUFDLENBQUM7SUFFeEUsSUFBSSxRQUFRLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtRQUN2QixJQUFJLENBQUMsTUFBTSxDQUNQLElBQUksSUFBSSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFLEdBQUcsRUFBRSxDQUFDLG9DQUFvQyxDQUFDLENBQUM7S0FDM0U7SUFFRCxNQUFNLE1BQU0sR0FBZSxRQUFRLENBQUM7SUFDcEMsTUFBTSxLQUFLLEdBQWMsRUFBQyxJQUFJLEVBQUMsQ0FBQztJQUVoQyxPQUFPLE1BQU0sQ0FBQyxTQUFTLENBQ25CLElBQUksRUFBRSxNQUE4QixFQUFFLEtBQTJCLENBQUMsQ0FBQztBQUN6RSxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sS0FBSyxHQUFHLEVBQUUsQ0FBQyxFQUFDLE1BQU0sRUFBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7RU5HSU5FfSBmcm9tICcuLi9lbmdpbmUnO1xuaW1wb3J0IHtQYWNrLCBQYWNrQXR0cnMsIFBhY2tJbnB1dHN9IGZyb20gJy4uL2tlcm5lbF9uYW1lcyc7XG5pbXBvcnQge05hbWVkQXR0ck1hcH0gZnJvbSAnLi4va2VybmVsX3JlZ2lzdHJ5JztcbmltcG9ydCB7VGVuc29yfSBmcm9tICcuLi90ZW5zb3InO1xuaW1wb3J0IHtOYW1lZFRlbnNvck1hcH0gZnJvbSAnLi4vdGVuc29yX3R5cGVzJztcbmltcG9ydCB7Y29udmVydFRvVGVuc29yQXJyYXl9IGZyb20gJy4uL3RlbnNvcl91dGlsX2Vudic7XG5pbXBvcnQge1RlbnNvckxpa2V9IGZyb20gJy4uL3R5cGVzJztcbmltcG9ydCAqIGFzIHV0aWwgZnJvbSAnLi4vdXRpbCc7XG5cbmltcG9ydCB7b3B9IGZyb20gJy4vb3BlcmF0aW9uJztcblxuLyoqXG4gKiBTdGFja3MgYSBsaXN0IG9mIHJhbmstYFJgIGB0Zi5UZW5zb3JgcyBpbnRvIG9uZSByYW5rLWAoUisxKWAgYHRmLlRlbnNvcmAuXG4gKlxuICogYGBganNcbiAqIGNvbnN0IGEgPSB0Zi50ZW5zb3IxZChbMSwgMl0pO1xuICogY29uc3QgYiA9IHRmLnRlbnNvcjFkKFszLCA0XSk7XG4gKiBjb25zdCBjID0gdGYudGVuc29yMWQoWzUsIDZdKTtcbiAqIHRmLnN0YWNrKFthLCBiLCBjXSkucHJpbnQoKTtcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB0ZW5zb3JzIEEgbGlzdCBvZiB0ZW5zb3Igb2JqZWN0cyB3aXRoIHRoZSBzYW1lIHNoYXBlIGFuZCBkdHlwZS5cbiAqIEBwYXJhbSBheGlzIFRoZSBheGlzIHRvIHN0YWNrIGFsb25nLiBEZWZhdWx0cyB0byAwICh0aGUgZmlyc3QgZGltKS5cbiAqXG4gKiBAZG9jIHtoZWFkaW5nOiAnVGVuc29ycycsIHN1YmhlYWRpbmc6ICdTbGljaW5nIGFuZCBKb2luaW5nJ31cbiAqL1xuZnVuY3Rpb24gc3RhY2tfPFQgZXh0ZW5kcyBUZW5zb3I+KFxuICAgIHRlbnNvcnM6IEFycmF5PFR8VGVuc29yTGlrZT4sIGF4aXMgPSAwKTogVGVuc29yIHtcbiAgY29uc3QgJHRlbnNvcnMgPVxuICAgICAgY29udmVydFRvVGVuc29yQXJyYXkodGVuc29ycywgJ3RlbnNvcnMnLCAnc3RhY2snLCAnc3RyaW5nX29yX251bWVyaWMnKTtcblxuICB1dGlsLmFzc2VydChcbiAgICAgICR0ZW5zb3JzLmxlbmd0aCA+PSAxLCAoKSA9PiAnUGFzcyBhdCBsZWFzdCBvbmUgdGVuc29yIHRvIHRmLnN0YWNrJyk7XG5cbiAgaWYgKCR0ZW5zb3JzLmxlbmd0aCA+IDApIHtcbiAgICB1dGlsLmFzc2VydChcbiAgICAgICAgYXhpcyA8PSAkdGVuc29yc1swXS5yYW5rLCAoKSA9PiAnQXhpcyBtdXN0IGJlIDw9IHJhbmsgb2YgdGhlIHRlbnNvcicpO1xuICB9XG5cbiAgY29uc3QgaW5wdXRzOiBQYWNrSW5wdXRzID0gJHRlbnNvcnM7XG4gIGNvbnN0IGF0dHJzOiBQYWNrQXR0cnMgPSB7YXhpc307XG5cbiAgcmV0dXJuIEVOR0lORS5ydW5LZXJuZWwoXG4gICAgICBQYWNrLCBpbnB1dHMgYXMge30gYXMgTmFtZWRUZW5zb3JNYXAsIGF0dHJzIGFzIHt9IGFzIE5hbWVkQXR0ck1hcCk7XG59XG5cbmV4cG9ydCBjb25zdCBzdGFjayA9IG9wKHtzdGFja199KTtcbiJdfQ==","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { inferShape } from '../tensor_util_env';\nimport { assertNonNull } from '../util';\nimport { makeTensor } from './tensor_ops_util';\n/**\n * Creates rank-1 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor1d` as it makes the code more readable.\n *\n * ```js\n * tf.tensor1d([1, 2, 3]).print();\n * ```\n *\n * @param values The values of the tensor. Can be array of numbers,\n *     or a `TypedArray`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function tensor1d(values, dtype) {\n    assertNonNull(values);\n    const inferredShape = inferShape(values, dtype);\n    if (inferredShape.length !== 1) {\n        throw new Error('tensor1d() requires values to be a flat/TypedArray');\n    }\n    const shape = null;\n    return makeTensor(values, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVuc29yMWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL29wcy90ZW5zb3IxZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFHSCxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFHOUMsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLFNBQVMsQ0FBQztBQUN0QyxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFFN0M7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBQ0gsTUFBTSxVQUFVLFFBQVEsQ0FBQyxNQUFvQixFQUFFLEtBQWdCO0lBQzdELGFBQWEsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN0QixNQUFNLGFBQWEsR0FBRyxVQUFVLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ2hELElBQUksYUFBYSxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7UUFDOUIsTUFBTSxJQUFJLEtBQUssQ0FBQyxvREFBb0QsQ0FBQyxDQUFDO0tBQ3ZFO0lBQ0QsTUFBTSxLQUFLLEdBQWEsSUFBSSxDQUFDO0lBQzdCLE9BQU8sVUFBVSxDQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUUsYUFBYSxFQUFFLEtBQUssQ0FBYSxDQUFDO0FBQ3JFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7VGVuc29yMUR9IGZyb20gJy4uL3RlbnNvcic7XG5pbXBvcnQge2luZmVyU2hhcGV9IGZyb20gJy4uL3RlbnNvcl91dGlsX2Vudic7XG5pbXBvcnQge1RlbnNvckxpa2UxRH0gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0IHtEYXRhVHlwZX0gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0IHthc3NlcnROb25OdWxsfSBmcm9tICcuLi91dGlsJztcbmltcG9ydCB7bWFrZVRlbnNvcn0gZnJvbSAnLi90ZW5zb3Jfb3BzX3V0aWwnO1xuXG4vKipcbiAqIENyZWF0ZXMgcmFuay0xIGB0Zi5UZW5zb3JgIHdpdGggdGhlIHByb3ZpZGVkIHZhbHVlcywgc2hhcGUgYW5kIGR0eXBlLlxuICpcbiAqIFRoZSBzYW1lIGZ1bmN0aW9uYWxpdHkgY2FuIGJlIGFjaGlldmVkIHdpdGggYHRmLnRlbnNvcmAsIGJ1dCBpbiBnZW5lcmFsXG4gKiB3ZSByZWNvbW1lbmQgdXNpbmcgYHRmLnRlbnNvcjFkYCBhcyBpdCBtYWtlcyB0aGUgY29kZSBtb3JlIHJlYWRhYmxlLlxuICpcbiAqIGBgYGpzXG4gKiB0Zi50ZW5zb3IxZChbMSwgMiwgM10pLnByaW50KCk7XG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0gdmFsdWVzIFRoZSB2YWx1ZXMgb2YgdGhlIHRlbnNvci4gQ2FuIGJlIGFycmF5IG9mIG51bWJlcnMsXG4gKiAgICAgb3IgYSBgVHlwZWRBcnJheWAuXG4gKiBAcGFyYW0gZHR5cGUgVGhlIGRhdGEgdHlwZS5cbiAqXG4gKiBAZG9jIHtoZWFkaW5nOiAnVGVuc29ycycsIHN1YmhlYWRpbmc6ICdDcmVhdGlvbid9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0ZW5zb3IxZCh2YWx1ZXM6IFRlbnNvckxpa2UxRCwgZHR5cGU/OiBEYXRhVHlwZSk6IFRlbnNvcjFEIHtcbiAgYXNzZXJ0Tm9uTnVsbCh2YWx1ZXMpO1xuICBjb25zdCBpbmZlcnJlZFNoYXBlID0gaW5mZXJTaGFwZSh2YWx1ZXMsIGR0eXBlKTtcbiAgaWYgKGluZmVycmVkU2hhcGUubGVuZ3RoICE9PSAxKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCd0ZW5zb3IxZCgpIHJlcXVpcmVzIHZhbHVlcyB0byBiZSBhIGZsYXQvVHlwZWRBcnJheScpO1xuICB9XG4gIGNvbnN0IHNoYXBlOiBudW1iZXJbXSA9IG51bGw7XG4gIHJldHVybiBtYWtlVGVuc29yKHZhbHVlcywgc2hhcGUsIGluZmVycmVkU2hhcGUsIGR0eXBlKSBhcyBUZW5zb3IxRDtcbn1cbiJdfQ==","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { inferShape } from '../tensor_util_env';\nimport { assertNonNull } from '../util';\nimport { makeTensor } from './tensor_ops_util';\n/**\n * Creates rank-2 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor2d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor2d([[1, 2], [3, 4]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor2d([1, 2, 3, 4], [2, 2]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. If not provided, it is inferred from\n *     `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function tensor2d(values, shape, dtype) {\n    assertNonNull(values);\n    if (shape != null && shape.length !== 2) {\n        throw new Error('tensor2d() requires shape to have two numbers');\n    }\n    const inferredShape = inferShape(values, dtype);\n    if (inferredShape.length !== 2 && inferredShape.length !== 1) {\n        throw new Error('tensor2d() requires values to be number[][] or flat/TypedArray');\n    }\n    if (inferredShape.length === 1 && shape == null) {\n        throw new Error('tensor2d() requires shape to be provided when `values` ' +\n            'are a flat/TypedArray');\n    }\n    return makeTensor(values, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVuc29yMmQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL29wcy90ZW5zb3IyZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFHSCxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFHOUMsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLFNBQVMsQ0FBQztBQUN0QyxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFFN0M7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FzQkc7QUFDSCxNQUFNLFVBQVUsUUFBUSxDQUNwQixNQUFvQixFQUFFLEtBQXdCLEVBQzlDLEtBQWdCO0lBQ2xCLGFBQWEsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN0QixJQUFJLEtBQUssSUFBSSxJQUFJLElBQUksS0FBSyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7UUFDdkMsTUFBTSxJQUFJLEtBQUssQ0FBQywrQ0FBK0MsQ0FBQyxDQUFDO0tBQ2xFO0lBQ0QsTUFBTSxhQUFhLEdBQUcsVUFBVSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNoRCxJQUFJLGFBQWEsQ0FBQyxNQUFNLEtBQUssQ0FBQyxJQUFJLGFBQWEsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1FBQzVELE1BQU0sSUFBSSxLQUFLLENBQ1gsZ0VBQWdFLENBQUMsQ0FBQztLQUN2RTtJQUNELElBQUksYUFBYSxDQUFDLE1BQU0sS0FBSyxDQUFDLElBQUksS0FBSyxJQUFJLElBQUksRUFBRTtRQUMvQyxNQUFNLElBQUksS0FBSyxDQUNYLHlEQUF5RDtZQUN6RCx1QkFBdUIsQ0FBQyxDQUFDO0tBQzlCO0lBQ0QsT0FBTyxVQUFVLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxhQUFhLEVBQUUsS0FBSyxDQUFhLENBQUM7QUFDckUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE4IEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtUZW5zb3IyRH0gZnJvbSAnLi4vdGVuc29yJztcbmltcG9ydCB7aW5mZXJTaGFwZX0gZnJvbSAnLi4vdGVuc29yX3V0aWxfZW52JztcbmltcG9ydCB7VGVuc29yTGlrZTJEfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQge0RhdGFUeXBlfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQge2Fzc2VydE5vbk51bGx9IGZyb20gJy4uL3V0aWwnO1xuaW1wb3J0IHttYWtlVGVuc29yfSBmcm9tICcuL3RlbnNvcl9vcHNfdXRpbCc7XG5cbi8qKlxuICogQ3JlYXRlcyByYW5rLTIgYHRmLlRlbnNvcmAgd2l0aCB0aGUgcHJvdmlkZWQgdmFsdWVzLCBzaGFwZSBhbmQgZHR5cGUuXG4gKlxuICogVGhlIHNhbWUgZnVuY3Rpb25hbGl0eSBjYW4gYmUgYWNoaWV2ZWQgd2l0aCBgdGYudGVuc29yYCwgYnV0IGluIGdlbmVyYWxcbiAqIHdlIHJlY29tbWVuZCB1c2luZyBgdGYudGVuc29yMmRgIGFzIGl0IG1ha2VzIHRoZSBjb2RlIG1vcmUgcmVhZGFibGUuXG4gKlxuICogIGBgYGpzXG4gKiAvLyBQYXNzIGEgbmVzdGVkIGFycmF5LlxuICogdGYudGVuc29yMmQoW1sxLCAyXSwgWzMsIDRdXSkucHJpbnQoKTtcbiAqIGBgYFxuICogYGBganNcbiAqIC8vIFBhc3MgYSBmbGF0IGFycmF5IGFuZCBzcGVjaWZ5IGEgc2hhcGUuXG4gKiB0Zi50ZW5zb3IyZChbMSwgMiwgMywgNF0sIFsyLCAyXSkucHJpbnQoKTtcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB2YWx1ZXMgVGhlIHZhbHVlcyBvZiB0aGUgdGVuc29yLiBDYW4gYmUgbmVzdGVkIGFycmF5IG9mIG51bWJlcnMsXG4gKiAgICAgb3IgYSBmbGF0IGFycmF5LCBvciBhIGBUeXBlZEFycmF5YC5cbiAqIEBwYXJhbSBzaGFwZSBUaGUgc2hhcGUgb2YgdGhlIHRlbnNvci4gSWYgbm90IHByb3ZpZGVkLCBpdCBpcyBpbmZlcnJlZCBmcm9tXG4gKiAgICAgYHZhbHVlc2AuXG4gKiBAcGFyYW0gZHR5cGUgVGhlIGRhdGEgdHlwZS5cbiAqXG4gKiBAZG9jIHtoZWFkaW5nOiAnVGVuc29ycycsIHN1YmhlYWRpbmc6ICdDcmVhdGlvbid9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0ZW5zb3IyZChcbiAgICB2YWx1ZXM6IFRlbnNvckxpa2UyRCwgc2hhcGU/OiBbbnVtYmVyLCBudW1iZXJdLFxuICAgIGR0eXBlPzogRGF0YVR5cGUpOiBUZW5zb3IyRCB7XG4gIGFzc2VydE5vbk51bGwodmFsdWVzKTtcbiAgaWYgKHNoYXBlICE9IG51bGwgJiYgc2hhcGUubGVuZ3RoICE9PSAyKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCd0ZW5zb3IyZCgpIHJlcXVpcmVzIHNoYXBlIHRvIGhhdmUgdHdvIG51bWJlcnMnKTtcbiAgfVxuICBjb25zdCBpbmZlcnJlZFNoYXBlID0gaW5mZXJTaGFwZSh2YWx1ZXMsIGR0eXBlKTtcbiAgaWYgKGluZmVycmVkU2hhcGUubGVuZ3RoICE9PSAyICYmIGluZmVycmVkU2hhcGUubGVuZ3RoICE9PSAxKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAndGVuc29yMmQoKSByZXF1aXJlcyB2YWx1ZXMgdG8gYmUgbnVtYmVyW11bXSBvciBmbGF0L1R5cGVkQXJyYXknKTtcbiAgfVxuICBpZiAoaW5mZXJyZWRTaGFwZS5sZW5ndGggPT09IDEgJiYgc2hhcGUgPT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ3RlbnNvcjJkKCkgcmVxdWlyZXMgc2hhcGUgdG8gYmUgcHJvdmlkZWQgd2hlbiBgdmFsdWVzYCAnICtcbiAgICAgICAgJ2FyZSBhIGZsYXQvVHlwZWRBcnJheScpO1xuICB9XG4gIHJldHVybiBtYWtlVGVuc29yKHZhbHVlcywgc2hhcGUsIGluZmVycmVkU2hhcGUsIGR0eXBlKSBhcyBUZW5zb3IyRDtcbn1cbiJdfQ==","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { inferShape } from '../tensor_util_env';\nimport { assertNonNull } from '../util';\nimport { makeTensor } from './tensor_ops_util';\n/**\n * Creates rank-4 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor4d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor4d([[[[1], [2]], [[3], [4]]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor4d([1, 2, 3, 4], [1, 2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n *\n * @doc {heading: 'Tensors', subheading: 'Creation'}\n */\nexport function tensor4d(values, shape, dtype) {\n    assertNonNull(values);\n    if (shape != null && shape.length !== 4) {\n        throw new Error('tensor4d() requires shape to have four numbers');\n    }\n    const inferredShape = inferShape(values, dtype);\n    if (inferredShape.length !== 4 && inferredShape.length !== 1) {\n        throw new Error('tensor4d() requires values to be number[][][][] or flat/TypedArray');\n    }\n    if (inferredShape.length === 1 && shape == null) {\n        throw new Error('tensor4d() requires shape to be provided when `values` ' +\n            'are a flat array');\n    }\n    return makeTensor(values, shape, inferredShape, dtype);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVuc29yNGQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL29wcy90ZW5zb3I0ZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFHSCxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFHOUMsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLFNBQVMsQ0FBQztBQUN0QyxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFFN0M7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FzQkc7QUFDSCxNQUFNLFVBQVUsUUFBUSxDQUNwQixNQUFvQixFQUFFLEtBQXdDLEVBQzlELEtBQWdCO0lBQ2xCLGFBQWEsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN0QixJQUFJLEtBQUssSUFBSSxJQUFJLElBQUksS0FBSyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7UUFDdkMsTUFBTSxJQUFJLEtBQUssQ0FBQyxnREFBZ0QsQ0FBQyxDQUFDO0tBQ25FO0lBQ0QsTUFBTSxhQUFhLEdBQUcsVUFBVSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNoRCxJQUFJLGFBQWEsQ0FBQyxNQUFNLEtBQUssQ0FBQyxJQUFJLGFBQWEsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1FBQzVELE1BQU0sSUFBSSxLQUFLLENBQ1gsb0VBQW9FLENBQUMsQ0FBQztLQUMzRTtJQUNELElBQUksYUFBYSxDQUFDLE1BQU0sS0FBSyxDQUFDLElBQUksS0FBSyxJQUFJLElBQUksRUFBRTtRQUMvQyxNQUFNLElBQUksS0FBSyxDQUNYLHlEQUF5RDtZQUN6RCxrQkFBa0IsQ0FBQyxDQUFDO0tBQ3pCO0lBQ0QsT0FBTyxVQUFVLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxhQUFhLEVBQUUsS0FBSyxDQUFhLENBQUM7QUFDckUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE4IEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtUZW5zb3I0RH0gZnJvbSAnLi4vdGVuc29yJztcbmltcG9ydCB7aW5mZXJTaGFwZX0gZnJvbSAnLi4vdGVuc29yX3V0aWxfZW52JztcbmltcG9ydCB7VGVuc29yTGlrZTREfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQge0RhdGFUeXBlfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQge2Fzc2VydE5vbk51bGx9IGZyb20gJy4uL3V0aWwnO1xuaW1wb3J0IHttYWtlVGVuc29yfSBmcm9tICcuL3RlbnNvcl9vcHNfdXRpbCc7XG5cbi8qKlxuICogQ3JlYXRlcyByYW5rLTQgYHRmLlRlbnNvcmAgd2l0aCB0aGUgcHJvdmlkZWQgdmFsdWVzLCBzaGFwZSBhbmQgZHR5cGUuXG4gKlxuICogVGhlIHNhbWUgZnVuY3Rpb25hbGl0eSBjYW4gYmUgYWNoaWV2ZWQgd2l0aCBgdGYudGVuc29yYCwgYnV0IGluIGdlbmVyYWxcbiAqIHdlIHJlY29tbWVuZCB1c2luZyBgdGYudGVuc29yNGRgIGFzIGl0IG1ha2VzIHRoZSBjb2RlIG1vcmUgcmVhZGFibGUuXG4gKlxuICogIGBgYGpzXG4gKiAvLyBQYXNzIGEgbmVzdGVkIGFycmF5LlxuICogdGYudGVuc29yNGQoW1tbWzFdLCBbMl1dLCBbWzNdLCBbNF1dXV0pLnByaW50KCk7XG4gKiBgYGBcbiAqIGBgYGpzXG4gKiAvLyBQYXNzIGEgZmxhdCBhcnJheSBhbmQgc3BlY2lmeSBhIHNoYXBlLlxuICogdGYudGVuc29yNGQoWzEsIDIsIDMsIDRdLCBbMSwgMiwgMiwgMV0pLnByaW50KCk7XG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0gdmFsdWVzIFRoZSB2YWx1ZXMgb2YgdGhlIHRlbnNvci4gQ2FuIGJlIG5lc3RlZCBhcnJheSBvZiBudW1iZXJzLFxuICogICAgIG9yIGEgZmxhdCBhcnJheSwgb3IgYSBgVHlwZWRBcnJheWAuXG4gKiBAcGFyYW0gc2hhcGUgVGhlIHNoYXBlIG9mIHRoZSB0ZW5zb3IuIE9wdGlvbmFsLiBJZiBub3QgcHJvdmlkZWQsXG4gKiAgIGl0IGlzIGluZmVycmVkIGZyb20gYHZhbHVlc2AuXG4gKiBAcGFyYW0gZHR5cGUgVGhlIGRhdGEgdHlwZS5cbiAqXG4gKiBAZG9jIHtoZWFkaW5nOiAnVGVuc29ycycsIHN1YmhlYWRpbmc6ICdDcmVhdGlvbid9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0ZW5zb3I0ZChcbiAgICB2YWx1ZXM6IFRlbnNvckxpa2U0RCwgc2hhcGU/OiBbbnVtYmVyLCBudW1iZXIsIG51bWJlciwgbnVtYmVyXSxcbiAgICBkdHlwZT86IERhdGFUeXBlKTogVGVuc29yNEQge1xuICBhc3NlcnROb25OdWxsKHZhbHVlcyk7XG4gIGlmIChzaGFwZSAhPSBudWxsICYmIHNoYXBlLmxlbmd0aCAhPT0gNCkge1xuICAgIHRocm93IG5ldyBFcnJvcigndGVuc29yNGQoKSByZXF1aXJlcyBzaGFwZSB0byBoYXZlIGZvdXIgbnVtYmVycycpO1xuICB9XG4gIGNvbnN0IGluZmVycmVkU2hhcGUgPSBpbmZlclNoYXBlKHZhbHVlcywgZHR5cGUpO1xuICBpZiAoaW5mZXJyZWRTaGFwZS5sZW5ndGggIT09IDQgJiYgaW5mZXJyZWRTaGFwZS5sZW5ndGggIT09IDEpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICd0ZW5zb3I0ZCgpIHJlcXVpcmVzIHZhbHVlcyB0byBiZSBudW1iZXJbXVtdW11bXSBvciBmbGF0L1R5cGVkQXJyYXknKTtcbiAgfVxuICBpZiAoaW5mZXJyZWRTaGFwZS5sZW5ndGggPT09IDEgJiYgc2hhcGUgPT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ3RlbnNvcjRkKCkgcmVxdWlyZXMgc2hhcGUgdG8gYmUgcHJvdmlkZWQgd2hlbiBgdmFsdWVzYCAnICtcbiAgICAgICAgJ2FyZSBhIGZsYXQgYXJyYXknKTtcbiAgfVxuICByZXR1cm4gbWFrZVRlbnNvcih2YWx1ZXMsIHNoYXBlLCBpbmZlcnJlZFNoYXBlLCBkdHlwZSkgYXMgVGVuc29yNEQ7XG59XG4iXX0=","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Unpack } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { op } from './operation';\n/**\n * Unstacks a `tf.Tensor` of rank-`R` into a list of rank-`(R-1)` `tf.Tensor`s.\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * tf.unstack(a).forEach(tensor => tensor.print());\n * ```\n *\n * @param x A tensor object.\n * @param axis The axis to unstack along. Defaults to 0 (the first dim).\n *\n * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}\n */\nfunction unstack_(x, axis = 0) {\n    const $x = convertToTensor(x, 'x', 'unstack', 'string_or_numeric');\n    util.assert(axis >= -$x.shape.length && axis < $x.shape.length, () => `Axis = ${axis} is not in [-${$x.shape.length}, ${$x.shape.length})`);\n    const inputs = { value: $x };\n    const attrs = { axis };\n    return ENGINE.runKernel(Unpack, inputs, attrs);\n}\nexport const unstack = op({ unstack_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5zdGFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29yZS9zcmMvb3BzL3Vuc3RhY2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUNqQyxPQUFPLEVBQUMsTUFBTSxFQUE0QixNQUFNLGlCQUFpQixDQUFDO0FBSWxFLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUVuRCxPQUFPLEtBQUssSUFBSSxNQUFNLFNBQVMsQ0FBQztBQUVoQyxPQUFPLEVBQUMsRUFBRSxFQUFDLE1BQU0sYUFBYSxDQUFDO0FBRS9COzs7Ozs7Ozs7Ozs7O0dBYUc7QUFDSCxTQUFTLFFBQVEsQ0FBQyxDQUFvQixFQUFFLElBQUksR0FBRyxDQUFDO0lBQzlDLE1BQU0sRUFBRSxHQUFHLGVBQWUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLFNBQVMsRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO0lBQ25FLElBQUksQ0FBQyxNQUFNLENBQ1AsSUFBSSxJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxNQUFNLElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUNsRCxHQUFHLEVBQUUsQ0FDRCxVQUFVLElBQUksZ0JBQWdCLEVBQUUsQ0FBQyxLQUFLLENBQUMsTUFBTSxLQUFLLEVBQUUsQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUU5RSxNQUFNLE1BQU0sR0FBaUIsRUFBQyxLQUFLLEVBQUUsRUFBRSxFQUFDLENBQUM7SUFDekMsTUFBTSxLQUFLLEdBQWdCLEVBQUMsSUFBSSxFQUFDLENBQUM7SUFFbEMsT0FBTyxNQUFNLENBQUMsU0FBUyxDQUNuQixNQUFNLEVBQUUsTUFBOEIsRUFBRSxLQUEyQixDQUFDLENBQUM7QUFDM0UsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLE9BQU8sR0FBRyxFQUFFLENBQUMsRUFBQyxRQUFRLEVBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0VOR0lORX0gZnJvbSAnLi4vZW5naW5lJztcbmltcG9ydCB7VW5wYWNrLCBVbnBhY2tBdHRycywgVW5wYWNrSW5wdXRzfSBmcm9tICcuLi9rZXJuZWxfbmFtZXMnO1xuaW1wb3J0IHtOYW1lZEF0dHJNYXB9IGZyb20gJy4uL2tlcm5lbF9yZWdpc3RyeSc7XG5pbXBvcnQge1RlbnNvcn0gZnJvbSAnLi4vdGVuc29yJztcbmltcG9ydCB7TmFtZWRUZW5zb3JNYXB9IGZyb20gJy4uL3RlbnNvcl90eXBlcyc7XG5pbXBvcnQge2NvbnZlcnRUb1RlbnNvcn0gZnJvbSAnLi4vdGVuc29yX3V0aWxfZW52JztcbmltcG9ydCB7VGVuc29yTGlrZX0gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0ICogYXMgdXRpbCBmcm9tICcuLi91dGlsJztcblxuaW1wb3J0IHtvcH0gZnJvbSAnLi9vcGVyYXRpb24nO1xuXG4vKipcbiAqIFVuc3RhY2tzIGEgYHRmLlRlbnNvcmAgb2YgcmFuay1gUmAgaW50byBhIGxpc3Qgb2YgcmFuay1gKFItMSlgIGB0Zi5UZW5zb3Jgcy5cbiAqXG4gKiBgYGBqc1xuICogY29uc3QgYSA9IHRmLnRlbnNvcjJkKFsxLCAyLCAzLCA0XSwgWzIsIDJdKTtcbiAqXG4gKiB0Zi51bnN0YWNrKGEpLmZvckVhY2godGVuc29yID0+IHRlbnNvci5wcmludCgpKTtcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB4IEEgdGVuc29yIG9iamVjdC5cbiAqIEBwYXJhbSBheGlzIFRoZSBheGlzIHRvIHVuc3RhY2sgYWxvbmcuIERlZmF1bHRzIHRvIDAgKHRoZSBmaXJzdCBkaW0pLlxuICpcbiAqIEBkb2Mge2hlYWRpbmc6ICdUZW5zb3JzJywgc3ViaGVhZGluZzogJ1NsaWNpbmcgYW5kIEpvaW5pbmcnfVxuICovXG5mdW5jdGlvbiB1bnN0YWNrXyh4OiBUZW5zb3J8VGVuc29yTGlrZSwgYXhpcyA9IDApOiBUZW5zb3JbXSB7XG4gIGNvbnN0ICR4ID0gY29udmVydFRvVGVuc29yKHgsICd4JywgJ3Vuc3RhY2snLCAnc3RyaW5nX29yX251bWVyaWMnKTtcbiAgdXRpbC5hc3NlcnQoXG4gICAgICBheGlzID49IC0keC5zaGFwZS5sZW5ndGggJiYgYXhpcyA8ICR4LnNoYXBlLmxlbmd0aCxcbiAgICAgICgpID0+XG4gICAgICAgICAgYEF4aXMgPSAke2F4aXN9IGlzIG5vdCBpbiBbLSR7JHguc2hhcGUubGVuZ3RofSwgJHskeC5zaGFwZS5sZW5ndGh9KWApO1xuXG4gIGNvbnN0IGlucHV0czogVW5wYWNrSW5wdXRzID0ge3ZhbHVlOiAkeH07XG4gIGNvbnN0IGF0dHJzOiBVbnBhY2tBdHRycyA9IHtheGlzfTtcblxuICByZXR1cm4gRU5HSU5FLnJ1bktlcm5lbChcbiAgICAgIFVucGFjaywgaW5wdXRzIGFzIHt9IGFzIE5hbWVkVGVuc29yTWFwLCBhdHRycyBhcyB7fSBhcyBOYW1lZEF0dHJNYXApO1xufVxuXG5leHBvcnQgY29uc3QgdW5zdGFjayA9IG9wKHt1bnN0YWNrX30pO1xuIl19","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { CropAndResize } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport * as util from '../../util';\nimport { op } from '../operation';\n/**\n * Extracts crops from the input image tensor and resizes them using bilinear\n * sampling or nearest neighbor sampling (possibly with aspect ratio change)\n * to a common output size specified by cropSize.\n *\n * @param image 4d tensor of shape `[batch,imageHeight,imageWidth, depth]`,\n *     where imageHeight and imageWidth must be positive, specifying the\n *     batch of images from which to take crops\n * @param boxes 2d float32 tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the normalized\n *     coordinates of the box in the boxInd[i]'th image in the batch\n * @param boxInd 1d int32 tensor of shape `[numBoxes]` with values in range\n *     `[0, batch)` that specifies the image that the `i`-th box refers to.\n * @param cropSize 1d int32 tensor of 2 elements `[cropHeigh, cropWidth]`\n *     specifying the size to which all crops are resized to.\n * @param method Optional string from `'bilinear' | 'nearest'`,\n *     defaults to bilinear, which specifies the sampling method for resizing\n * @param extrapolationValue A threshold for deciding when to remove boxes based\n *     on score. Defaults to 0.\n * @return A 4D tensor of the shape `[numBoxes,cropHeight,cropWidth,depth]`\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction cropAndResize_(image, boxes, boxInd, cropSize, method = 'bilinear', extrapolationValue = 0) {\n    const $image = convertToTensor(image, 'image', 'cropAndResize');\n    const $boxes = convertToTensor(boxes, 'boxes', 'cropAndResize', 'float32');\n    const $boxInd = convertToTensor(boxInd, 'boxInd', 'cropAndResize', 'int32');\n    const numBoxes = $boxes.shape[0];\n    util.assert($image.rank === 4, () => 'Error in cropAndResize: image must be rank 4,' +\n        `but got rank ${$image.rank}.`);\n    util.assert($boxes.rank === 2 && $boxes.shape[1] === 4, () => `Error in cropAndResize: boxes must be have size [${numBoxes},4] ` +\n        `but had shape ${$boxes.shape}.`);\n    util.assert($boxInd.rank === 1 && $boxInd.shape[0] === numBoxes, () => `Error in cropAndResize: boxInd must be have size [${numBoxes}] ` +\n        `but had shape ${$boxes.shape}.`);\n    util.assert(cropSize.length === 2, () => `Error in cropAndResize: cropSize must be of length 2, but got ` +\n        `length ${cropSize.length}.`);\n    util.assert(cropSize[0] >= 1 && cropSize[1] >= 1, () => `cropSize must be atleast [1,1], but was ${cropSize}`);\n    util.assert(method === 'bilinear' || method === 'nearest', () => `method must be bilinear or nearest, but was ${method}`);\n    const inputs = { image: $image, boxes: $boxes, boxInd: $boxInd };\n    const attrs = { method, extrapolationValue, cropSize };\n    const res = ENGINE.runKernel(CropAndResize, inputs, attrs);\n    return res;\n}\nexport const cropAndResize = op({ cropAndResize_ });\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { FlipLeftRight } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport * as util from '../../util';\nimport { op } from '../operation';\n/**\n * Flips the image left to right. Currently available in the CPU, WebGL, and\n * WASM backends.\n *\n * @param image 4d tensor of shape `[batch, imageHeight, imageWidth, depth]`.\n */\n/** @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'} */\nfunction flipLeftRight_(image) {\n    const $image = convertToTensor(image, 'image', 'flipLeftRight', 'float32');\n    util.assert($image.rank === 4, () => 'Error in flipLeftRight: image must be rank 4,' +\n        `but got rank ${$image.rank}.`);\n    const inputs = { image: $image };\n    const res = ENGINE.runKernel(FlipLeftRight, inputs, {});\n    return res;\n}\nexport const flipLeftRight = op({ flipLeftRight_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxpcF9sZWZ0X3JpZ2h0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy9vcHMvaW1hZ2UvZmxpcF9sZWZ0X3JpZ2h0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxjQUFjLENBQUM7QUFDcEMsT0FBTyxFQUFDLGFBQWEsRUFBc0IsTUFBTSxvQkFBb0IsQ0FBQztBQUd0RSxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFFdEQsT0FBTyxLQUFLLElBQUksTUFBTSxZQUFZLENBQUM7QUFDbkMsT0FBTyxFQUFDLEVBQUUsRUFBQyxNQUFNLGNBQWMsQ0FBQztBQUVoQzs7Ozs7R0FLRztBQUNILDZFQUE2RTtBQUM3RSxTQUFTLGNBQWMsQ0FBQyxLQUEwQjtJQUNoRCxNQUFNLE1BQU0sR0FBRyxlQUFlLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFFM0UsSUFBSSxDQUFDLE1BQU0sQ0FDUCxNQUFNLENBQUMsSUFBSSxLQUFLLENBQUMsRUFDakIsR0FBRyxFQUFFLENBQUMsK0NBQStDO1FBQ2pELGdCQUFnQixNQUFNLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQztJQUV4QyxNQUFNLE1BQU0sR0FBd0IsRUFBQyxLQUFLLEVBQUUsTUFBTSxFQUFDLENBQUM7SUFDcEQsTUFBTSxHQUFHLEdBQ0wsTUFBTSxDQUFDLFNBQVMsQ0FBQyxhQUFhLEVBQUUsTUFBOEIsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUN4RSxPQUFPLEdBQWUsQ0FBQztBQUN6QixDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHLEVBQUUsQ0FBQyxFQUFDLGNBQWMsRUFBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7RU5HSU5FfSBmcm9tICcuLi8uLi9lbmdpbmUnO1xuaW1wb3J0IHtGbGlwTGVmdFJpZ2h0LCBGbGlwTGVmdFJpZ2h0SW5wdXRzfSBmcm9tICcuLi8uLi9rZXJuZWxfbmFtZXMnO1xuaW1wb3J0IHtUZW5zb3I0RH0gZnJvbSAnLi4vLi4vdGVuc29yJztcbmltcG9ydCB7TmFtZWRUZW5zb3JNYXB9IGZyb20gJy4uLy4uL3RlbnNvcl90eXBlcyc7XG5pbXBvcnQge2NvbnZlcnRUb1RlbnNvcn0gZnJvbSAnLi4vLi4vdGVuc29yX3V0aWxfZW52JztcbmltcG9ydCB7VGVuc29yTGlrZX0gZnJvbSAnLi4vLi4vdHlwZXMnO1xuaW1wb3J0ICogYXMgdXRpbCBmcm9tICcuLi8uLi91dGlsJztcbmltcG9ydCB7b3B9IGZyb20gJy4uL29wZXJhdGlvbic7XG5cbi8qKlxuICogRmxpcHMgdGhlIGltYWdlIGxlZnQgdG8gcmlnaHQuIEN1cnJlbnRseSBhdmFpbGFibGUgaW4gdGhlIENQVSwgV2ViR0wsIGFuZFxuICogV0FTTSBiYWNrZW5kcy5cbiAqXG4gKiBAcGFyYW0gaW1hZ2UgNGQgdGVuc29yIG9mIHNoYXBlIGBbYmF0Y2gsIGltYWdlSGVpZ2h0LCBpbWFnZVdpZHRoLCBkZXB0aF1gLlxuICovXG4vKiogQGRvYyB7aGVhZGluZzogJ09wZXJhdGlvbnMnLCBzdWJoZWFkaW5nOiAnSW1hZ2VzJywgbmFtZXNwYWNlOiAnaW1hZ2UnfSAqL1xuZnVuY3Rpb24gZmxpcExlZnRSaWdodF8oaW1hZ2U6IFRlbnNvcjREfFRlbnNvckxpa2UpOiBUZW5zb3I0RCB7XG4gIGNvbnN0ICRpbWFnZSA9IGNvbnZlcnRUb1RlbnNvcihpbWFnZSwgJ2ltYWdlJywgJ2ZsaXBMZWZ0UmlnaHQnLCAnZmxvYXQzMicpO1xuXG4gIHV0aWwuYXNzZXJ0KFxuICAgICAgJGltYWdlLnJhbmsgPT09IDQsXG4gICAgICAoKSA9PiAnRXJyb3IgaW4gZmxpcExlZnRSaWdodDogaW1hZ2UgbXVzdCBiZSByYW5rIDQsJyArXG4gICAgICAgICAgYGJ1dCBnb3QgcmFuayAkeyRpbWFnZS5yYW5rfS5gKTtcblxuICBjb25zdCBpbnB1dHM6IEZsaXBMZWZ0UmlnaHRJbnB1dHMgPSB7aW1hZ2U6ICRpbWFnZX07XG4gIGNvbnN0IHJlcyA9XG4gICAgICBFTkdJTkUucnVuS2VybmVsKEZsaXBMZWZ0UmlnaHQsIGlucHV0cyBhcyB7fSBhcyBOYW1lZFRlbnNvck1hcCwge30pO1xuICByZXR1cm4gcmVzIGFzIFRlbnNvcjREO1xufVxuXG5leHBvcnQgY29uc3QgZmxpcExlZnRSaWdodCA9IG9wKHtmbGlwTGVmdFJpZ2h0X30pO1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { convertToTensor } from '../../tensor_util_env';\nimport * as util from '../../util';\nimport { op } from '../operation';\nimport { tile } from '../tile';\n/**\n * Converts images from grayscale to RGB format.\n *\n * @param image A grayscale tensor to convert. The `image`'s last dimension must\n *     be size 1 with at least a two-dimensional shape.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction grayscaleToRGB_(image) {\n    const $image = convertToTensor(image, 'image', 'grayscaleToRGB');\n    const lastDimsIdx = $image.rank - 1;\n    const lastDims = $image.shape[lastDimsIdx];\n    util.assert($image.rank >= 2, () => 'Error in grayscaleToRGB: images must be at least rank 2, ' +\n        `but got rank ${$image.rank}.`);\n    util.assert(lastDims === 1, () => 'Error in grayscaleToRGB: last dimension of a grayscale image ' +\n        `should be size 1, but got size ${lastDims}.`);\n    const reps = new Array($image.rank);\n    reps.fill(1, 0, lastDimsIdx);\n    reps[lastDimsIdx] = 3;\n    return tile($image, reps);\n}\nexport const grayscaleToRGB = op({ grayscaleToRGB_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JheXNjYWxlX3RvX3JnYi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29yZS9zcmMvb3BzL2ltYWdlL2dyYXlzY2FsZV90b19yZ2IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBR0gsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRXRELE9BQU8sS0FBSyxJQUFJLE1BQU0sWUFBWSxDQUFDO0FBRW5DLE9BQU8sRUFBQyxFQUFFLEVBQUMsTUFBTSxjQUFjLENBQUM7QUFDaEMsT0FBTyxFQUFDLElBQUksRUFBQyxNQUFNLFNBQVMsQ0FBQztBQUU3Qjs7Ozs7OztHQU9HO0FBQ0gsU0FBUyxlQUFlLENBQ1csS0FBbUI7SUFDcEQsTUFBTSxNQUFNLEdBQUcsZUFBZSxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztJQUVqRSxNQUFNLFdBQVcsR0FBRyxNQUFNLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQztJQUNwQyxNQUFNLFFBQVEsR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBRTNDLElBQUksQ0FBQyxNQUFNLENBQ1AsTUFBTSxDQUFDLElBQUksSUFBSSxDQUFDLEVBQ2hCLEdBQUcsRUFBRSxDQUFDLDJEQUEyRDtRQUM3RCxnQkFBZ0IsTUFBTSxDQUFDLElBQUksR0FBRyxDQUFDLENBQUM7SUFFeEMsSUFBSSxDQUFDLE1BQU0sQ0FDUCxRQUFRLEtBQUssQ0FBQyxFQUNkLEdBQUcsRUFBRSxDQUFDLCtEQUErRDtRQUNqRSxrQ0FBa0MsUUFBUSxHQUFHLENBQUMsQ0FBQztJQUV2RCxNQUFNLElBQUksR0FBRyxJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFcEMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQzdCLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7SUFFdEIsT0FBTyxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQzVCLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLEVBQUMsZUFBZSxFQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtUZW5zb3IyRCwgVGVuc29yM0QsIFRlbnNvcjRELCBUZW5zb3I1RCwgVGVuc29yNkR9IGZyb20gJy4uLy4uL3RlbnNvcic7XG5pbXBvcnQge2NvbnZlcnRUb1RlbnNvcn0gZnJvbSAnLi4vLi4vdGVuc29yX3V0aWxfZW52JztcbmltcG9ydCB7VGVuc29yTGlrZX0gZnJvbSAnLi4vLi4vdHlwZXMnO1xuaW1wb3J0ICogYXMgdXRpbCBmcm9tICcuLi8uLi91dGlsJztcblxuaW1wb3J0IHtvcH0gZnJvbSAnLi4vb3BlcmF0aW9uJztcbmltcG9ydCB7dGlsZX0gZnJvbSAnLi4vdGlsZSc7XG5cbi8qKlxuICogQ29udmVydHMgaW1hZ2VzIGZyb20gZ3JheXNjYWxlIHRvIFJHQiBmb3JtYXQuXG4gKlxuICogQHBhcmFtIGltYWdlIEEgZ3JheXNjYWxlIHRlbnNvciB0byBjb252ZXJ0LiBUaGUgYGltYWdlYCdzIGxhc3QgZGltZW5zaW9uIG11c3RcbiAqICAgICBiZSBzaXplIDEgd2l0aCBhdCBsZWFzdCBhIHR3by1kaW1lbnNpb25hbCBzaGFwZS5cbiAqXG4gKiBAZG9jIHtoZWFkaW5nOiAnT3BlcmF0aW9ucycsIHN1YmhlYWRpbmc6ICdJbWFnZXMnLCBuYW1lc3BhY2U6ICdpbWFnZSd9XG4gKi9cbmZ1bmN0aW9uIGdyYXlzY2FsZVRvUkdCXzxUIGV4dGVuZHMgVGVuc29yMkR8VGVuc29yM0R8VGVuc29yNER8VGVuc29yNUR8XG4gICAgICAgICAgICAgICAgICAgICAgICAgVGVuc29yNkQ+KGltYWdlOiBUfFRlbnNvckxpa2UpOiBUIHtcbiAgY29uc3QgJGltYWdlID0gY29udmVydFRvVGVuc29yKGltYWdlLCAnaW1hZ2UnLCAnZ3JheXNjYWxlVG9SR0InKTtcblxuICBjb25zdCBsYXN0RGltc0lkeCA9ICRpbWFnZS5yYW5rIC0gMTtcbiAgY29uc3QgbGFzdERpbXMgPSAkaW1hZ2Uuc2hhcGVbbGFzdERpbXNJZHhdO1xuXG4gIHV0aWwuYXNzZXJ0KFxuICAgICAgJGltYWdlLnJhbmsgPj0gMixcbiAgICAgICgpID0+ICdFcnJvciBpbiBncmF5c2NhbGVUb1JHQjogaW1hZ2VzIG11c3QgYmUgYXQgbGVhc3QgcmFuayAyLCAnICtcbiAgICAgICAgICBgYnV0IGdvdCByYW5rICR7JGltYWdlLnJhbmt9LmApO1xuXG4gIHV0aWwuYXNzZXJ0KFxuICAgICAgbGFzdERpbXMgPT09IDEsXG4gICAgICAoKSA9PiAnRXJyb3IgaW4gZ3JheXNjYWxlVG9SR0I6IGxhc3QgZGltZW5zaW9uIG9mIGEgZ3JheXNjYWxlIGltYWdlICcgK1xuICAgICAgICAgIGBzaG91bGQgYmUgc2l6ZSAxLCBidXQgZ290IHNpemUgJHtsYXN0RGltc30uYCk7XG5cbiAgY29uc3QgcmVwcyA9IG5ldyBBcnJheSgkaW1hZ2UucmFuayk7XG5cbiAgcmVwcy5maWxsKDEsIDAsIGxhc3REaW1zSWR4KTtcbiAgcmVwc1tsYXN0RGltc0lkeF0gPSAzO1xuXG4gIHJldHVybiB0aWxlKCRpbWFnZSwgcmVwcyk7XG59XG5cbmV4cG9ydCBjb25zdCBncmF5c2NhbGVUb1JHQiA9IG9wKHtncmF5c2NhbGVUb1JHQl99KTtcbiJdfQ==","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { RotateWithOffset } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport * as util from '../../util';\nimport { op } from '../operation';\n/**\n * Rotates the input image tensor counter-clockwise with an optional offset\n * center of rotation. Currently available in the CPU, WebGL, and WASM backends.\n *\n * @param image 4d tensor of shape `[batch, imageHeight, imageWidth, depth]`.\n * @param radians The amount of rotation.\n * @param fillValue The value to fill in the empty space leftover\n *     after rotation. Can be either a single grayscale value (0-255), or an\n *     array of three numbers `[red, green, blue]` specifying the red, green,\n *     and blue channels. Defaults to `0` (black).\n * @param center The center of rotation. Can be either a single value (0-1), or\n *     an array of two numbers `[centerX, centerY]`. Defaults to `0.5` (rotates\n *     the image around its center).\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction rotateWithOffset_(image, radians, fillValue = 0, center = 0.5) {\n    const $image = convertToTensor(image, 'image', 'rotateWithOffset', 'float32');\n    util.assert($image.rank === 4, () => 'Error in rotateWithOffset: image must be rank 4,' +\n        `but got rank ${$image.rank}.`);\n    const inputs = { image: $image };\n    const attrs = { radians, fillValue, center };\n    const res = ENGINE.runKernel(RotateWithOffset, inputs, attrs);\n    return res;\n}\nexport const rotateWithOffset = op({ rotateWithOffset_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm90YXRlX3dpdGhfb2Zmc2V0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy9vcHMvaW1hZ2Uvcm90YXRlX3dpdGhfb2Zmc2V0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxjQUFjLENBQUM7QUFDcEMsT0FBTyxFQUFDLGdCQUFnQixFQUFnRCxNQUFNLG9CQUFvQixDQUFDO0FBSW5HLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUV0RCxPQUFPLEtBQUssSUFBSSxNQUFNLFlBQVksQ0FBQztBQUVuQyxPQUFPLEVBQUMsRUFBRSxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBRWhDOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUNILFNBQVMsaUJBQWlCLENBQ3RCLEtBQTBCLEVBQUUsT0FBZSxFQUMzQyxZQUE2QyxDQUFDLEVBQzlDLFNBQWtDLEdBQUc7SUFDdkMsTUFBTSxNQUFNLEdBQUcsZUFBZSxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFFOUUsSUFBSSxDQUFDLE1BQU0sQ0FDUCxNQUFNLENBQUMsSUFBSSxLQUFLLENBQUMsRUFDakIsR0FBRyxFQUFFLENBQUMsa0RBQWtEO1FBQ3BELGdCQUFnQixNQUFNLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQztJQUV4QyxNQUFNLE1BQU0sR0FBMkIsRUFBQyxLQUFLLEVBQUUsTUFBTSxFQUFDLENBQUM7SUFDdkQsTUFBTSxLQUFLLEdBQTBCLEVBQUMsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUMsQ0FBQztJQUNsRSxNQUFNLEdBQUcsR0FBRyxNQUFNLENBQUMsU0FBUyxDQUN4QixnQkFBZ0IsRUFBRSxNQUE4QixFQUNoRCxLQUEyQixDQUFDLENBQUM7SUFDakMsT0FBTyxHQUFlLENBQUM7QUFDekIsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLEVBQUUsQ0FBQyxFQUFDLGlCQUFpQixFQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtFTkdJTkV9IGZyb20gJy4uLy4uL2VuZ2luZSc7XG5pbXBvcnQge1JvdGF0ZVdpdGhPZmZzZXQsIFJvdGF0ZVdpdGhPZmZzZXRBdHRycywgUm90YXRlV2l0aE9mZnNldElucHV0c30gZnJvbSAnLi4vLi4va2VybmVsX25hbWVzJztcbmltcG9ydCB7TmFtZWRBdHRyTWFwfSBmcm9tICcuLi8uLi9rZXJuZWxfcmVnaXN0cnknO1xuaW1wb3J0IHtUZW5zb3I0RH0gZnJvbSAnLi4vLi4vdGVuc29yJztcbmltcG9ydCB7TmFtZWRUZW5zb3JNYXB9IGZyb20gJy4uLy4uL3RlbnNvcl90eXBlcyc7XG5pbXBvcnQge2NvbnZlcnRUb1RlbnNvcn0gZnJvbSAnLi4vLi4vdGVuc29yX3V0aWxfZW52JztcbmltcG9ydCB7VGVuc29yTGlrZX0gZnJvbSAnLi4vLi4vdHlwZXMnO1xuaW1wb3J0ICogYXMgdXRpbCBmcm9tICcuLi8uLi91dGlsJztcblxuaW1wb3J0IHtvcH0gZnJvbSAnLi4vb3BlcmF0aW9uJztcblxuLyoqXG4gKiBSb3RhdGVzIHRoZSBpbnB1dCBpbWFnZSB0ZW5zb3IgY291bnRlci1jbG9ja3dpc2Ugd2l0aCBhbiBvcHRpb25hbCBvZmZzZXRcbiAqIGNlbnRlciBvZiByb3RhdGlvbi4gQ3VycmVudGx5IGF2YWlsYWJsZSBpbiB0aGUgQ1BVLCBXZWJHTCwgYW5kIFdBU00gYmFja2VuZHMuXG4gKlxuICogQHBhcmFtIGltYWdlIDRkIHRlbnNvciBvZiBzaGFwZSBgW2JhdGNoLCBpbWFnZUhlaWdodCwgaW1hZ2VXaWR0aCwgZGVwdGhdYC5cbiAqIEBwYXJhbSByYWRpYW5zIFRoZSBhbW91bnQgb2Ygcm90YXRpb24uXG4gKiBAcGFyYW0gZmlsbFZhbHVlIFRoZSB2YWx1ZSB0byBmaWxsIGluIHRoZSBlbXB0eSBzcGFjZSBsZWZ0b3ZlclxuICogICAgIGFmdGVyIHJvdGF0aW9uLiBDYW4gYmUgZWl0aGVyIGEgc2luZ2xlIGdyYXlzY2FsZSB2YWx1ZSAoMC0yNTUpLCBvciBhblxuICogICAgIGFycmF5IG9mIHRocmVlIG51bWJlcnMgYFtyZWQsIGdyZWVuLCBibHVlXWAgc3BlY2lmeWluZyB0aGUgcmVkLCBncmVlbixcbiAqICAgICBhbmQgYmx1ZSBjaGFubmVscy4gRGVmYXVsdHMgdG8gYDBgIChibGFjaykuXG4gKiBAcGFyYW0gY2VudGVyIFRoZSBjZW50ZXIgb2Ygcm90YXRpb24uIENhbiBiZSBlaXRoZXIgYSBzaW5nbGUgdmFsdWUgKDAtMSksIG9yXG4gKiAgICAgYW4gYXJyYXkgb2YgdHdvIG51bWJlcnMgYFtjZW50ZXJYLCBjZW50ZXJZXWAuIERlZmF1bHRzIHRvIGAwLjVgIChyb3RhdGVzXG4gKiAgICAgdGhlIGltYWdlIGFyb3VuZCBpdHMgY2VudGVyKS5cbiAqXG4gKiBAZG9jIHtoZWFkaW5nOiAnT3BlcmF0aW9ucycsIHN1YmhlYWRpbmc6ICdJbWFnZXMnLCBuYW1lc3BhY2U6ICdpbWFnZSd9XG4gKi9cbmZ1bmN0aW9uIHJvdGF0ZVdpdGhPZmZzZXRfKFxuICAgIGltYWdlOiBUZW5zb3I0RHxUZW5zb3JMaWtlLCByYWRpYW5zOiBudW1iZXIsXG4gICAgZmlsbFZhbHVlOiBudW1iZXJ8W251bWJlciwgbnVtYmVyLCBudW1iZXJdID0gMCxcbiAgICBjZW50ZXI6IG51bWJlcnxbbnVtYmVyLCBudW1iZXJdID0gMC41KTogVGVuc29yNEQge1xuICBjb25zdCAkaW1hZ2UgPSBjb252ZXJ0VG9UZW5zb3IoaW1hZ2UsICdpbWFnZScsICdyb3RhdGVXaXRoT2Zmc2V0JywgJ2Zsb2F0MzInKTtcblxuICB1dGlsLmFzc2VydChcbiAgICAgICRpbWFnZS5yYW5rID09PSA0LFxuICAgICAgKCkgPT4gJ0Vycm9yIGluIHJvdGF0ZVdpdGhPZmZzZXQ6IGltYWdlIG11c3QgYmUgcmFuayA0LCcgK1xuICAgICAgICAgIGBidXQgZ290IHJhbmsgJHskaW1hZ2UucmFua30uYCk7XG5cbiAgY29uc3QgaW5wdXRzOiBSb3RhdGVXaXRoT2Zmc2V0SW5wdXRzID0ge2ltYWdlOiAkaW1hZ2V9O1xuICBjb25zdCBhdHRyczogUm90YXRlV2l0aE9mZnNldEF0dHJzID0ge3JhZGlhbnMsIGZpbGxWYWx1ZSwgY2VudGVyfTtcbiAgY29uc3QgcmVzID0gRU5HSU5FLnJ1bktlcm5lbChcbiAgICAgIFJvdGF0ZVdpdGhPZmZzZXQsIGlucHV0cyBhcyB7fSBhcyBOYW1lZFRlbnNvck1hcCxcbiAgICAgIGF0dHJzIGFzIHt9IGFzIE5hbWVkQXR0ck1hcCk7XG4gIHJldHVybiByZXMgYXMgVGVuc29yNEQ7XG59XG5cbmV4cG9ydCBjb25zdCByb3RhdGVXaXRoT2Zmc2V0ID0gb3Aoe3JvdGF0ZVdpdGhPZmZzZXRffSk7XG4iXX0=","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as util from '../util';\nfunction nonMaxSuppSanityCheck(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma) {\n    if (iouThreshold == null) {\n        iouThreshold = 0.5;\n    }\n    if (scoreThreshold == null) {\n        scoreThreshold = Number.NEGATIVE_INFINITY;\n    }\n    if (softNmsSigma == null) {\n        softNmsSigma = 0.0;\n    }\n    const numBoxes = boxes.shape[0];\n    maxOutputSize = Math.min(maxOutputSize, numBoxes);\n    util.assert(0 <= iouThreshold && iouThreshold <= 1, () => `iouThreshold must be in [0, 1], but was '${iouThreshold}'`);\n    util.assert(boxes.rank === 2, () => `boxes must be a 2D tensor, but was of rank '${boxes.rank}'`);\n    util.assert(boxes.shape[1] === 4, () => `boxes must have 4 columns, but 2nd dimension was ${boxes.shape[1]}`);\n    util.assert(scores.rank === 1, () => 'scores must be a 1D tensor');\n    util.assert(scores.shape[0] === numBoxes, () => `scores has incompatible shape with boxes. Expected ${numBoxes}, ` +\n        `but was ${scores.shape[0]}`);\n    util.assert(0 <= softNmsSigma && softNmsSigma <= 1, () => `softNmsSigma must be in [0, 1], but was '${softNmsSigma}'`);\n    return { maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma };\n}\nexport { nonMaxSuppSanityCheck };\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9ubWF4X3V0aWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL29wcy9ub25tYXhfdXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFHSCxPQUFPLEtBQUssSUFBSSxNQUFNLFNBQVMsQ0FBQztBQUVoQyxTQUFTLHFCQUFxQixDQUMxQixLQUFlLEVBQUUsTUFBZ0IsRUFBRSxhQUFxQixFQUN4RCxZQUFvQixFQUFFLGNBQXNCLEVBQUUsWUFBcUI7SUFNckUsSUFBSSxZQUFZLElBQUksSUFBSSxFQUFFO1FBQ3hCLFlBQVksR0FBRyxHQUFHLENBQUM7S0FDcEI7SUFDRCxJQUFJLGNBQWMsSUFBSSxJQUFJLEVBQUU7UUFDMUIsY0FBYyxHQUFHLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQztLQUMzQztJQUNELElBQUksWUFBWSxJQUFJLElBQUksRUFBRTtRQUN4QixZQUFZLEdBQUcsR0FBRyxDQUFDO0tBQ3BCO0lBRUQsTUFBTSxRQUFRLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNoQyxhQUFhLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFFbEQsSUFBSSxDQUFDLE1BQU0sQ0FDUCxDQUFDLElBQUksWUFBWSxJQUFJLFlBQVksSUFBSSxDQUFDLEVBQ3RDLEdBQUcsRUFBRSxDQUFDLDRDQUE0QyxZQUFZLEdBQUcsQ0FBQyxDQUFDO0lBQ3ZFLElBQUksQ0FBQyxNQUFNLENBQ1AsS0FBSyxDQUFDLElBQUksS0FBSyxDQUFDLEVBQ2hCLEdBQUcsRUFBRSxDQUFDLCtDQUErQyxLQUFLLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQztJQUN4RSxJQUFJLENBQUMsTUFBTSxDQUNQLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxFQUNwQixHQUFHLEVBQUUsQ0FDRCxvREFBb0QsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDOUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxLQUFLLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDO0lBQ25FLElBQUksQ0FBQyxNQUFNLENBQ1AsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxRQUFRLEVBQzVCLEdBQUcsRUFBRSxDQUFDLHNEQUFzRCxRQUFRLElBQUk7UUFDcEUsV0FBVyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUN0QyxJQUFJLENBQUMsTUFBTSxDQUNQLENBQUMsSUFBSSxZQUFZLElBQUksWUFBWSxJQUFJLENBQUMsRUFDdEMsR0FBRyxFQUFFLENBQUMsNENBQTRDLFlBQVksR0FBRyxDQUFDLENBQUM7SUFDdkUsT0FBTyxFQUFDLGFBQWEsRUFBRSxZQUFZLEVBQUUsY0FBYyxFQUFFLFlBQVksRUFBQyxDQUFDO0FBQ3JFLENBQUM7QUFFRCxPQUFPLEVBQUMscUJBQXFCLEVBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtUZW5zb3IxRCwgVGVuc29yMkR9IGZyb20gJy4uL3RlbnNvcic7XG5pbXBvcnQgKiBhcyB1dGlsIGZyb20gJy4uL3V0aWwnO1xuXG5mdW5jdGlvbiBub25NYXhTdXBwU2FuaXR5Q2hlY2soXG4gICAgYm94ZXM6IFRlbnNvcjJELCBzY29yZXM6IFRlbnNvcjFELCBtYXhPdXRwdXRTaXplOiBudW1iZXIsXG4gICAgaW91VGhyZXNob2xkOiBudW1iZXIsIHNjb3JlVGhyZXNob2xkOiBudW1iZXIsIHNvZnRObXNTaWdtYT86IG51bWJlcik6IHtcbiAgbWF4T3V0cHV0U2l6ZTogbnVtYmVyLFxuICBpb3VUaHJlc2hvbGQ6IG51bWJlcixcbiAgc2NvcmVUaHJlc2hvbGQ6IG51bWJlcixcbiAgc29mdE5tc1NpZ21hOiBudW1iZXJcbn0ge1xuICBpZiAoaW91VGhyZXNob2xkID09IG51bGwpIHtcbiAgICBpb3VUaHJlc2hvbGQgPSAwLjU7XG4gIH1cbiAgaWYgKHNjb3JlVGhyZXNob2xkID09IG51bGwpIHtcbiAgICBzY29yZVRocmVzaG9sZCA9IE51bWJlci5ORUdBVElWRV9JTkZJTklUWTtcbiAgfVxuICBpZiAoc29mdE5tc1NpZ21hID09IG51bGwpIHtcbiAgICBzb2Z0Tm1zU2lnbWEgPSAwLjA7XG4gIH1cblxuICBjb25zdCBudW1Cb3hlcyA9IGJveGVzLnNoYXBlWzBdO1xuICBtYXhPdXRwdXRTaXplID0gTWF0aC5taW4obWF4T3V0cHV0U2l6ZSwgbnVtQm94ZXMpO1xuXG4gIHV0aWwuYXNzZXJ0KFxuICAgICAgMCA8PSBpb3VUaHJlc2hvbGQgJiYgaW91VGhyZXNob2xkIDw9IDEsXG4gICAgICAoKSA9PiBgaW91VGhyZXNob2xkIG11c3QgYmUgaW4gWzAsIDFdLCBidXQgd2FzICcke2lvdVRocmVzaG9sZH0nYCk7XG4gIHV0aWwuYXNzZXJ0KFxuICAgICAgYm94ZXMucmFuayA9PT0gMixcbiAgICAgICgpID0+IGBib3hlcyBtdXN0IGJlIGEgMkQgdGVuc29yLCBidXQgd2FzIG9mIHJhbmsgJyR7Ym94ZXMucmFua30nYCk7XG4gIHV0aWwuYXNzZXJ0KFxuICAgICAgYm94ZXMuc2hhcGVbMV0gPT09IDQsXG4gICAgICAoKSA9PlxuICAgICAgICAgIGBib3hlcyBtdXN0IGhhdmUgNCBjb2x1bW5zLCBidXQgMm5kIGRpbWVuc2lvbiB3YXMgJHtib3hlcy5zaGFwZVsxXX1gKTtcbiAgdXRpbC5hc3NlcnQoc2NvcmVzLnJhbmsgPT09IDEsICgpID0+ICdzY29yZXMgbXVzdCBiZSBhIDFEIHRlbnNvcicpO1xuICB1dGlsLmFzc2VydChcbiAgICAgIHNjb3Jlcy5zaGFwZVswXSA9PT0gbnVtQm94ZXMsXG4gICAgICAoKSA9PiBgc2NvcmVzIGhhcyBpbmNvbXBhdGlibGUgc2hhcGUgd2l0aCBib3hlcy4gRXhwZWN0ZWQgJHtudW1Cb3hlc30sIGAgK1xuICAgICAgICAgIGBidXQgd2FzICR7c2NvcmVzLnNoYXBlWzBdfWApO1xuICB1dGlsLmFzc2VydChcbiAgICAgIDAgPD0gc29mdE5tc1NpZ21hICYmIHNvZnRObXNTaWdtYSA8PSAxLFxuICAgICAgKCkgPT4gYHNvZnRObXNTaWdtYSBtdXN0IGJlIGluIFswLCAxXSwgYnV0IHdhcyAnJHtzb2Z0Tm1zU2lnbWF9J2ApO1xuICByZXR1cm4ge21heE91dHB1dFNpemUsIGlvdVRocmVzaG9sZCwgc2NvcmVUaHJlc2hvbGQsIHNvZnRObXNTaWdtYX07XG59XG5cbmV4cG9ydCB7bm9uTWF4U3VwcFNhbml0eUNoZWNrfTtcbiJdfQ==","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { NonMaxSuppressionV3 } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport { nonMaxSuppSanityCheck } from '../nonmax_util';\nimport { op } from '../operation';\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @return A 1D tensor with the selected box indices.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction nonMaxSuppression_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY) {\n    const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppression', 'float32');\n    const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppression', 'float32');\n    const inputs = nonMaxSuppSanityCheck($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold);\n    maxOutputSize = inputs.maxOutputSize;\n    iouThreshold = inputs.iouThreshold;\n    scoreThreshold = inputs.scoreThreshold;\n    const attrs = { maxOutputSize, iouThreshold, scoreThreshold };\n    return ENGINE.runKernel(NonMaxSuppressionV3, { boxes: $boxes, scores: $scores }, attrs);\n}\nexport const nonMaxSuppression = op({ nonMaxSuppression_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9uX21heF9zdXBwcmVzc2lvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29yZS9zcmMvb3BzL2ltYWdlL25vbl9tYXhfc3VwcHJlc3Npb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLGNBQWMsQ0FBQztBQUNwQyxPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUV2RCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFFdEQsT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDckQsT0FBTyxFQUFDLEVBQUUsRUFBQyxNQUFNLGNBQWMsQ0FBQztBQUVoQzs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FpQkc7QUFDSCxTQUFTLGtCQUFrQixDQUN2QixLQUEwQixFQUFFLE1BQTJCLEVBQ3ZELGFBQXFCLEVBQUUsWUFBWSxHQUFHLEdBQUcsRUFDekMsY0FBYyxHQUFHLE1BQU0sQ0FBQyxpQkFBaUI7SUFDM0MsTUFBTSxNQUFNLEdBQ1IsZUFBZSxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDcEUsTUFBTSxPQUFPLEdBQ1QsZUFBZSxDQUFDLE1BQU0sRUFBRSxRQUFRLEVBQUUsbUJBQW1CLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFFdEUsTUFBTSxNQUFNLEdBQUcscUJBQXFCLENBQ2hDLE1BQU0sRUFBRSxPQUFPLEVBQUUsYUFBYSxFQUFFLFlBQVksRUFBRSxjQUFjLENBQUMsQ0FBQztJQUNsRSxhQUFhLEdBQUcsTUFBTSxDQUFDLGFBQWEsQ0FBQztJQUNyQyxZQUFZLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQztJQUNuQyxjQUFjLEdBQUcsTUFBTSxDQUFDLGNBQWMsQ0FBQztJQUV2QyxNQUFNLEtBQUssR0FBRyxFQUFDLGFBQWEsRUFBRSxZQUFZLEVBQUUsY0FBYyxFQUFDLENBQUM7SUFDNUQsT0FBTyxNQUFNLENBQUMsU0FBUyxDQUNuQixtQkFBbUIsRUFBRSxFQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBQ3BFLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxFQUFFLENBQUMsRUFBQyxrQkFBa0IsRUFBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7RU5HSU5FfSBmcm9tICcuLi8uLi9lbmdpbmUnO1xuaW1wb3J0IHtOb25NYXhTdXBwcmVzc2lvblYzfSBmcm9tICcuLi8uLi9rZXJuZWxfbmFtZXMnO1xuaW1wb3J0IHtUZW5zb3IxRCwgVGVuc29yMkR9IGZyb20gJy4uLy4uL3RlbnNvcic7XG5pbXBvcnQge2NvbnZlcnRUb1RlbnNvcn0gZnJvbSAnLi4vLi4vdGVuc29yX3V0aWxfZW52JztcbmltcG9ydCB7VGVuc29yTGlrZX0gZnJvbSAnLi4vLi4vdHlwZXMnO1xuaW1wb3J0IHtub25NYXhTdXBwU2FuaXR5Q2hlY2t9IGZyb20gJy4uL25vbm1heF91dGlsJztcbmltcG9ydCB7b3B9IGZyb20gJy4uL29wZXJhdGlvbic7XG5cbi8qKlxuICogUGVyZm9ybXMgbm9uIG1heGltdW0gc3VwcHJlc3Npb24gb2YgYm91bmRpbmcgYm94ZXMgYmFzZWQgb25cbiAqIGlvdSAoaW50ZXJzZWN0aW9uIG92ZXIgdW5pb24pLlxuICpcbiAqIEBwYXJhbSBib3hlcyBhIDJkIHRlbnNvciBvZiBzaGFwZSBgW251bUJveGVzLCA0XWAuIEVhY2ggZW50cnkgaXNcbiAqICAgICBgW3kxLCB4MSwgeTIsIHgyXWAsIHdoZXJlIGAoeTEsIHgxKWAgYW5kIGAoeTIsIHgyKWAgYXJlIHRoZSBjb3JuZXJzIG9mXG4gKiAgICAgdGhlIGJvdW5kaW5nIGJveC5cbiAqIEBwYXJhbSBzY29yZXMgYSAxZCB0ZW5zb3IgcHJvdmlkaW5nIHRoZSBib3ggc2NvcmVzIG9mIHNoYXBlIGBbbnVtQm94ZXNdYC5cbiAqIEBwYXJhbSBtYXhPdXRwdXRTaXplIFRoZSBtYXhpbXVtIG51bWJlciBvZiBib3hlcyB0byBiZSBzZWxlY3RlZC5cbiAqIEBwYXJhbSBpb3VUaHJlc2hvbGQgQSBmbG9hdCByZXByZXNlbnRpbmcgdGhlIHRocmVzaG9sZCBmb3IgZGVjaWRpbmcgd2hldGhlclxuICogICAgIGJveGVzIG92ZXJsYXAgdG9vIG11Y2ggd2l0aCByZXNwZWN0IHRvIElPVS4gTXVzdCBiZSBiZXR3ZWVuIFswLCAxXS5cbiAqICAgICBEZWZhdWx0cyB0byAwLjUgKDUwJSBib3ggb3ZlcmxhcCkuXG4gKiBAcGFyYW0gc2NvcmVUaHJlc2hvbGQgQSB0aHJlc2hvbGQgZm9yIGRlY2lkaW5nIHdoZW4gdG8gcmVtb3ZlIGJveGVzIGJhc2VkXG4gKiAgICAgb24gc2NvcmUuIERlZmF1bHRzIHRvIC1pbmYsIHdoaWNoIG1lYW5zIGFueSBzY29yZSBpcyBhY2NlcHRlZC5cbiAqIEByZXR1cm4gQSAxRCB0ZW5zb3Igd2l0aCB0aGUgc2VsZWN0ZWQgYm94IGluZGljZXMuXG4gKlxuICogQGRvYyB7aGVhZGluZzogJ09wZXJhdGlvbnMnLCBzdWJoZWFkaW5nOiAnSW1hZ2VzJywgbmFtZXNwYWNlOiAnaW1hZ2UnfVxuICovXG5mdW5jdGlvbiBub25NYXhTdXBwcmVzc2lvbl8oXG4gICAgYm94ZXM6IFRlbnNvcjJEfFRlbnNvckxpa2UsIHNjb3JlczogVGVuc29yMUR8VGVuc29yTGlrZSxcbiAgICBtYXhPdXRwdXRTaXplOiBudW1iZXIsIGlvdVRocmVzaG9sZCA9IDAuNSxcbiAgICBzY29yZVRocmVzaG9sZCA9IE51bWJlci5ORUdBVElWRV9JTkZJTklUWSk6IFRlbnNvcjFEIHtcbiAgY29uc3QgJGJveGVzID1cbiAgICAgIGNvbnZlcnRUb1RlbnNvcihib3hlcywgJ2JveGVzJywgJ25vbk1heFN1cHByZXNzaW9uJywgJ2Zsb2F0MzInKTtcbiAgY29uc3QgJHNjb3JlcyA9XG4gICAgICBjb252ZXJ0VG9UZW5zb3Ioc2NvcmVzLCAnc2NvcmVzJywgJ25vbk1heFN1cHByZXNzaW9uJywgJ2Zsb2F0MzInKTtcblxuICBjb25zdCBpbnB1dHMgPSBub25NYXhTdXBwU2FuaXR5Q2hlY2soXG4gICAgICAkYm94ZXMsICRzY29yZXMsIG1heE91dHB1dFNpemUsIGlvdVRocmVzaG9sZCwgc2NvcmVUaHJlc2hvbGQpO1xuICBtYXhPdXRwdXRTaXplID0gaW5wdXRzLm1heE91dHB1dFNpemU7XG4gIGlvdVRocmVzaG9sZCA9IGlucHV0cy5pb3VUaHJlc2hvbGQ7XG4gIHNjb3JlVGhyZXNob2xkID0gaW5wdXRzLnNjb3JlVGhyZXNob2xkO1xuXG4gIGNvbnN0IGF0dHJzID0ge21heE91dHB1dFNpemUsIGlvdVRocmVzaG9sZCwgc2NvcmVUaHJlc2hvbGR9O1xuICByZXR1cm4gRU5HSU5FLnJ1bktlcm5lbChcbiAgICAgIE5vbk1heFN1cHByZXNzaW9uVjMsIHtib3hlczogJGJveGVzLCBzY29yZXM6ICRzY29yZXN9LCBhdHRycyk7XG59XG5cbmV4cG9ydCBjb25zdCBub25NYXhTdXBwcmVzc2lvbiA9IG9wKHtub25NYXhTdXBwcmVzc2lvbl99KTtcbiJdfQ==","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * Inserts a value into a sorted array. This method allows duplicate, meaning it\n * allows inserting duplicate value, in which case, the element will be inserted\n * at the lowest index of the value.\n * @param arr The array to modify.\n * @param element The element to insert.\n * @param comparator Optional. If no comparator is specified, elements are\n * compared using array_util.defaultComparator, which is suitable for Strings\n * and Numbers in ascending arrays. If the array contains multiple instances of\n * the target value, the left-most instance will be returned. To provide a\n * comparator, it should take 2 arguments to compare and return a negative,\n * zero, or a positive number.\n */\nexport function binaryInsert(arr, element, comparator) {\n    const index = binarySearch(arr, element, comparator);\n    const insertionPoint = index < 0 ? -(index + 1) : index;\n    arr.splice(insertionPoint, 0, element);\n}\n/**\n * Searches the array for the target using binary search, returns the index\n * of the found element, or position to insert if element not found. If no\n * comparator is specified, elements are compared using array_\n * util.defaultComparator, which is suitable for Strings and Numbers in\n * ascending arrays. If the array contains multiple instances of the target\n * value, the left-most instance will be returned.\n * @param arr The array to be searched in.\n * @param target The target to be searched for.\n * @param comparator Should take 2 arguments to compare and return a negative,\n *    zero, or a positive number.\n * @return Lowest index of the target value if found, otherwise the insertion\n *    point where the target should be inserted, in the form of\n *    (-insertionPoint - 1).\n */\nexport function binarySearch(arr, target, comparator) {\n    return binarySearch_(arr, target, comparator || defaultComparator);\n}\n/**\n * Compares its two arguments for order.\n * @param a The first element to be compared.\n * @param b The second element to be compared.\n * @return A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nfunction defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\nfunction binarySearch_(arr, target, comparator) {\n    let left = 0;\n    let right = arr.length;\n    let middle = 0;\n    let found = false;\n    while (left < right) {\n        middle = left + ((right - left) >>> 1);\n        const compareResult = comparator(target, arr[middle]);\n        if (compareResult > 0) {\n            left = middle + 1;\n        }\n        else {\n            right = middle;\n            // If compareResult is 0, the value is found. We record it is found,\n            // and then keep looking because there may be duplicate.\n            found = !compareResult;\n        }\n    }\n    return found ? left : -left - 1;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9uX21heF9zdXBwcmVzc2lvbl91dGlsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy9iYWNrZW5kcy9ub25fbWF4X3N1cHByZXNzaW9uX3V0aWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUg7Ozs7Ozs7Ozs7OztHQVlHO0FBQ0gsTUFBTSxVQUFVLFlBQVksQ0FDeEIsR0FBUSxFQUFFLE9BQVUsRUFBRSxVQUFtQztJQUMzRCxNQUFNLEtBQUssR0FBRyxZQUFZLENBQUMsR0FBRyxFQUFFLE9BQU8sRUFBRSxVQUFVLENBQUMsQ0FBQztJQUNyRCxNQUFNLGNBQWMsR0FBRyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFDeEQsR0FBRyxDQUFDLE1BQU0sQ0FBQyxjQUFjLEVBQUUsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQ3pDLENBQUM7QUFFRDs7Ozs7Ozs7Ozs7Ozs7R0FjRztBQUNILE1BQU0sVUFBVSxZQUFZLENBQ3hCLEdBQVEsRUFBRSxNQUFTLEVBQUUsVUFBbUM7SUFDMUQsT0FBTyxhQUFhLENBQUMsR0FBRyxFQUFFLE1BQU0sRUFBRSxVQUFVLElBQUksaUJBQWlCLENBQUMsQ0FBQztBQUNyRSxDQUFDO0FBRUQ7Ozs7OztHQU1HO0FBQ0gsU0FBUyxpQkFBaUIsQ0FBSSxDQUFJLEVBQUUsQ0FBSTtJQUN0QyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNwQyxDQUFDO0FBRUQsU0FBUyxhQUFhLENBQ2xCLEdBQVEsRUFBRSxNQUFTLEVBQUUsVUFBa0M7SUFDekQsSUFBSSxJQUFJLEdBQUcsQ0FBQyxDQUFDO0lBQ2IsSUFBSSxLQUFLLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQztJQUN2QixJQUFJLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDZixJQUFJLEtBQUssR0FBRyxLQUFLLENBQUM7SUFDbEIsT0FBTyxJQUFJLEdBQUcsS0FBSyxFQUFFO1FBQ25CLE1BQU0sR0FBRyxJQUFJLEdBQUcsQ0FBQyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUN2QyxNQUFNLGFBQWEsR0FBRyxVQUFVLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBQ3RELElBQUksYUFBYSxHQUFHLENBQUMsRUFBRTtZQUNyQixJQUFJLEdBQUcsTUFBTSxHQUFHLENBQUMsQ0FBQztTQUNuQjthQUFNO1lBQ0wsS0FBSyxHQUFHLE1BQU0sQ0FBQztZQUNmLG9FQUFvRTtZQUNwRSx3REFBd0Q7WUFDeEQsS0FBSyxHQUFHLENBQUMsYUFBYSxDQUFDO1NBQ3hCO0tBQ0Y7SUFFRCxPQUFPLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUM7QUFDbEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuLyoqXG4gKiBJbnNlcnRzIGEgdmFsdWUgaW50byBhIHNvcnRlZCBhcnJheS4gVGhpcyBtZXRob2QgYWxsb3dzIGR1cGxpY2F0ZSwgbWVhbmluZyBpdFxuICogYWxsb3dzIGluc2VydGluZyBkdXBsaWNhdGUgdmFsdWUsIGluIHdoaWNoIGNhc2UsIHRoZSBlbGVtZW50IHdpbGwgYmUgaW5zZXJ0ZWRcbiAqIGF0IHRoZSBsb3dlc3QgaW5kZXggb2YgdGhlIHZhbHVlLlxuICogQHBhcmFtIGFyciBUaGUgYXJyYXkgdG8gbW9kaWZ5LlxuICogQHBhcmFtIGVsZW1lbnQgVGhlIGVsZW1lbnQgdG8gaW5zZXJ0LlxuICogQHBhcmFtIGNvbXBhcmF0b3IgT3B0aW9uYWwuIElmIG5vIGNvbXBhcmF0b3IgaXMgc3BlY2lmaWVkLCBlbGVtZW50cyBhcmVcbiAqIGNvbXBhcmVkIHVzaW5nIGFycmF5X3V0aWwuZGVmYXVsdENvbXBhcmF0b3IsIHdoaWNoIGlzIHN1aXRhYmxlIGZvciBTdHJpbmdzXG4gKiBhbmQgTnVtYmVycyBpbiBhc2NlbmRpbmcgYXJyYXlzLiBJZiB0aGUgYXJyYXkgY29udGFpbnMgbXVsdGlwbGUgaW5zdGFuY2VzIG9mXG4gKiB0aGUgdGFyZ2V0IHZhbHVlLCB0aGUgbGVmdC1tb3N0IGluc3RhbmNlIHdpbGwgYmUgcmV0dXJuZWQuIFRvIHByb3ZpZGUgYVxuICogY29tcGFyYXRvciwgaXQgc2hvdWxkIHRha2UgMiBhcmd1bWVudHMgdG8gY29tcGFyZSBhbmQgcmV0dXJuIGEgbmVnYXRpdmUsXG4gKiB6ZXJvLCBvciBhIHBvc2l0aXZlIG51bWJlci5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJpbmFyeUluc2VydDxUPihcbiAgICBhcnI6IFRbXSwgZWxlbWVudDogVCwgY29tcGFyYXRvcj86IChhOiBULCBiOiBUKSA9PiBudW1iZXIpIHtcbiAgY29uc3QgaW5kZXggPSBiaW5hcnlTZWFyY2goYXJyLCBlbGVtZW50LCBjb21wYXJhdG9yKTtcbiAgY29uc3QgaW5zZXJ0aW9uUG9pbnQgPSBpbmRleCA8IDAgPyAtKGluZGV4ICsgMSkgOiBpbmRleDtcbiAgYXJyLnNwbGljZShpbnNlcnRpb25Qb2ludCwgMCwgZWxlbWVudCk7XG59XG5cbi8qKlxuICogU2VhcmNoZXMgdGhlIGFycmF5IGZvciB0aGUgdGFyZ2V0IHVzaW5nIGJpbmFyeSBzZWFyY2gsIHJldHVybnMgdGhlIGluZGV4XG4gKiBvZiB0aGUgZm91bmQgZWxlbWVudCwgb3IgcG9zaXRpb24gdG8gaW5zZXJ0IGlmIGVsZW1lbnQgbm90IGZvdW5kLiBJZiBub1xuICogY29tcGFyYXRvciBpcyBzcGVjaWZpZWQsIGVsZW1lbnRzIGFyZSBjb21wYXJlZCB1c2luZyBhcnJheV9cbiAqIHV0aWwuZGVmYXVsdENvbXBhcmF0b3IsIHdoaWNoIGlzIHN1aXRhYmxlIGZvciBTdHJpbmdzIGFuZCBOdW1iZXJzIGluXG4gKiBhc2NlbmRpbmcgYXJyYXlzLiBJZiB0aGUgYXJyYXkgY29udGFpbnMgbXVsdGlwbGUgaW5zdGFuY2VzIG9mIHRoZSB0YXJnZXRcbiAqIHZhbHVlLCB0aGUgbGVmdC1tb3N0IGluc3RhbmNlIHdpbGwgYmUgcmV0dXJuZWQuXG4gKiBAcGFyYW0gYXJyIFRoZSBhcnJheSB0byBiZSBzZWFyY2hlZCBpbi5cbiAqIEBwYXJhbSB0YXJnZXQgVGhlIHRhcmdldCB0byBiZSBzZWFyY2hlZCBmb3IuXG4gKiBAcGFyYW0gY29tcGFyYXRvciBTaG91bGQgdGFrZSAyIGFyZ3VtZW50cyB0byBjb21wYXJlIGFuZCByZXR1cm4gYSBuZWdhdGl2ZSxcbiAqICAgIHplcm8sIG9yIGEgcG9zaXRpdmUgbnVtYmVyLlxuICogQHJldHVybiBMb3dlc3QgaW5kZXggb2YgdGhlIHRhcmdldCB2YWx1ZSBpZiBmb3VuZCwgb3RoZXJ3aXNlIHRoZSBpbnNlcnRpb25cbiAqICAgIHBvaW50IHdoZXJlIHRoZSB0YXJnZXQgc2hvdWxkIGJlIGluc2VydGVkLCBpbiB0aGUgZm9ybSBvZlxuICogICAgKC1pbnNlcnRpb25Qb2ludCAtIDEpLlxuICovXG5leHBvcnQgZnVuY3Rpb24gYmluYXJ5U2VhcmNoPFQ+KFxuICAgIGFycjogVFtdLCB0YXJnZXQ6IFQsIGNvbXBhcmF0b3I/OiAoYTogVCwgYjogVCkgPT4gbnVtYmVyKSB7XG4gIHJldHVybiBiaW5hcnlTZWFyY2hfKGFyciwgdGFyZ2V0LCBjb21wYXJhdG9yIHx8IGRlZmF1bHRDb21wYXJhdG9yKTtcbn1cblxuLyoqXG4gKiBDb21wYXJlcyBpdHMgdHdvIGFyZ3VtZW50cyBmb3Igb3JkZXIuXG4gKiBAcGFyYW0gYSBUaGUgZmlyc3QgZWxlbWVudCB0byBiZSBjb21wYXJlZC5cbiAqIEBwYXJhbSBiIFRoZSBzZWNvbmQgZWxlbWVudCB0byBiZSBjb21wYXJlZC5cbiAqIEByZXR1cm4gQSBuZWdhdGl2ZSBudW1iZXIsIHplcm8sIG9yIGEgcG9zaXRpdmUgbnVtYmVyIGFzIHRoZSBmaXJzdFxuICogICAgIGFyZ3VtZW50IGlzIGxlc3MgdGhhbiwgZXF1YWwgdG8sIG9yIGdyZWF0ZXIgdGhhbiB0aGUgc2Vjb25kLlxuICovXG5mdW5jdGlvbiBkZWZhdWx0Q29tcGFyYXRvcjxUPihhOiBULCBiOiBUKTogbnVtYmVyIHtcbiAgcmV0dXJuIGEgPiBiID8gMSA6IGEgPCBiID8gLTEgOiAwO1xufVxuXG5mdW5jdGlvbiBiaW5hcnlTZWFyY2hfPFQ+KFxuICAgIGFycjogVFtdLCB0YXJnZXQ6IFQsIGNvbXBhcmF0b3I6IChhOiBULCBiOiBUKSA9PiBudW1iZXIpIHtcbiAgbGV0IGxlZnQgPSAwO1xuICBsZXQgcmlnaHQgPSBhcnIubGVuZ3RoO1xuICBsZXQgbWlkZGxlID0gMDtcbiAgbGV0IGZvdW5kID0gZmFsc2U7XG4gIHdoaWxlIChsZWZ0IDwgcmlnaHQpIHtcbiAgICBtaWRkbGUgPSBsZWZ0ICsgKChyaWdodCAtIGxlZnQpID4+PiAxKTtcbiAgICBjb25zdCBjb21wYXJlUmVzdWx0ID0gY29tcGFyYXRvcih0YXJnZXQsIGFyclttaWRkbGVdKTtcbiAgICBpZiAoY29tcGFyZVJlc3VsdCA+IDApIHtcbiAgICAgIGxlZnQgPSBtaWRkbGUgKyAxO1xuICAgIH0gZWxzZSB7XG4gICAgICByaWdodCA9IG1pZGRsZTtcbiAgICAgIC8vIElmIGNvbXBhcmVSZXN1bHQgaXMgMCwgdGhlIHZhbHVlIGlzIGZvdW5kLiBXZSByZWNvcmQgaXQgaXMgZm91bmQsXG4gICAgICAvLyBhbmQgdGhlbiBrZWVwIGxvb2tpbmcgYmVjYXVzZSB0aGVyZSBtYXkgYmUgZHVwbGljYXRlLlxuICAgICAgZm91bmQgPSAhY29tcGFyZVJlc3VsdDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZm91bmQgPyBsZWZ0IDogLWxlZnQgLSAxO1xufVxuIl19","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { binaryInsert } from './non_max_suppression_util';\nexport function nonMaxSuppressionV3Impl(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold) {\n    return nonMaxSuppressionImpl_(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, 0 /* softNmsSigma */);\n}\nexport function nonMaxSuppressionV4Impl(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize) {\n    return nonMaxSuppressionImpl_(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, 0 /* softNmsSigma */, false /* returnScoresTensor */, padToMaxOutputSize /* padToMaxOutputSize */, true\n    /* returnValidOutputs */ );\n}\nexport function nonMaxSuppressionV5Impl(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma) {\n    return nonMaxSuppressionImpl_(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma, true /* returnScoresTensor */);\n}\nfunction nonMaxSuppressionImpl_(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma, returnScoresTensor = false, padToMaxOutputSize = false, returnValidOutputs = false) {\n    // The list is sorted in ascending order, so that we can always pop the\n    // candidate with the largest score in O(1) time.\n    const candidates = [];\n    for (let i = 0; i < scores.length; i++) {\n        if (scores[i] > scoreThreshold) {\n            candidates.push({ score: scores[i], boxIndex: i, suppressBeginIndex: 0 });\n        }\n    }\n    candidates.sort(ascendingComparator);\n    // If softNmsSigma is 0, the outcome of this algorithm is exactly same as\n    // before.\n    const scale = softNmsSigma > 0 ? (-0.5 / softNmsSigma) : 0.0;\n    const selectedIndices = [];\n    const selectedScores = [];\n    while (selectedIndices.length < maxOutputSize && candidates.length > 0) {\n        const candidate = candidates.pop();\n        const { score: originalScore, boxIndex, suppressBeginIndex } = candidate;\n        if (originalScore < scoreThreshold) {\n            break;\n        }\n        // Overlapping boxes are likely to have similar scores, therefore we\n        // iterate through the previously selected boxes backwards in order to\n        // see if candidate's score should be suppressed. We use\n        // suppressBeginIndex to track and ensure a candidate can be suppressed\n        // by a selected box no more than once. Also, if the overlap exceeds\n        // iouThreshold, we simply ignore the candidate.\n        let ignoreCandidate = false;\n        for (let j = selectedIndices.length - 1; j >= suppressBeginIndex; --j) {\n            const iou = intersectionOverUnion(boxes, boxIndex, selectedIndices[j]);\n            if (iou >= iouThreshold) {\n                ignoreCandidate = true;\n                break;\n            }\n            candidate.score =\n                candidate.score * suppressWeight(iouThreshold, scale, iou);\n            if (candidate.score <= scoreThreshold) {\n                break;\n            }\n        }\n        // At this point, if `candidate.score` has not dropped below\n        // `scoreThreshold`, then we know that we went through all of the\n        // previous selections and can safely update `suppressBeginIndex` to the\n        // end of the selected array. Then we can re-insert the candidate with\n        // the updated score and suppressBeginIndex back in the candidate list.\n        // If on the other hand, `candidate.score` has dropped below the score\n        // threshold, we will not add it back to the candidates list.\n        candidate.suppressBeginIndex = selectedIndices.length;\n        if (!ignoreCandidate) {\n            // Candidate has passed all the tests, and is not suppressed, so\n            // select the candidate.\n            if (candidate.score === originalScore) {\n                selectedIndices.push(boxIndex);\n                selectedScores.push(candidate.score);\n            }\n            else if (candidate.score > scoreThreshold) {\n                // Candidate's score is suppressed but is still high enough to be\n                // considered, so add back to the candidates list.\n                binaryInsert(candidates, candidate, ascendingComparator);\n            }\n        }\n    }\n    // NonMaxSuppressionV4 feature: padding output to maxOutputSize.\n    const validOutputs = selectedIndices.length;\n    const elemsToPad = maxOutputSize - validOutputs;\n    if (padToMaxOutputSize && elemsToPad > 0) {\n        selectedIndices.push(...new Array(elemsToPad).fill(0));\n        selectedScores.push(...new Array(elemsToPad).fill(0.0));\n    }\n    const result = { selectedIndices };\n    if (returnScoresTensor) {\n        result['selectedScores'] = selectedScores;\n    }\n    if (returnValidOutputs) {\n        result['validOutputs'] = validOutputs;\n    }\n    return result;\n}\nfunction intersectionOverUnion(boxes, i, j) {\n    const iCoord = boxes.subarray(i * 4, i * 4 + 4);\n    const jCoord = boxes.subarray(j * 4, j * 4 + 4);\n    const yminI = Math.min(iCoord[0], iCoord[2]);\n    const xminI = Math.min(iCoord[1], iCoord[3]);\n    const ymaxI = Math.max(iCoord[0], iCoord[2]);\n    const xmaxI = Math.max(iCoord[1], iCoord[3]);\n    const yminJ = Math.min(jCoord[0], jCoord[2]);\n    const xminJ = Math.min(jCoord[1], jCoord[3]);\n    const ymaxJ = Math.max(jCoord[0], jCoord[2]);\n    const xmaxJ = Math.max(jCoord[1], jCoord[3]);\n    const areaI = (ymaxI - yminI) * (xmaxI - xminI);\n    const areaJ = (ymaxJ - yminJ) * (xmaxJ - xminJ);\n    if (areaI <= 0 || areaJ <= 0) {\n        return 0.0;\n    }\n    const intersectionYmin = Math.max(yminI, yminJ);\n    const intersectionXmin = Math.max(xminI, xminJ);\n    const intersectionYmax = Math.min(ymaxI, ymaxJ);\n    const intersectionXmax = Math.min(xmaxI, xmaxJ);\n    const intersectionArea = Math.max(intersectionYmax - intersectionYmin, 0.0) *\n        Math.max(intersectionXmax - intersectionXmin, 0.0);\n    return intersectionArea / (areaI + areaJ - intersectionArea);\n}\n// A Gaussian penalty function, this method always returns values in [0, 1].\n// The weight is a function of similarity, the more overlap two boxes are, the\n// smaller the weight is, meaning highly overlapping boxe will be significantly\n// penalized. On the other hand, a non-overlapping box will not be penalized.\nfunction suppressWeight(iouThreshold, scale, iou) {\n    const weight = Math.exp(scale * iou * iou);\n    return iou <= iouThreshold ? weight : 0.0;\n}\nfunction ascendingComparator(c1, c2) {\n    // For objects with same scores, we make the object with the larger index go\n    // first. In an array that pops from the end, this means that the object with\n    // the smaller index will be popped first. This ensures the same output as\n    // the TensorFlow python version.\n    return (c1.score - c2.score) ||\n        ((c1.score === c2.score) && (c2.boxIndex - c1.boxIndex));\n}\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { nonMaxSuppressionV3Impl } from '../../backends/non_max_suppression_impl';\nimport { convertToTensor } from '../../tensor_util_env';\nimport { nonMaxSuppSanityCheck } from '../nonmax_util';\nimport { tensor1d } from '../tensor1d';\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * This is the async version of `nonMaxSuppression`\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @return A 1D tensor with the selected box indices.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nasync function nonMaxSuppressionAsync_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY) {\n    const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppressionAsync');\n    const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppressionAsync');\n    const inputs = nonMaxSuppSanityCheck($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold);\n    maxOutputSize = inputs.maxOutputSize;\n    iouThreshold = inputs.iouThreshold;\n    scoreThreshold = inputs.scoreThreshold;\n    const boxesAndScores = await Promise.all([$boxes.data(), $scores.data()]);\n    const boxesVals = boxesAndScores[0];\n    const scoresVals = boxesAndScores[1];\n    // We call a cpu based impl directly with the typedarray data  here rather\n    // than a kernel because all kernels are synchronous (and thus cannot await\n    // .data()).\n    const { selectedIndices } = nonMaxSuppressionV3Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold);\n    if ($boxes !== boxes) {\n        $boxes.dispose();\n    }\n    if ($scores !== scores) {\n        $scores.dispose();\n    }\n    return tensor1d(selectedIndices, 'int32');\n}\nexport const nonMaxSuppressionAsync = nonMaxSuppressionAsync_;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9uX21heF9zdXBwcmVzc2lvbl9hc3luYy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3RmanMtY29yZS9zcmMvb3BzL2ltYWdlL25vbl9tYXhfc3VwcHJlc3Npb25fYXN5bmMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztHQWVHO0FBRUgsT0FBTyxFQUFDLHVCQUF1QixFQUFDLE1BQU0seUNBQXlDLENBQUM7QUFFaEYsT0FBTyxFQUFDLGVBQWUsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRXRELE9BQU8sRUFBQyxxQkFBcUIsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQ3JELE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxhQUFhLENBQUM7QUFFckM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FtQkc7QUFDSCxLQUFLLFVBQVUsdUJBQXVCLENBQ2xDLEtBQTBCLEVBQUUsTUFBMkIsRUFDdkQsYUFBcUIsRUFBRSxZQUFZLEdBQUcsR0FBRyxFQUN6QyxjQUFjLEdBQUcsTUFBTSxDQUFDLGlCQUFpQjtJQUMzQyxNQUFNLE1BQU0sR0FBRyxlQUFlLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSx3QkFBd0IsQ0FBQyxDQUFDO0lBQ3pFLE1BQU0sT0FBTyxHQUFHLGVBQWUsQ0FBQyxNQUFNLEVBQUUsUUFBUSxFQUFFLHdCQUF3QixDQUFDLENBQUM7SUFFNUUsTUFBTSxNQUFNLEdBQUcscUJBQXFCLENBQ2hDLE1BQU0sRUFBRSxPQUFPLEVBQUUsYUFBYSxFQUFFLFlBQVksRUFBRSxjQUFjLENBQUMsQ0FBQztJQUNsRSxhQUFhLEdBQUcsTUFBTSxDQUFDLGFBQWEsQ0FBQztJQUNyQyxZQUFZLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQztJQUNuQyxjQUFjLEdBQUcsTUFBTSxDQUFDLGNBQWMsQ0FBQztJQUV2QyxNQUFNLGNBQWMsR0FBRyxNQUFNLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLEVBQUUsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQztJQUMxRSxNQUFNLFNBQVMsR0FBRyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDcEMsTUFBTSxVQUFVLEdBQUcsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRXJDLDBFQUEwRTtJQUMxRSwyRUFBMkU7SUFDM0UsWUFBWTtJQUNaLE1BQU0sRUFBQyxlQUFlLEVBQUMsR0FBRyx1QkFBdUIsQ0FDN0MsU0FBUyxFQUFFLFVBQVUsRUFBRSxhQUFhLEVBQUUsWUFBWSxFQUFFLGNBQWMsQ0FBQyxDQUFDO0lBQ3hFLElBQUksTUFBTSxLQUFLLEtBQUssRUFBRTtRQUNwQixNQUFNLENBQUMsT0FBTyxFQUFFLENBQUM7S0FDbEI7SUFDRCxJQUFJLE9BQU8sS0FBSyxNQUFNLEVBQUU7UUFDdEIsT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDO0tBQ25CO0lBRUQsT0FBTyxRQUFRLENBQUMsZUFBZSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQzVDLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxzQkFBc0IsR0FBRyx1QkFBdUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtub25NYXhTdXBwcmVzc2lvblYzSW1wbH0gZnJvbSAnLi4vLi4vYmFja2VuZHMvbm9uX21heF9zdXBwcmVzc2lvbl9pbXBsJztcbmltcG9ydCB7VGVuc29yMUQsIFRlbnNvcjJEfSBmcm9tICcuLi8uLi90ZW5zb3InO1xuaW1wb3J0IHtjb252ZXJ0VG9UZW5zb3J9IGZyb20gJy4uLy4uL3RlbnNvcl91dGlsX2Vudic7XG5pbXBvcnQge1RlbnNvckxpa2V9IGZyb20gJy4uLy4uL3R5cGVzJztcbmltcG9ydCB7bm9uTWF4U3VwcFNhbml0eUNoZWNrfSBmcm9tICcuLi9ub25tYXhfdXRpbCc7XG5pbXBvcnQge3RlbnNvcjFkfSBmcm9tICcuLi90ZW5zb3IxZCc7XG5cbi8qKlxuICogUGVyZm9ybXMgbm9uIG1heGltdW0gc3VwcHJlc3Npb24gb2YgYm91bmRpbmcgYm94ZXMgYmFzZWQgb25cbiAqIGlvdSAoaW50ZXJzZWN0aW9uIG92ZXIgdW5pb24pLlxuICpcbiAqIFRoaXMgaXMgdGhlIGFzeW5jIHZlcnNpb24gb2YgYG5vbk1heFN1cHByZXNzaW9uYFxuICpcbiAqIEBwYXJhbSBib3hlcyBhIDJkIHRlbnNvciBvZiBzaGFwZSBgW251bUJveGVzLCA0XWAuIEVhY2ggZW50cnkgaXNcbiAqICAgICBgW3kxLCB4MSwgeTIsIHgyXWAsIHdoZXJlIGAoeTEsIHgxKWAgYW5kIGAoeTIsIHgyKWAgYXJlIHRoZSBjb3JuZXJzIG9mXG4gKiAgICAgdGhlIGJvdW5kaW5nIGJveC5cbiAqIEBwYXJhbSBzY29yZXMgYSAxZCB0ZW5zb3IgcHJvdmlkaW5nIHRoZSBib3ggc2NvcmVzIG9mIHNoYXBlIGBbbnVtQm94ZXNdYC5cbiAqIEBwYXJhbSBtYXhPdXRwdXRTaXplIFRoZSBtYXhpbXVtIG51bWJlciBvZiBib3hlcyB0byBiZSBzZWxlY3RlZC5cbiAqIEBwYXJhbSBpb3VUaHJlc2hvbGQgQSBmbG9hdCByZXByZXNlbnRpbmcgdGhlIHRocmVzaG9sZCBmb3IgZGVjaWRpbmcgd2hldGhlclxuICogICAgIGJveGVzIG92ZXJsYXAgdG9vIG11Y2ggd2l0aCByZXNwZWN0IHRvIElPVS4gTXVzdCBiZSBiZXR3ZWVuIFswLCAxXS5cbiAqICAgICBEZWZhdWx0cyB0byAwLjUgKDUwJSBib3ggb3ZlcmxhcCkuXG4gKiBAcGFyYW0gc2NvcmVUaHJlc2hvbGQgQSB0aHJlc2hvbGQgZm9yIGRlY2lkaW5nIHdoZW4gdG8gcmVtb3ZlIGJveGVzIGJhc2VkXG4gKiAgICAgb24gc2NvcmUuIERlZmF1bHRzIHRvIC1pbmYsIHdoaWNoIG1lYW5zIGFueSBzY29yZSBpcyBhY2NlcHRlZC5cbiAqIEByZXR1cm4gQSAxRCB0ZW5zb3Igd2l0aCB0aGUgc2VsZWN0ZWQgYm94IGluZGljZXMuXG4gKlxuICogQGRvYyB7aGVhZGluZzogJ09wZXJhdGlvbnMnLCBzdWJoZWFkaW5nOiAnSW1hZ2VzJywgbmFtZXNwYWNlOiAnaW1hZ2UnfVxuICovXG5hc3luYyBmdW5jdGlvbiBub25NYXhTdXBwcmVzc2lvbkFzeW5jXyhcbiAgICBib3hlczogVGVuc29yMkR8VGVuc29yTGlrZSwgc2NvcmVzOiBUZW5zb3IxRHxUZW5zb3JMaWtlLFxuICAgIG1heE91dHB1dFNpemU6IG51bWJlciwgaW91VGhyZXNob2xkID0gMC41LFxuICAgIHNjb3JlVGhyZXNob2xkID0gTnVtYmVyLk5FR0FUSVZFX0lORklOSVRZKTogUHJvbWlzZTxUZW5zb3IxRD4ge1xuICBjb25zdCAkYm94ZXMgPSBjb252ZXJ0VG9UZW5zb3IoYm94ZXMsICdib3hlcycsICdub25NYXhTdXBwcmVzc2lvbkFzeW5jJyk7XG4gIGNvbnN0ICRzY29yZXMgPSBjb252ZXJ0VG9UZW5zb3Ioc2NvcmVzLCAnc2NvcmVzJywgJ25vbk1heFN1cHByZXNzaW9uQXN5bmMnKTtcblxuICBjb25zdCBpbnB1dHMgPSBub25NYXhTdXBwU2FuaXR5Q2hlY2soXG4gICAgICAkYm94ZXMsICRzY29yZXMsIG1heE91dHB1dFNpemUsIGlvdVRocmVzaG9sZCwgc2NvcmVUaHJlc2hvbGQpO1xuICBtYXhPdXRwdXRTaXplID0gaW5wdXRzLm1heE91dHB1dFNpemU7XG4gIGlvdVRocmVzaG9sZCA9IGlucHV0cy5pb3VUaHJlc2hvbGQ7XG4gIHNjb3JlVGhyZXNob2xkID0gaW5wdXRzLnNjb3JlVGhyZXNob2xkO1xuXG4gIGNvbnN0IGJveGVzQW5kU2NvcmVzID0gYXdhaXQgUHJvbWlzZS5hbGwoWyRib3hlcy5kYXRhKCksICRzY29yZXMuZGF0YSgpXSk7XG4gIGNvbnN0IGJveGVzVmFscyA9IGJveGVzQW5kU2NvcmVzWzBdO1xuICBjb25zdCBzY29yZXNWYWxzID0gYm94ZXNBbmRTY29yZXNbMV07XG5cbiAgLy8gV2UgY2FsbCBhIGNwdSBiYXNlZCBpbXBsIGRpcmVjdGx5IHdpdGggdGhlIHR5cGVkYXJyYXkgZGF0YSAgaGVyZSByYXRoZXJcbiAgLy8gdGhhbiBhIGtlcm5lbCBiZWNhdXNlIGFsbCBrZXJuZWxzIGFyZSBzeW5jaHJvbm91cyAoYW5kIHRodXMgY2Fubm90IGF3YWl0XG4gIC8vIC5kYXRhKCkpLlxuICBjb25zdCB7c2VsZWN0ZWRJbmRpY2VzfSA9IG5vbk1heFN1cHByZXNzaW9uVjNJbXBsKFxuICAgICAgYm94ZXNWYWxzLCBzY29yZXNWYWxzLCBtYXhPdXRwdXRTaXplLCBpb3VUaHJlc2hvbGQsIHNjb3JlVGhyZXNob2xkKTtcbiAgaWYgKCRib3hlcyAhPT0gYm94ZXMpIHtcbiAgICAkYm94ZXMuZGlzcG9zZSgpO1xuICB9XG4gIGlmICgkc2NvcmVzICE9PSBzY29yZXMpIHtcbiAgICAkc2NvcmVzLmRpc3Bvc2UoKTtcbiAgfVxuXG4gIHJldHVybiB0ZW5zb3IxZChzZWxlY3RlZEluZGljZXMsICdpbnQzMicpO1xufVxuXG5leHBvcnQgY29uc3Qgbm9uTWF4U3VwcHJlc3Npb25Bc3luYyA9IG5vbk1heFN1cHByZXNzaW9uQXN5bmNfO1xuIl19","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { NonMaxSuppressionV5 } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport { nonMaxSuppSanityCheck } from '../nonmax_util';\nimport { op } from '../operation';\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * This op also supports a Soft-NMS mode (c.f.\n * Bodla et al, https://arxiv.org/abs/1704.04503) where boxes reduce the score\n * of other overlapping boxes, therefore favoring different regions of the image\n * with high scores. To enable this Soft-NMS mode, set the `softNmsSigma`\n * parameter to be larger than 0.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param softNmsSigma A float representing the sigma parameter for Soft NMS.\n *     When sigma is 0, it falls back to nonMaxSuppression.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - selectedScores: A 1D tensor with the corresponding scores for each\n *       selected box.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction nonMaxSuppressionWithScore_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY, softNmsSigma = 0.0) {\n    const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppression');\n    const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppression');\n    const params = nonMaxSuppSanityCheck($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma);\n    maxOutputSize = params.maxOutputSize;\n    iouThreshold = params.iouThreshold;\n    scoreThreshold = params.scoreThreshold;\n    softNmsSigma = params.softNmsSigma;\n    const inputs = { boxes: $boxes, scores: $scores };\n    const attrs = { maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const result = ENGINE.runKernel(NonMaxSuppressionV5, inputs, attrs);\n    return { selectedIndices: result[0], selectedScores: result[1] };\n}\nexport const nonMaxSuppressionWithScore = op({ nonMaxSuppressionWithScore_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9uX21heF9zdXBwcmVzc2lvbl93aXRoX3Njb3JlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy9vcHMvaW1hZ2Uvbm9uX21heF9zdXBwcmVzc2lvbl93aXRoX3Njb3JlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxjQUFjLENBQUM7QUFDcEMsT0FBTyxFQUFDLG1CQUFtQixFQUFzRCxNQUFNLG9CQUFvQixDQUFDO0FBSTVHLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUd0RCxPQUFPLEVBQUMscUJBQXFCLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUNyRCxPQUFPLEVBQUMsRUFBRSxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBRWhDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBNEJHO0FBQ0gsU0FBUywyQkFBMkIsQ0FDaEMsS0FBMEIsRUFBRSxNQUEyQixFQUN2RCxhQUFxQixFQUFFLFlBQVksR0FBRyxHQUFHLEVBQ3pDLGNBQWMsR0FBRyxNQUFNLENBQUMsaUJBQWlCLEVBQ3pDLFlBQVksR0FBRyxHQUFHO0lBQ3BCLE1BQU0sTUFBTSxHQUFHLGVBQWUsQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLG1CQUFtQixDQUFDLENBQUM7SUFDcEUsTUFBTSxPQUFPLEdBQUcsZUFBZSxDQUFDLE1BQU0sRUFBRSxRQUFRLEVBQUUsbUJBQW1CLENBQUMsQ0FBQztJQUV2RSxNQUFNLE1BQU0sR0FBRyxxQkFBcUIsQ0FDaEMsTUFBTSxFQUFFLE9BQU8sRUFBRSxhQUFhLEVBQUUsWUFBWSxFQUFFLGNBQWMsRUFDNUQsWUFBWSxDQUFDLENBQUM7SUFDbEIsYUFBYSxHQUFHLE1BQU0sQ0FBQyxhQUFhLENBQUM7SUFDckMsWUFBWSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUM7SUFDbkMsY0FBYyxHQUFHLE1BQU0sQ0FBQyxjQUFjLENBQUM7SUFDdkMsWUFBWSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUM7SUFFbkMsTUFBTSxNQUFNLEdBQThCLEVBQUMsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFDLENBQUM7SUFDM0UsTUFBTSxLQUFLLEdBQ1AsRUFBQyxhQUFhLEVBQUUsWUFBWSxFQUFFLGNBQWMsRUFBRSxZQUFZLEVBQUMsQ0FBQztJQUVoRSwwREFBMEQ7SUFDMUQsTUFBTSxNQUFNLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FDWixtQkFBbUIsRUFBRSxNQUE4QixFQUNuRCxLQUEyQixDQUFhLENBQUM7SUFFNUQsT0FBTyxFQUFDLGVBQWUsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsY0FBYyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBQyxDQUFDO0FBQ2pFLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSwwQkFBMEIsR0FBRyxFQUFFLENBQUMsRUFBQywyQkFBMkIsRUFBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7RU5HSU5FfSBmcm9tICcuLi8uLi9lbmdpbmUnO1xuaW1wb3J0IHtOb25NYXhTdXBwcmVzc2lvblY1LCBOb25NYXhTdXBwcmVzc2lvblY1QXR0cnMsIE5vbk1heFN1cHByZXNzaW9uVjVJbnB1dHN9IGZyb20gJy4uLy4uL2tlcm5lbF9uYW1lcyc7XG5pbXBvcnQge05hbWVkQXR0ck1hcH0gZnJvbSAnLi4vLi4va2VybmVsX3JlZ2lzdHJ5JztcbmltcG9ydCB7VGVuc29yLCBUZW5zb3IxRCwgVGVuc29yMkR9IGZyb20gJy4uLy4uL3RlbnNvcic7XG5pbXBvcnQge05hbWVkVGVuc29yTWFwfSBmcm9tICcuLi8uLi90ZW5zb3JfdHlwZXMnO1xuaW1wb3J0IHtjb252ZXJ0VG9UZW5zb3J9IGZyb20gJy4uLy4uL3RlbnNvcl91dGlsX2Vudic7XG5pbXBvcnQge1RlbnNvckxpa2V9IGZyb20gJy4uLy4uL3R5cGVzJztcblxuaW1wb3J0IHtub25NYXhTdXBwU2FuaXR5Q2hlY2t9IGZyb20gJy4uL25vbm1heF91dGlsJztcbmltcG9ydCB7b3B9IGZyb20gJy4uL29wZXJhdGlvbic7XG5cbi8qKlxuICogUGVyZm9ybXMgbm9uIG1heGltdW0gc3VwcHJlc3Npb24gb2YgYm91bmRpbmcgYm94ZXMgYmFzZWQgb25cbiAqIGlvdSAoaW50ZXJzZWN0aW9uIG92ZXIgdW5pb24pLlxuICpcbiAqIFRoaXMgb3AgYWxzbyBzdXBwb3J0cyBhIFNvZnQtTk1TIG1vZGUgKGMuZi5cbiAqIEJvZGxhIGV0IGFsLCBodHRwczovL2FyeGl2Lm9yZy9hYnMvMTcwNC4wNDUwMykgd2hlcmUgYm94ZXMgcmVkdWNlIHRoZSBzY29yZVxuICogb2Ygb3RoZXIgb3ZlcmxhcHBpbmcgYm94ZXMsIHRoZXJlZm9yZSBmYXZvcmluZyBkaWZmZXJlbnQgcmVnaW9ucyBvZiB0aGUgaW1hZ2VcbiAqIHdpdGggaGlnaCBzY29yZXMuIFRvIGVuYWJsZSB0aGlzIFNvZnQtTk1TIG1vZGUsIHNldCB0aGUgYHNvZnRObXNTaWdtYWBcbiAqIHBhcmFtZXRlciB0byBiZSBsYXJnZXIgdGhhbiAwLlxuICpcbiAqIEBwYXJhbSBib3hlcyBhIDJkIHRlbnNvciBvZiBzaGFwZSBgW251bUJveGVzLCA0XWAuIEVhY2ggZW50cnkgaXNcbiAqICAgICBgW3kxLCB4MSwgeTIsIHgyXWAsIHdoZXJlIGAoeTEsIHgxKWAgYW5kIGAoeTIsIHgyKWAgYXJlIHRoZSBjb3JuZXJzIG9mXG4gKiAgICAgdGhlIGJvdW5kaW5nIGJveC5cbiAqIEBwYXJhbSBzY29yZXMgYSAxZCB0ZW5zb3IgcHJvdmlkaW5nIHRoZSBib3ggc2NvcmVzIG9mIHNoYXBlIGBbbnVtQm94ZXNdYC5cbiAqIEBwYXJhbSBtYXhPdXRwdXRTaXplIFRoZSBtYXhpbXVtIG51bWJlciBvZiBib3hlcyB0byBiZSBzZWxlY3RlZC5cbiAqIEBwYXJhbSBpb3VUaHJlc2hvbGQgQSBmbG9hdCByZXByZXNlbnRpbmcgdGhlIHRocmVzaG9sZCBmb3IgZGVjaWRpbmcgd2hldGhlclxuICogICAgIGJveGVzIG92ZXJsYXAgdG9vIG11Y2ggd2l0aCByZXNwZWN0IHRvIElPVS4gTXVzdCBiZSBiZXR3ZWVuIFswLCAxXS5cbiAqICAgICBEZWZhdWx0cyB0byAwLjUgKDUwJSBib3ggb3ZlcmxhcCkuXG4gKiBAcGFyYW0gc2NvcmVUaHJlc2hvbGQgQSB0aHJlc2hvbGQgZm9yIGRlY2lkaW5nIHdoZW4gdG8gcmVtb3ZlIGJveGVzIGJhc2VkXG4gKiAgICAgb24gc2NvcmUuIERlZmF1bHRzIHRvIC1pbmYsIHdoaWNoIG1lYW5zIGFueSBzY29yZSBpcyBhY2NlcHRlZC5cbiAqIEBwYXJhbSBzb2Z0Tm1zU2lnbWEgQSBmbG9hdCByZXByZXNlbnRpbmcgdGhlIHNpZ21hIHBhcmFtZXRlciBmb3IgU29mdCBOTVMuXG4gKiAgICAgV2hlbiBzaWdtYSBpcyAwLCBpdCBmYWxscyBiYWNrIHRvIG5vbk1heFN1cHByZXNzaW9uLlxuICogQHJldHVybiBBIG1hcCB3aXRoIHRoZSBmb2xsb3dpbmcgcHJvcGVydGllczpcbiAqICAgICAtIHNlbGVjdGVkSW5kaWNlczogQSAxRCB0ZW5zb3Igd2l0aCB0aGUgc2VsZWN0ZWQgYm94IGluZGljZXMuXG4gKiAgICAgLSBzZWxlY3RlZFNjb3JlczogQSAxRCB0ZW5zb3Igd2l0aCB0aGUgY29ycmVzcG9uZGluZyBzY29yZXMgZm9yIGVhY2hcbiAqICAgICAgIHNlbGVjdGVkIGJveC5cbiAqXG4gKiBAZG9jIHtoZWFkaW5nOiAnT3BlcmF0aW9ucycsIHN1YmhlYWRpbmc6ICdJbWFnZXMnLCBuYW1lc3BhY2U6ICdpbWFnZSd9XG4gKi9cbmZ1bmN0aW9uIG5vbk1heFN1cHByZXNzaW9uV2l0aFNjb3JlXyhcbiAgICBib3hlczogVGVuc29yMkR8VGVuc29yTGlrZSwgc2NvcmVzOiBUZW5zb3IxRHxUZW5zb3JMaWtlLFxuICAgIG1heE91dHB1dFNpemU6IG51bWJlciwgaW91VGhyZXNob2xkID0gMC41LFxuICAgIHNjb3JlVGhyZXNob2xkID0gTnVtYmVyLk5FR0FUSVZFX0lORklOSVRZLFxuICAgIHNvZnRObXNTaWdtYSA9IDAuMCk6IE5hbWVkVGVuc29yTWFwIHtcbiAgY29uc3QgJGJveGVzID0gY29udmVydFRvVGVuc29yKGJveGVzLCAnYm94ZXMnLCAnbm9uTWF4U3VwcHJlc3Npb24nKTtcbiAgY29uc3QgJHNjb3JlcyA9IGNvbnZlcnRUb1RlbnNvcihzY29yZXMsICdzY29yZXMnLCAnbm9uTWF4U3VwcHJlc3Npb24nKTtcblxuICBjb25zdCBwYXJhbXMgPSBub25NYXhTdXBwU2FuaXR5Q2hlY2soXG4gICAgICAkYm94ZXMsICRzY29yZXMsIG1heE91dHB1dFNpemUsIGlvdVRocmVzaG9sZCwgc2NvcmVUaHJlc2hvbGQsXG4gICAgICBzb2Z0Tm1zU2lnbWEpO1xuICBtYXhPdXRwdXRTaXplID0gcGFyYW1zLm1heE91dHB1dFNpemU7XG4gIGlvdVRocmVzaG9sZCA9IHBhcmFtcy5pb3VUaHJlc2hvbGQ7XG4gIHNjb3JlVGhyZXNob2xkID0gcGFyYW1zLnNjb3JlVGhyZXNob2xkO1xuICBzb2Z0Tm1zU2lnbWEgPSBwYXJhbXMuc29mdE5tc1NpZ21hO1xuXG4gIGNvbnN0IGlucHV0czogTm9uTWF4U3VwcHJlc3Npb25WNUlucHV0cyA9IHtib3hlczogJGJveGVzLCBzY29yZXM6ICRzY29yZXN9O1xuICBjb25zdCBhdHRyczogTm9uTWF4U3VwcHJlc3Npb25WNUF0dHJzID1cbiAgICAgIHttYXhPdXRwdXRTaXplLCBpb3VUaHJlc2hvbGQsIHNjb3JlVGhyZXNob2xkLCBzb2Z0Tm1zU2lnbWF9O1xuXG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogbm8tdW5uZWNlc3NhcnktdHlwZS1hc3NlcnRpb25cbiAgY29uc3QgcmVzdWx0ID0gRU5HSU5FLnJ1bktlcm5lbChcbiAgICAgICAgICAgICAgICAgICAgIE5vbk1heFN1cHByZXNzaW9uVjUsIGlucHV0cyBhcyB7fSBhcyBOYW1lZFRlbnNvck1hcCxcbiAgICAgICAgICAgICAgICAgICAgIGF0dHJzIGFzIHt9IGFzIE5hbWVkQXR0ck1hcCkgYXMgVGVuc29yW107XG5cbiAgcmV0dXJuIHtzZWxlY3RlZEluZGljZXM6IHJlc3VsdFswXSwgc2VsZWN0ZWRTY29yZXM6IHJlc3VsdFsxXX07XG59XG5cbmV4cG9ydCBjb25zdCBub25NYXhTdXBwcmVzc2lvbldpdGhTY29yZSA9IG9wKHtub25NYXhTdXBwcmVzc2lvbldpdGhTY29yZV99KTtcbiJdfQ==","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { nonMaxSuppressionV5Impl } from '../../backends/non_max_suppression_impl';\nimport { convertToTensor } from '../../tensor_util_env';\nimport { nonMaxSuppSanityCheck } from '../nonmax_util';\nimport { tensor1d } from '../tensor1d';\n/**\n * Asynchronously performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * This op also supports a Soft-NMS mode (c.f.\n * Bodla et al, https://arxiv.org/abs/1704.04503) where boxes reduce the score\n * of other overlapping boxes, therefore favoring different regions of the image\n * with high scores. To enable this Soft-NMS mode, set the `softNmsSigma`\n * parameter to be larger than 0.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param softNmsSigma A float representing the sigma parameter for Soft NMS.\n *     When sigma is 0, it falls back to nonMaxSuppression.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - selectedScores: A 1D tensor with the corresponding scores for each\n *       selected box.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nasync function nonMaxSuppressionWithScoreAsync_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY, softNmsSigma = 0.0) {\n    const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppressionAsync');\n    const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppressionAsync');\n    const params = nonMaxSuppSanityCheck($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma);\n    maxOutputSize = params.maxOutputSize;\n    iouThreshold = params.iouThreshold;\n    scoreThreshold = params.scoreThreshold;\n    softNmsSigma = params.softNmsSigma;\n    const boxesAndScores = await Promise.all([$boxes.data(), $scores.data()]);\n    const boxesVals = boxesAndScores[0];\n    const scoresVals = boxesAndScores[1];\n    // We call a cpu based impl directly with the typedarray data  here rather\n    // than a kernel because all kernels are synchronous (and thus cannot await\n    // .data()).\n    const { selectedIndices, selectedScores } = nonMaxSuppressionV5Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma);\n    if ($boxes !== boxes) {\n        $boxes.dispose();\n    }\n    if ($scores !== scores) {\n        $scores.dispose();\n    }\n    return {\n        selectedIndices: tensor1d(selectedIndices, 'int32'),\n        selectedScores: tensor1d(selectedScores)\n    };\n}\nexport const nonMaxSuppressionWithScoreAsync = nonMaxSuppressionWithScoreAsync_;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9uX21heF9zdXBwcmVzc2lvbl93aXRoX3Njb3JlX2FzeW5jLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy9vcHMvaW1hZ2Uvbm9uX21heF9zdXBwcmVzc2lvbl93aXRoX3Njb3JlX2FzeW5jLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUNILE9BQU8sRUFBQyx1QkFBdUIsRUFBQyxNQUFNLHlDQUF5QyxDQUFDO0FBR2hGLE9BQU8sRUFBQyxlQUFlLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUV0RCxPQUFPLEVBQUMscUJBQXFCLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUNyRCxPQUFPLEVBQUMsUUFBUSxFQUFDLE1BQU0sYUFBYSxDQUFDO0FBRXJDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBNEJHO0FBQ0gsS0FBSyxVQUFVLGdDQUFnQyxDQUMzQyxLQUEwQixFQUFFLE1BQTJCLEVBQ3ZELGFBQXFCLEVBQUUsWUFBWSxHQUFHLEdBQUcsRUFDekMsY0FBYyxHQUFHLE1BQU0sQ0FBQyxpQkFBaUIsRUFDekMsWUFBWSxHQUFHLEdBQUc7SUFDcEIsTUFBTSxNQUFNLEdBQUcsZUFBZSxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsd0JBQXdCLENBQUMsQ0FBQztJQUN6RSxNQUFNLE9BQU8sR0FBRyxlQUFlLENBQUMsTUFBTSxFQUFFLFFBQVEsRUFBRSx3QkFBd0IsQ0FBQyxDQUFDO0lBRTVFLE1BQU0sTUFBTSxHQUFHLHFCQUFxQixDQUNoQyxNQUFNLEVBQUUsT0FBTyxFQUFFLGFBQWEsRUFBRSxZQUFZLEVBQUUsY0FBYyxFQUM1RCxZQUFZLENBQUMsQ0FBQztJQUNsQixhQUFhLEdBQUcsTUFBTSxDQUFDLGFBQWEsQ0FBQztJQUNyQyxZQUFZLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQztJQUNuQyxjQUFjLEdBQUcsTUFBTSxDQUFDLGNBQWMsQ0FBQztJQUN2QyxZQUFZLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQztJQUVuQyxNQUFNLGNBQWMsR0FBRyxNQUFNLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLEVBQUUsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQztJQUMxRSxNQUFNLFNBQVMsR0FBRyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDcEMsTUFBTSxVQUFVLEdBQUcsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRXJDLDBFQUEwRTtJQUMxRSwyRUFBMkU7SUFDM0UsWUFBWTtJQUNaLE1BQU0sRUFBQyxlQUFlLEVBQUUsY0FBYyxFQUFDLEdBQUcsdUJBQXVCLENBQzdELFNBQVMsRUFBRSxVQUFVLEVBQUUsYUFBYSxFQUFFLFlBQVksRUFBRSxjQUFjLEVBQ2xFLFlBQVksQ0FBQyxDQUFDO0lBRWxCLElBQUksTUFBTSxLQUFLLEtBQUssRUFBRTtRQUNwQixNQUFNLENBQUMsT0FBTyxFQUFFLENBQUM7S0FDbEI7SUFDRCxJQUFJLE9BQU8sS0FBSyxNQUFNLEVBQUU7UUFDdEIsT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDO0tBQ25CO0lBRUQsT0FBTztRQUNMLGVBQWUsRUFBRSxRQUFRLENBQUMsZUFBZSxFQUFFLE9BQU8sQ0FBQztRQUNuRCxjQUFjLEVBQUUsUUFBUSxDQUFDLGNBQWMsQ0FBQztLQUN6QyxDQUFDO0FBQ0osQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLCtCQUErQixHQUFHLGdDQUFnQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuaW1wb3J0IHtub25NYXhTdXBwcmVzc2lvblY1SW1wbH0gZnJvbSAnLi4vLi4vYmFja2VuZHMvbm9uX21heF9zdXBwcmVzc2lvbl9pbXBsJztcbmltcG9ydCB7VGVuc29yMUQsIFRlbnNvcjJEfSBmcm9tICcuLi8uLi90ZW5zb3InO1xuaW1wb3J0IHtOYW1lZFRlbnNvck1hcH0gZnJvbSAnLi4vLi4vdGVuc29yX3R5cGVzJztcbmltcG9ydCB7Y29udmVydFRvVGVuc29yfSBmcm9tICcuLi8uLi90ZW5zb3JfdXRpbF9lbnYnO1xuaW1wb3J0IHtUZW5zb3JMaWtlfSBmcm9tICcuLi8uLi90eXBlcyc7XG5pbXBvcnQge25vbk1heFN1cHBTYW5pdHlDaGVja30gZnJvbSAnLi4vbm9ubWF4X3V0aWwnO1xuaW1wb3J0IHt0ZW5zb3IxZH0gZnJvbSAnLi4vdGVuc29yMWQnO1xuXG4vKipcbiAqIEFzeW5jaHJvbm91c2x5IHBlcmZvcm1zIG5vbiBtYXhpbXVtIHN1cHByZXNzaW9uIG9mIGJvdW5kaW5nIGJveGVzIGJhc2VkIG9uXG4gKiBpb3UgKGludGVyc2VjdGlvbiBvdmVyIHVuaW9uKS5cbiAqXG4gKiBUaGlzIG9wIGFsc28gc3VwcG9ydHMgYSBTb2Z0LU5NUyBtb2RlIChjLmYuXG4gKiBCb2RsYSBldCBhbCwgaHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzE3MDQuMDQ1MDMpIHdoZXJlIGJveGVzIHJlZHVjZSB0aGUgc2NvcmVcbiAqIG9mIG90aGVyIG92ZXJsYXBwaW5nIGJveGVzLCB0aGVyZWZvcmUgZmF2b3JpbmcgZGlmZmVyZW50IHJlZ2lvbnMgb2YgdGhlIGltYWdlXG4gKiB3aXRoIGhpZ2ggc2NvcmVzLiBUbyBlbmFibGUgdGhpcyBTb2Z0LU5NUyBtb2RlLCBzZXQgdGhlIGBzb2Z0Tm1zU2lnbWFgXG4gKiBwYXJhbWV0ZXIgdG8gYmUgbGFyZ2VyIHRoYW4gMC5cbiAqXG4gKiBAcGFyYW0gYm94ZXMgYSAyZCB0ZW5zb3Igb2Ygc2hhcGUgYFtudW1Cb3hlcywgNF1gLiBFYWNoIGVudHJ5IGlzXG4gKiAgICAgYFt5MSwgeDEsIHkyLCB4Ml1gLCB3aGVyZSBgKHkxLCB4MSlgIGFuZCBgKHkyLCB4MilgIGFyZSB0aGUgY29ybmVycyBvZlxuICogICAgIHRoZSBib3VuZGluZyBib3guXG4gKiBAcGFyYW0gc2NvcmVzIGEgMWQgdGVuc29yIHByb3ZpZGluZyB0aGUgYm94IHNjb3JlcyBvZiBzaGFwZSBgW251bUJveGVzXWAuXG4gKiBAcGFyYW0gbWF4T3V0cHV0U2l6ZSBUaGUgbWF4aW11bSBudW1iZXIgb2YgYm94ZXMgdG8gYmUgc2VsZWN0ZWQuXG4gKiBAcGFyYW0gaW91VGhyZXNob2xkIEEgZmxvYXQgcmVwcmVzZW50aW5nIHRoZSB0aHJlc2hvbGQgZm9yIGRlY2lkaW5nIHdoZXRoZXJcbiAqICAgICBib3hlcyBvdmVybGFwIHRvbyBtdWNoIHdpdGggcmVzcGVjdCB0byBJT1UuIE11c3QgYmUgYmV0d2VlbiBbMCwgMV0uXG4gKiAgICAgRGVmYXVsdHMgdG8gMC41ICg1MCUgYm94IG92ZXJsYXApLlxuICogQHBhcmFtIHNjb3JlVGhyZXNob2xkIEEgdGhyZXNob2xkIGZvciBkZWNpZGluZyB3aGVuIHRvIHJlbW92ZSBib3hlcyBiYXNlZFxuICogICAgIG9uIHNjb3JlLiBEZWZhdWx0cyB0byAtaW5mLCB3aGljaCBtZWFucyBhbnkgc2NvcmUgaXMgYWNjZXB0ZWQuXG4gKiBAcGFyYW0gc29mdE5tc1NpZ21hIEEgZmxvYXQgcmVwcmVzZW50aW5nIHRoZSBzaWdtYSBwYXJhbWV0ZXIgZm9yIFNvZnQgTk1TLlxuICogICAgIFdoZW4gc2lnbWEgaXMgMCwgaXQgZmFsbHMgYmFjayB0byBub25NYXhTdXBwcmVzc2lvbi5cbiAqIEByZXR1cm4gQSBtYXAgd2l0aCB0aGUgZm9sbG93aW5nIHByb3BlcnRpZXM6XG4gKiAgICAgLSBzZWxlY3RlZEluZGljZXM6IEEgMUQgdGVuc29yIHdpdGggdGhlIHNlbGVjdGVkIGJveCBpbmRpY2VzLlxuICogICAgIC0gc2VsZWN0ZWRTY29yZXM6IEEgMUQgdGVuc29yIHdpdGggdGhlIGNvcnJlc3BvbmRpbmcgc2NvcmVzIGZvciBlYWNoXG4gKiAgICAgICBzZWxlY3RlZCBib3guXG4gKlxuICogQGRvYyB7aGVhZGluZzogJ09wZXJhdGlvbnMnLCBzdWJoZWFkaW5nOiAnSW1hZ2VzJywgbmFtZXNwYWNlOiAnaW1hZ2UnfVxuICovXG5hc3luYyBmdW5jdGlvbiBub25NYXhTdXBwcmVzc2lvbldpdGhTY29yZUFzeW5jXyhcbiAgICBib3hlczogVGVuc29yMkR8VGVuc29yTGlrZSwgc2NvcmVzOiBUZW5zb3IxRHxUZW5zb3JMaWtlLFxuICAgIG1heE91dHB1dFNpemU6IG51bWJlciwgaW91VGhyZXNob2xkID0gMC41LFxuICAgIHNjb3JlVGhyZXNob2xkID0gTnVtYmVyLk5FR0FUSVZFX0lORklOSVRZLFxuICAgIHNvZnRObXNTaWdtYSA9IDAuMCk6IFByb21pc2U8TmFtZWRUZW5zb3JNYXA+IHtcbiAgY29uc3QgJGJveGVzID0gY29udmVydFRvVGVuc29yKGJveGVzLCAnYm94ZXMnLCAnbm9uTWF4U3VwcHJlc3Npb25Bc3luYycpO1xuICBjb25zdCAkc2NvcmVzID0gY29udmVydFRvVGVuc29yKHNjb3JlcywgJ3Njb3JlcycsICdub25NYXhTdXBwcmVzc2lvbkFzeW5jJyk7XG5cbiAgY29uc3QgcGFyYW1zID0gbm9uTWF4U3VwcFNhbml0eUNoZWNrKFxuICAgICAgJGJveGVzLCAkc2NvcmVzLCBtYXhPdXRwdXRTaXplLCBpb3VUaHJlc2hvbGQsIHNjb3JlVGhyZXNob2xkLFxuICAgICAgc29mdE5tc1NpZ21hKTtcbiAgbWF4T3V0cHV0U2l6ZSA9IHBhcmFtcy5tYXhPdXRwdXRTaXplO1xuICBpb3VUaHJlc2hvbGQgPSBwYXJhbXMuaW91VGhyZXNob2xkO1xuICBzY29yZVRocmVzaG9sZCA9IHBhcmFtcy5zY29yZVRocmVzaG9sZDtcbiAgc29mdE5tc1NpZ21hID0gcGFyYW1zLnNvZnRObXNTaWdtYTtcblxuICBjb25zdCBib3hlc0FuZFNjb3JlcyA9IGF3YWl0IFByb21pc2UuYWxsKFskYm94ZXMuZGF0YSgpLCAkc2NvcmVzLmRhdGEoKV0pO1xuICBjb25zdCBib3hlc1ZhbHMgPSBib3hlc0FuZFNjb3Jlc1swXTtcbiAgY29uc3Qgc2NvcmVzVmFscyA9IGJveGVzQW5kU2NvcmVzWzFdO1xuXG4gIC8vIFdlIGNhbGwgYSBjcHUgYmFzZWQgaW1wbCBkaXJlY3RseSB3aXRoIHRoZSB0eXBlZGFycmF5IGRhdGEgIGhlcmUgcmF0aGVyXG4gIC8vIHRoYW4gYSBrZXJuZWwgYmVjYXVzZSBhbGwga2VybmVscyBhcmUgc3luY2hyb25vdXMgKGFuZCB0aHVzIGNhbm5vdCBhd2FpdFxuICAvLyAuZGF0YSgpKS5cbiAgY29uc3Qge3NlbGVjdGVkSW5kaWNlcywgc2VsZWN0ZWRTY29yZXN9ID0gbm9uTWF4U3VwcHJlc3Npb25WNUltcGwoXG4gICAgICBib3hlc1ZhbHMsIHNjb3Jlc1ZhbHMsIG1heE91dHB1dFNpemUsIGlvdVRocmVzaG9sZCwgc2NvcmVUaHJlc2hvbGQsXG4gICAgICBzb2Z0Tm1zU2lnbWEpO1xuXG4gIGlmICgkYm94ZXMgIT09IGJveGVzKSB7XG4gICAgJGJveGVzLmRpc3Bvc2UoKTtcbiAgfVxuICBpZiAoJHNjb3JlcyAhPT0gc2NvcmVzKSB7XG4gICAgJHNjb3Jlcy5kaXNwb3NlKCk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHNlbGVjdGVkSW5kaWNlczogdGVuc29yMWQoc2VsZWN0ZWRJbmRpY2VzLCAnaW50MzInKSxcbiAgICBzZWxlY3RlZFNjb3JlczogdGVuc29yMWQoc2VsZWN0ZWRTY29yZXMpXG4gIH07XG59XG5cbmV4cG9ydCBjb25zdCBub25NYXhTdXBwcmVzc2lvbldpdGhTY29yZUFzeW5jID0gbm9uTWF4U3VwcHJlc3Npb25XaXRoU2NvcmVBc3luY187XG4iXX0=","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { NonMaxSuppressionV4 } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport { nonMaxSuppSanityCheck } from '../nonmax_util';\nimport { op } from '../operation';\n/**\n * Asynchronously performs non maximum suppression of bounding boxes based on\n * iou (intersection over union), with an option to pad results.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param padToMaxOutputSize Defalts to false. If true, size of output\n *     `selectedIndices` is padded to maxOutputSize.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - validOutputs: A scalar denoting how many elements in `selectedIndices`\n *       are valid. Valid elements occur first, then padding.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction nonMaxSuppressionPadded_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY, padToMaxOutputSize = false) {\n    const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppression');\n    const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppression');\n    const params = nonMaxSuppSanityCheck($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold, null /* softNmsSigma */);\n    const $maxOutputSize = params.maxOutputSize;\n    const $iouThreshold = params.iouThreshold;\n    const $scoreThreshold = params.scoreThreshold;\n    const inputs = { boxes: $boxes, scores: $scores };\n    const attrs = {\n        maxOutputSize: $maxOutputSize,\n        iouThreshold: $iouThreshold,\n        scoreThreshold: $scoreThreshold,\n        padToMaxOutputSize\n    };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const result = ENGINE.runKernel(NonMaxSuppressionV4, inputs, attrs);\n    return { selectedIndices: result[0], validOutputs: result[1] };\n}\nexport const nonMaxSuppressionPadded = op({ nonMaxSuppressionPadded_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9uX21heF9zdXBwcmVzc2lvbl9wYWRkZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL29wcy9pbWFnZS9ub25fbWF4X3N1cHByZXNzaW9uX3BhZGRlZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsTUFBTSxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBQ3BDLE9BQU8sRUFBQyxtQkFBbUIsRUFBc0QsTUFBTSxvQkFBb0IsQ0FBQztBQUk1RyxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFHdEQsT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDckQsT0FBTyxFQUFDLEVBQUUsRUFBQyxNQUFNLGNBQWMsQ0FBQztBQUVoQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQXNCRztBQUNILFNBQVMsd0JBQXdCLENBQzdCLEtBQTBCLEVBQUUsTUFBMkIsRUFDdkQsYUFBcUIsRUFBRSxZQUFZLEdBQUcsR0FBRyxFQUN6QyxjQUFjLEdBQUcsTUFBTSxDQUFDLGlCQUFpQixFQUN6QyxrQkFBa0IsR0FBRyxLQUFLO0lBQzVCLE1BQU0sTUFBTSxHQUFHLGVBQWUsQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLG1CQUFtQixDQUFDLENBQUM7SUFDcEUsTUFBTSxPQUFPLEdBQUcsZUFBZSxDQUFDLE1BQU0sRUFBRSxRQUFRLEVBQUUsbUJBQW1CLENBQUMsQ0FBQztJQUV2RSxNQUFNLE1BQU0sR0FBRyxxQkFBcUIsQ0FDaEMsTUFBTSxFQUFFLE9BQU8sRUFBRSxhQUFhLEVBQUUsWUFBWSxFQUFFLGNBQWMsRUFDNUQsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFDN0IsTUFBTSxjQUFjLEdBQUcsTUFBTSxDQUFDLGFBQWEsQ0FBQztJQUM1QyxNQUFNLGFBQWEsR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDO0lBQzFDLE1BQU0sZUFBZSxHQUFHLE1BQU0sQ0FBQyxjQUFjLENBQUM7SUFFOUMsTUFBTSxNQUFNLEdBQThCLEVBQUMsS0FBSyxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFDLENBQUM7SUFDM0UsTUFBTSxLQUFLLEdBQTZCO1FBQ3RDLGFBQWEsRUFBRSxjQUFjO1FBQzdCLFlBQVksRUFBRSxhQUFhO1FBQzNCLGNBQWMsRUFBRSxlQUFlO1FBQy9CLGtCQUFrQjtLQUNuQixDQUFDO0lBRUYsMERBQTBEO0lBQzFELE1BQU0sTUFBTSxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQ1osbUJBQW1CLEVBQUUsTUFBOEIsRUFDbkQsS0FBMkIsQ0FBYSxDQUFDO0lBRTVELE9BQU8sRUFBQyxlQUFlLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLFlBQVksRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQztBQUMvRCxDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sdUJBQXVCLEdBQUcsRUFBRSxDQUFDLEVBQUMsd0JBQXdCLEVBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuXG5pbXBvcnQge0VOR0lORX0gZnJvbSAnLi4vLi4vZW5naW5lJztcbmltcG9ydCB7Tm9uTWF4U3VwcHJlc3Npb25WNCwgTm9uTWF4U3VwcHJlc3Npb25WNEF0dHJzLCBOb25NYXhTdXBwcmVzc2lvblY0SW5wdXRzfSBmcm9tICcuLi8uLi9rZXJuZWxfbmFtZXMnO1xuaW1wb3J0IHtOYW1lZEF0dHJNYXB9IGZyb20gJy4uLy4uL2tlcm5lbF9yZWdpc3RyeSc7XG5pbXBvcnQge1RlbnNvciwgVGVuc29yMUQsIFRlbnNvcjJEfSBmcm9tICcuLi8uLi90ZW5zb3InO1xuaW1wb3J0IHtOYW1lZFRlbnNvck1hcH0gZnJvbSAnLi4vLi4vdGVuc29yX3R5cGVzJztcbmltcG9ydCB7Y29udmVydFRvVGVuc29yfSBmcm9tICcuLi8uLi90ZW5zb3JfdXRpbF9lbnYnO1xuaW1wb3J0IHtUZW5zb3JMaWtlfSBmcm9tICcuLi8uLi90eXBlcyc7XG5cbmltcG9ydCB7bm9uTWF4U3VwcFNhbml0eUNoZWNrfSBmcm9tICcuLi9ub25tYXhfdXRpbCc7XG5pbXBvcnQge29wfSBmcm9tICcuLi9vcGVyYXRpb24nO1xuXG4vKipcbiAqIEFzeW5jaHJvbm91c2x5IHBlcmZvcm1zIG5vbiBtYXhpbXVtIHN1cHByZXNzaW9uIG9mIGJvdW5kaW5nIGJveGVzIGJhc2VkIG9uXG4gKiBpb3UgKGludGVyc2VjdGlvbiBvdmVyIHVuaW9uKSwgd2l0aCBhbiBvcHRpb24gdG8gcGFkIHJlc3VsdHMuXG4gKlxuICogQHBhcmFtIGJveGVzIGEgMmQgdGVuc29yIG9mIHNoYXBlIGBbbnVtQm94ZXMsIDRdYC4gRWFjaCBlbnRyeSBpc1xuICogICAgIGBbeTEsIHgxLCB5MiwgeDJdYCwgd2hlcmUgYCh5MSwgeDEpYCBhbmQgYCh5MiwgeDIpYCBhcmUgdGhlIGNvcm5lcnMgb2ZcbiAqICAgICB0aGUgYm91bmRpbmcgYm94LlxuICogQHBhcmFtIHNjb3JlcyBhIDFkIHRlbnNvciBwcm92aWRpbmcgdGhlIGJveCBzY29yZXMgb2Ygc2hhcGUgYFtudW1Cb3hlc11gLlxuICogQHBhcmFtIG1heE91dHB1dFNpemUgVGhlIG1heGltdW0gbnVtYmVyIG9mIGJveGVzIHRvIGJlIHNlbGVjdGVkLlxuICogQHBhcmFtIGlvdVRocmVzaG9sZCBBIGZsb2F0IHJlcHJlc2VudGluZyB0aGUgdGhyZXNob2xkIGZvciBkZWNpZGluZyB3aGV0aGVyXG4gKiAgICAgYm94ZXMgb3ZlcmxhcCB0b28gbXVjaCB3aXRoIHJlc3BlY3QgdG8gSU9VLiBNdXN0IGJlIGJldHdlZW4gWzAsIDFdLlxuICogICAgIERlZmF1bHRzIHRvIDAuNSAoNTAlIGJveCBvdmVybGFwKS5cbiAqIEBwYXJhbSBzY29yZVRocmVzaG9sZCBBIHRocmVzaG9sZCBmb3IgZGVjaWRpbmcgd2hlbiB0byByZW1vdmUgYm94ZXMgYmFzZWRcbiAqICAgICBvbiBzY29yZS4gRGVmYXVsdHMgdG8gLWluZiwgd2hpY2ggbWVhbnMgYW55IHNjb3JlIGlzIGFjY2VwdGVkLlxuICogQHBhcmFtIHBhZFRvTWF4T3V0cHV0U2l6ZSBEZWZhbHRzIHRvIGZhbHNlLiBJZiB0cnVlLCBzaXplIG9mIG91dHB1dFxuICogICAgIGBzZWxlY3RlZEluZGljZXNgIGlzIHBhZGRlZCB0byBtYXhPdXRwdXRTaXplLlxuICogQHJldHVybiBBIG1hcCB3aXRoIHRoZSBmb2xsb3dpbmcgcHJvcGVydGllczpcbiAqICAgICAtIHNlbGVjdGVkSW5kaWNlczogQSAxRCB0ZW5zb3Igd2l0aCB0aGUgc2VsZWN0ZWQgYm94IGluZGljZXMuXG4gKiAgICAgLSB2YWxpZE91dHB1dHM6IEEgc2NhbGFyIGRlbm90aW5nIGhvdyBtYW55IGVsZW1lbnRzIGluIGBzZWxlY3RlZEluZGljZXNgXG4gKiAgICAgICBhcmUgdmFsaWQuIFZhbGlkIGVsZW1lbnRzIG9jY3VyIGZpcnN0LCB0aGVuIHBhZGRpbmcuXG4gKlxuICogQGRvYyB7aGVhZGluZzogJ09wZXJhdGlvbnMnLCBzdWJoZWFkaW5nOiAnSW1hZ2VzJywgbmFtZXNwYWNlOiAnaW1hZ2UnfVxuICovXG5mdW5jdGlvbiBub25NYXhTdXBwcmVzc2lvblBhZGRlZF8oXG4gICAgYm94ZXM6IFRlbnNvcjJEfFRlbnNvckxpa2UsIHNjb3JlczogVGVuc29yMUR8VGVuc29yTGlrZSxcbiAgICBtYXhPdXRwdXRTaXplOiBudW1iZXIsIGlvdVRocmVzaG9sZCA9IDAuNSxcbiAgICBzY29yZVRocmVzaG9sZCA9IE51bWJlci5ORUdBVElWRV9JTkZJTklUWSxcbiAgICBwYWRUb01heE91dHB1dFNpemUgPSBmYWxzZSk6IE5hbWVkVGVuc29yTWFwIHtcbiAgY29uc3QgJGJveGVzID0gY29udmVydFRvVGVuc29yKGJveGVzLCAnYm94ZXMnLCAnbm9uTWF4U3VwcHJlc3Npb24nKTtcbiAgY29uc3QgJHNjb3JlcyA9IGNvbnZlcnRUb1RlbnNvcihzY29yZXMsICdzY29yZXMnLCAnbm9uTWF4U3VwcHJlc3Npb24nKTtcblxuICBjb25zdCBwYXJhbXMgPSBub25NYXhTdXBwU2FuaXR5Q2hlY2soXG4gICAgICAkYm94ZXMsICRzY29yZXMsIG1heE91dHB1dFNpemUsIGlvdVRocmVzaG9sZCwgc2NvcmVUaHJlc2hvbGQsXG4gICAgICBudWxsIC8qIHNvZnRObXNTaWdtYSAqLyk7XG4gIGNvbnN0ICRtYXhPdXRwdXRTaXplID0gcGFyYW1zLm1heE91dHB1dFNpemU7XG4gIGNvbnN0ICRpb3VUaHJlc2hvbGQgPSBwYXJhbXMuaW91VGhyZXNob2xkO1xuICBjb25zdCAkc2NvcmVUaHJlc2hvbGQgPSBwYXJhbXMuc2NvcmVUaHJlc2hvbGQ7XG5cbiAgY29uc3QgaW5wdXRzOiBOb25NYXhTdXBwcmVzc2lvblY0SW5wdXRzID0ge2JveGVzOiAkYm94ZXMsIHNjb3JlczogJHNjb3Jlc307XG4gIGNvbnN0IGF0dHJzOiBOb25NYXhTdXBwcmVzc2lvblY0QXR0cnMgPSB7XG4gICAgbWF4T3V0cHV0U2l6ZTogJG1heE91dHB1dFNpemUsXG4gICAgaW91VGhyZXNob2xkOiAkaW91VGhyZXNob2xkLFxuICAgIHNjb3JlVGhyZXNob2xkOiAkc2NvcmVUaHJlc2hvbGQsXG4gICAgcGFkVG9NYXhPdXRwdXRTaXplXG4gIH07XG5cbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby11bm5lY2Vzc2FyeS10eXBlLWFzc2VydGlvblxuICBjb25zdCByZXN1bHQgPSBFTkdJTkUucnVuS2VybmVsKFxuICAgICAgICAgICAgICAgICAgICAgTm9uTWF4U3VwcHJlc3Npb25WNCwgaW5wdXRzIGFzIHt9IGFzIE5hbWVkVGVuc29yTWFwLFxuICAgICAgICAgICAgICAgICAgICAgYXR0cnMgYXMge30gYXMgTmFtZWRBdHRyTWFwKSBhcyBUZW5zb3JbXTtcblxuICByZXR1cm4ge3NlbGVjdGVkSW5kaWNlczogcmVzdWx0WzBdLCB2YWxpZE91dHB1dHM6IHJlc3VsdFsxXX07XG59XG5cbmV4cG9ydCBjb25zdCBub25NYXhTdXBwcmVzc2lvblBhZGRlZCA9IG9wKHtub25NYXhTdXBwcmVzc2lvblBhZGRlZF99KTtcbiJdfQ==","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { nonMaxSuppressionV4Impl } from '../../backends/non_max_suppression_impl';\nimport { convertToTensor } from '../../tensor_util_env';\nimport { nonMaxSuppSanityCheck } from '../nonmax_util';\nimport { scalar } from '../scalar';\nimport { tensor1d } from '../tensor1d';\n/**\n * Asynchronously performs non maximum suppression of bounding boxes based on\n * iou (intersection over union), with an option to pad results.\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @param padToMaxOutputSize Defalts to false. If true, size of output\n *     `selectedIndices` is padded to maxOutputSize.\n * @return A map with the following properties:\n *     - selectedIndices: A 1D tensor with the selected box indices.\n *     - validOutputs: A scalar denoting how many elements in `selectedIndices`\n *       are valid. Valid elements occur first, then padding.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nasync function nonMaxSuppressionPaddedAsync_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY, padToMaxOutputSize = false) {\n    const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppressionAsync');\n    const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppressionAsync');\n    const params = nonMaxSuppSanityCheck($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold, null /* softNmsSigma */);\n    const $maxOutputSize = params.maxOutputSize;\n    const $iouThreshold = params.iouThreshold;\n    const $scoreThreshold = params.scoreThreshold;\n    const [boxesVals, scoresVals] = await Promise.all([$boxes.data(), $scores.data()]);\n    // We call a cpu based impl directly with the typedarray data here rather\n    // than a kernel because all kernels are synchronous (and thus cannot await\n    // .data()).\n    const { selectedIndices, validOutputs } = nonMaxSuppressionV4Impl(boxesVals, scoresVals, $maxOutputSize, $iouThreshold, $scoreThreshold, padToMaxOutputSize);\n    if ($boxes !== boxes) {\n        $boxes.dispose();\n    }\n    if ($scores !== scores) {\n        $scores.dispose();\n    }\n    return {\n        selectedIndices: tensor1d(selectedIndices, 'int32'),\n        validOutputs: scalar(validOutputs, 'int32')\n    };\n}\nexport const nonMaxSuppressionPaddedAsync = nonMaxSuppressionPaddedAsync_;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9uX21heF9zdXBwcmVzc2lvbl9wYWRkZWRfYXN5bmMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL29wcy9pbWFnZS9ub25fbWF4X3N1cHByZXNzaW9uX3BhZGRlZF9hc3luYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFDSCxPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSx5Q0FBeUMsQ0FBQztBQUdoRixPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFFdEQsT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDckQsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUNqQyxPQUFPLEVBQUMsUUFBUSxFQUFDLE1BQU0sYUFBYSxDQUFDO0FBRXJDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBc0JHO0FBQ0gsS0FBSyxVQUFVLDZCQUE2QixDQUN4QyxLQUEwQixFQUFFLE1BQTJCLEVBQ3ZELGFBQXFCLEVBQUUsWUFBWSxHQUFHLEdBQUcsRUFDekMsY0FBYyxHQUFHLE1BQU0sQ0FBQyxpQkFBaUIsRUFDekMsa0JBQWtCLEdBQUcsS0FBSztJQUM1QixNQUFNLE1BQU0sR0FBRyxlQUFlLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSx3QkFBd0IsQ0FBQyxDQUFDO0lBQ3pFLE1BQU0sT0FBTyxHQUFHLGVBQWUsQ0FBQyxNQUFNLEVBQUUsUUFBUSxFQUFFLHdCQUF3QixDQUFDLENBQUM7SUFFNUUsTUFBTSxNQUFNLEdBQUcscUJBQXFCLENBQ2hDLE1BQU0sRUFBRSxPQUFPLEVBQUUsYUFBYSxFQUFFLFlBQVksRUFBRSxjQUFjLEVBQzVELElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBQzdCLE1BQU0sY0FBYyxHQUFHLE1BQU0sQ0FBQyxhQUFhLENBQUM7SUFDNUMsTUFBTSxhQUFhLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQztJQUMxQyxNQUFNLGVBQWUsR0FBRyxNQUFNLENBQUMsY0FBYyxDQUFDO0lBRTlDLE1BQU0sQ0FBQyxTQUFTLEVBQUUsVUFBVSxDQUFDLEdBQ3pCLE1BQU0sT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsRUFBRSxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBRXZELHlFQUF5RTtJQUN6RSwyRUFBMkU7SUFDM0UsWUFBWTtJQUNaLE1BQU0sRUFBQyxlQUFlLEVBQUUsWUFBWSxFQUFDLEdBQUcsdUJBQXVCLENBQzNELFNBQVMsRUFBRSxVQUFVLEVBQUUsY0FBYyxFQUFFLGFBQWEsRUFBRSxlQUFlLEVBQ3JFLGtCQUFrQixDQUFDLENBQUM7SUFFeEIsSUFBSSxNQUFNLEtBQUssS0FBSyxFQUFFO1FBQ3BCLE1BQU0sQ0FBQyxPQUFPLEVBQUUsQ0FBQztLQUNsQjtJQUNELElBQUksT0FBTyxLQUFLLE1BQU0sRUFBRTtRQUN0QixPQUFPLENBQUMsT0FBTyxFQUFFLENBQUM7S0FDbkI7SUFFRCxPQUFPO1FBQ0wsZUFBZSxFQUFFLFFBQVEsQ0FBQyxlQUFlLEVBQUUsT0FBTyxDQUFDO1FBQ25ELFlBQVksRUFBRSxNQUFNLENBQUMsWUFBWSxFQUFFLE9BQU8sQ0FBQztLQUM1QyxDQUFDO0FBQ0osQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLDRCQUE0QixHQUFHLDZCQUE2QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqL1xuaW1wb3J0IHtub25NYXhTdXBwcmVzc2lvblY0SW1wbH0gZnJvbSAnLi4vLi4vYmFja2VuZHMvbm9uX21heF9zdXBwcmVzc2lvbl9pbXBsJztcbmltcG9ydCB7VGVuc29yMUQsIFRlbnNvcjJEfSBmcm9tICcuLi8uLi90ZW5zb3InO1xuaW1wb3J0IHtOYW1lZFRlbnNvck1hcH0gZnJvbSAnLi4vLi4vdGVuc29yX3R5cGVzJztcbmltcG9ydCB7Y29udmVydFRvVGVuc29yfSBmcm9tICcuLi8uLi90ZW5zb3JfdXRpbF9lbnYnO1xuaW1wb3J0IHtUZW5zb3JMaWtlfSBmcm9tICcuLi8uLi90eXBlcyc7XG5pbXBvcnQge25vbk1heFN1cHBTYW5pdHlDaGVja30gZnJvbSAnLi4vbm9ubWF4X3V0aWwnO1xuaW1wb3J0IHtzY2FsYXJ9IGZyb20gJy4uL3NjYWxhcic7XG5pbXBvcnQge3RlbnNvcjFkfSBmcm9tICcuLi90ZW5zb3IxZCc7XG5cbi8qKlxuICogQXN5bmNocm9ub3VzbHkgcGVyZm9ybXMgbm9uIG1heGltdW0gc3VwcHJlc3Npb24gb2YgYm91bmRpbmcgYm94ZXMgYmFzZWQgb25cbiAqIGlvdSAoaW50ZXJzZWN0aW9uIG92ZXIgdW5pb24pLCB3aXRoIGFuIG9wdGlvbiB0byBwYWQgcmVzdWx0cy5cbiAqXG4gKiBAcGFyYW0gYm94ZXMgYSAyZCB0ZW5zb3Igb2Ygc2hhcGUgYFtudW1Cb3hlcywgNF1gLiBFYWNoIGVudHJ5IGlzXG4gKiAgICAgYFt5MSwgeDEsIHkyLCB4Ml1gLCB3aGVyZSBgKHkxLCB4MSlgIGFuZCBgKHkyLCB4MilgIGFyZSB0aGUgY29ybmVycyBvZlxuICogICAgIHRoZSBib3VuZGluZyBib3guXG4gKiBAcGFyYW0gc2NvcmVzIGEgMWQgdGVuc29yIHByb3ZpZGluZyB0aGUgYm94IHNjb3JlcyBvZiBzaGFwZSBgW251bUJveGVzXWAuXG4gKiBAcGFyYW0gbWF4T3V0cHV0U2l6ZSBUaGUgbWF4aW11bSBudW1iZXIgb2YgYm94ZXMgdG8gYmUgc2VsZWN0ZWQuXG4gKiBAcGFyYW0gaW91VGhyZXNob2xkIEEgZmxvYXQgcmVwcmVzZW50aW5nIHRoZSB0aHJlc2hvbGQgZm9yIGRlY2lkaW5nIHdoZXRoZXJcbiAqICAgICBib3hlcyBvdmVybGFwIHRvbyBtdWNoIHdpdGggcmVzcGVjdCB0byBJT1UuIE11c3QgYmUgYmV0d2VlbiBbMCwgMV0uXG4gKiAgICAgRGVmYXVsdHMgdG8gMC41ICg1MCUgYm94IG92ZXJsYXApLlxuICogQHBhcmFtIHNjb3JlVGhyZXNob2xkIEEgdGhyZXNob2xkIGZvciBkZWNpZGluZyB3aGVuIHRvIHJlbW92ZSBib3hlcyBiYXNlZFxuICogICAgIG9uIHNjb3JlLiBEZWZhdWx0cyB0byAtaW5mLCB3aGljaCBtZWFucyBhbnkgc2NvcmUgaXMgYWNjZXB0ZWQuXG4gKiBAcGFyYW0gcGFkVG9NYXhPdXRwdXRTaXplIERlZmFsdHMgdG8gZmFsc2UuIElmIHRydWUsIHNpemUgb2Ygb3V0cHV0XG4gKiAgICAgYHNlbGVjdGVkSW5kaWNlc2AgaXMgcGFkZGVkIHRvIG1heE91dHB1dFNpemUuXG4gKiBAcmV0dXJuIEEgbWFwIHdpdGggdGhlIGZvbGxvd2luZyBwcm9wZXJ0aWVzOlxuICogICAgIC0gc2VsZWN0ZWRJbmRpY2VzOiBBIDFEIHRlbnNvciB3aXRoIHRoZSBzZWxlY3RlZCBib3ggaW5kaWNlcy5cbiAqICAgICAtIHZhbGlkT3V0cHV0czogQSBzY2FsYXIgZGVub3RpbmcgaG93IG1hbnkgZWxlbWVudHMgaW4gYHNlbGVjdGVkSW5kaWNlc2BcbiAqICAgICAgIGFyZSB2YWxpZC4gVmFsaWQgZWxlbWVudHMgb2NjdXIgZmlyc3QsIHRoZW4gcGFkZGluZy5cbiAqXG4gKiBAZG9jIHtoZWFkaW5nOiAnT3BlcmF0aW9ucycsIHN1YmhlYWRpbmc6ICdJbWFnZXMnLCBuYW1lc3BhY2U6ICdpbWFnZSd9XG4gKi9cbmFzeW5jIGZ1bmN0aW9uIG5vbk1heFN1cHByZXNzaW9uUGFkZGVkQXN5bmNfKFxuICAgIGJveGVzOiBUZW5zb3IyRHxUZW5zb3JMaWtlLCBzY29yZXM6IFRlbnNvcjFEfFRlbnNvckxpa2UsXG4gICAgbWF4T3V0cHV0U2l6ZTogbnVtYmVyLCBpb3VUaHJlc2hvbGQgPSAwLjUsXG4gICAgc2NvcmVUaHJlc2hvbGQgPSBOdW1iZXIuTkVHQVRJVkVfSU5GSU5JVFksXG4gICAgcGFkVG9NYXhPdXRwdXRTaXplID0gZmFsc2UpOiBQcm9taXNlPE5hbWVkVGVuc29yTWFwPiB7XG4gIGNvbnN0ICRib3hlcyA9IGNvbnZlcnRUb1RlbnNvcihib3hlcywgJ2JveGVzJywgJ25vbk1heFN1cHByZXNzaW9uQXN5bmMnKTtcbiAgY29uc3QgJHNjb3JlcyA9IGNvbnZlcnRUb1RlbnNvcihzY29yZXMsICdzY29yZXMnLCAnbm9uTWF4U3VwcHJlc3Npb25Bc3luYycpO1xuXG4gIGNvbnN0IHBhcmFtcyA9IG5vbk1heFN1cHBTYW5pdHlDaGVjayhcbiAgICAgICRib3hlcywgJHNjb3JlcywgbWF4T3V0cHV0U2l6ZSwgaW91VGhyZXNob2xkLCBzY29yZVRocmVzaG9sZCxcbiAgICAgIG51bGwgLyogc29mdE5tc1NpZ21hICovKTtcbiAgY29uc3QgJG1heE91dHB1dFNpemUgPSBwYXJhbXMubWF4T3V0cHV0U2l6ZTtcbiAgY29uc3QgJGlvdVRocmVzaG9sZCA9IHBhcmFtcy5pb3VUaHJlc2hvbGQ7XG4gIGNvbnN0ICRzY29yZVRocmVzaG9sZCA9IHBhcmFtcy5zY29yZVRocmVzaG9sZDtcblxuICBjb25zdCBbYm94ZXNWYWxzLCBzY29yZXNWYWxzXSA9XG4gICAgICBhd2FpdCBQcm9taXNlLmFsbChbJGJveGVzLmRhdGEoKSwgJHNjb3Jlcy5kYXRhKCldKTtcblxuICAvLyBXZSBjYWxsIGEgY3B1IGJhc2VkIGltcGwgZGlyZWN0bHkgd2l0aCB0aGUgdHlwZWRhcnJheSBkYXRhIGhlcmUgcmF0aGVyXG4gIC8vIHRoYW4gYSBrZXJuZWwgYmVjYXVzZSBhbGwga2VybmVscyBhcmUgc3luY2hyb25vdXMgKGFuZCB0aHVzIGNhbm5vdCBhd2FpdFxuICAvLyAuZGF0YSgpKS5cbiAgY29uc3Qge3NlbGVjdGVkSW5kaWNlcywgdmFsaWRPdXRwdXRzfSA9IG5vbk1heFN1cHByZXNzaW9uVjRJbXBsKFxuICAgICAgYm94ZXNWYWxzLCBzY29yZXNWYWxzLCAkbWF4T3V0cHV0U2l6ZSwgJGlvdVRocmVzaG9sZCwgJHNjb3JlVGhyZXNob2xkLFxuICAgICAgcGFkVG9NYXhPdXRwdXRTaXplKTtcblxuICBpZiAoJGJveGVzICE9PSBib3hlcykge1xuICAgICRib3hlcy5kaXNwb3NlKCk7XG4gIH1cbiAgaWYgKCRzY29yZXMgIT09IHNjb3Jlcykge1xuICAgICRzY29yZXMuZGlzcG9zZSgpO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBzZWxlY3RlZEluZGljZXM6IHRlbnNvcjFkKHNlbGVjdGVkSW5kaWNlcywgJ2ludDMyJyksXG4gICAgdmFsaWRPdXRwdXRzOiBzY2FsYXIodmFsaWRPdXRwdXRzLCAnaW50MzInKVxuICB9O1xufVxuXG5leHBvcnQgY29uc3Qgbm9uTWF4U3VwcHJlc3Npb25QYWRkZWRBc3luYyA9IG5vbk1heFN1cHByZXNzaW9uUGFkZGVkQXN5bmNfO1xuIl19","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { ResizeBilinear } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport * as util from '../../util';\nimport { op } from '../operation';\nimport { reshape } from '../reshape';\n/**\n * Bilinear resize a single 3D image or a batch of 3D images to a new shape.\n *\n * @param images The images, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param size The new shape `[newHeight, newWidth]` to resize the\n *     images to. Each channel is resized individually.\n * @param alignCorners Defaults to `false`. If true, rescale\n *     input by `(new_height - 1) / (height - 1)`, which exactly aligns the 4\n *     corners of images and resized images. If false, rescale by\n *     `new_height / height`. Treat similarly the width dimension.\n * @param halfPixelCenters Defaults to `false`. Whether to assume pixel centers\n *     are at 0.5, which would make the floating point coordinates of the top\n *     left pixel 0.5, 0.5.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction resizeBilinear_(images, size, alignCorners = false, halfPixelCenters = false) {\n    const $images = convertToTensor(images, 'images', 'resizeBilinear');\n    util.assert($images.rank === 3 || $images.rank === 4, () => `Error in resizeBilinear: x must be rank 3 or 4, but got ` +\n        `rank ${$images.rank}.`);\n    util.assert(size.length === 2, () => `Error in resizeBilinear: new shape must 2D, but got shape ` +\n        `${size}.`);\n    util.assert(halfPixelCenters === false || alignCorners === false, () => `Error in resizeBilinear: If halfPixelCenters is true, ` +\n        `alignCorners must be false.`);\n    let batchImages = $images;\n    let reshapedTo4D = false;\n    if ($images.rank === 3) {\n        reshapedTo4D = true;\n        batchImages = reshape($images, [1, $images.shape[0], $images.shape[1], $images.shape[2]]);\n    }\n    const [] = size;\n    const inputs = { images: batchImages };\n    const attrs = { alignCorners, halfPixelCenters, size };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = ENGINE.runKernel(ResizeBilinear, inputs, attrs);\n    if (reshapedTo4D) {\n        return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nexport const resizeBilinear = op({ resizeBilinear_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzaXplX2JpbGluZWFyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy9vcHMvaW1hZ2UvcmVzaXplX2JpbGluZWFyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUVILE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxjQUFjLENBQUM7QUFDcEMsT0FBTyxFQUFDLGNBQWMsRUFBNEMsTUFBTSxvQkFBb0IsQ0FBQztBQUk3RixPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFFdEQsT0FBTyxLQUFLLElBQUksTUFBTSxZQUFZLENBQUM7QUFFbkMsT0FBTyxFQUFDLEVBQUUsRUFBQyxNQUFNLGNBQWMsQ0FBQztBQUNoQyxPQUFPLEVBQUMsT0FBTyxFQUFDLE1BQU0sWUFBWSxDQUFDO0FBRW5DOzs7Ozs7Ozs7Ozs7Ozs7O0dBZ0JHO0FBQ0gsU0FBUyxlQUFlLENBQ3BCLE1BQW9CLEVBQUUsSUFBc0IsRUFBRSxZQUFZLEdBQUcsS0FBSyxFQUNsRSxnQkFBZ0IsR0FBRyxLQUFLO0lBQzFCLE1BQU0sT0FBTyxHQUFHLGVBQWUsQ0FBQyxNQUFNLEVBQUUsUUFBUSxFQUFFLGdCQUFnQixDQUFDLENBQUM7SUFFcEUsSUFBSSxDQUFDLE1BQU0sQ0FDUCxPQUFPLENBQUMsSUFBSSxLQUFLLENBQUMsSUFBSSxPQUFPLENBQUMsSUFBSSxLQUFLLENBQUMsRUFDeEMsR0FBRyxFQUFFLENBQUMsMERBQTBEO1FBQzVELFFBQVEsT0FBTyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUM7SUFDakMsSUFBSSxDQUFDLE1BQU0sQ0FDUCxJQUFJLENBQUMsTUFBTSxLQUFLLENBQUMsRUFDakIsR0FBRyxFQUFFLENBQUMsNERBQTREO1FBQzlELEdBQUcsSUFBSSxHQUFHLENBQUMsQ0FBQztJQUNwQixJQUFJLENBQUMsTUFBTSxDQUNQLGdCQUFnQixLQUFLLEtBQUssSUFBSSxZQUFZLEtBQUssS0FBSyxFQUNwRCxHQUFHLEVBQUUsQ0FBQyx3REFBd0Q7UUFDMUQsNkJBQTZCLENBQUMsQ0FBQztJQUV2QyxJQUFJLFdBQVcsR0FBRyxPQUFtQixDQUFDO0lBQ3RDLElBQUksWUFBWSxHQUFHLEtBQUssQ0FBQztJQUN6QixJQUFJLE9BQU8sQ0FBQyxJQUFJLEtBQUssQ0FBQyxFQUFFO1FBQ3RCLFlBQVksR0FBRyxJQUFJLENBQUM7UUFDcEIsV0FBVyxHQUFHLE9BQU8sQ0FDakIsT0FBTyxFQUFFLENBQUMsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUN6RTtJQUVELE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQztJQUVoQixNQUFNLE1BQU0sR0FBeUIsRUFBQyxNQUFNLEVBQUUsV0FBVyxFQUFDLENBQUM7SUFDM0QsTUFBTSxLQUFLLEdBQXdCLEVBQUMsWUFBWSxFQUFFLGdCQUFnQixFQUFFLElBQUksRUFBQyxDQUFDO0lBRTFFLDBEQUEwRDtJQUMxRCxNQUFNLEdBQUcsR0FBRyxNQUFNLENBQUMsU0FBUyxDQUNaLGNBQWMsRUFBRSxNQUE4QixFQUM5QyxLQUEyQixDQUFNLENBQUM7SUFFbEQsSUFBSSxZQUFZLEVBQUU7UUFDaEIsT0FBTyxPQUFPLENBQUMsR0FBRyxFQUFFLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBTSxDQUFDO0tBQ3RFO0lBQ0QsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLEVBQUUsQ0FBQyxFQUFDLGVBQWUsRUFBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICovXG5cbmltcG9ydCB7RU5HSU5FfSBmcm9tICcuLi8uLi9lbmdpbmUnO1xuaW1wb3J0IHtSZXNpemVCaWxpbmVhciwgUmVzaXplQmlsaW5lYXJBdHRycywgUmVzaXplQmlsaW5lYXJJbnB1dHN9IGZyb20gJy4uLy4uL2tlcm5lbF9uYW1lcyc7XG5pbXBvcnQge05hbWVkQXR0ck1hcH0gZnJvbSAnLi4vLi4va2VybmVsX3JlZ2lzdHJ5JztcbmltcG9ydCB7VGVuc29yM0QsIFRlbnNvcjREfSBmcm9tICcuLi8uLi90ZW5zb3InO1xuaW1wb3J0IHtOYW1lZFRlbnNvck1hcH0gZnJvbSAnLi4vLi4vdGVuc29yX3R5cGVzJztcbmltcG9ydCB7Y29udmVydFRvVGVuc29yfSBmcm9tICcuLi8uLi90ZW5zb3JfdXRpbF9lbnYnO1xuaW1wb3J0IHtUZW5zb3JMaWtlfSBmcm9tICcuLi8uLi90eXBlcyc7XG5pbXBvcnQgKiBhcyB1dGlsIGZyb20gJy4uLy4uL3V0aWwnO1xuXG5pbXBvcnQge29wfSBmcm9tICcuLi9vcGVyYXRpb24nO1xuaW1wb3J0IHtyZXNoYXBlfSBmcm9tICcuLi9yZXNoYXBlJztcblxuLyoqXG4gKiBCaWxpbmVhciByZXNpemUgYSBzaW5nbGUgM0QgaW1hZ2Ugb3IgYSBiYXRjaCBvZiAzRCBpbWFnZXMgdG8gYSBuZXcgc2hhcGUuXG4gKlxuICogQHBhcmFtIGltYWdlcyBUaGUgaW1hZ2VzLCBvZiByYW5rIDQgb3IgcmFuayAzLCBvZiBzaGFwZVxuICogICAgIGBbYmF0Y2gsIGhlaWdodCwgd2lkdGgsIGluQ2hhbm5lbHNdYC4gSWYgcmFuayAzLCBiYXRjaCBvZiAxIGlzIGFzc3VtZWQuXG4gKiBAcGFyYW0gc2l6ZSBUaGUgbmV3IHNoYXBlIGBbbmV3SGVpZ2h0LCBuZXdXaWR0aF1gIHRvIHJlc2l6ZSB0aGVcbiAqICAgICBpbWFnZXMgdG8uIEVhY2ggY2hhbm5lbCBpcyByZXNpemVkIGluZGl2aWR1YWxseS5cbiAqIEBwYXJhbSBhbGlnbkNvcm5lcnMgRGVmYXVsdHMgdG8gYGZhbHNlYC4gSWYgdHJ1ZSwgcmVzY2FsZVxuICogICAgIGlucHV0IGJ5IGAobmV3X2hlaWdodCAtIDEpIC8gKGhlaWdodCAtIDEpYCwgd2hpY2ggZXhhY3RseSBhbGlnbnMgdGhlIDRcbiAqICAgICBjb3JuZXJzIG9mIGltYWdlcyBhbmQgcmVzaXplZCBpbWFnZXMuIElmIGZhbHNlLCByZXNjYWxlIGJ5XG4gKiAgICAgYG5ld19oZWlnaHQgLyBoZWlnaHRgLiBUcmVhdCBzaW1pbGFybHkgdGhlIHdpZHRoIGRpbWVuc2lvbi5cbiAqIEBwYXJhbSBoYWxmUGl4ZWxDZW50ZXJzIERlZmF1bHRzIHRvIGBmYWxzZWAuIFdoZXRoZXIgdG8gYXNzdW1lIHBpeGVsIGNlbnRlcnNcbiAqICAgICBhcmUgYXQgMC41LCB3aGljaCB3b3VsZCBtYWtlIHRoZSBmbG9hdGluZyBwb2ludCBjb29yZGluYXRlcyBvZiB0aGUgdG9wXG4gKiAgICAgbGVmdCBwaXhlbCAwLjUsIDAuNS5cbiAqXG4gKiBAZG9jIHtoZWFkaW5nOiAnT3BlcmF0aW9ucycsIHN1YmhlYWRpbmc6ICdJbWFnZXMnLCBuYW1lc3BhY2U6ICdpbWFnZSd9XG4gKi9cbmZ1bmN0aW9uIHJlc2l6ZUJpbGluZWFyXzxUIGV4dGVuZHMgVGVuc29yM0R8VGVuc29yNEQ+KFxuICAgIGltYWdlczogVHxUZW5zb3JMaWtlLCBzaXplOiBbbnVtYmVyLCBudW1iZXJdLCBhbGlnbkNvcm5lcnMgPSBmYWxzZSxcbiAgICBoYWxmUGl4ZWxDZW50ZXJzID0gZmFsc2UpOiBUIHtcbiAgY29uc3QgJGltYWdlcyA9IGNvbnZlcnRUb1RlbnNvcihpbWFnZXMsICdpbWFnZXMnLCAncmVzaXplQmlsaW5lYXInKTtcblxuICB1dGlsLmFzc2VydChcbiAgICAgICRpbWFnZXMucmFuayA9PT0gMyB8fCAkaW1hZ2VzLnJhbmsgPT09IDQsXG4gICAgICAoKSA9PiBgRXJyb3IgaW4gcmVzaXplQmlsaW5lYXI6IHggbXVzdCBiZSByYW5rIDMgb3IgNCwgYnV0IGdvdCBgICtcbiAgICAgICAgICBgcmFuayAkeyRpbWFnZXMucmFua30uYCk7XG4gIHV0aWwuYXNzZXJ0KFxuICAgICAgc2l6ZS5sZW5ndGggPT09IDIsXG4gICAgICAoKSA9PiBgRXJyb3IgaW4gcmVzaXplQmlsaW5lYXI6IG5ldyBzaGFwZSBtdXN0IDJELCBidXQgZ290IHNoYXBlIGAgK1xuICAgICAgICAgIGAke3NpemV9LmApO1xuICB1dGlsLmFzc2VydChcbiAgICAgIGhhbGZQaXhlbENlbnRlcnMgPT09IGZhbHNlIHx8IGFsaWduQ29ybmVycyA9PT0gZmFsc2UsXG4gICAgICAoKSA9PiBgRXJyb3IgaW4gcmVzaXplQmlsaW5lYXI6IElmIGhhbGZQaXhlbENlbnRlcnMgaXMgdHJ1ZSwgYCArXG4gICAgICAgICAgYGFsaWduQ29ybmVycyBtdXN0IGJlIGZhbHNlLmApO1xuXG4gIGxldCBiYXRjaEltYWdlcyA9ICRpbWFnZXMgYXMgVGVuc29yNEQ7XG4gIGxldCByZXNoYXBlZFRvNEQgPSBmYWxzZTtcbiAgaWYgKCRpbWFnZXMucmFuayA9PT0gMykge1xuICAgIHJlc2hhcGVkVG80RCA9IHRydWU7XG4gICAgYmF0Y2hJbWFnZXMgPSByZXNoYXBlKFxuICAgICAgICAkaW1hZ2VzLCBbMSwgJGltYWdlcy5zaGFwZVswXSwgJGltYWdlcy5zaGFwZVsxXSwgJGltYWdlcy5zaGFwZVsyXV0pO1xuICB9XG5cbiAgY29uc3QgW10gPSBzaXplO1xuXG4gIGNvbnN0IGlucHV0czogUmVzaXplQmlsaW5lYXJJbnB1dHMgPSB7aW1hZ2VzOiBiYXRjaEltYWdlc307XG4gIGNvbnN0IGF0dHJzOiBSZXNpemVCaWxpbmVhckF0dHJzID0ge2FsaWduQ29ybmVycywgaGFsZlBpeGVsQ2VudGVycywgc2l6ZX07XG5cbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby11bm5lY2Vzc2FyeS10eXBlLWFzc2VydGlvblxuICBjb25zdCByZXMgPSBFTkdJTkUucnVuS2VybmVsKFxuICAgICAgICAgICAgICAgICAgUmVzaXplQmlsaW5lYXIsIGlucHV0cyBhcyB7fSBhcyBOYW1lZFRlbnNvck1hcCxcbiAgICAgICAgICAgICAgICAgIGF0dHJzIGFzIHt9IGFzIE5hbWVkQXR0ck1hcCkgYXMgVDtcblxuICBpZiAocmVzaGFwZWRUbzREKSB7XG4gICAgcmV0dXJuIHJlc2hhcGUocmVzLCBbcmVzLnNoYXBlWzFdLCByZXMuc2hhcGVbMl0sIHJlcy5zaGFwZVszXV0pIGFzIFQ7XG4gIH1cbiAgcmV0dXJuIHJlcztcbn1cblxuZXhwb3J0IGNvbnN0IHJlc2l6ZUJpbGluZWFyID0gb3Aoe3Jlc2l6ZUJpbGluZWFyX30pO1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { Transform } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport * as util from '../../util';\nimport { op } from '../operation';\n/**\n * Applies the given transform(s) to the image(s).\n *\n * @param image 4d tensor of shape `[batch, imageHeight, imageWidth, depth]`.\n * @param transforms Projective transform matrix/matrices. A tensor1d of length\n *     8 or tensor of size N x 8. If one row of transforms is [a0, a1, a2, b0\n *     b1, b2, c0, c1], then it maps the output point (x, y) to a transformed\n *     input point (x', y') = ((a0 x + a1 y + a2) / k, (b0 x + b1 y + b2) / k),\n *     where k = c0 x + c1 y + 1. The transforms are inverted compared to the\n *     transform mapping input points to output points.\n * @param interpolation Interpolation mode.\n *     Supported values: 'nearest', 'bilinear'. Default to 'nearest'.\n * @param fillMode Points outside the boundaries of the input are filled\n *     according to the given mode, one of 'constant', 'reflect', 'wrap',\n *     'nearest'. Default to 'constant'.\n *     'reflect': (d c b a | a b c d | d c b a ) The input is extended by\n *     reflecting about the edge of the last pixel.\n *     'constant': (k k k k | a b c d | k k k k) The input is extended by\n *     filling all values beyond the edge with the same constant value k.\n *     'wrap': (a b c d | a b c d | a b c d) The input is extended by\n *     wrapping around to the opposite edge.\n *     'nearest': (a a a a | a b c d | d d d d) The input is extended by\n *     the nearest pixel.\n * @param fillValue A float represents the value to be filled outside the\n *     boundaries when fillMode is 'constant'.\n * @param Output dimension after the transform, [height, width]. If undefined,\n *     output is the same size as input image.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction transform_(image, transforms, interpolation = 'nearest', fillMode = 'constant', fillValue = 0, outputShape) {\n    const $image = convertToTensor(image, 'image', 'transform', 'float32');\n    const $transforms = convertToTensor(transforms, 'transforms', 'transform', 'float32');\n    util.assert($image.rank === 4, () => 'Error in transform: image must be rank 4,' +\n        `but got rank ${$image.rank}.`);\n    util.assert($transforms.rank === 2 &&\n        ($transforms.shape[0] === $image.shape[0] ||\n            $transforms.shape[0] === 1) &&\n        $transforms.shape[1] === 8, () => `Error in transform: Input transform should be batch x 8 or 1 x 8`);\n    util.assert(outputShape == null || outputShape.length === 2, () => 'Error in transform: outputShape must be [height, width] or null, ' +\n        `but got ${outputShape}.`);\n    const inputs = { image: $image, transforms: $transforms };\n    const attrs = { interpolation, fillMode, fillValue, outputShape };\n    return ENGINE.runKernel(Transform, inputs, attrs);\n}\nexport const transform = op({ transform_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNmb3JtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vdGZqcy1jb3JlL3NyYy9vcHMvaW1hZ2UvdHJhbnNmb3JtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUNILE9BQU8sRUFBQyxNQUFNLEVBQUMsTUFBTSxjQUFjLENBQUM7QUFDcEMsT0FBTyxFQUFDLFNBQVMsRUFBa0MsTUFBTSxvQkFBb0IsQ0FBQztBQUk5RSxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFFdEQsT0FBTyxLQUFLLElBQUksTUFBTSxZQUFZLENBQUM7QUFFbkMsT0FBTyxFQUFDLEVBQUUsRUFBQyxNQUFNLGNBQWMsQ0FBQztBQUVoQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0E2Qkc7QUFDSCxTQUFTLFVBQVUsQ0FDZixLQUEwQixFQUFFLFVBQStCLEVBQzNELGdCQUFzQyxTQUFTLEVBQy9DLFdBQWtELFVBQVUsRUFBRSxTQUFTLEdBQUcsQ0FBQyxFQUMzRSxXQUE4QjtJQUNoQyxNQUFNLE1BQU0sR0FBRyxlQUFlLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxXQUFXLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDdkUsTUFBTSxXQUFXLEdBQ2IsZUFBZSxDQUFDLFVBQVUsRUFBRSxZQUFZLEVBQUUsV0FBVyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBRXRFLElBQUksQ0FBQyxNQUFNLENBQ1AsTUFBTSxDQUFDLElBQUksS0FBSyxDQUFDLEVBQ2pCLEdBQUcsRUFBRSxDQUFDLDJDQUEyQztRQUM3QyxnQkFBZ0IsTUFBTSxDQUFDLElBQUksR0FBRyxDQUFDLENBQUM7SUFFeEMsSUFBSSxDQUFDLE1BQU0sQ0FDUCxXQUFXLENBQUMsSUFBSSxLQUFLLENBQUM7UUFDbEIsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1lBQ3hDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzVCLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxFQUM5QixHQUFHLEVBQUUsQ0FBQyxrRUFBa0UsQ0FBQyxDQUFDO0lBRTlFLElBQUksQ0FBQyxNQUFNLENBQ1AsV0FBVyxJQUFJLElBQUksSUFBSSxXQUFXLENBQUMsTUFBTSxLQUFLLENBQUMsRUFDL0MsR0FBRyxFQUFFLENBQ0QsbUVBQW1FO1FBQ25FLFdBQVcsV0FBVyxHQUFHLENBQUMsQ0FBQztJQUVuQyxNQUFNLE1BQU0sR0FBb0IsRUFBQyxLQUFLLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQUMsQ0FBQztJQUN6RSxNQUFNLEtBQUssR0FDVSxFQUFDLGFBQWEsRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBQyxDQUFDO0lBRXZFLE9BQU8sTUFBTSxDQUFDLFNBQVMsQ0FDbkIsU0FBUyxFQUFFLE1BQThCLEVBQUUsS0FBMkIsQ0FBQyxDQUFDO0FBQzlFLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxTQUFTLEdBQUcsRUFBRSxDQUFDLEVBQUMsVUFBVSxFQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cbmltcG9ydCB7RU5HSU5FfSBmcm9tICcuLi8uLi9lbmdpbmUnO1xuaW1wb3J0IHtUcmFuc2Zvcm0sIFRyYW5zZm9ybUF0dHJzLCBUcmFuc2Zvcm1JbnB1dHN9IGZyb20gJy4uLy4uL2tlcm5lbF9uYW1lcyc7XG5pbXBvcnQge05hbWVkQXR0ck1hcH0gZnJvbSAnLi4vLi4va2VybmVsX3JlZ2lzdHJ5JztcbmltcG9ydCB7VGVuc29yMkQsIFRlbnNvcjREfSBmcm9tICcuLi8uLi90ZW5zb3InO1xuaW1wb3J0IHtOYW1lZFRlbnNvck1hcH0gZnJvbSAnLi4vLi4vdGVuc29yX3R5cGVzJztcbmltcG9ydCB7Y29udmVydFRvVGVuc29yfSBmcm9tICcuLi8uLi90ZW5zb3JfdXRpbF9lbnYnO1xuaW1wb3J0IHtUZW5zb3JMaWtlfSBmcm9tICcuLi8uLi90eXBlcyc7XG5pbXBvcnQgKiBhcyB1dGlsIGZyb20gJy4uLy4uL3V0aWwnO1xuXG5pbXBvcnQge29wfSBmcm9tICcuLi9vcGVyYXRpb24nO1xuXG4vKipcbiAqIEFwcGxpZXMgdGhlIGdpdmVuIHRyYW5zZm9ybShzKSB0byB0aGUgaW1hZ2UocykuXG4gKlxuICogQHBhcmFtIGltYWdlIDRkIHRlbnNvciBvZiBzaGFwZSBgW2JhdGNoLCBpbWFnZUhlaWdodCwgaW1hZ2VXaWR0aCwgZGVwdGhdYC5cbiAqIEBwYXJhbSB0cmFuc2Zvcm1zIFByb2plY3RpdmUgdHJhbnNmb3JtIG1hdHJpeC9tYXRyaWNlcy4gQSB0ZW5zb3IxZCBvZiBsZW5ndGhcbiAqICAgICA4IG9yIHRlbnNvciBvZiBzaXplIE4geCA4LiBJZiBvbmUgcm93IG9mIHRyYW5zZm9ybXMgaXMgW2EwLCBhMSwgYTIsIGIwXG4gKiAgICAgYjEsIGIyLCBjMCwgYzFdLCB0aGVuIGl0IG1hcHMgdGhlIG91dHB1dCBwb2ludCAoeCwgeSkgdG8gYSB0cmFuc2Zvcm1lZFxuICogICAgIGlucHV0IHBvaW50ICh4JywgeScpID0gKChhMCB4ICsgYTEgeSArIGEyKSAvIGssIChiMCB4ICsgYjEgeSArIGIyKSAvIGspLFxuICogICAgIHdoZXJlIGsgPSBjMCB4ICsgYzEgeSArIDEuIFRoZSB0cmFuc2Zvcm1zIGFyZSBpbnZlcnRlZCBjb21wYXJlZCB0byB0aGVcbiAqICAgICB0cmFuc2Zvcm0gbWFwcGluZyBpbnB1dCBwb2ludHMgdG8gb3V0cHV0IHBvaW50cy5cbiAqIEBwYXJhbSBpbnRlcnBvbGF0aW9uIEludGVycG9sYXRpb24gbW9kZS5cbiAqICAgICBTdXBwb3J0ZWQgdmFsdWVzOiAnbmVhcmVzdCcsICdiaWxpbmVhcicuIERlZmF1bHQgdG8gJ25lYXJlc3QnLlxuICogQHBhcmFtIGZpbGxNb2RlIFBvaW50cyBvdXRzaWRlIHRoZSBib3VuZGFyaWVzIG9mIHRoZSBpbnB1dCBhcmUgZmlsbGVkXG4gKiAgICAgYWNjb3JkaW5nIHRvIHRoZSBnaXZlbiBtb2RlLCBvbmUgb2YgJ2NvbnN0YW50JywgJ3JlZmxlY3QnLCAnd3JhcCcsXG4gKiAgICAgJ25lYXJlc3QnLiBEZWZhdWx0IHRvICdjb25zdGFudCcuXG4gKiAgICAgJ3JlZmxlY3QnOiAoZCBjIGIgYSB8IGEgYiBjIGQgfCBkIGMgYiBhICkgVGhlIGlucHV0IGlzIGV4dGVuZGVkIGJ5XG4gKiAgICAgcmVmbGVjdGluZyBhYm91dCB0aGUgZWRnZSBvZiB0aGUgbGFzdCBwaXhlbC5cbiAqICAgICAnY29uc3RhbnQnOiAoayBrIGsgayB8IGEgYiBjIGQgfCBrIGsgayBrKSBUaGUgaW5wdXQgaXMgZXh0ZW5kZWQgYnlcbiAqICAgICBmaWxsaW5nIGFsbCB2YWx1ZXMgYmV5b25kIHRoZSBlZGdlIHdpdGggdGhlIHNhbWUgY29uc3RhbnQgdmFsdWUgay5cbiAqICAgICAnd3JhcCc6IChhIGIgYyBkIHwgYSBiIGMgZCB8IGEgYiBjIGQpIFRoZSBpbnB1dCBpcyBleHRlbmRlZCBieVxuICogICAgIHdyYXBwaW5nIGFyb3VuZCB0byB0aGUgb3Bwb3NpdGUgZWRnZS5cbiAqICAgICAnbmVhcmVzdCc6IChhIGEgYSBhIHwgYSBiIGMgZCB8IGQgZCBkIGQpIFRoZSBpbnB1dCBpcyBleHRlbmRlZCBieVxuICogICAgIHRoZSBuZWFyZXN0IHBpeGVsLlxuICogQHBhcmFtIGZpbGxWYWx1ZSBBIGZsb2F0IHJlcHJlc2VudHMgdGhlIHZhbHVlIHRvIGJlIGZpbGxlZCBvdXRzaWRlIHRoZVxuICogICAgIGJvdW5kYXJpZXMgd2hlbiBmaWxsTW9kZSBpcyAnY29uc3RhbnQnLlxuICogQHBhcmFtIE91dHB1dCBkaW1lbnNpb24gYWZ0ZXIgdGhlIHRyYW5zZm9ybSwgW2hlaWdodCwgd2lkdGhdLiBJZiB1bmRlZmluZWQsXG4gKiAgICAgb3V0cHV0IGlzIHRoZSBzYW1lIHNpemUgYXMgaW5wdXQgaW1hZ2UuXG4gKlxuICogQGRvYyB7aGVhZGluZzogJ09wZXJhdGlvbnMnLCBzdWJoZWFkaW5nOiAnSW1hZ2VzJywgbmFtZXNwYWNlOiAnaW1hZ2UnfVxuICovXG5mdW5jdGlvbiB0cmFuc2Zvcm1fKFxuICAgIGltYWdlOiBUZW5zb3I0RHxUZW5zb3JMaWtlLCB0cmFuc2Zvcm1zOiBUZW5zb3IyRHxUZW5zb3JMaWtlLFxuICAgIGludGVycG9sYXRpb246ICduZWFyZXN0J3wnYmlsaW5lYXInID0gJ25lYXJlc3QnLFxuICAgIGZpbGxNb2RlOiAnY29uc3RhbnQnfCdyZWZsZWN0J3wnd3JhcCd8J25lYXJlc3QnID0gJ2NvbnN0YW50JywgZmlsbFZhbHVlID0gMCxcbiAgICBvdXRwdXRTaGFwZT86IFtudW1iZXIsIG51bWJlcl0pOiBUZW5zb3I0RCB7XG4gIGNvbnN0ICRpbWFnZSA9IGNvbnZlcnRUb1RlbnNvcihpbWFnZSwgJ2ltYWdlJywgJ3RyYW5zZm9ybScsICdmbG9hdDMyJyk7XG4gIGNvbnN0ICR0cmFuc2Zvcm1zID1cbiAgICAgIGNvbnZlcnRUb1RlbnNvcih0cmFuc2Zvcm1zLCAndHJhbnNmb3JtcycsICd0cmFuc2Zvcm0nLCAnZmxvYXQzMicpO1xuXG4gIHV0aWwuYXNzZXJ0KFxuICAgICAgJGltYWdlLnJhbmsgPT09IDQsXG4gICAgICAoKSA9PiAnRXJyb3IgaW4gdHJhbnNmb3JtOiBpbWFnZSBtdXN0IGJlIHJhbmsgNCwnICtcbiAgICAgICAgICBgYnV0IGdvdCByYW5rICR7JGltYWdlLnJhbmt9LmApO1xuXG4gIHV0aWwuYXNzZXJ0KFxuICAgICAgJHRyYW5zZm9ybXMucmFuayA9PT0gMiAmJlxuICAgICAgICAgICgkdHJhbnNmb3Jtcy5zaGFwZVswXSA9PT0gJGltYWdlLnNoYXBlWzBdIHx8XG4gICAgICAgICAgICR0cmFuc2Zvcm1zLnNoYXBlWzBdID09PSAxKSAmJlxuICAgICAgICAgICR0cmFuc2Zvcm1zLnNoYXBlWzFdID09PSA4LFxuICAgICAgKCkgPT4gYEVycm9yIGluIHRyYW5zZm9ybTogSW5wdXQgdHJhbnNmb3JtIHNob3VsZCBiZSBiYXRjaCB4IDggb3IgMSB4IDhgKTtcblxuICB1dGlsLmFzc2VydChcbiAgICAgIG91dHB1dFNoYXBlID09IG51bGwgfHwgb3V0cHV0U2hhcGUubGVuZ3RoID09PSAyLFxuICAgICAgKCkgPT5cbiAgICAgICAgICAnRXJyb3IgaW4gdHJhbnNmb3JtOiBvdXRwdXRTaGFwZSBtdXN0IGJlIFtoZWlnaHQsIHdpZHRoXSBvciBudWxsLCAnICtcbiAgICAgICAgICBgYnV0IGdvdCAke291dHB1dFNoYXBlfS5gKTtcblxuICBjb25zdCBpbnB1dHM6IFRyYW5zZm9ybUlucHV0cyA9IHtpbWFnZTogJGltYWdlLCB0cmFuc2Zvcm1zOiAkdHJhbnNmb3Jtc307XG4gIGNvbnN0IGF0dHJzOlxuICAgICAgVHJhbnNmb3JtQXR0cnMgPSB7aW50ZXJwb2xhdGlvbiwgZmlsbE1vZGUsIGZpbGxWYWx1ZSwgb3V0cHV0U2hhcGV9O1xuXG4gIHJldHVybiBFTkdJTkUucnVuS2VybmVsKFxuICAgICAgVHJhbnNmb3JtLCBpbnB1dHMgYXMge30gYXMgTmFtZWRUZW5zb3JNYXAsIGF0dHJzIGFzIHt9IGFzIE5hbWVkQXR0ck1hcCk7XG59XG5cbmV4cG9ydCBjb25zdCB0cmFuc2Zvcm0gPSBvcCh7dHJhbnNmb3JtX30pO1xuIl19","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Modularized ops.\nexport { abs } from './abs';\nexport { acos } from './acos';\nexport { acosh } from './acosh';\nexport { add } from './add';\nexport { addN } from './add_n';\nexport { all } from './all';\nexport { any } from './any';\nexport { argMax } from './arg_max';\nexport { argMin } from './arg_min';\nexport { asin } from './asin';\nexport { asinh } from './asinh';\nexport { atan } from './atan';\nexport { atan2 } from './atan2';\nexport { atanh } from './atanh';\nexport { avgPool } from './avg_pool';\nexport { avgPool3d } from './avg_pool_3d';\nexport { basicLSTMCell } from './basic_lstm_cell';\nexport { batchToSpaceND } from './batch_to_space_nd';\nexport { batchNorm } from './batchnorm';\nexport { batchNorm2d } from './batchnorm2d';\nexport { batchNorm3d } from './batchnorm3d';\nexport { batchNorm4d } from './batchnorm4d';\nexport { bincount } from './bincount';\nexport { broadcastArgs } from './broadcast_args';\nexport { broadcastTo } from './broadcast_to';\nexport { buffer } from './buffer';\nexport { cast } from './cast';\nexport { ceil } from './ceil';\nexport { clipByValue } from './clip_by_value';\nexport { clone } from './clone';\nexport { complex } from './complex';\nexport { concat } from './concat';\nexport { concat1d } from './concat_1d';\nexport { concat2d } from './concat_2d';\nexport { concat3d } from './concat_3d';\nexport { concat4d } from './concat_4d';\nexport { conv1d } from './conv1d';\nexport { conv2d } from './conv2d';\nexport { conv2dTranspose } from './conv2d_transpose';\nexport { conv3d } from './conv3d';\nexport { conv3dTranspose } from './conv3d_transpose';\nexport { cos } from './cos';\nexport { cosh } from './cosh';\nexport { cumprod } from './cumprod';\nexport { cumsum } from './cumsum';\nexport { denseBincount } from './dense_bincount';\nexport { depthToSpace } from './depth_to_space';\nexport { depthwiseConv2d } from './depthwise_conv2d';\nexport { diag } from './diag';\nexport { dilation2d } from './dilation2d';\nexport { div } from './div';\nexport { divNoNan } from './div_no_nan';\nexport { dot } from './dot';\nexport { einsum } from './einsum';\nexport { elu } from './elu';\nexport { equal } from './equal';\nexport { erf } from './erf';\nexport { exp } from './exp';\nexport { expandDims } from './expand_dims';\nexport { expm1 } from './expm1';\nexport { eye } from './eye';\nexport { fill } from './fill';\nexport { floor } from './floor';\nexport { floorDiv } from './floorDiv';\nexport { gather } from './gather';\nexport { greater } from './greater';\nexport { greaterEqual } from './greater_equal';\nexport { imag } from './imag';\nexport { isFinite } from './is_finite';\nexport { isInf } from './is_inf';\nexport { isNaN } from './is_nan';\nexport { leakyRelu } from './leaky_relu';\nexport { less } from './less';\nexport { lessEqual } from './less_equal';\nexport { linspace } from './linspace';\nexport { localResponseNormalization } from './local_response_normalization';\nexport { log } from './log';\nexport { log1p } from './log1p';\nexport { logSigmoid } from './log_sigmoid';\nexport { logSoftmax } from './log_softmax';\nexport { logSumExp } from './log_sum_exp';\nexport { logicalAnd } from './logical_and';\nexport { logicalNot } from './logical_not';\nexport { logicalOr } from './logical_or';\nexport { logicalXor } from './logical_xor';\nexport { matMul } from './mat_mul';\nexport { max } from './max';\nexport { maxPool } from './max_pool';\nexport { maxPool3d } from './max_pool_3d';\nexport { maxPoolWithArgmax } from './max_pool_with_argmax';\nexport { maximum } from './maximum';\nexport { mean } from './mean';\nexport { meshgrid } from './meshgrid';\nexport { min } from './min';\nexport { minimum } from './minimum';\nexport { mirrorPad } from './mirror_pad';\nexport { mod } from './mod';\nexport { moments } from './moments';\nexport { mul } from './mul';\nexport { multiRNNCell } from './multi_rnn_cell';\nexport { multinomial } from './multinomial';\nexport { neg } from './neg';\nexport { notEqual } from './not_equal';\nexport { oneHot } from './one_hot';\nexport { ones } from './ones';\nexport { onesLike } from './ones_like';\nexport { outerProduct } from './outer_product';\nexport { pad } from './pad';\nexport { pad1d } from './pad1d';\nexport { pad2d } from './pad2d';\nexport { pad3d } from './pad3d';\nexport { pad4d } from './pad4d';\nexport { pool } from './pool';\nexport { pow } from './pow';\nexport { prelu } from './prelu';\nexport { print } from './print';\nexport { prod } from './prod';\nexport { rand } from './rand';\nexport { randomGamma } from './random_gamma';\nexport { randomNormal } from './random_normal';\nexport { randomUniform } from './random_uniform';\nexport { range } from './range';\nexport { real } from './real';\nexport { reciprocal } from './reciprocal';\nexport { relu } from './relu';\nexport { relu6 } from './relu6';\nexport { reshape } from './reshape';\nexport { reverse } from './reverse';\nexport { reverse1d } from './reverse_1d';\nexport { reverse2d } from './reverse_2d';\nexport { reverse3d } from './reverse_3d';\nexport { reverse4d } from './reverse_4d';\nexport { round } from './round';\nexport { rsqrt } from './rsqrt';\nexport { scalar } from './scalar';\nexport { selu } from './selu';\nexport { separableConv2d } from './separable_conv2d';\nexport { setdiff1dAsync } from './setdiff1d_async';\nexport { sigmoid } from './sigmoid';\nexport { sign } from './sign';\nexport { sin } from './sin';\nexport { sinh } from './sinh';\nexport { slice } from './slice';\nexport { slice1d } from './slice1d';\nexport { slice2d } from './slice2d';\nexport { slice3d } from './slice3d';\nexport { slice4d } from './slice4d';\nexport { softmax } from './softmax';\nexport { softplus } from './softplus';\nexport { spaceToBatchND } from './space_to_batch_nd';\nexport { fft } from './spectral/fft';\nexport { ifft } from './spectral/ifft';\nexport { irfft } from './spectral/irfft';\nexport { rfft } from './spectral/rfft';\nexport { split } from './split';\nexport { sqrt } from './sqrt';\nexport { square } from './square';\nexport { squaredDifference } from './squared_difference';\nexport { squeeze } from './squeeze';\nexport { stack } from './stack';\nexport { step } from './step';\nexport { stridedSlice } from './strided_slice';\nexport { sub } from './sub';\nexport { sum } from './sum';\nexport { tan } from './tan';\nexport { tanh } from './tanh';\nexport { tensor } from './tensor';\nexport { tensor1d } from './tensor1d';\nexport { tensor2d } from './tensor2d';\nexport { tensor3d } from './tensor3d';\nexport { tensor4d } from './tensor4d';\nexport { tensor5d } from './tensor5d';\nexport { tensor6d } from './tensor6d';\nexport { tile } from './tile';\nexport { topk } from './topk';\nexport { truncatedNormal } from './truncated_normal';\nexport { unique } from './unique';\nexport { unsortedSegmentSum } from './unsorted_segment_sum';\nexport { unstack } from './unstack';\nexport { variable } from './variable';\nexport { where } from './where';\nexport { whereAsync } from './where_async';\nexport { zeros } from './zeros';\nexport { zerosLike } from './zeros_like';\nexport * from './boolean_mask';\nexport * from './transpose';\nexport * from './norm';\nexport * from './moving_average';\nexport * from './scatter_nd';\nexport * from './sparse_to_dense';\nexport * from './gather_nd';\nexport * from './dropout';\nexport * from './signal_ops_util';\nexport * from './in_top_k';\nexport { op, OP_SCOPE_SUFFIX } from './operation';\nimport { rfft } from './spectral/rfft';\nimport { fft } from './spectral/fft';\nimport { ifft } from './spectral/ifft';\nimport { irfft } from './spectral/irfft';\nconst spectral = {\n    fft,\n    ifft,\n    rfft,\n    irfft\n};\nimport * as fused from './fused_ops';\nimport { hammingWindow } from './signal/hamming_window';\nimport { hannWindow } from './signal/hann_window';\nimport { frame } from './signal/frame';\nimport { stft } from './signal/stft';\nconst signal = {\n    hammingWindow,\n    hannWindow,\n    frame,\n    stft,\n};\n// Image Ops namespace\nimport { cropAndResize } from './image/crop_and_resize';\nimport { flipLeftRight } from './image/flip_left_right';\nimport { grayscaleToRGB } from './image/grayscale_to_rgb';\nimport { rotateWithOffset } from './image/rotate_with_offset';\nimport { nonMaxSuppression } from './image/non_max_suppression';\nimport { nonMaxSuppressionAsync } from './image/non_max_suppression_async';\nimport { nonMaxSuppressionWithScore } from './image/non_max_suppression_with_score';\nimport { nonMaxSuppressionWithScoreAsync } from './image/non_max_suppression_with_score_async';\nimport { nonMaxSuppressionPadded } from './image/non_max_suppression_padded';\nimport { nonMaxSuppressionPaddedAsync } from './image/non_max_suppression_padded_async';\nimport { resizeBilinear } from './image/resize_bilinear';\nimport { resizeNearestNeighbor } from './image/resize_nearest_neighbor';\nimport { threshold } from './image/threshold';\nimport { transform } from './image/transform';\nconst image = {\n    flipLeftRight,\n    grayscaleToRGB,\n    resizeNearestNeighbor,\n    resizeBilinear,\n    rotateWithOffset,\n    cropAndResize,\n    nonMaxSuppression,\n    nonMaxSuppressionAsync,\n    nonMaxSuppressionWithScore,\n    nonMaxSuppressionWithScoreAsync,\n    nonMaxSuppressionPadded,\n    nonMaxSuppressionPaddedAsync,\n    threshold,\n    transform\n};\n// linalg namespace\nimport { bandPart } from './linalg/band_part';\nimport { gramSchmidt } from './linalg/gram_schmidt';\nimport { qr } from './linalg/qr';\nconst linalg = {\n    bandPart,\n    gramSchmidt,\n    qr\n};\n// losses namespace;\nimport { absoluteDifference } from './losses/absolute_difference';\nimport { computeWeightedLoss } from './losses/compute_weighted_loss';\nimport { cosineDistance } from './losses/cosine_distance';\nimport { hingeLoss } from './losses/hinge_loss';\nimport { huberLoss } from './losses/huber_loss';\nimport { logLoss } from './losses/log_loss';\nimport { meanSquaredError } from './losses/mean_squared_error';\nimport { sigmoidCrossEntropy } from './losses/sigmoid_cross_entropy';\nimport { softmaxCrossEntropy } from './losses/softmax_cross_entropy';\nconst losses = {\n    absoluteDifference,\n    computeWeightedLoss,\n    cosineDistance,\n    hingeLoss,\n    huberLoss,\n    logLoss,\n    meanSquaredError,\n    sigmoidCrossEntropy,\n    softmaxCrossEntropy\n};\nimport { sparseFillEmptyRows } from './sparse/sparse_fill_empty_rows';\nimport { sparseReshape } from './sparse/sparse_reshape';\nimport { sparseSegmentMean } from './sparse/sparse_segment_mean';\nimport { sparseSegmentSum } from './sparse/sparse_segment_sum';\nconst sparse = {\n    sparseFillEmptyRows,\n    sparseReshape,\n    sparseSegmentMean,\n    sparseSegmentSum\n};\nimport { stringNGrams } from './string/string_n_grams';\nimport { stringSplit } from './string/string_split';\nimport { stringToHashBucketFast } from './string/string_to_hash_bucket_fast';\n// tslint:disable-next-line:variable-name\nconst string = {\n    stringNGrams,\n    stringSplit,\n    stringToHashBucketFast\n};\n// Second level exports.\nexport { image, linalg, losses, spectral, fused, signal, sparse, string };\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { ResizeNearestNeighbor } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport * as util from '../../util';\nimport { op } from '../operation';\nimport { reshape } from '../reshape';\n/**\n * NearestNeighbor resize a batch of 3D images to a new shape.\n *\n * @param images The images, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param size The new shape `[newHeight, newWidth]` to resize the\n *     images to. Each channel is resized individually.\n * @param alignCorners Defaults to False. If true, rescale\n *     input by `(new_height - 1) / (height - 1)`, which exactly aligns the 4\n *     corners of images and resized images. If false, rescale by\n *     `new_height / height`. Treat similarly the width dimension.\n * @param halfPixelCenters Defaults to `false`. Whether to assumes pixels are of\n *      half the actual dimensions, and yields more accurate resizes. This flag\n *      would also make the floating point coordinates of the top left pixel\n *      0.5, 0.5.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction resizeNearestNeighbor_(images, size, alignCorners = false, halfPixelCenters = false) {\n    const $images = convertToTensor(images, 'images', 'resizeNearestNeighbor');\n    util.assert($images.rank === 3 || $images.rank === 4, () => `Error in resizeNearestNeighbor: x must be rank 3 or 4, but got ` +\n        `rank ${$images.rank}.`);\n    util.assert(size.length === 2, () => `Error in resizeNearestNeighbor: new shape must 2D, but got shape ` +\n        `${size}.`);\n    util.assert($images.dtype === 'float32' || $images.dtype === 'int32', () => '`images` must have `int32` or `float32` as dtype');\n    util.assert(halfPixelCenters === false || alignCorners === false, () => `Error in resizeNearestNeighbor: If halfPixelCenters is true, ` +\n        `alignCorners must be false.`);\n    let batchImages = $images;\n    let reshapedTo4D = false;\n    if ($images.rank === 3) {\n        reshapedTo4D = true;\n        batchImages = reshape($images, [1, $images.shape[0], $images.shape[1], $images.shape[2]]);\n    }\n    const [] = size;\n    const inputs = { images: batchImages };\n    const attrs = { alignCorners, halfPixelCenters, size };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = ENGINE.runKernel(ResizeNearestNeighbor, inputs, attrs);\n    if (reshapedTo4D) {\n        return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nexport const resizeNearestNeighbor = op({ resizeNearestNeighbor_ });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzaXplX25lYXJlc3RfbmVpZ2hib3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi90ZmpzLWNvcmUvc3JjL29wcy9pbWFnZS9yZXNpemVfbmVhcmVzdF9uZWlnaGJvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFFSCxPQUFPLEVBQUMsTUFBTSxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBQ3BDLE9BQU8sRUFBQyxxQkFBcUIsRUFBMEQsTUFBTSxvQkFBb0IsQ0FBQztBQUlsSCxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFFdEQsT0FBTyxLQUFLLElBQUksTUFBTSxZQUFZLENBQUM7QUFFbkMsT0FBTyxFQUFDLEVBQUUsRUFBQyxNQUFNLGNBQWMsQ0FBQztBQUNoQyxPQUFPLEVBQUMsT0FBTyxFQUFDLE1BQU0sWUFBWSxDQUFDO0FBRW5DOzs7Ozs7Ozs7Ozs7Ozs7OztHQWlCRztBQUNILFNBQVMsc0JBQXNCLENBQzNCLE1BQW9CLEVBQUUsSUFBc0IsRUFBRSxZQUFZLEdBQUcsS0FBSyxFQUNsRSxnQkFBZ0IsR0FBRyxLQUFLO0lBQzFCLE1BQU0sT0FBTyxHQUFHLGVBQWUsQ0FBQyxNQUFNLEVBQUUsUUFBUSxFQUFFLHVCQUF1QixDQUFDLENBQUM7SUFFM0UsSUFBSSxDQUFDLE1BQU0sQ0FDUCxPQUFPLENBQUMsSUFBSSxLQUFLLENBQUMsSUFBSSxPQUFPLENBQUMsSUFBSSxLQUFLLENBQUMsRUFDeEMsR0FBRyxFQUFFLENBQUMsaUVBQWlFO1FBQ25FLFFBQVEsT0FBTyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUM7SUFDakMsSUFBSSxDQUFDLE1BQU0sQ0FDUCxJQUFJLENBQUMsTUFBTSxLQUFLLENBQUMsRUFDakIsR0FBRyxFQUFFLENBQ0QsbUVBQW1FO1FBQ25FLEdBQUcsSUFBSSxHQUFHLENBQUMsQ0FBQztJQUNwQixJQUFJLENBQUMsTUFBTSxDQUNQLE9BQU8sQ0FBQyxLQUFLLEtBQUssU0FBUyxJQUFJLE9BQU8sQ0FBQyxLQUFLLEtBQUssT0FBTyxFQUN4RCxHQUFHLEVBQUUsQ0FBQyxrREFBa0QsQ0FBQyxDQUFDO0lBQzlELElBQUksQ0FBQyxNQUFNLENBQ1AsZ0JBQWdCLEtBQUssS0FBSyxJQUFJLFlBQVksS0FBSyxLQUFLLEVBQ3BELEdBQUcsRUFBRSxDQUFDLCtEQUErRDtRQUNqRSw2QkFBNkIsQ0FBQyxDQUFDO0lBQ3ZDLElBQUksV0FBVyxHQUFHLE9BQW1CLENBQUM7SUFDdEMsSUFBSSxZQUFZLEdBQUcsS0FBSyxDQUFDO0lBQ3pCLElBQUksT0FBTyxDQUFDLElBQUksS0FBSyxDQUFDLEVBQUU7UUFDdEIsWUFBWSxHQUFHLElBQUksQ0FBQztRQUNwQixXQUFXLEdBQUcsT0FBTyxDQUNqQixPQUFPLEVBQUUsQ0FBQyxDQUFDLEVBQUUsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ3pFO0lBQ0QsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDO0lBRWhCLE1BQU0sTUFBTSxHQUFnQyxFQUFDLE1BQU0sRUFBRSxXQUFXLEVBQUMsQ0FBQztJQUNsRSxNQUFNLEtBQUssR0FDc0IsRUFBQyxZQUFZLEVBQUUsZ0JBQWdCLEVBQUUsSUFBSSxFQUFDLENBQUM7SUFFeEUsMERBQTBEO0lBQzFELE1BQU0sR0FBRyxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQ1oscUJBQXFCLEVBQUUsTUFBOEIsRUFDckQsS0FBMkIsQ0FBTSxDQUFDO0lBRWxELElBQUksWUFBWSxFQUFFO1FBQ2hCLE9BQU8sT0FBTyxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQU0sQ0FBQztLQUN0RTtJQUNELE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLEVBQUUsQ0FBQyxFQUFDLHNCQUFzQixFQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTEMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKi9cblxuaW1wb3J0IHtFTkdJTkV9IGZyb20gJy4uLy4uL2VuZ2luZSc7XG5pbXBvcnQge1Jlc2l6ZU5lYXJlc3ROZWlnaGJvciwgUmVzaXplTmVhcmVzdE5laWdoYm9yQXR0cnMsIFJlc2l6ZU5lYXJlc3ROZWlnaGJvcklucHV0c30gZnJvbSAnLi4vLi4va2VybmVsX25hbWVzJztcbmltcG9ydCB7TmFtZWRBdHRyTWFwfSBmcm9tICcuLi8uLi9rZXJuZWxfcmVnaXN0cnknO1xuaW1wb3J0IHtUZW5zb3IzRCwgVGVuc29yNER9IGZyb20gJy4uLy4uL3RlbnNvcic7XG5pbXBvcnQge05hbWVkVGVuc29yTWFwfSBmcm9tICcuLi8uLi90ZW5zb3JfdHlwZXMnO1xuaW1wb3J0IHtjb252ZXJ0VG9UZW5zb3J9IGZyb20gJy4uLy4uL3RlbnNvcl91dGlsX2Vudic7XG5pbXBvcnQge1RlbnNvckxpa2V9IGZyb20gJy4uLy4uL3R5cGVzJztcbmltcG9ydCAqIGFzIHV0aWwgZnJvbSAnLi4vLi4vdXRpbCc7XG5cbmltcG9ydCB7b3B9IGZyb20gJy4uL29wZXJhdGlvbic7XG5pbXBvcnQge3Jlc2hhcGV9IGZyb20gJy4uL3Jlc2hhcGUnO1xuXG4vKipcbiAqIE5lYXJlc3ROZWlnaGJvciByZXNpemUgYSBiYXRjaCBvZiAzRCBpbWFnZXMgdG8gYSBuZXcgc2hhcGUuXG4gKlxuICogQHBhcmFtIGltYWdlcyBUaGUgaW1hZ2VzLCBvZiByYW5rIDQgb3IgcmFuayAzLCBvZiBzaGFwZVxuICogICAgIGBbYmF0Y2gsIGhlaWdodCwgd2lkdGgsIGluQ2hhbm5lbHNdYC4gSWYgcmFuayAzLCBiYXRjaCBvZiAxIGlzIGFzc3VtZWQuXG4gKiBAcGFyYW0gc2l6ZSBUaGUgbmV3IHNoYXBlIGBbbmV3SGVpZ2h0LCBuZXdXaWR0aF1gIHRvIHJlc2l6ZSB0aGVcbiAqICAgICBpbWFnZXMgdG8uIEVhY2ggY2hhbm5lbCBpcyByZXNpemVkIGluZGl2aWR1YWxseS5cbiAqIEBwYXJhbSBhbGlnbkNvcm5lcnMgRGVmYXVsdHMgdG8gRmFsc2UuIElmIHRydWUsIHJlc2NhbGVcbiAqICAgICBpbnB1dCBieSBgKG5ld19oZWlnaHQgLSAxKSAvIChoZWlnaHQgLSAxKWAsIHdoaWNoIGV4YWN0bHkgYWxpZ25zIHRoZSA0XG4gKiAgICAgY29ybmVycyBvZiBpbWFnZXMgYW5kIHJlc2l6ZWQgaW1hZ2VzLiBJZiBmYWxzZSwgcmVzY2FsZSBieVxuICogICAgIGBuZXdfaGVpZ2h0IC8gaGVpZ2h0YC4gVHJlYXQgc2ltaWxhcmx5IHRoZSB3aWR0aCBkaW1lbnNpb24uXG4gKiBAcGFyYW0gaGFsZlBpeGVsQ2VudGVycyBEZWZhdWx0cyB0byBgZmFsc2VgLiBXaGV0aGVyIHRvIGFzc3VtZXMgcGl4ZWxzIGFyZSBvZlxuICogICAgICBoYWxmIHRoZSBhY3R1YWwgZGltZW5zaW9ucywgYW5kIHlpZWxkcyBtb3JlIGFjY3VyYXRlIHJlc2l6ZXMuIFRoaXMgZmxhZ1xuICogICAgICB3b3VsZCBhbHNvIG1ha2UgdGhlIGZsb2F0aW5nIHBvaW50IGNvb3JkaW5hdGVzIG9mIHRoZSB0b3AgbGVmdCBwaXhlbFxuICogICAgICAwLjUsIDAuNS5cbiAqXG4gKiBAZG9jIHtoZWFkaW5nOiAnT3BlcmF0aW9ucycsIHN1YmhlYWRpbmc6ICdJbWFnZXMnLCBuYW1lc3BhY2U6ICdpbWFnZSd9XG4gKi9cbmZ1bmN0aW9uIHJlc2l6ZU5lYXJlc3ROZWlnaGJvcl88VCBleHRlbmRzIFRlbnNvcjNEfFRlbnNvcjREPihcbiAgICBpbWFnZXM6IFR8VGVuc29yTGlrZSwgc2l6ZTogW251bWJlciwgbnVtYmVyXSwgYWxpZ25Db3JuZXJzID0gZmFsc2UsXG4gICAgaGFsZlBpeGVsQ2VudGVycyA9IGZhbHNlKTogVCB7XG4gIGNvbnN0ICRpbWFnZXMgPSBjb252ZXJ0VG9UZW5zb3IoaW1hZ2VzLCAnaW1hZ2VzJywgJ3Jlc2l6ZU5lYXJlc3ROZWlnaGJvcicpO1xuXG4gIHV0aWwuYXNzZXJ0KFxuICAgICAgJGltYWdlcy5yYW5rID09PSAzIHx8ICRpbWFnZXMucmFuayA9PT0gNCxcbiAgICAgICgpID0+IGBFcnJvciBpbiByZXNpemVOZWFyZXN0TmVpZ2hib3I6IHggbXVzdCBiZSByYW5rIDMgb3IgNCwgYnV0IGdvdCBgICtcbiAgICAgICAgICBgcmFuayAkeyRpbWFnZXMucmFua30uYCk7XG4gIHV0aWwuYXNzZXJ0KFxuICAgICAgc2l6ZS5sZW5ndGggPT09IDIsXG4gICAgICAoKSA9PlxuICAgICAgICAgIGBFcnJvciBpbiByZXNpemVOZWFyZXN0TmVpZ2hib3I6IG5ldyBzaGFwZSBtdXN0IDJELCBidXQgZ290IHNoYXBlIGAgK1xuICAgICAgICAgIGAke3NpemV9LmApO1xuICB1dGlsLmFzc2VydChcbiAgICAgICRpbWFnZXMuZHR5cGUgPT09ICdmbG9hdDMyJyB8fCAkaW1hZ2VzLmR0eXBlID09PSAnaW50MzInLFxuICAgICAgKCkgPT4gJ2BpbWFnZXNgIG11c3QgaGF2ZSBgaW50MzJgIG9yIGBmbG9hdDMyYCBhcyBkdHlwZScpO1xuICB1dGlsLmFzc2VydChcbiAgICAgIGhhbGZQaXhlbENlbnRlcnMgPT09IGZhbHNlIHx8IGFsaWduQ29ybmVycyA9PT0gZmFsc2UsXG4gICAgICAoKSA9PiBgRXJyb3IgaW4gcmVzaXplTmVhcmVzdE5laWdoYm9yOiBJZiBoYWxmUGl4ZWxDZW50ZXJzIGlzIHRydWUsIGAgK1xuICAgICAgICAgIGBhbGlnbkNvcm5lcnMgbXVzdCBiZSBmYWxzZS5gKTtcbiAgbGV0IGJhdGNoSW1hZ2VzID0gJGltYWdlcyBhcyBUZW5zb3I0RDtcbiAgbGV0IHJlc2hhcGVkVG80RCA9IGZhbHNlO1xuICBpZiAoJGltYWdlcy5yYW5rID09PSAzKSB7XG4gICAgcmVzaGFwZWRUbzREID0gdHJ1ZTtcbiAgICBiYXRjaEltYWdlcyA9IHJlc2hhcGUoXG4gICAgICAgICRpbWFnZXMsIFsxLCAkaW1hZ2VzLnNoYXBlWzBdLCAkaW1hZ2VzLnNoYXBlWzFdLCAkaW1hZ2VzLnNoYXBlWzJdXSk7XG4gIH1cbiAgY29uc3QgW10gPSBzaXplO1xuXG4gIGNvbnN0IGlucHV0czogUmVzaXplTmVhcmVzdE5laWdoYm9ySW5wdXRzID0ge2ltYWdlczogYmF0Y2hJbWFnZXN9O1xuICBjb25zdCBhdHRyczpcbiAgICAgIFJlc2l6ZU5lYXJlc3ROZWlnaGJvckF0dHJzID0ge2FsaWduQ29ybmVycywgaGFsZlBpeGVsQ2VudGVycywgc2l6ZX07XG5cbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby11bm5lY2Vzc2FyeS10eXBlLWFzc2VydGlvblxuICBjb25zdCByZXMgPSBFTkdJTkUucnVuS2VybmVsKFxuICAgICAgICAgICAgICAgICAgUmVzaXplTmVhcmVzdE5laWdoYm9yLCBpbnB1dHMgYXMge30gYXMgTmFtZWRUZW5zb3JNYXAsXG4gICAgICAgICAgICAgICAgICBhdHRycyBhcyB7fSBhcyBOYW1lZEF0dHJNYXApIGFzIFQ7XG5cbiAgaWYgKHJlc2hhcGVkVG80RCkge1xuICAgIHJldHVybiByZXNoYXBlKHJlcywgW3Jlcy5zaGFwZVsxXSwgcmVzLnNoYXBlWzJdLCByZXMuc2hhcGVbM11dKSBhcyBUO1xuICB9XG4gIHJldHVybiByZXM7XG59XG5cbmV4cG9ydCBjb25zdCByZXNpemVOZWFyZXN0TmVpZ2hib3IgPSBvcCh7cmVzaXplTmVhcmVzdE5laWdoYm9yX30pO1xuIl19","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { tensor1d } from '../tensor1d';\nimport { op } from '../operation';\nimport { cast } from '../cast';\nimport { split } from '../split';\nimport { bincount } from '../bincount';\nimport { lessEqual } from '../less_equal';\nimport { greater } from '../greater';\nimport { sum } from '../sum';\nimport { add } from '../add';\nimport { mul } from '../mul';\nimport { div } from '../div';\nimport { sub } from '../sub';\nimport { round } from '../round';\nimport { where } from '../where';\nimport { fill } from '../fill';\nimport { slice } from '../slice';\nimport { range } from '../range';\nimport { tensor } from '../tensor';\nimport * as util from '../../util';\nimport { convertToTensor } from '../../tensor_util_env';\n/**\n * Performs image binarization with corresponding threshold\n * (depends on the method)value, which creates a binary image from a grayscale.\n * @param image 3d tensor of shape [imageHeight,imageWidth, depth],\n * where imageHeight and imageWidth must be positive.The image color\n * range should be [0, 255].\n * @param method Optional string from `'binary' | 'otsu'`\n * which specifies the method for thresholding. Defaults to 'binary'.\n * @param inverted Optional boolean whichspecifies\n * if colours should be inverted. Defaults to false.\n * @param threshValue Optional number which defines threshold value from 0 to 1.\n * Defaults to 0.5.\n * @return A 3d tensor of shape [imageHeight,imageWidth, depth], which\n * contains binarized image.\n */\nfunction threshold_(image, method = 'binary', inverted = false, threshValue = 0.5) {\n    const $image = convertToTensor(image, 'image', 'threshold');\n    /* 0.2989, 0.5870, 0.1140 are represent luma coefficients in CCIR601.\n    Reference for converting between RGB and grayscale: https://en.wikipedia.org/wiki/Luma_%28video%29  */\n    const RED_INTENCITY_COEF = 0.2989;\n    const GREEN_INTENCITY_COEF = 0.5870;\n    const BLUE_INTENCITY_COEF = 0.1140;\n    const totalPixelsInImage = $image.shape[0] * $image.shape[1];\n    let $threshold = mul(tensor1d([threshValue]), 255);\n    let r, g, b, grayscale;\n    util.assert($image.rank === 3, () => 'Error in threshold: image must be rank 3,' +\n        `but got rank ${$image.rank}.`);\n    util.assert($image.shape[2] === 3 || $image.shape[2] === 1, () => 'Error in threshold: ' +\n        'image color channel must be equal to 3 or 1' +\n        `but got ${$image.shape[2]}.`);\n    util.assert($image.dtype === 'int32' || $image.dtype === 'float32', () => 'Error in dtype: image dtype must be int32 or float32,' +\n        `but got dtype ${$image.dtype}.`);\n    util.assert(method === 'otsu' || method === 'binary', () => `Method must be binary or otsu, but was ${method}`);\n    if ($image.shape[2] === 3) {\n        [r, g, b] = split($image, [1, 1, 1], -1);\n        const $r = mul(r, RED_INTENCITY_COEF);\n        const $g = mul(g, GREEN_INTENCITY_COEF);\n        const $b = mul(b, BLUE_INTENCITY_COEF);\n        grayscale = add(add($r, $g), $b);\n    }\n    else {\n        grayscale = image;\n    }\n    if (method === 'otsu') {\n        const $histogram = bincount(cast(round(grayscale), 'int32'), tensor([]), 256);\n        $threshold = otsu($histogram, totalPixelsInImage);\n    }\n    const invCondition = inverted ?\n        lessEqual(grayscale, $threshold) : greater(grayscale, $threshold);\n    const result = cast(mul(invCondition, 255), 'int32');\n    return result;\n}\nfunction otsu(histogram, total) {\n    let bestThresh = tensor1d([-1]);\n    let bestInBetVar = tensor1d([0]);\n    let cInBetVar = tensor1d([0]);\n    let classFirst, classSecond, meanFirst, meanSec, weightForeground, weightBack;\n    for (let index = 0; index < histogram.size - 1; index++) {\n        classFirst = slice(histogram, 0, index + 1);\n        classSecond = slice(histogram, index + 1);\n        weightForeground = div(sum(classFirst), total);\n        weightBack = div(sum(classSecond), total);\n        const meanFirstDivA = sum(mul(classFirst, range(0, classFirst.size)));\n        meanFirst = div(meanFirstDivA, sum(classFirst));\n        const meanSecFill = fill(classSecond.shape, classFirst.size);\n        const meanSecAdd = add(range(0, classSecond.size), meanSecFill);\n        const meanSecMul = mul(classSecond, (meanSecAdd));\n        meanSec = div(sum(meanSecMul), sum(classSecond));\n        const cInBetVarSubA = sub(meanFirst, meanSec);\n        const cInBetVarSubB = sub(meanFirst, meanSec);\n        const cInBetVarMul = mul(weightForeground, weightBack);\n        cInBetVar = mul(mul(cInBetVarMul, cInBetVarSubA), cInBetVarSubB);\n        const condition = greater(cInBetVar, bestInBetVar);\n        bestInBetVar = where(condition, cInBetVar, bestInBetVar);\n        bestThresh = where(condition, tensor1d([index]), bestThresh);\n    }\n    return bestThresh;\n}\nexport const threshold = op({ threshold_ });\n//# sourceMappingURL=data:application/json;base64,","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","import { isValidNumber } from '../utils';\r\nvar Dimensions = /** @class */ (function () {\r\n    function Dimensions(width, height) {\r\n        if (!isValidNumber(width) || !isValidNumber(height)) {\r\n            throw new Error(\"Dimensions.constructor - expected width and height to be valid numbers, instead have \" + JSON.stringify({ width: width, height: height }));\r\n        }\r\n        this._width = width;\r\n        this._height = height;\r\n    }\r\n    Object.defineProperty(Dimensions.prototype, \"width\", {\r\n        get: function () { return this._width; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Dimensions.prototype, \"height\", {\r\n        get: function () { return this._height; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Dimensions.prototype.reverse = function () {\r\n        return new Dimensions(1 / this.width, 1 / this.height);\r\n    };\r\n    return Dimensions;\r\n}());\r\nexport { Dimensions };\r\n//# sourceMappingURL=Dimensions.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { Point } from '../classes';\r\nimport { Dimensions } from '../classes/Dimensions';\r\nexport function isTensor(tensor, dim) {\r\n    return tensor instanceof tf.Tensor && tensor.shape.length === dim;\r\n}\r\nexport function isTensor1D(tensor) {\r\n    return isTensor(tensor, 1);\r\n}\r\nexport function isTensor2D(tensor) {\r\n    return isTensor(tensor, 2);\r\n}\r\nexport function isTensor3D(tensor) {\r\n    return isTensor(tensor, 3);\r\n}\r\nexport function isTensor4D(tensor) {\r\n    return isTensor(tensor, 4);\r\n}\r\nexport function isFloat(num) {\r\n    return num % 1 !== 0;\r\n}\r\nexport function isEven(num) {\r\n    return num % 2 === 0;\r\n}\r\nexport function round(num, prec) {\r\n    if (prec === void 0) { prec = 2; }\r\n    var f = Math.pow(10, prec);\r\n    return Math.floor(num * f) / f;\r\n}\r\nexport function isDimensions(obj) {\r\n    return obj && obj.width && obj.height;\r\n}\r\nexport function computeReshapedDimensions(_a, inputSize) {\r\n    var width = _a.width, height = _a.height;\r\n    var scale = inputSize / Math.max(height, width);\r\n    return new Dimensions(Math.round(width * scale), Math.round(height * scale));\r\n}\r\nexport function getCenterPoint(pts) {\r\n    return pts.reduce(function (sum, pt) { return sum.add(pt); }, new Point(0, 0))\r\n        .div(new Point(pts.length, pts.length));\r\n}\r\nexport function range(num, start, step) {\r\n    return Array(num).fill(0).map(function (_, i) { return start + (i * step); });\r\n}\r\nexport function isValidNumber(num) {\r\n    return !!num && num !== Infinity && num !== -Infinity && !isNaN(num) || num === 0;\r\n}\r\nexport function isValidProbablitiy(num) {\r\n    return isValidNumber(num) && 0 <= num && num <= 1.0;\r\n}\r\n//# sourceMappingURL=index.js.map","var Point = /** @class */ (function () {\r\n    function Point(x, y) {\r\n        this._x = x;\r\n        this._y = y;\r\n    }\r\n    Object.defineProperty(Point.prototype, \"x\", {\r\n        get: function () { return this._x; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Point.prototype, \"y\", {\r\n        get: function () { return this._y; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Point.prototype.add = function (pt) {\r\n        return new Point(this.x + pt.x, this.y + pt.y);\r\n    };\r\n    Point.prototype.sub = function (pt) {\r\n        return new Point(this.x - pt.x, this.y - pt.y);\r\n    };\r\n    Point.prototype.mul = function (pt) {\r\n        return new Point(this.x * pt.x, this.y * pt.y);\r\n    };\r\n    Point.prototype.div = function (pt) {\r\n        return new Point(this.x / pt.x, this.y / pt.y);\r\n    };\r\n    Point.prototype.abs = function () {\r\n        return new Point(Math.abs(this.x), Math.abs(this.y));\r\n    };\r\n    Point.prototype.magnitude = function () {\r\n        return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\r\n    };\r\n    Point.prototype.floor = function () {\r\n        return new Point(Math.floor(this.x), Math.floor(this.y));\r\n    };\r\n    return Point;\r\n}());\r\nexport { Point };\r\n//# sourceMappingURL=Point.js.map","import { isDimensions, isValidNumber } from '../utils';\r\nimport { Point } from './Point';\r\nvar Box = /** @class */ (function () {\r\n    function Box(_box, allowNegativeDimensions) {\r\n        if (allowNegativeDimensions === void 0) { allowNegativeDimensions = true; }\r\n        var box = (_box || {});\r\n        var isBbox = [box.left, box.top, box.right, box.bottom].every(isValidNumber);\r\n        var isRect = [box.x, box.y, box.width, box.height].every(isValidNumber);\r\n        if (!isRect && !isBbox) {\r\n            throw new Error(\"Box.constructor - expected box to be IBoundingBox | IRect, instead have \" + JSON.stringify(box));\r\n        }\r\n        var _a = isRect\r\n            ? [box.x, box.y, box.width, box.height]\r\n            : [box.left, box.top, box.right - box.left, box.bottom - box.top], x = _a[0], y = _a[1], width = _a[2], height = _a[3];\r\n        Box.assertIsValidBox({ x: x, y: y, width: width, height: height }, 'Box.constructor', allowNegativeDimensions);\r\n        this._x = x;\r\n        this._y = y;\r\n        this._width = width;\r\n        this._height = height;\r\n    }\r\n    Box.isRect = function (rect) {\r\n        return !!rect && [rect.x, rect.y, rect.width, rect.height].every(isValidNumber);\r\n    };\r\n    Box.assertIsValidBox = function (box, callee, allowNegativeDimensions) {\r\n        if (allowNegativeDimensions === void 0) { allowNegativeDimensions = false; }\r\n        if (!Box.isRect(box)) {\r\n            throw new Error(callee + \" - invalid box: \" + JSON.stringify(box) + \", expected object with properties x, y, width, height\");\r\n        }\r\n        if (!allowNegativeDimensions && (box.width < 0 || box.height < 0)) {\r\n            throw new Error(callee + \" - width (\" + box.width + \") and height (\" + box.height + \") must be positive numbers\");\r\n        }\r\n    };\r\n    Object.defineProperty(Box.prototype, \"x\", {\r\n        get: function () { return this._x; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"y\", {\r\n        get: function () { return this._y; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"width\", {\r\n        get: function () { return this._width; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"height\", {\r\n        get: function () { return this._height; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"left\", {\r\n        get: function () { return this.x; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"top\", {\r\n        get: function () { return this.y; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"right\", {\r\n        get: function () { return this.x + this.width; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"bottom\", {\r\n        get: function () { return this.y + this.height; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"area\", {\r\n        get: function () { return this.width * this.height; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"topLeft\", {\r\n        get: function () { return new Point(this.left, this.top); },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"topRight\", {\r\n        get: function () { return new Point(this.right, this.top); },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"bottomLeft\", {\r\n        get: function () { return new Point(this.left, this.bottom); },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Box.prototype, \"bottomRight\", {\r\n        get: function () { return new Point(this.right, this.bottom); },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Box.prototype.round = function () {\r\n        var _a = [this.x, this.y, this.width, this.height]\r\n            .map(function (val) { return Math.round(val); }), x = _a[0], y = _a[1], width = _a[2], height = _a[3];\r\n        return new Box({ x: x, y: y, width: width, height: height });\r\n    };\r\n    Box.prototype.floor = function () {\r\n        var _a = [this.x, this.y, this.width, this.height]\r\n            .map(function (val) { return Math.floor(val); }), x = _a[0], y = _a[1], width = _a[2], height = _a[3];\r\n        return new Box({ x: x, y: y, width: width, height: height });\r\n    };\r\n    Box.prototype.toSquare = function () {\r\n        var _a = this, x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n        var diff = Math.abs(width - height);\r\n        if (width < height) {\r\n            x -= (diff / 2);\r\n            width += diff;\r\n        }\r\n        if (height < width) {\r\n            y -= (diff / 2);\r\n            height += diff;\r\n        }\r\n        return new Box({ x: x, y: y, width: width, height: height });\r\n    };\r\n    Box.prototype.rescale = function (s) {\r\n        var scaleX = isDimensions(s) ? s.width : s;\r\n        var scaleY = isDimensions(s) ? s.height : s;\r\n        return new Box({\r\n            x: this.x * scaleX,\r\n            y: this.y * scaleY,\r\n            width: this.width * scaleX,\r\n            height: this.height * scaleY\r\n        });\r\n    };\r\n    Box.prototype.pad = function (padX, padY) {\r\n        var _a = [\r\n            this.x - (padX / 2),\r\n            this.y - (padY / 2),\r\n            this.width + padX,\r\n            this.height + padY\r\n        ], x = _a[0], y = _a[1], width = _a[2], height = _a[3];\r\n        return new Box({ x: x, y: y, width: width, height: height });\r\n    };\r\n    Box.prototype.clipAtImageBorders = function (imgWidth, imgHeight) {\r\n        var _a = this, x = _a.x, y = _a.y, right = _a.right, bottom = _a.bottom;\r\n        var clippedX = Math.max(x, 0);\r\n        var clippedY = Math.max(y, 0);\r\n        var newWidth = right - clippedX;\r\n        var newHeight = bottom - clippedY;\r\n        var clippedWidth = Math.min(newWidth, imgWidth - clippedX);\r\n        var clippedHeight = Math.min(newHeight, imgHeight - clippedY);\r\n        return (new Box({ x: clippedX, y: clippedY, width: clippedWidth, height: clippedHeight })).floor();\r\n    };\r\n    Box.prototype.shift = function (sx, sy) {\r\n        var _a = this, width = _a.width, height = _a.height;\r\n        var x = this.x + sx;\r\n        var y = this.y + sy;\r\n        return new Box({ x: x, y: y, width: width, height: height });\r\n    };\r\n    Box.prototype.padAtBorders = function (imageHeight, imageWidth) {\r\n        var w = this.width + 1;\r\n        var h = this.height + 1;\r\n        var dx = 1;\r\n        var dy = 1;\r\n        var edx = w;\r\n        var edy = h;\r\n        var x = this.left;\r\n        var y = this.top;\r\n        var ex = this.right;\r\n        var ey = this.bottom;\r\n        if (ex > imageWidth) {\r\n            edx = -ex + imageWidth + w;\r\n            ex = imageWidth;\r\n        }\r\n        if (ey > imageHeight) {\r\n            edy = -ey + imageHeight + h;\r\n            ey = imageHeight;\r\n        }\r\n        if (x < 1) {\r\n            edy = 2 - x;\r\n            x = 1;\r\n        }\r\n        if (y < 1) {\r\n            edy = 2 - y;\r\n            y = 1;\r\n        }\r\n        return { dy: dy, edy: edy, dx: dx, edx: edx, y: y, ey: ey, x: x, ex: ex, w: w, h: h };\r\n    };\r\n    Box.prototype.calibrate = function (region) {\r\n        return new Box({\r\n            left: this.left + (region.left * this.width),\r\n            top: this.top + (region.top * this.height),\r\n            right: this.right + (region.right * this.width),\r\n            bottom: this.bottom + (region.bottom * this.height)\r\n        }).toSquare().round();\r\n    };\r\n    return Box;\r\n}());\r\nexport { Box };\r\n//# sourceMappingURL=Box.js.map","import { __extends } from \"tslib\";\r\nimport { Box } from './Box';\r\nvar BoundingBox = /** @class */ (function (_super) {\r\n    __extends(BoundingBox, _super);\r\n    function BoundingBox(left, top, right, bottom, allowNegativeDimensions) {\r\n        if (allowNegativeDimensions === void 0) { allowNegativeDimensions = false; }\r\n        return _super.call(this, { left: left, top: top, right: right, bottom: bottom }, allowNegativeDimensions) || this;\r\n    }\r\n    return BoundingBox;\r\n}(Box));\r\nexport { BoundingBox };\r\n//# sourceMappingURL=BoundingBox.js.map","import { Box } from './Box';\r\nimport { Dimensions } from './Dimensions';\r\nvar ObjectDetection = /** @class */ (function () {\r\n    function ObjectDetection(score, classScore, className, relativeBox, imageDims) {\r\n        this._imageDims = new Dimensions(imageDims.width, imageDims.height);\r\n        this._score = score;\r\n        this._classScore = classScore;\r\n        this._className = className;\r\n        this._box = new Box(relativeBox).rescale(this._imageDims);\r\n    }\r\n    Object.defineProperty(ObjectDetection.prototype, \"score\", {\r\n        get: function () { return this._score; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectDetection.prototype, \"classScore\", {\r\n        get: function () { return this._classScore; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectDetection.prototype, \"className\", {\r\n        get: function () { return this._className; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectDetection.prototype, \"box\", {\r\n        get: function () { return this._box; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectDetection.prototype, \"imageDims\", {\r\n        get: function () { return this._imageDims; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectDetection.prototype, \"imageWidth\", {\r\n        get: function () { return this.imageDims.width; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectDetection.prototype, \"imageHeight\", {\r\n        get: function () { return this.imageDims.height; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ObjectDetection.prototype, \"relativeBox\", {\r\n        get: function () { return new Box(this._box).rescale(this.imageDims.reverse()); },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ObjectDetection.prototype.forSize = function (width, height) {\r\n        return new ObjectDetection(this.score, this.classScore, this.className, this.relativeBox, { width: width, height: height });\r\n    };\r\n    return ObjectDetection;\r\n}());\r\nexport { ObjectDetection };\r\n//# sourceMappingURL=ObjectDetection.js.map","import { __extends } from \"tslib\";\r\nimport { ObjectDetection } from './ObjectDetection';\r\nvar FaceDetection = /** @class */ (function (_super) {\r\n    __extends(FaceDetection, _super);\r\n    function FaceDetection(score, relativeBox, imageDims) {\r\n        return _super.call(this, score, score, '', relativeBox, imageDims) || this;\r\n    }\r\n    FaceDetection.prototype.forSize = function (width, height) {\r\n        var _a = _super.prototype.forSize.call(this, width, height), score = _a.score, relativeBox = _a.relativeBox, imageDims = _a.imageDims;\r\n        return new FaceDetection(score, relativeBox, imageDims);\r\n    };\r\n    return FaceDetection;\r\n}(ObjectDetection));\r\nexport { FaceDetection };\r\n//# sourceMappingURL=FaceDetection.js.map","export function iou(box1, box2, isIOU) {\r\n    if (isIOU === void 0) { isIOU = true; }\r\n    var width = Math.max(0.0, Math.min(box1.right, box2.right) - Math.max(box1.left, box2.left));\r\n    var height = Math.max(0.0, Math.min(box1.bottom, box2.bottom) - Math.max(box1.top, box2.top));\r\n    var interSection = width * height;\r\n    return isIOU\r\n        ? interSection / (box1.area + box2.area - interSection)\r\n        : interSection / Math.min(box1.area, box2.area);\r\n}\r\n//# sourceMappingURL=iou.js.map","import { iou } from './iou';\r\nexport function nonMaxSuppression(boxes, scores, iouThreshold, isIOU) {\r\n    if (isIOU === void 0) { isIOU = true; }\r\n    var indicesSortedByScore = scores\r\n        .map(function (score, boxIndex) { return ({ score: score, boxIndex: boxIndex }); })\r\n        .sort(function (c1, c2) { return c1.score - c2.score; })\r\n        .map(function (c) { return c.boxIndex; });\r\n    var pick = [];\r\n    var _loop_1 = function () {\r\n        var curr = indicesSortedByScore.pop();\r\n        pick.push(curr);\r\n        var indices = indicesSortedByScore;\r\n        var outputs = [];\r\n        for (var i = 0; i < indices.length; i++) {\r\n            var idx = indices[i];\r\n            var currBox = boxes[curr];\r\n            var idxBox = boxes[idx];\r\n            outputs.push(iou(currBox, idxBox, isIOU));\r\n        }\r\n        indicesSortedByScore = indicesSortedByScore.filter(function (_, j) { return outputs[j] <= iouThreshold; });\r\n    };\r\n    while (indicesSortedByScore.length > 0) {\r\n        _loop_1();\r\n    }\r\n    return pick;\r\n}\r\n//# sourceMappingURL=nonMaxSuppression.js.map","import { __spreadArrays } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nexport function normalize(x, meanRgb) {\r\n    return tf.tidy(function () {\r\n        var r = meanRgb[0], g = meanRgb[1], b = meanRgb[2];\r\n        var avg_r = tf.fill(__spreadArrays(x.shape.slice(0, 3), [1]), r);\r\n        var avg_g = tf.fill(__spreadArrays(x.shape.slice(0, 3), [1]), g);\r\n        var avg_b = tf.fill(__spreadArrays(x.shape.slice(0, 3), [1]), b);\r\n        var avg_rgb = tf.concat([avg_r, avg_g, avg_b], 3);\r\n        return tf.sub(x, avg_rgb);\r\n    });\r\n}\r\n//# sourceMappingURL=normalize.js.map","export * from './iou';\r\nexport * from './minBbox';\r\nexport * from './nonMaxSuppression';\r\nexport * from './normalize';\r\nexport * from './padToSquare';\r\nexport * from './shuffleArray';\r\nexport function sigmoid(x) {\r\n    return 1 / (1 + Math.exp(-x));\r\n}\r\nexport function inverseSigmoid(x) {\r\n    return Math.log(x / (1 - x));\r\n}\r\n//# sourceMappingURL=index.js.map","import { __extends } from \"tslib\";\r\nimport { Box } from './Box';\r\nvar Rect = /** @class */ (function (_super) {\r\n    __extends(Rect, _super);\r\n    function Rect(x, y, width, height, allowNegativeDimensions) {\r\n        if (allowNegativeDimensions === void 0) { allowNegativeDimensions = false; }\r\n        return _super.call(this, { x: x, y: y, width: width, height: height }, allowNegativeDimensions) || this;\r\n    }\r\n    return Rect;\r\n}(Box));\r\nexport { Rect };\r\n//# sourceMappingURL=Rect.js.map","import { createBrowserEnv } from './createBrowserEnv';\r\nimport { createFileSystem } from './createFileSystem';\r\nimport { createNodejsEnv } from './createNodejsEnv';\r\nimport { isBrowser } from './isBrowser';\r\nimport { isNodejs } from './isNodejs';\r\nvar environment;\r\nfunction getEnv() {\r\n    if (!environment) {\r\n        throw new Error('getEnv - environment is not defined, check isNodejs() and isBrowser()');\r\n    }\r\n    return environment;\r\n}\r\nfunction setEnv(env) {\r\n    environment = env;\r\n}\r\nfunction initialize() {\r\n    // check for isBrowser() first to prevent electron renderer process\r\n    // to be initialized with wrong environment due to isNodejs() returning true\r\n    if (isBrowser()) {\r\n        setEnv(createBrowserEnv());\r\n    }\r\n    if (isNodejs()) {\r\n        setEnv(createNodejsEnv());\r\n    }\r\n}\r\nfunction monkeyPatch(env) {\r\n    if (!environment) {\r\n        initialize();\r\n    }\r\n    if (!environment) {\r\n        throw new Error('monkeyPatch - environment is not defined, check isNodejs() and isBrowser()');\r\n    }\r\n    var _a = env.Canvas, Canvas = _a === void 0 ? environment.Canvas : _a, _b = env.Image, Image = _b === void 0 ? environment.Image : _b;\r\n    environment.Canvas = Canvas;\r\n    environment.Image = Image;\r\n    environment.createCanvasElement = env.createCanvasElement || (function () { return new Canvas(); });\r\n    environment.createImageElement = env.createImageElement || (function () { return new Image(); });\r\n    environment.ImageData = env.ImageData || environment.ImageData;\r\n    environment.Video = env.Video || environment.Video;\r\n    environment.fetch = env.fetch || environment.fetch;\r\n    environment.readFile = env.readFile || environment.readFile;\r\n}\r\nexport var env = {\r\n    getEnv: getEnv,\r\n    setEnv: setEnv,\r\n    initialize: initialize,\r\n    createBrowserEnv: createBrowserEnv,\r\n    createFileSystem: createFileSystem,\r\n    createNodejsEnv: createNodejsEnv,\r\n    monkeyPatch: monkeyPatch,\r\n    isBrowser: isBrowser,\r\n    isNodejs: isNodejs\r\n};\r\ninitialize();\r\n//# sourceMappingURL=index.js.map","import { minBbox } from '../ops';\r\nimport { getCenterPoint } from '../utils';\r\nimport { Box } from './Box';\r\nimport { Dimensions } from './Dimensions';\r\nimport { FaceDetection } from './FaceDetection';\r\nimport { Point } from './Point';\r\nimport { Rect } from './Rect';\r\n// face alignment constants\r\nvar relX = 0.5;\r\nvar relY = 0.43;\r\nvar relScale = 0.45;\r\nvar FaceLandmarks = /** @class */ (function () {\r\n    function FaceLandmarks(relativeFaceLandmarkPositions, imgDims, shift) {\r\n        if (shift === void 0) { shift = new Point(0, 0); }\r\n        var width = imgDims.width, height = imgDims.height;\r\n        this._imgDims = new Dimensions(width, height);\r\n        this._shift = shift;\r\n        this._positions = relativeFaceLandmarkPositions.map(function (pt) { return pt.mul(new Point(width, height)).add(shift); });\r\n    }\r\n    Object.defineProperty(FaceLandmarks.prototype, \"shift\", {\r\n        get: function () { return new Point(this._shift.x, this._shift.y); },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FaceLandmarks.prototype, \"imageWidth\", {\r\n        get: function () { return this._imgDims.width; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FaceLandmarks.prototype, \"imageHeight\", {\r\n        get: function () { return this._imgDims.height; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FaceLandmarks.prototype, \"positions\", {\r\n        get: function () { return this._positions; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FaceLandmarks.prototype, \"relativePositions\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return this._positions.map(function (pt) { return pt.sub(_this._shift).div(new Point(_this.imageWidth, _this.imageHeight)); });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FaceLandmarks.prototype.forSize = function (width, height) {\r\n        return new this.constructor(this.relativePositions, { width: width, height: height });\r\n    };\r\n    FaceLandmarks.prototype.shiftBy = function (x, y) {\r\n        return new this.constructor(this.relativePositions, this._imgDims, new Point(x, y));\r\n    };\r\n    FaceLandmarks.prototype.shiftByPoint = function (pt) {\r\n        return this.shiftBy(pt.x, pt.y);\r\n    };\r\n    /**\r\n     * Aligns the face landmarks after face detection from the relative positions of the faces\r\n     * bounding box, or it's current shift. This function should be used to align the face images\r\n     * after face detection has been performed, before they are passed to the face recognition net.\r\n     * This will make the computed face descriptor more accurate.\r\n     *\r\n     * @param detection (optional) The bounding box of the face or the face detection result. If\r\n     * no argument was passed the position of the face landmarks are assumed to be relative to\r\n     * it's current shift.\r\n     * @returns The bounding box of the aligned face.\r\n     */\r\n    FaceLandmarks.prototype.align = function (detection, options) {\r\n        if (options === void 0) { options = {}; }\r\n        if (detection) {\r\n            var box = detection instanceof FaceDetection\r\n                ? detection.box.floor()\r\n                : new Box(detection);\r\n            return this.shiftBy(box.x, box.y).align(null, options);\r\n        }\r\n        var _a = Object.assign({}, { useDlibAlignment: false, minBoxPadding: 0.2 }, options), useDlibAlignment = _a.useDlibAlignment, minBoxPadding = _a.minBoxPadding;\r\n        if (useDlibAlignment) {\r\n            return this.alignDlib();\r\n        }\r\n        return this.alignMinBbox(minBoxPadding);\r\n    };\r\n    FaceLandmarks.prototype.alignDlib = function () {\r\n        var centers = this.getRefPointsForAlignment();\r\n        var leftEyeCenter = centers[0], rightEyeCenter = centers[1], mouthCenter = centers[2];\r\n        var distToMouth = function (pt) { return mouthCenter.sub(pt).magnitude(); };\r\n        var eyeToMouthDist = (distToMouth(leftEyeCenter) + distToMouth(rightEyeCenter)) / 2;\r\n        var size = Math.floor(eyeToMouthDist / relScale);\r\n        var refPoint = getCenterPoint(centers);\r\n        // TODO: pad in case rectangle is out of image bounds\r\n        var x = Math.floor(Math.max(0, refPoint.x - (relX * size)));\r\n        var y = Math.floor(Math.max(0, refPoint.y - (relY * size)));\r\n        return new Rect(x, y, Math.min(size, this.imageWidth + x), Math.min(size, this.imageHeight + y));\r\n    };\r\n    FaceLandmarks.prototype.alignMinBbox = function (padding) {\r\n        var box = minBbox(this.positions);\r\n        return box.pad(box.width * padding, box.height * padding);\r\n    };\r\n    FaceLandmarks.prototype.getRefPointsForAlignment = function () {\r\n        throw new Error('getRefPointsForAlignment not implemented by base class');\r\n    };\r\n    return FaceLandmarks;\r\n}());\r\nexport { FaceLandmarks };\r\n//# sourceMappingURL=FaceLandmarks.js.map","import { BoundingBox } from '../classes';\r\nexport function minBbox(pts) {\r\n    var xs = pts.map(function (pt) { return pt.x; });\r\n    var ys = pts.map(function (pt) { return pt.y; });\r\n    var minX = xs.reduce(function (min, x) { return x < min ? x : min; }, Infinity);\r\n    var minY = ys.reduce(function (min, y) { return y < min ? y : min; }, Infinity);\r\n    var maxX = xs.reduce(function (max, x) { return max < x ? x : max; }, 0);\r\n    var maxY = ys.reduce(function (max, y) { return max < y ? y : max; }, 0);\r\n    return new BoundingBox(minX, minY, maxX, maxY);\r\n}\r\n//# sourceMappingURL=minBbox.js.map","import { __extends } from \"tslib\";\r\nimport { getCenterPoint } from '../utils';\r\nimport { FaceLandmarks } from './FaceLandmarks';\r\nvar FaceLandmarks5 = /** @class */ (function (_super) {\r\n    __extends(FaceLandmarks5, _super);\r\n    function FaceLandmarks5() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    FaceLandmarks5.prototype.getRefPointsForAlignment = function () {\r\n        var pts = this.positions;\r\n        return [\r\n            pts[0],\r\n            pts[1],\r\n            getCenterPoint([pts[3], pts[4]])\r\n        ];\r\n    };\r\n    return FaceLandmarks5;\r\n}(FaceLandmarks));\r\nexport { FaceLandmarks5 };\r\n//# sourceMappingURL=FaceLandmarks5.js.map","import { __extends } from \"tslib\";\r\nimport { getCenterPoint } from '../utils';\r\nimport { FaceLandmarks } from './FaceLandmarks';\r\nvar FaceLandmarks68 = /** @class */ (function (_super) {\r\n    __extends(FaceLandmarks68, _super);\r\n    function FaceLandmarks68() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    FaceLandmarks68.prototype.getJawOutline = function () {\r\n        return this.positions.slice(0, 17);\r\n    };\r\n    FaceLandmarks68.prototype.getLeftEyeBrow = function () {\r\n        return this.positions.slice(17, 22);\r\n    };\r\n    FaceLandmarks68.prototype.getRightEyeBrow = function () {\r\n        return this.positions.slice(22, 27);\r\n    };\r\n    FaceLandmarks68.prototype.getNose = function () {\r\n        return this.positions.slice(27, 36);\r\n    };\r\n    FaceLandmarks68.prototype.getLeftEye = function () {\r\n        return this.positions.slice(36, 42);\r\n    };\r\n    FaceLandmarks68.prototype.getRightEye = function () {\r\n        return this.positions.slice(42, 48);\r\n    };\r\n    FaceLandmarks68.prototype.getMouth = function () {\r\n        return this.positions.slice(48, 68);\r\n    };\r\n    FaceLandmarks68.prototype.getRefPointsForAlignment = function () {\r\n        return [\r\n            this.getLeftEye(),\r\n            this.getRightEye(),\r\n            this.getMouth()\r\n        ].map(getCenterPoint);\r\n    };\r\n    return FaceLandmarks68;\r\n}(FaceLandmarks));\r\nexport { FaceLandmarks68 };\r\n//# sourceMappingURL=FaceLandmarks68.js.map","import { round } from '../utils';\r\nvar FaceMatch = /** @class */ (function () {\r\n    function FaceMatch(label, distance) {\r\n        this._label = label;\r\n        this._distance = distance;\r\n    }\r\n    Object.defineProperty(FaceMatch.prototype, \"label\", {\r\n        get: function () { return this._label; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FaceMatch.prototype, \"distance\", {\r\n        get: function () { return this._distance; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FaceMatch.prototype.toString = function (withDistance) {\r\n        if (withDistance === void 0) { withDistance = true; }\r\n        return \"\" + this.label + (withDistance ? \" (\" + round(this.distance) + \")\" : '');\r\n    };\r\n    return FaceMatch;\r\n}());\r\nexport { FaceMatch };\r\n//# sourceMappingURL=FaceMatch.js.map","import { __extends } from \"tslib\";\r\nimport { isValidNumber } from '../utils';\r\nimport { Box } from './Box';\r\nvar LabeledBox = /** @class */ (function (_super) {\r\n    __extends(LabeledBox, _super);\r\n    function LabeledBox(box, label) {\r\n        var _this = _super.call(this, box) || this;\r\n        _this._label = label;\r\n        return _this;\r\n    }\r\n    LabeledBox.assertIsValidLabeledBox = function (box, callee) {\r\n        Box.assertIsValidBox(box, callee);\r\n        if (!isValidNumber(box.label)) {\r\n            throw new Error(callee + \" - expected property label (\" + box.label + \") to be a number\");\r\n        }\r\n    };\r\n    Object.defineProperty(LabeledBox.prototype, \"label\", {\r\n        get: function () { return this._label; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return LabeledBox;\r\n}(Box));\r\nexport { LabeledBox };\r\n//# sourceMappingURL=LabeledBox.js.map","var LabeledFaceDescriptors = /** @class */ (function () {\r\n    function LabeledFaceDescriptors(label, descriptors) {\r\n        if (!(typeof label === 'string')) {\r\n            throw new Error('LabeledFaceDescriptors - constructor expected label to be a string');\r\n        }\r\n        if (!Array.isArray(descriptors) || descriptors.some(function (desc) { return !(desc instanceof Float32Array); })) {\r\n            throw new Error('LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array');\r\n        }\r\n        this._label = label;\r\n        this._descriptors = descriptors;\r\n    }\r\n    Object.defineProperty(LabeledFaceDescriptors.prototype, \"label\", {\r\n        get: function () { return this._label; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LabeledFaceDescriptors.prototype, \"descriptors\", {\r\n        get: function () { return this._descriptors; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LabeledFaceDescriptors.prototype.toJSON = function () {\r\n        return {\r\n            label: this.label,\r\n            descriptors: this.descriptors.map(function (d) { return Array.from(d); })\r\n        };\r\n    };\r\n    LabeledFaceDescriptors.fromJSON = function (json) {\r\n        var descriptors = json.descriptors.map(function (d) {\r\n            return new Float32Array(d);\r\n        });\r\n        return new LabeledFaceDescriptors(json.label, descriptors);\r\n    };\r\n    return LabeledFaceDescriptors;\r\n}());\r\nexport { LabeledFaceDescriptors };\r\n//# sourceMappingURL=LabeledFaceDescriptors.js.map","import { __extends } from \"tslib\";\r\nimport { isValidProbablitiy } from '../utils';\r\nimport { LabeledBox } from './LabeledBox';\r\nvar PredictedBox = /** @class */ (function (_super) {\r\n    __extends(PredictedBox, _super);\r\n    function PredictedBox(box, label, score, classScore) {\r\n        var _this = _super.call(this, box, label) || this;\r\n        _this._score = score;\r\n        _this._classScore = classScore;\r\n        return _this;\r\n    }\r\n    PredictedBox.assertIsValidPredictedBox = function (box, callee) {\r\n        LabeledBox.assertIsValidLabeledBox(box, callee);\r\n        if (!isValidProbablitiy(box.score)\r\n            || !isValidProbablitiy(box.classScore)) {\r\n            throw new Error(callee + \" - expected properties score (\" + box.score + \") and (\" + box.classScore + \") to be a number between [0, 1]\");\r\n        }\r\n    };\r\n    Object.defineProperty(PredictedBox.prototype, \"score\", {\r\n        get: function () { return this._score; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PredictedBox.prototype, \"classScore\", {\r\n        get: function () { return this._classScore; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PredictedBox;\r\n}(LabeledBox));\r\nexport { PredictedBox };\r\n//# sourceMappingURL=PredictedBox.js.map","import { FaceDetection } from '../classes/FaceDetection';\r\nexport function isWithFaceDetection(obj) {\r\n    return obj['detection'] instanceof FaceDetection;\r\n}\r\nexport function extendWithFaceDetection(sourceObj, detection) {\r\n    var extension = { detection: detection };\r\n    return Object.assign({}, sourceObj, extension);\r\n}\r\n//# sourceMappingURL=WithFaceDetection.js.map","export function createBrowserEnv() {\r\n    var fetch = window['fetch'] || function () {\r\n        throw new Error('fetch - missing fetch implementation for browser environment');\r\n    };\r\n    var readFile = function () {\r\n        throw new Error('readFile - filesystem not available for browser environment');\r\n    };\r\n    return {\r\n        Canvas: HTMLCanvasElement,\r\n        CanvasRenderingContext2D: CanvasRenderingContext2D,\r\n        Image: HTMLImageElement,\r\n        ImageData: ImageData,\r\n        Video: HTMLVideoElement,\r\n        createCanvasElement: function () { return document.createElement('canvas'); },\r\n        createImageElement: function () { return document.createElement('img'); },\r\n        fetch: fetch,\r\n        readFile: readFile\r\n    };\r\n}\r\n//# sourceMappingURL=createBrowserEnv.js.map","export function createFileSystem(fs) {\r\n    var requireFsError = '';\r\n    if (!fs) {\r\n        try {\r\n            fs = require('fs');\r\n        }\r\n        catch (err) {\r\n            requireFsError = err.toString();\r\n        }\r\n    }\r\n    var readFile = fs\r\n        ? function (filePath) {\r\n            return new Promise(function (res, rej) {\r\n                fs.readFile(filePath, function (err, buffer) {\r\n                    return err ? rej(err) : res(buffer);\r\n                });\r\n            });\r\n        }\r\n        : function () {\r\n            throw new Error(\"readFile - failed to require fs in nodejs environment with error: \" + requireFsError);\r\n        };\r\n    return {\r\n        readFile: readFile\r\n    };\r\n}\r\n//# sourceMappingURL=createFileSystem.js.map","import { __assign } from \"tslib\";\r\nimport { createFileSystem } from './createFileSystem';\r\nexport function createNodejsEnv() {\r\n    var Canvas = global['Canvas'] || global['HTMLCanvasElement'];\r\n    var Image = global['Image'] || global['HTMLImageElement'];\r\n    var createCanvasElement = function () {\r\n        if (Canvas) {\r\n            return new Canvas();\r\n        }\r\n        throw new Error('createCanvasElement - missing Canvas implementation for nodejs environment');\r\n    };\r\n    var createImageElement = function () {\r\n        if (Image) {\r\n            return new Image();\r\n        }\r\n        throw new Error('createImageElement - missing Image implementation for nodejs environment');\r\n    };\r\n    var fetch = global['fetch'] || function () {\r\n        throw new Error('fetch - missing fetch implementation for nodejs environment');\r\n    };\r\n    var fileSystem = createFileSystem();\r\n    return __assign({ Canvas: Canvas || /** @class */ (function () {\r\n            function Canvas() {\r\n            }\r\n            return Canvas;\r\n        }()), CanvasRenderingContext2D: global['CanvasRenderingContext2D'] || /** @class */ (function () {\r\n            function class_1() {\r\n            }\r\n            return class_1;\r\n        }()), Image: Image || /** @class */ (function () {\r\n            function Image() {\r\n            }\r\n            return Image;\r\n        }()), ImageData: global['ImageData'] || /** @class */ (function () {\r\n            function class_2() {\r\n            }\r\n            return class_2;\r\n        }()), Video: global['HTMLVideoElement'] || /** @class */ (function () {\r\n            function class_3() {\r\n            }\r\n            return class_3;\r\n        }()), createCanvasElement: createCanvasElement,\r\n        createImageElement: createImageElement,\r\n        fetch: fetch }, fileSystem);\r\n}\r\n//# sourceMappingURL=createNodejsEnv.js.map","export function isBrowser() {\r\n    return typeof window === 'object'\r\n        && typeof document !== 'undefined'\r\n        && typeof HTMLImageElement !== 'undefined'\r\n        && typeof HTMLCanvasElement !== 'undefined'\r\n        && typeof HTMLVideoElement !== 'undefined'\r\n        && typeof ImageData !== 'undefined'\r\n        && typeof CanvasRenderingContext2D !== 'undefined';\r\n}\r\n//# sourceMappingURL=isBrowser.js.map","export function isNodejs() {\r\n    return typeof global === 'object'\r\n        && typeof require === 'function'\r\n        && typeof module !== 'undefined'\r\n        // issues with gatsby.js: module.exports is undefined\r\n        // && !!module.exports\r\n        && typeof process !== 'undefined' && !!process.version;\r\n}\r\n//# sourceMappingURL=isNodejs.js.map","import { getContext2dOrThrow } from '../dom/getContext2dOrThrow';\r\nimport { resolveInput } from '../dom/resolveInput';\r\nexport var AnchorPosition;\r\n(function (AnchorPosition) {\r\n    AnchorPosition[\"TOP_LEFT\"] = \"TOP_LEFT\";\r\n    AnchorPosition[\"TOP_RIGHT\"] = \"TOP_RIGHT\";\r\n    AnchorPosition[\"BOTTOM_LEFT\"] = \"BOTTOM_LEFT\";\r\n    AnchorPosition[\"BOTTOM_RIGHT\"] = \"BOTTOM_RIGHT\";\r\n})(AnchorPosition || (AnchorPosition = {}));\r\nvar DrawTextFieldOptions = /** @class */ (function () {\r\n    function DrawTextFieldOptions(options) {\r\n        if (options === void 0) { options = {}; }\r\n        var anchorPosition = options.anchorPosition, backgroundColor = options.backgroundColor, fontColor = options.fontColor, fontSize = options.fontSize, fontStyle = options.fontStyle, padding = options.padding;\r\n        this.anchorPosition = anchorPosition || AnchorPosition.TOP_LEFT;\r\n        this.backgroundColor = backgroundColor || 'rgba(0, 0, 0, 0.5)';\r\n        this.fontColor = fontColor || 'rgba(255, 255, 255, 1)';\r\n        this.fontSize = fontSize || 14;\r\n        this.fontStyle = fontStyle || 'Georgia';\r\n        this.padding = padding || 4;\r\n    }\r\n    return DrawTextFieldOptions;\r\n}());\r\nexport { DrawTextFieldOptions };\r\nvar DrawTextField = /** @class */ (function () {\r\n    function DrawTextField(text, anchor, options) {\r\n        if (options === void 0) { options = {}; }\r\n        this.text = typeof text === 'string'\r\n            ? [text]\r\n            : (text instanceof DrawTextField ? text.text : text);\r\n        this.anchor = anchor;\r\n        this.options = new DrawTextFieldOptions(options);\r\n    }\r\n    DrawTextField.prototype.measureWidth = function (ctx) {\r\n        var padding = this.options.padding;\r\n        return this.text.map(function (l) { return ctx.measureText(l).width; }).reduce(function (w0, w1) { return w0 < w1 ? w1 : w0; }, 0) + (2 * padding);\r\n    };\r\n    DrawTextField.prototype.measureHeight = function () {\r\n        var _a = this.options, fontSize = _a.fontSize, padding = _a.padding;\r\n        return this.text.length * fontSize + (2 * padding);\r\n    };\r\n    DrawTextField.prototype.getUpperLeft = function (ctx, canvasDims) {\r\n        var anchorPosition = this.options.anchorPosition;\r\n        var isShiftLeft = anchorPosition === AnchorPosition.BOTTOM_RIGHT || anchorPosition === AnchorPosition.TOP_RIGHT;\r\n        var isShiftTop = anchorPosition === AnchorPosition.BOTTOM_LEFT || anchorPosition === AnchorPosition.BOTTOM_RIGHT;\r\n        var textFieldWidth = this.measureWidth(ctx);\r\n        var textFieldHeight = this.measureHeight();\r\n        var x = (isShiftLeft ? this.anchor.x - textFieldWidth : this.anchor.x);\r\n        var y = isShiftTop ? this.anchor.y - textFieldHeight : this.anchor.y;\r\n        // adjust anchor if text box exceeds canvas borders\r\n        if (canvasDims) {\r\n            var width = canvasDims.width, height = canvasDims.height;\r\n            var newX = Math.max(Math.min(x, width - textFieldWidth), 0);\r\n            var newY = Math.max(Math.min(y, height - textFieldHeight), 0);\r\n            return { x: newX, y: newY };\r\n        }\r\n        return { x: x, y: y };\r\n    };\r\n    DrawTextField.prototype.draw = function (canvasArg) {\r\n        var canvas = resolveInput(canvasArg);\r\n        var ctx = getContext2dOrThrow(canvas);\r\n        var _a = this.options, backgroundColor = _a.backgroundColor, fontColor = _a.fontColor, fontSize = _a.fontSize, fontStyle = _a.fontStyle, padding = _a.padding;\r\n        ctx.font = fontSize + \"px \" + fontStyle;\r\n        var maxTextWidth = this.measureWidth(ctx);\r\n        var textHeight = this.measureHeight();\r\n        ctx.fillStyle = backgroundColor;\r\n        var upperLeft = this.getUpperLeft(ctx, canvas);\r\n        ctx.fillRect(upperLeft.x, upperLeft.y, maxTextWidth, textHeight);\r\n        ctx.fillStyle = fontColor;\r\n        this.text.forEach(function (textLine, i) {\r\n            var x = padding + upperLeft.x;\r\n            var y = padding + upperLeft.y + ((i + 1) * fontSize);\r\n            ctx.fillText(textLine, x, y);\r\n        });\r\n    };\r\n    return DrawTextField;\r\n}());\r\nexport { DrawTextField };\r\n//# sourceMappingURL=DrawTextField.js.map","import { env } from '../env';\r\nexport function resolveInput(arg) {\r\n    if (!env.isNodejs() && typeof arg === 'string') {\r\n        return document.getElementById(arg);\r\n    }\r\n    return arg;\r\n}\r\n//# sourceMappingURL=resolveInput.js.map","import { env } from '../env';\r\nimport { resolveInput } from './resolveInput';\r\nexport function getContext2dOrThrow(canvasArg) {\r\n    var _a = env.getEnv(), Canvas = _a.Canvas, CanvasRenderingContext2D = _a.CanvasRenderingContext2D;\r\n    if (canvasArg instanceof CanvasRenderingContext2D) {\r\n        return canvasArg;\r\n    }\r\n    var canvas = resolveInput(canvasArg);\r\n    if (!(canvas instanceof Canvas)) {\r\n        throw new Error('resolveContext2d - expected canvas to be of instance of Canvas');\r\n    }\r\n    var ctx = canvas.getContext('2d');\r\n    if (!ctx) {\r\n        throw new Error('resolveContext2d - canvas 2d context is null');\r\n    }\r\n    return ctx;\r\n}\r\n//# sourceMappingURL=getContext2dOrThrow.js.map","import { Box } from '../classes';\r\nimport { getContext2dOrThrow } from '../dom/getContext2dOrThrow';\r\nimport { AnchorPosition, DrawTextField, DrawTextFieldOptions } from './DrawTextField';\r\nvar DrawBoxOptions = /** @class */ (function () {\r\n    function DrawBoxOptions(options) {\r\n        if (options === void 0) { options = {}; }\r\n        var boxColor = options.boxColor, lineWidth = options.lineWidth, label = options.label, drawLabelOptions = options.drawLabelOptions;\r\n        this.boxColor = boxColor || 'rgba(0, 0, 255, 1)';\r\n        this.lineWidth = lineWidth || 2;\r\n        this.label = label;\r\n        var defaultDrawLabelOptions = {\r\n            anchorPosition: AnchorPosition.BOTTOM_LEFT,\r\n            backgroundColor: this.boxColor\r\n        };\r\n        this.drawLabelOptions = new DrawTextFieldOptions(Object.assign({}, defaultDrawLabelOptions, drawLabelOptions));\r\n    }\r\n    return DrawBoxOptions;\r\n}());\r\nexport { DrawBoxOptions };\r\nvar DrawBox = /** @class */ (function () {\r\n    function DrawBox(box, options) {\r\n        if (options === void 0) { options = {}; }\r\n        this.box = new Box(box);\r\n        this.options = new DrawBoxOptions(options);\r\n    }\r\n    DrawBox.prototype.draw = function (canvasArg) {\r\n        var ctx = getContext2dOrThrow(canvasArg);\r\n        var _a = this.options, boxColor = _a.boxColor, lineWidth = _a.lineWidth;\r\n        var _b = this.box, x = _b.x, y = _b.y, width = _b.width, height = _b.height;\r\n        ctx.strokeStyle = boxColor;\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.strokeRect(x, y, width, height);\r\n        var label = this.options.label;\r\n        if (label) {\r\n            new DrawTextField([label], { x: x - (lineWidth / 2), y: y }, this.options.drawLabelOptions).draw(canvasArg);\r\n        }\r\n    };\r\n    return DrawBox;\r\n}());\r\nexport { DrawBox };\r\n//# sourceMappingURL=DrawBox.js.map","import { env } from '../env';\r\nexport function isMediaLoaded(media) {\r\n    var _a = env.getEnv(), Image = _a.Image, Video = _a.Video;\r\n    return (media instanceof Image && media.complete)\r\n        || (media instanceof Video && media.readyState >= 3);\r\n}\r\n//# sourceMappingURL=isMediaLoaded.js.map","import { Dimensions } from '../classes/Dimensions';\r\nimport { env } from '../env';\r\nexport function getMediaDimensions(input) {\r\n    var _a = env.getEnv(), Image = _a.Image, Video = _a.Video;\r\n    if (input instanceof Image) {\r\n        return new Dimensions(input.naturalWidth, input.naturalHeight);\r\n    }\r\n    if (input instanceof Video) {\r\n        return new Dimensions(input.videoWidth, input.videoHeight);\r\n    }\r\n    return new Dimensions(input.width, input.height);\r\n}\r\n//# sourceMappingURL=getMediaDimensions.js.map","import { env } from '../env';\r\nimport { getContext2dOrThrow } from './getContext2dOrThrow';\r\nimport { getMediaDimensions } from './getMediaDimensions';\r\nimport { isMediaLoaded } from './isMediaLoaded';\r\nexport function createCanvas(_a) {\r\n    var width = _a.width, height = _a.height;\r\n    var createCanvasElement = env.getEnv().createCanvasElement;\r\n    var canvas = createCanvasElement();\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    return canvas;\r\n}\r\nexport function createCanvasFromMedia(media, dims) {\r\n    var ImageData = env.getEnv().ImageData;\r\n    if (!(media instanceof ImageData) && !isMediaLoaded(media)) {\r\n        throw new Error('createCanvasFromMedia - media has not finished loading yet');\r\n    }\r\n    var _a = dims || getMediaDimensions(media), width = _a.width, height = _a.height;\r\n    var canvas = createCanvas({ width: width, height: height });\r\n    if (media instanceof ImageData) {\r\n        getContext2dOrThrow(canvas).putImageData(media, 0, 0);\r\n    }\r\n    else {\r\n        getContext2dOrThrow(canvas).drawImage(media, 0, 0, width, height);\r\n    }\r\n    return canvas;\r\n}\r\n//# sourceMappingURL=createCanvas.js.map","import { __awaiter, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { env } from '../env';\r\nimport { isTensor4D } from '../utils';\r\nexport function imageTensorToCanvas(imgTensor, canvas) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var targetCanvas, _a, height, width, numChannels, imgTensor3D;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    targetCanvas = canvas || env.getEnv().createCanvasElement();\r\n                    _a = imgTensor.shape.slice(isTensor4D(imgTensor) ? 1 : 0), height = _a[0], width = _a[1], numChannels = _a[2];\r\n                    imgTensor3D = tf.tidy(function () { return imgTensor.as3D(height, width, numChannels).toInt(); });\r\n                    return [4 /*yield*/, tf.browser.toPixels(imgTensor3D, targetCanvas)];\r\n                case 1:\r\n                    _b.sent();\r\n                    imgTensor3D.dispose();\r\n                    return [2 /*return*/, targetCanvas];\r\n            }\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=imageTensorToCanvas.js.map","import { env } from '../env';\r\nexport function isMediaElement(input) {\r\n    var _a = env.getEnv(), Image = _a.Image, Canvas = _a.Canvas, Video = _a.Video;\r\n    return input instanceof Image\r\n        || input instanceof Canvas\r\n        || input instanceof Video;\r\n}\r\n//# sourceMappingURL=isMediaElement.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { env } from '../env';\r\nimport { padToSquare } from '../ops/padToSquare';\r\nimport { computeReshapedDimensions, isTensor3D, isTensor4D, range } from '../utils';\r\nimport { createCanvasFromMedia } from './createCanvas';\r\nimport { imageToSquare } from './imageToSquare';\r\nvar NetInput = /** @class */ (function () {\r\n    function NetInput(inputs, treatAsBatchInput) {\r\n        var _this = this;\r\n        if (treatAsBatchInput === void 0) { treatAsBatchInput = false; }\r\n        this._imageTensors = [];\r\n        this._canvases = [];\r\n        this._treatAsBatchInput = false;\r\n        this._inputDimensions = [];\r\n        if (!Array.isArray(inputs)) {\r\n            throw new Error(\"NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have \" + inputs);\r\n        }\r\n        this._treatAsBatchInput = treatAsBatchInput;\r\n        this._batchSize = inputs.length;\r\n        inputs.forEach(function (input, idx) {\r\n            if (isTensor3D(input)) {\r\n                _this._imageTensors[idx] = input;\r\n                _this._inputDimensions[idx] = input.shape;\r\n                return;\r\n            }\r\n            if (isTensor4D(input)) {\r\n                var batchSize = input.shape[0];\r\n                if (batchSize !== 1) {\r\n                    throw new Error(\"NetInput - tf.Tensor4D with batchSize \" + batchSize + \" passed, but not supported in input array\");\r\n                }\r\n                _this._imageTensors[idx] = input;\r\n                _this._inputDimensions[idx] = input.shape.slice(1);\r\n                return;\r\n            }\r\n            var canvas = input instanceof env.getEnv().Canvas ? input : createCanvasFromMedia(input);\r\n            _this._canvases[idx] = canvas;\r\n            _this._inputDimensions[idx] = [canvas.height, canvas.width, 3];\r\n        });\r\n    }\r\n    Object.defineProperty(NetInput.prototype, \"imageTensors\", {\r\n        get: function () {\r\n            return this._imageTensors;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NetInput.prototype, \"canvases\", {\r\n        get: function () {\r\n            return this._canvases;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NetInput.prototype, \"isBatchInput\", {\r\n        get: function () {\r\n            return this.batchSize > 1 || this._treatAsBatchInput;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NetInput.prototype, \"batchSize\", {\r\n        get: function () {\r\n            return this._batchSize;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NetInput.prototype, \"inputDimensions\", {\r\n        get: function () {\r\n            return this._inputDimensions;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NetInput.prototype, \"inputSize\", {\r\n        get: function () {\r\n            return this._inputSize;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NetInput.prototype, \"reshapedInputDimensions\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return range(this.batchSize, 0, 1).map(function (_, batchIdx) { return _this.getReshapedInputDimensions(batchIdx); });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    NetInput.prototype.getInput = function (batchIdx) {\r\n        return this.canvases[batchIdx] || this.imageTensors[batchIdx];\r\n    };\r\n    NetInput.prototype.getInputDimensions = function (batchIdx) {\r\n        return this._inputDimensions[batchIdx];\r\n    };\r\n    NetInput.prototype.getInputHeight = function (batchIdx) {\r\n        return this._inputDimensions[batchIdx][0];\r\n    };\r\n    NetInput.prototype.getInputWidth = function (batchIdx) {\r\n        return this._inputDimensions[batchIdx][1];\r\n    };\r\n    NetInput.prototype.getReshapedInputDimensions = function (batchIdx) {\r\n        if (typeof this.inputSize !== 'number') {\r\n            throw new Error('getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet');\r\n        }\r\n        var width = this.getInputWidth(batchIdx);\r\n        var height = this.getInputHeight(batchIdx);\r\n        return computeReshapedDimensions({ width: width, height: height }, this.inputSize);\r\n    };\r\n    /**\r\n     * Create a batch tensor from all input canvases and tensors\r\n     * with size [batchSize, inputSize, inputSize, 3].\r\n     *\r\n     * @param inputSize Height and width of the tensor.\r\n     * @param isCenterImage (optional, default: false) If true, add an equal amount of padding on\r\n     * both sides of the minor dimension oof the image.\r\n     * @returns The batch tensor.\r\n     */\r\n    NetInput.prototype.toBatchTensor = function (inputSize, isCenterInputs) {\r\n        var _this = this;\r\n        if (isCenterInputs === void 0) { isCenterInputs = true; }\r\n        this._inputSize = inputSize;\r\n        return tf.tidy(function () {\r\n            var inputTensors = range(_this.batchSize, 0, 1).map(function (batchIdx) {\r\n                var input = _this.getInput(batchIdx);\r\n                if (input instanceof tf.Tensor) {\r\n                    var imgTensor = isTensor4D(input) ? input : input.expandDims();\r\n                    imgTensor = padToSquare(imgTensor, isCenterInputs);\r\n                    if (imgTensor.shape[1] !== inputSize || imgTensor.shape[2] !== inputSize) {\r\n                        imgTensor = tf.image.resizeBilinear(imgTensor, [inputSize, inputSize]);\r\n                    }\r\n                    return imgTensor.as3D(inputSize, inputSize, 3);\r\n                }\r\n                if (input instanceof env.getEnv().Canvas) {\r\n                    return tf.browser.fromPixels(imageToSquare(input, inputSize, isCenterInputs));\r\n                }\r\n                throw new Error(\"toBatchTensor - at batchIdx \" + batchIdx + \", expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have \" + input);\r\n            });\r\n            var batchTensor = tf.stack(inputTensors.map(function (t) { return t.toFloat(); })).as4D(_this.batchSize, inputSize, inputSize, 3);\r\n            return batchTensor;\r\n        });\r\n    };\r\n    return NetInput;\r\n}());\r\nexport { NetInput };\r\n//# sourceMappingURL=NetInput.js.map","import * as tf from '@tensorflow/tfjs-core';\r\n/**\r\n * Pads the smaller dimension of an image tensor with zeros, such that width === height.\r\n *\r\n * @param imgTensor The image tensor.\r\n * @param isCenterImage (optional, default: false) If true, add an equal amount of padding on\r\n * both sides of the minor dimension oof the image.\r\n * @returns The padded tensor with width === height.\r\n */\r\nexport function padToSquare(imgTensor, isCenterImage) {\r\n    if (isCenterImage === void 0) { isCenterImage = false; }\r\n    return tf.tidy(function () {\r\n        var _a = imgTensor.shape.slice(1), height = _a[0], width = _a[1];\r\n        if (height === width) {\r\n            return imgTensor;\r\n        }\r\n        var dimDiff = Math.abs(height - width);\r\n        var paddingAmount = Math.round(dimDiff * (isCenterImage ? 0.5 : 1));\r\n        var paddingAxis = height > width ? 2 : 1;\r\n        var createPaddingTensor = function (paddingAmount) {\r\n            var paddingTensorShape = imgTensor.shape.slice();\r\n            paddingTensorShape[paddingAxis] = paddingAmount;\r\n            return tf.fill(paddingTensorShape, 0);\r\n        };\r\n        var paddingTensorAppend = createPaddingTensor(paddingAmount);\r\n        var remainingPaddingAmount = dimDiff - paddingTensorAppend.shape[paddingAxis];\r\n        var paddingTensorPrepend = isCenterImage && remainingPaddingAmount\r\n            ? createPaddingTensor(remainingPaddingAmount)\r\n            : null;\r\n        var tensorsToStack = [\r\n            paddingTensorPrepend,\r\n            imgTensor,\r\n            paddingTensorAppend\r\n        ]\r\n            .filter(function (t) { return !!t; })\r\n            .map(function (t) { return t.toFloat(); });\r\n        return tf.concat(tensorsToStack, paddingAxis);\r\n    });\r\n}\r\n//# sourceMappingURL=padToSquare.js.map","import { env } from '../env';\r\nimport { createCanvas, createCanvasFromMedia } from './createCanvas';\r\nimport { getContext2dOrThrow } from './getContext2dOrThrow';\r\nimport { getMediaDimensions } from './getMediaDimensions';\r\nexport function imageToSquare(input, inputSize, centerImage) {\r\n    if (centerImage === void 0) { centerImage = false; }\r\n    var _a = env.getEnv(), Image = _a.Image, Canvas = _a.Canvas;\r\n    if (!(input instanceof Image || input instanceof Canvas)) {\r\n        throw new Error('imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement');\r\n    }\r\n    var dims = getMediaDimensions(input);\r\n    var scale = inputSize / Math.max(dims.height, dims.width);\r\n    var width = scale * dims.width;\r\n    var height = scale * dims.height;\r\n    var targetCanvas = createCanvas({ width: inputSize, height: inputSize });\r\n    var inputCanvas = input instanceof Canvas ? input : createCanvasFromMedia(input);\r\n    var offset = Math.abs(width - height) / 2;\r\n    var dx = centerImage && width < height ? offset : 0;\r\n    var dy = centerImage && height < width ? offset : 0;\r\n    getContext2dOrThrow(targetCanvas).drawImage(inputCanvas, dx, dy, width, height);\r\n    return targetCanvas;\r\n}\r\n//# sourceMappingURL=imageToSquare.js.map","import { __awaiter, __generator } from \"tslib\";\r\nimport { isTensor3D, isTensor4D } from '../utils';\r\nimport { awaitMediaLoaded } from './awaitMediaLoaded';\r\nimport { isMediaElement } from './isMediaElement';\r\nimport { NetInput } from './NetInput';\r\nimport { resolveInput } from './resolveInput';\r\n/**\r\n * Validates the input to make sure, they are valid net inputs and awaits all media elements\r\n * to be finished loading.\r\n *\r\n * @param input The input, which can be a media element or an array of different media elements.\r\n * @returns A NetInput instance, which can be passed into one of the neural networks.\r\n */\r\nexport function toNetInput(inputs) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var inputArgArray, getIdxHint, inputArray;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (inputs instanceof NetInput) {\r\n                        return [2 /*return*/, inputs];\r\n                    }\r\n                    inputArgArray = Array.isArray(inputs)\r\n                        ? inputs\r\n                        : [inputs];\r\n                    if (!inputArgArray.length) {\r\n                        throw new Error('toNetInput - empty array passed as input');\r\n                    }\r\n                    getIdxHint = function (idx) { return Array.isArray(inputs) ? \" at input index \" + idx + \":\" : ''; };\r\n                    inputArray = inputArgArray.map(resolveInput);\r\n                    inputArray.forEach(function (input, i) {\r\n                        if (!isMediaElement(input) && !isTensor3D(input) && !isTensor4D(input)) {\r\n                            if (typeof inputArgArray[i] === 'string') {\r\n                                throw new Error(\"toNetInput -\" + getIdxHint(i) + \" string passed, but could not resolve HTMLElement for element id \" + inputArgArray[i]);\r\n                            }\r\n                            throw new Error(\"toNetInput -\" + getIdxHint(i) + \" expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id\");\r\n                        }\r\n                        if (isTensor4D(input)) {\r\n                            // if tf.Tensor4D is passed in the input array, the batch size has to be 1\r\n                            var batchSize = input.shape[0];\r\n                            if (batchSize !== 1) {\r\n                                throw new Error(\"toNetInput -\" + getIdxHint(i) + \" tf.Tensor4D with batchSize \" + batchSize + \" passed, but not supported in input array\");\r\n                            }\r\n                        }\r\n                    });\r\n                    // wait for all media elements being loaded\r\n                    return [4 /*yield*/, Promise.all(inputArray.map(function (input) { return isMediaElement(input) && awaitMediaLoaded(input); }))];\r\n                case 1:\r\n                    // wait for all media elements being loaded\r\n                    _a.sent();\r\n                    return [2 /*return*/, new NetInput(inputArray, Array.isArray(inputs))];\r\n            }\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=toNetInput.js.map","import { env } from '../env';\r\nimport { isMediaLoaded } from './isMediaLoaded';\r\nexport function awaitMediaLoaded(media) {\r\n    return new Promise(function (resolve, reject) {\r\n        if (media instanceof env.getEnv().Canvas || isMediaLoaded(media)) {\r\n            return resolve();\r\n        }\r\n        function onLoad(e) {\r\n            if (!e.currentTarget)\r\n                return;\r\n            e.currentTarget.removeEventListener('load', onLoad);\r\n            e.currentTarget.removeEventListener('error', onError);\r\n            resolve(e);\r\n        }\r\n        function onError(e) {\r\n            if (!e.currentTarget)\r\n                return;\r\n            e.currentTarget.removeEventListener('load', onLoad);\r\n            e.currentTarget.removeEventListener('error', onError);\r\n            reject(e);\r\n        }\r\n        media.addEventListener('load', onLoad);\r\n        media.addEventListener('error', onError);\r\n    });\r\n}\r\n//# sourceMappingURL=awaitMediaLoaded.js.map","import { __awaiter, __generator } from \"tslib\";\r\nimport { FaceDetection } from '../classes/FaceDetection';\r\nimport { env } from '../env';\r\nimport { createCanvas } from './createCanvas';\r\nimport { getContext2dOrThrow } from './getContext2dOrThrow';\r\nimport { imageTensorToCanvas } from './imageTensorToCanvas';\r\nimport { toNetInput } from './toNetInput';\r\n/**\r\n * Extracts the image regions containing the detected faces.\r\n *\r\n * @param input The image that face detection has been performed on.\r\n * @param detections The face detection results or face bounding boxes for that image.\r\n * @returns The Canvases of the corresponding image region for each detected face.\r\n */\r\nexport function extractFaces(input, detections) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var Canvas, canvas, netInput, tensorOrCanvas, _a, ctx, boxes;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    Canvas = env.getEnv().Canvas;\r\n                    canvas = input;\r\n                    if (!!(input instanceof Canvas)) return [3 /*break*/, 5];\r\n                    return [4 /*yield*/, toNetInput(input)];\r\n                case 1:\r\n                    netInput = _b.sent();\r\n                    if (netInput.batchSize > 1) {\r\n                        throw new Error('extractFaces - batchSize > 1 not supported');\r\n                    }\r\n                    tensorOrCanvas = netInput.getInput(0);\r\n                    if (!(tensorOrCanvas instanceof Canvas)) return [3 /*break*/, 2];\r\n                    _a = tensorOrCanvas;\r\n                    return [3 /*break*/, 4];\r\n                case 2: return [4 /*yield*/, imageTensorToCanvas(tensorOrCanvas)];\r\n                case 3:\r\n                    _a = _b.sent();\r\n                    _b.label = 4;\r\n                case 4:\r\n                    canvas = _a;\r\n                    _b.label = 5;\r\n                case 5:\r\n                    ctx = getContext2dOrThrow(canvas);\r\n                    boxes = detections.map(function (det) { return det instanceof FaceDetection\r\n                        ? det.forSize(canvas.width, canvas.height).box.floor()\r\n                        : det; })\r\n                        .map(function (box) { return box.clipAtImageBorders(canvas.width, canvas.height); });\r\n                    return [2 /*return*/, boxes.map(function (_a) {\r\n                            var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n                            var faceImg = createCanvas({ width: width, height: height });\r\n                            getContext2dOrThrow(faceImg)\r\n                                .putImageData(ctx.getImageData(x, y, width, height), 0, 0);\r\n                            return faceImg;\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=extractFaces.js.map","import { __awaiter, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { FaceDetection } from '../classes/FaceDetection';\r\nimport { isTensor3D, isTensor4D } from '../utils';\r\n/**\r\n * Extracts the tensors of the image regions containing the detected faces.\r\n * Useful if you want to compute the face descriptors for the face images.\r\n * Using this method is faster then extracting a canvas for each face and\r\n * converting them to tensors individually.\r\n *\r\n * @param imageTensor The image tensor that face detection has been performed on.\r\n * @param detections The face detection results or face bounding boxes for that image.\r\n * @returns Tensors of the corresponding image region for each detected face.\r\n */\r\nexport function extractFaceTensors(imageTensor, detections) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            if (!isTensor3D(imageTensor) && !isTensor4D(imageTensor)) {\r\n                throw new Error('extractFaceTensors - expected image tensor to be 3D or 4D');\r\n            }\r\n            if (isTensor4D(imageTensor) && imageTensor.shape[0] > 1) {\r\n                throw new Error('extractFaceTensors - batchSize > 1 not supported');\r\n            }\r\n            return [2 /*return*/, tf.tidy(function () {\r\n                    var _a = imageTensor.shape.slice(isTensor4D(imageTensor) ? 1 : 0), imgHeight = _a[0], imgWidth = _a[1], numChannels = _a[2];\r\n                    var boxes = detections.map(function (det) { return det instanceof FaceDetection\r\n                        ? det.forSize(imgWidth, imgHeight).box\r\n                        : det; })\r\n                        .map(function (box) { return box.clipAtImageBorders(imgWidth, imgHeight); });\r\n                    var faceTensors = boxes.map(function (_a) {\r\n                        var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n                        return tf.slice3d(imageTensor.as3D(imgHeight, imgWidth, numChannels), [y, x, 0], [height, width, numChannels]);\r\n                    });\r\n                    return faceTensors;\r\n                })];\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=extractFaceTensors.js.map","import { __awaiter, __generator } from \"tslib\";\r\nimport { env } from '../env';\r\nexport function fetchOrThrow(url, init) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var fetch, res;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    fetch = env.getEnv().fetch;\r\n                    return [4 /*yield*/, fetch(url, init)];\r\n                case 1:\r\n                    res = _a.sent();\r\n                    if (!(res.status < 400)) {\r\n                        throw new Error(\"failed to fetch: (\" + res.status + \") \" + res.statusText + \", from url: \" + res.url);\r\n                    }\r\n                    return [2 /*return*/, res];\r\n            }\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=fetchOrThrow.js.map","import { __awaiter, __generator } from \"tslib\";\r\nimport { fetchOrThrow } from './fetchOrThrow';\r\nexport function fetchJson(uri) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, fetchOrThrow(uri)];\r\n                case 1: return [2 /*return*/, (_a.sent()).json()];\r\n            }\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=fetchJson.js.map","export function getModelUris(uri, defaultModelName) {\r\n    var defaultManifestFilename = defaultModelName + \"-weights_manifest.json\";\r\n    if (!uri) {\r\n        return {\r\n            modelBaseUri: '',\r\n            manifestUri: defaultManifestFilename\r\n        };\r\n    }\r\n    if (uri === '/') {\r\n        return {\r\n            modelBaseUri: '/',\r\n            manifestUri: \"/\" + defaultManifestFilename\r\n        };\r\n    }\r\n    var protocol = uri.startsWith('http://') ? 'http://' : uri.startsWith('https://') ? 'https://' : '';\r\n    uri = uri.replace(protocol, '');\r\n    var parts = uri.split('/').filter(function (s) { return s; });\r\n    var manifestFile = uri.endsWith('.json')\r\n        ? parts[parts.length - 1]\r\n        : defaultManifestFilename;\r\n    var modelBaseUri = protocol + (uri.endsWith('.json') ? parts.slice(0, parts.length - 1) : parts).join('/');\r\n    modelBaseUri = uri.startsWith('/') ? \"/\" + modelBaseUri : modelBaseUri;\r\n    return {\r\n        modelBaseUri: modelBaseUri,\r\n        manifestUri: modelBaseUri === '/' ? \"/\" + manifestFile : modelBaseUri + \"/\" + manifestFile\r\n    };\r\n}\r\n//# sourceMappingURL=getModelUris.js.map","import { __awaiter, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { getModelUris } from '../common/getModelUris';\r\nimport { fetchJson } from './fetchJson';\r\nexport function loadWeightMap(uri, defaultModelName) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var _a, manifestUri, modelBaseUri, manifest;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    _a = getModelUris(uri, defaultModelName), manifestUri = _a.manifestUri, modelBaseUri = _a.modelBaseUri;\r\n                    return [4 /*yield*/, fetchJson(manifestUri)];\r\n                case 1:\r\n                    manifest = _b.sent();\r\n                    return [2 /*return*/, tf.io.loadWeights(manifest, modelBaseUri)];\r\n            }\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=loadWeightMap.js.map","import { __awaiter, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { getModelUris } from './common/getModelUris';\r\nimport { loadWeightMap } from './dom';\r\nimport { env } from './env';\r\nvar NeuralNetwork = /** @class */ (function () {\r\n    function NeuralNetwork(_name) {\r\n        this._name = _name;\r\n        this._params = undefined;\r\n        this._paramMappings = [];\r\n    }\r\n    Object.defineProperty(NeuralNetwork.prototype, \"params\", {\r\n        get: function () { return this._params; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NeuralNetwork.prototype, \"paramMappings\", {\r\n        get: function () { return this._paramMappings; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NeuralNetwork.prototype, \"isLoaded\", {\r\n        get: function () { return !!this.params; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    NeuralNetwork.prototype.getParamFromPath = function (paramPath) {\r\n        var _a = this.traversePropertyPath(paramPath), obj = _a.obj, objProp = _a.objProp;\r\n        return obj[objProp];\r\n    };\r\n    NeuralNetwork.prototype.reassignParamFromPath = function (paramPath, tensor) {\r\n        var _a = this.traversePropertyPath(paramPath), obj = _a.obj, objProp = _a.objProp;\r\n        obj[objProp].dispose();\r\n        obj[objProp] = tensor;\r\n    };\r\n    NeuralNetwork.prototype.getParamList = function () {\r\n        var _this = this;\r\n        return this._paramMappings.map(function (_a) {\r\n            var paramPath = _a.paramPath;\r\n            return ({\r\n                path: paramPath,\r\n                tensor: _this.getParamFromPath(paramPath)\r\n            });\r\n        });\r\n    };\r\n    NeuralNetwork.prototype.getTrainableParams = function () {\r\n        return this.getParamList().filter(function (param) { return param.tensor instanceof tf.Variable; });\r\n    };\r\n    NeuralNetwork.prototype.getFrozenParams = function () {\r\n        return this.getParamList().filter(function (param) { return !(param.tensor instanceof tf.Variable); });\r\n    };\r\n    NeuralNetwork.prototype.variable = function () {\r\n        var _this = this;\r\n        this.getFrozenParams().forEach(function (_a) {\r\n            var path = _a.path, tensor = _a.tensor;\r\n            _this.reassignParamFromPath(path, tensor.variable());\r\n        });\r\n    };\r\n    NeuralNetwork.prototype.freeze = function () {\r\n        var _this = this;\r\n        this.getTrainableParams().forEach(function (_a) {\r\n            var path = _a.path, variable = _a.tensor;\r\n            var tensor = tf.tensor(variable.dataSync());\r\n            variable.dispose();\r\n            _this.reassignParamFromPath(path, tensor);\r\n        });\r\n    };\r\n    NeuralNetwork.prototype.dispose = function (throwOnRedispose) {\r\n        if (throwOnRedispose === void 0) { throwOnRedispose = true; }\r\n        this.getParamList().forEach(function (param) {\r\n            if (throwOnRedispose && param.tensor.isDisposed) {\r\n                throw new Error(\"param tensor has already been disposed for path \" + param.path);\r\n            }\r\n            param.tensor.dispose();\r\n        });\r\n        this._params = undefined;\r\n    };\r\n    NeuralNetwork.prototype.serializeParams = function () {\r\n        return new Float32Array(this.getParamList()\r\n            .map(function (_a) {\r\n            var tensor = _a.tensor;\r\n            return Array.from(tensor.dataSync());\r\n        })\r\n            .reduce(function (flat, arr) { return flat.concat(arr); }));\r\n    };\r\n    NeuralNetwork.prototype.load = function (weightsOrUrl) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (weightsOrUrl instanceof Float32Array) {\r\n                            this.extractWeights(weightsOrUrl);\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, this.loadFromUri(weightsOrUrl)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    NeuralNetwork.prototype.loadFromUri = function (uri) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var weightMap;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (uri && typeof uri !== 'string') {\r\n                            throw new Error(this._name + \".loadFromUri - expected model uri\");\r\n                        }\r\n                        return [4 /*yield*/, loadWeightMap(uri, this.getDefaultModelName())];\r\n                    case 1:\r\n                        weightMap = _a.sent();\r\n                        this.loadFromWeightMap(weightMap);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    NeuralNetwork.prototype.loadFromDisk = function (filePath) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var readFile, _a, manifestUri, modelBaseUri, fetchWeightsFromDisk, loadWeights, manifest, _b, _c, weightMap;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        if (filePath && typeof filePath !== 'string') {\r\n                            throw new Error(this._name + \".loadFromDisk - expected model file path\");\r\n                        }\r\n                        readFile = env.getEnv().readFile;\r\n                        _a = getModelUris(filePath, this.getDefaultModelName()), manifestUri = _a.manifestUri, modelBaseUri = _a.modelBaseUri;\r\n                        fetchWeightsFromDisk = function (filePaths) { return Promise.all(filePaths.map(function (filePath) { return readFile(filePath).then(function (buf) { return buf.buffer; }); })); };\r\n                        loadWeights = tf.io.weightsLoaderFactory(fetchWeightsFromDisk);\r\n                        _c = (_b = JSON).parse;\r\n                        return [4 /*yield*/, readFile(manifestUri)];\r\n                    case 1:\r\n                        manifest = _c.apply(_b, [(_d.sent()).toString()]);\r\n                        return [4 /*yield*/, loadWeights(manifest, modelBaseUri)];\r\n                    case 2:\r\n                        weightMap = _d.sent();\r\n                        this.loadFromWeightMap(weightMap);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    NeuralNetwork.prototype.loadFromWeightMap = function (weightMap) {\r\n        var _a = this.extractParamsFromWeigthMap(weightMap), paramMappings = _a.paramMappings, params = _a.params;\r\n        this._paramMappings = paramMappings;\r\n        this._params = params;\r\n    };\r\n    NeuralNetwork.prototype.extractWeights = function (weights) {\r\n        var _a = this.extractParams(weights), paramMappings = _a.paramMappings, params = _a.params;\r\n        this._paramMappings = paramMappings;\r\n        this._params = params;\r\n    };\r\n    NeuralNetwork.prototype.traversePropertyPath = function (paramPath) {\r\n        if (!this.params) {\r\n            throw new Error(\"traversePropertyPath - model has no loaded params\");\r\n        }\r\n        var result = paramPath.split('/').reduce(function (res, objProp) {\r\n            if (!res.nextObj.hasOwnProperty(objProp)) {\r\n                throw new Error(\"traversePropertyPath - object does not have property \" + objProp + \", for path \" + paramPath);\r\n            }\r\n            return { obj: res.nextObj, objProp: objProp, nextObj: res.nextObj[objProp] };\r\n        }, { nextObj: this.params });\r\n        var obj = result.obj, objProp = result.objProp;\r\n        if (!obj || !objProp || !(obj[objProp] instanceof tf.Tensor)) {\r\n            throw new Error(\"traversePropertyPath - parameter is not a tensor, for path \" + paramPath);\r\n        }\r\n        return { obj: obj, objProp: objProp };\r\n    };\r\n    return NeuralNetwork;\r\n}());\r\nexport { NeuralNetwork };\r\n//# sourceMappingURL=NeuralNetwork.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nexport function depthwiseSeparableConv(x, params, stride) {\r\n    return tf.tidy(function () {\r\n        var out = tf.separableConv2d(x, params.depthwise_filter, params.pointwise_filter, stride, 'same');\r\n        out = tf.add(out, params.bias);\r\n        return out;\r\n    });\r\n}\r\n//# sourceMappingURL=depthwiseSeparableConv.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { depthwiseSeparableConv } from '../common/depthwiseSeparableConv';\r\nexport function denseBlock3(x, denseBlockParams, isFirstLayer) {\r\n    if (isFirstLayer === void 0) { isFirstLayer = false; }\r\n    return tf.tidy(function () {\r\n        var out1 = tf.relu(isFirstLayer\r\n            ? tf.add(tf.conv2d(x, denseBlockParams.conv0.filters, [2, 2], 'same'), denseBlockParams.conv0.bias)\r\n            : depthwiseSeparableConv(x, denseBlockParams.conv0, [2, 2]));\r\n        var out2 = depthwiseSeparableConv(out1, denseBlockParams.conv1, [1, 1]);\r\n        var in3 = tf.relu(tf.add(out1, out2));\r\n        var out3 = depthwiseSeparableConv(in3, denseBlockParams.conv2, [1, 1]);\r\n        return tf.relu(tf.add(out1, tf.add(out2, out3)));\r\n    });\r\n}\r\nexport function denseBlock4(x, denseBlockParams, isFirstLayer, isScaleDown) {\r\n    if (isFirstLayer === void 0) { isFirstLayer = false; }\r\n    if (isScaleDown === void 0) { isScaleDown = true; }\r\n    return tf.tidy(function () {\r\n        var out1 = tf.relu(isFirstLayer\r\n            ? tf.add(tf.conv2d(x, denseBlockParams.conv0.filters, isScaleDown ? [2, 2] : [1, 1], 'same'), denseBlockParams.conv0.bias)\r\n            : depthwiseSeparableConv(x, denseBlockParams.conv0, isScaleDown ? [2, 2] : [1, 1]));\r\n        var out2 = depthwiseSeparableConv(out1, denseBlockParams.conv1, [1, 1]);\r\n        var in3 = tf.relu(tf.add(out1, out2));\r\n        var out3 = depthwiseSeparableConv(in3, denseBlockParams.conv2, [1, 1]);\r\n        var in4 = tf.relu(tf.add(out1, tf.add(out2, out3)));\r\n        var out4 = depthwiseSeparableConv(in4, denseBlockParams.conv3, [1, 1]);\r\n        return tf.relu(tf.add(out1, tf.add(out2, tf.add(out3, out4))));\r\n    });\r\n}\r\n//# sourceMappingURL=denseBlock.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nexport function convLayer(x, params, padding, withRelu) {\r\n    if (padding === void 0) { padding = 'same'; }\r\n    if (withRelu === void 0) { withRelu = false; }\r\n    return tf.tidy(function () {\r\n        var out = tf.add(tf.conv2d(x, params.filters, [1, 1], padding), params.bias);\r\n        return withRelu ? tf.relu(out) : out;\r\n    });\r\n}\r\n//# sourceMappingURL=convLayer.js.map","export function disposeUnusedWeightTensors(weightMap, paramMappings) {\r\n    Object.keys(weightMap).forEach(function (path) {\r\n        if (!paramMappings.some(function (pm) { return pm.originalPath === path; })) {\r\n            weightMap[path].dispose();\r\n        }\r\n    });\r\n}\r\n//# sourceMappingURL=disposeUnusedWeightTensors.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nexport function extractConvParamsFactory(extractWeights, paramMappings) {\r\n    return function (channelsIn, channelsOut, filterSize, mappedPrefix) {\r\n        var filters = tf.tensor4d(extractWeights(channelsIn * channelsOut * filterSize * filterSize), [filterSize, filterSize, channelsIn, channelsOut]);\r\n        var bias = tf.tensor1d(extractWeights(channelsOut));\r\n        paramMappings.push({ paramPath: mappedPrefix + \"/filters\" }, { paramPath: mappedPrefix + \"/bias\" });\r\n        return { filters: filters, bias: bias };\r\n    };\r\n}\r\n//# sourceMappingURL=extractConvParamsFactory.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nexport function extractFCParamsFactory(extractWeights, paramMappings) {\r\n    return function (channelsIn, channelsOut, mappedPrefix) {\r\n        var fc_weights = tf.tensor2d(extractWeights(channelsIn * channelsOut), [channelsIn, channelsOut]);\r\n        var fc_bias = tf.tensor1d(extractWeights(channelsOut));\r\n        paramMappings.push({ paramPath: mappedPrefix + \"/weights\" }, { paramPath: mappedPrefix + \"/bias\" });\r\n        return {\r\n            weights: fc_weights,\r\n            bias: fc_bias\r\n        };\r\n    };\r\n}\r\n//# sourceMappingURL=extractFCParamsFactory.js.map","var SeparableConvParams = /** @class */ (function () {\r\n    function SeparableConvParams(depthwise_filter, pointwise_filter, bias) {\r\n        this.depthwise_filter = depthwise_filter;\r\n        this.pointwise_filter = pointwise_filter;\r\n        this.bias = bias;\r\n    }\r\n    return SeparableConvParams;\r\n}());\r\nexport { SeparableConvParams };\r\n//# sourceMappingURL=types.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { SeparableConvParams } from './types';\r\nexport function extractSeparableConvParamsFactory(extractWeights, paramMappings) {\r\n    return function (channelsIn, channelsOut, mappedPrefix) {\r\n        var depthwise_filter = tf.tensor4d(extractWeights(3 * 3 * channelsIn), [3, 3, channelsIn, 1]);\r\n        var pointwise_filter = tf.tensor4d(extractWeights(channelsIn * channelsOut), [1, 1, channelsIn, channelsOut]);\r\n        var bias = tf.tensor1d(extractWeights(channelsOut));\r\n        paramMappings.push({ paramPath: mappedPrefix + \"/depthwise_filter\" }, { paramPath: mappedPrefix + \"/pointwise_filter\" }, { paramPath: mappedPrefix + \"/bias\" });\r\n        return new SeparableConvParams(depthwise_filter, pointwise_filter, bias);\r\n    };\r\n}\r\nexport function loadSeparableConvParamsFactory(extractWeightEntry) {\r\n    return function (prefix) {\r\n        var depthwise_filter = extractWeightEntry(prefix + \"/depthwise_filter\", 4);\r\n        var pointwise_filter = extractWeightEntry(prefix + \"/pointwise_filter\", 4);\r\n        var bias = extractWeightEntry(prefix + \"/bias\", 1);\r\n        return new SeparableConvParams(depthwise_filter, pointwise_filter, bias);\r\n    };\r\n}\r\n//# sourceMappingURL=extractSeparableConvParamsFactory.js.map","import { isTensor } from '../utils';\r\nexport function extractWeightEntryFactory(weightMap, paramMappings) {\r\n    return function (originalPath, paramRank, mappedPath) {\r\n        var tensor = weightMap[originalPath];\r\n        if (!isTensor(tensor, paramRank)) {\r\n            throw new Error(\"expected weightMap[\" + originalPath + \"] to be a Tensor\" + paramRank + \"D, instead have \" + tensor);\r\n        }\r\n        paramMappings.push({ originalPath: originalPath, paramPath: mappedPath || originalPath });\r\n        return tensor;\r\n    };\r\n}\r\n//# sourceMappingURL=extractWeightEntryFactory.js.map","export function extractWeightsFactory(weights) {\r\n    var remainingWeights = weights;\r\n    function extractWeights(numWeights) {\r\n        var ret = remainingWeights.slice(0, numWeights);\r\n        remainingWeights = remainingWeights.slice(numWeights);\r\n        return ret;\r\n    }\r\n    function getRemainingWeights() {\r\n        return remainingWeights;\r\n    }\r\n    return {\r\n        extractWeights: extractWeights,\r\n        getRemainingWeights: getRemainingWeights\r\n    };\r\n}\r\n//# sourceMappingURL=extractWeightsFactory.js.map","import { extractConvParamsFactory, extractSeparableConvParamsFactory, } from '../common';\r\nexport function extractorsFactory(extractWeights, paramMappings) {\r\n    var extractConvParams = extractConvParamsFactory(extractWeights, paramMappings);\r\n    var extractSeparableConvParams = extractSeparableConvParamsFactory(extractWeights, paramMappings);\r\n    function extractDenseBlock3Params(channelsIn, channelsOut, mappedPrefix, isFirstLayer) {\r\n        if (isFirstLayer === void 0) { isFirstLayer = false; }\r\n        var conv0 = isFirstLayer\r\n            ? extractConvParams(channelsIn, channelsOut, 3, mappedPrefix + \"/conv0\")\r\n            : extractSeparableConvParams(channelsIn, channelsOut, mappedPrefix + \"/conv0\");\r\n        var conv1 = extractSeparableConvParams(channelsOut, channelsOut, mappedPrefix + \"/conv1\");\r\n        var conv2 = extractSeparableConvParams(channelsOut, channelsOut, mappedPrefix + \"/conv2\");\r\n        return { conv0: conv0, conv1: conv1, conv2: conv2 };\r\n    }\r\n    function extractDenseBlock4Params(channelsIn, channelsOut, mappedPrefix, isFirstLayer) {\r\n        if (isFirstLayer === void 0) { isFirstLayer = false; }\r\n        var _a = extractDenseBlock3Params(channelsIn, channelsOut, mappedPrefix, isFirstLayer), conv0 = _a.conv0, conv1 = _a.conv1, conv2 = _a.conv2;\r\n        var conv3 = extractSeparableConvParams(channelsOut, channelsOut, mappedPrefix + \"/conv3\");\r\n        return { conv0: conv0, conv1: conv1, conv2: conv2, conv3: conv3 };\r\n    }\r\n    return {\r\n        extractDenseBlock3Params: extractDenseBlock3Params,\r\n        extractDenseBlock4Params: extractDenseBlock4Params\r\n    };\r\n}\r\n//# sourceMappingURL=extractorsFactory.js.map","export function loadConvParamsFactory(extractWeightEntry) {\r\n    return function (prefix) {\r\n        var filters = extractWeightEntry(prefix + \"/filters\", 4);\r\n        var bias = extractWeightEntry(prefix + \"/bias\", 1);\r\n        return { filters: filters, bias: bias };\r\n    };\r\n}\r\n//# sourceMappingURL=loadConvParamsFactory.js.map","import { extractWeightEntryFactory, loadSeparableConvParamsFactory } from '../common';\r\nimport { loadConvParamsFactory } from '../common/loadConvParamsFactory';\r\nexport function loadParamsFactory(weightMap, paramMappings) {\r\n    var extractWeightEntry = extractWeightEntryFactory(weightMap, paramMappings);\r\n    var extractConvParams = loadConvParamsFactory(extractWeightEntry);\r\n    var extractSeparableConvParams = loadSeparableConvParamsFactory(extractWeightEntry);\r\n    function extractDenseBlock3Params(prefix, isFirstLayer) {\r\n        if (isFirstLayer === void 0) { isFirstLayer = false; }\r\n        var conv0 = isFirstLayer\r\n            ? extractConvParams(prefix + \"/conv0\")\r\n            : extractSeparableConvParams(prefix + \"/conv0\");\r\n        var conv1 = extractSeparableConvParams(prefix + \"/conv1\");\r\n        var conv2 = extractSeparableConvParams(prefix + \"/conv2\");\r\n        return { conv0: conv0, conv1: conv1, conv2: conv2 };\r\n    }\r\n    function extractDenseBlock4Params(prefix, isFirstLayer) {\r\n        if (isFirstLayer === void 0) { isFirstLayer = false; }\r\n        var conv0 = isFirstLayer\r\n            ? extractConvParams(prefix + \"/conv0\")\r\n            : extractSeparableConvParams(prefix + \"/conv0\");\r\n        var conv1 = extractSeparableConvParams(prefix + \"/conv1\");\r\n        var conv2 = extractSeparableConvParams(prefix + \"/conv2\");\r\n        var conv3 = extractSeparableConvParams(prefix + \"/conv3\");\r\n        return { conv0: conv0, conv1: conv1, conv2: conv2, conv3: conv3 };\r\n    }\r\n    return {\r\n        extractDenseBlock3Params: extractDenseBlock3Params,\r\n        extractDenseBlock4Params: extractDenseBlock4Params\r\n    };\r\n}\r\n//# sourceMappingURL=loadParamsFactory.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { toNetInput } from '../dom';\r\nimport { NeuralNetwork } from '../NeuralNetwork';\r\nimport { normalize } from '../ops';\r\nimport { denseBlock4 } from './denseBlock';\r\nimport { extractParams } from './extractParams';\r\nimport { extractParamsFromWeigthMap } from './extractParamsFromWeigthMap';\r\nvar FaceFeatureExtractor = /** @class */ (function (_super) {\r\n    __extends(FaceFeatureExtractor, _super);\r\n    function FaceFeatureExtractor() {\r\n        return _super.call(this, 'FaceFeatureExtractor') || this;\r\n    }\r\n    FaceFeatureExtractor.prototype.forwardInput = function (input) {\r\n        var params = this.params;\r\n        if (!params) {\r\n            throw new Error('FaceFeatureExtractor - load model before inference');\r\n        }\r\n        return tf.tidy(function () {\r\n            var batchTensor = input.toBatchTensor(112, true);\r\n            var meanRgb = [122.782, 117.001, 104.298];\r\n            var normalized = normalize(batchTensor, meanRgb).div(tf.scalar(255));\r\n            var out = denseBlock4(normalized, params.dense0, true);\r\n            out = denseBlock4(out, params.dense1);\r\n            out = denseBlock4(out, params.dense2);\r\n            out = denseBlock4(out, params.dense3);\r\n            out = tf.avgPool(out, [7, 7], [2, 2], 'valid');\r\n            return out;\r\n        });\r\n    };\r\n    FaceFeatureExtractor.prototype.forward = function (input) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this.forwardInput;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    FaceFeatureExtractor.prototype.getDefaultModelName = function () {\r\n        return 'face_feature_extractor_model';\r\n    };\r\n    FaceFeatureExtractor.prototype.extractParamsFromWeigthMap = function (weightMap) {\r\n        return extractParamsFromWeigthMap(weightMap);\r\n    };\r\n    FaceFeatureExtractor.prototype.extractParams = function (weights) {\r\n        return extractParams(weights);\r\n    };\r\n    return FaceFeatureExtractor;\r\n}(NeuralNetwork));\r\nexport { FaceFeatureExtractor };\r\n//# sourceMappingURL=FaceFeatureExtractor.js.map","import { disposeUnusedWeightTensors } from '../common';\r\nimport { loadParamsFactory } from './loadParamsFactory';\r\nexport function extractParamsFromWeigthMap(weightMap) {\r\n    var paramMappings = [];\r\n    var extractDenseBlock4Params = loadParamsFactory(weightMap, paramMappings).extractDenseBlock4Params;\r\n    var params = {\r\n        dense0: extractDenseBlock4Params('dense0', true),\r\n        dense1: extractDenseBlock4Params('dense1'),\r\n        dense2: extractDenseBlock4Params('dense2'),\r\n        dense3: extractDenseBlock4Params('dense3')\r\n    };\r\n    disposeUnusedWeightTensors(weightMap, paramMappings);\r\n    return { params: params, paramMappings: paramMappings };\r\n}\r\n//# sourceMappingURL=extractParamsFromWeigthMap.js.map","import { extractWeightsFactory } from '../common';\r\nimport { extractorsFactory } from './extractorsFactory';\r\nexport function extractParams(weights) {\r\n    var paramMappings = [];\r\n    var _a = extractWeightsFactory(weights), extractWeights = _a.extractWeights, getRemainingWeights = _a.getRemainingWeights;\r\n    var extractDenseBlock4Params = extractorsFactory(extractWeights, paramMappings).extractDenseBlock4Params;\r\n    var dense0 = extractDenseBlock4Params(3, 32, 'dense0', true);\r\n    var dense1 = extractDenseBlock4Params(32, 64, 'dense1');\r\n    var dense2 = extractDenseBlock4Params(64, 128, 'dense2');\r\n    var dense3 = extractDenseBlock4Params(128, 256, 'dense3');\r\n    if (getRemainingWeights().length !== 0) {\r\n        throw new Error(\"weights remaing after extract: \" + getRemainingWeights().length);\r\n    }\r\n    return {\r\n        paramMappings: paramMappings,\r\n        params: { dense0: dense0, dense1: dense1, dense2: dense2, dense3: dense3 }\r\n    };\r\n}\r\n//# sourceMappingURL=extractParams.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nexport function fullyConnectedLayer(x, params) {\r\n    return tf.tidy(function () {\r\n        return tf.add(tf.matMul(x, params.weights), params.bias);\r\n    });\r\n}\r\n//# sourceMappingURL=fullyConnectedLayer.js.map","export function seperateWeightMaps(weightMap) {\r\n    var featureExtractorMap = {};\r\n    var classifierMap = {};\r\n    Object.keys(weightMap).forEach(function (key) {\r\n        var map = key.startsWith('fc') ? classifierMap : featureExtractorMap;\r\n        map[key] = weightMap[key];\r\n    });\r\n    return { featureExtractorMap: featureExtractorMap, classifierMap: classifierMap };\r\n}\r\n//# sourceMappingURL=util.js.map","import { __extends } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { fullyConnectedLayer } from '../common/fullyConnectedLayer';\r\nimport { NetInput } from '../dom';\r\nimport { NeuralNetwork } from '../NeuralNetwork';\r\nimport { extractParams } from './extractParams';\r\nimport { extractParamsFromWeigthMap } from './extractParamsFromWeigthMap';\r\nimport { seperateWeightMaps } from './util';\r\nvar FaceProcessor = /** @class */ (function (_super) {\r\n    __extends(FaceProcessor, _super);\r\n    function FaceProcessor(_name, faceFeatureExtractor) {\r\n        var _this = _super.call(this, _name) || this;\r\n        _this._faceFeatureExtractor = faceFeatureExtractor;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(FaceProcessor.prototype, \"faceFeatureExtractor\", {\r\n        get: function () {\r\n            return this._faceFeatureExtractor;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FaceProcessor.prototype.runNet = function (input) {\r\n        var _this = this;\r\n        var params = this.params;\r\n        if (!params) {\r\n            throw new Error(this._name + \" - load model before inference\");\r\n        }\r\n        return tf.tidy(function () {\r\n            var bottleneckFeatures = input instanceof NetInput\r\n                ? _this.faceFeatureExtractor.forwardInput(input)\r\n                : input;\r\n            return fullyConnectedLayer(bottleneckFeatures.as2D(bottleneckFeatures.shape[0], -1), params.fc);\r\n        });\r\n    };\r\n    FaceProcessor.prototype.dispose = function (throwOnRedispose) {\r\n        if (throwOnRedispose === void 0) { throwOnRedispose = true; }\r\n        this.faceFeatureExtractor.dispose(throwOnRedispose);\r\n        _super.prototype.dispose.call(this, throwOnRedispose);\r\n    };\r\n    FaceProcessor.prototype.loadClassifierParams = function (weights) {\r\n        var _a = this.extractClassifierParams(weights), params = _a.params, paramMappings = _a.paramMappings;\r\n        this._params = params;\r\n        this._paramMappings = paramMappings;\r\n    };\r\n    FaceProcessor.prototype.extractClassifierParams = function (weights) {\r\n        return extractParams(weights, this.getClassifierChannelsIn(), this.getClassifierChannelsOut());\r\n    };\r\n    FaceProcessor.prototype.extractParamsFromWeigthMap = function (weightMap) {\r\n        var _a = seperateWeightMaps(weightMap), featureExtractorMap = _a.featureExtractorMap, classifierMap = _a.classifierMap;\r\n        this.faceFeatureExtractor.loadFromWeightMap(featureExtractorMap);\r\n        return extractParamsFromWeigthMap(classifierMap);\r\n    };\r\n    FaceProcessor.prototype.extractParams = function (weights) {\r\n        var cIn = this.getClassifierChannelsIn();\r\n        var cOut = this.getClassifierChannelsOut();\r\n        var classifierWeightSize = (cOut * cIn) + cOut;\r\n        var featureExtractorWeights = weights.slice(0, weights.length - classifierWeightSize);\r\n        var classifierWeights = weights.slice(weights.length - classifierWeightSize);\r\n        this.faceFeatureExtractor.extractWeights(featureExtractorWeights);\r\n        return this.extractClassifierParams(classifierWeights);\r\n    };\r\n    return FaceProcessor;\r\n}(NeuralNetwork));\r\nexport { FaceProcessor };\r\n//# sourceMappingURL=FaceProcessor.js.map","import { extractFCParamsFactory, extractWeightsFactory } from '../common';\r\nexport function extractParams(weights, channelsIn, channelsOut) {\r\n    var paramMappings = [];\r\n    var _a = extractWeightsFactory(weights), extractWeights = _a.extractWeights, getRemainingWeights = _a.getRemainingWeights;\r\n    var extractFCParams = extractFCParamsFactory(extractWeights, paramMappings);\r\n    var fc = extractFCParams(channelsIn, channelsOut, 'fc');\r\n    if (getRemainingWeights().length !== 0) {\r\n        throw new Error(\"weights remaing after extract: \" + getRemainingWeights().length);\r\n    }\r\n    return {\r\n        paramMappings: paramMappings,\r\n        params: { fc: fc }\r\n    };\r\n}\r\n//# sourceMappingURL=extractParams.js.map","import { disposeUnusedWeightTensors, extractWeightEntryFactory } from '../common';\r\nexport function extractParamsFromWeigthMap(weightMap) {\r\n    var paramMappings = [];\r\n    var extractWeightEntry = extractWeightEntryFactory(weightMap, paramMappings);\r\n    function extractFcParams(prefix) {\r\n        var weights = extractWeightEntry(prefix + \"/weights\", 2);\r\n        var bias = extractWeightEntry(prefix + \"/bias\", 1);\r\n        return { weights: weights, bias: bias };\r\n    }\r\n    var params = {\r\n        fc: extractFcParams('fc')\r\n    };\r\n    disposeUnusedWeightTensors(weightMap, paramMappings);\r\n    return { params: params, paramMappings: paramMappings };\r\n}\r\n//# sourceMappingURL=extractParamsFromWeigthMap.js.map","export var FACE_EXPRESSION_LABELS = ['Neutre', 'Joyeux', 'Triste', 'Colère', 'Peur', 'Dégoût', 'Surprise'];\r\nvar FaceExpressions = /** @class */ (function () {\r\n    function FaceExpressions(probabilities) {\r\n        var _this = this;\r\n        if (probabilities.length !== 7) {\r\n            throw new Error(\"FaceExpressions.constructor - expected probabilities.length to be 7, have: \" + probabilities.length);\r\n        }\r\n        FACE_EXPRESSION_LABELS.forEach(function (expression, idx) {\r\n            _this[expression] = probabilities[idx];\r\n        });\r\n    }\r\n    FaceExpressions.prototype.asSortedArray = function () {\r\n        var _this = this;\r\n        return FACE_EXPRESSION_LABELS\r\n            .map(function (expression) { return ({ expression: expression, probability: _this[expression] }); })\r\n            .sort(function (e0, e1) { return e1.probability - e0.probability; });\r\n    };\r\n    return FaceExpressions;\r\n}());\r\nexport { FaceExpressions };\r\n//# sourceMappingURL=FaceExpressions.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { toNetInput } from '../dom';\r\nimport { FaceFeatureExtractor } from '../faceFeatureExtractor/FaceFeatureExtractor';\r\nimport { FaceProcessor } from '../faceProcessor/FaceProcessor';\r\nimport { FaceExpressions } from './FaceExpressions';\r\nvar FaceExpressionNet = /** @class */ (function (_super) {\r\n    __extends(FaceExpressionNet, _super);\r\n    function FaceExpressionNet(faceFeatureExtractor) {\r\n        if (faceFeatureExtractor === void 0) { faceFeatureExtractor = new FaceFeatureExtractor(); }\r\n        return _super.call(this, 'FaceExpressionNet', faceFeatureExtractor) || this;\r\n    }\r\n    FaceExpressionNet.prototype.forwardInput = function (input) {\r\n        var _this = this;\r\n        return tf.tidy(function () { return tf.softmax(_this.runNet(input)); });\r\n    };\r\n    FaceExpressionNet.prototype.forward = function (input) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this.forwardInput;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    FaceExpressionNet.prototype.predictExpressions = function (input) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var netInput, out, probabilitesByBatch, predictionsByBatch;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, toNetInput(input)];\r\n                    case 1:\r\n                        netInput = _a.sent();\r\n                        return [4 /*yield*/, this.forwardInput(netInput)];\r\n                    case 2:\r\n                        out = _a.sent();\r\n                        return [4 /*yield*/, Promise.all(tf.unstack(out).map(function (t) { return __awaiter(_this, void 0, void 0, function () {\r\n                                var data;\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0: return [4 /*yield*/, t.data()];\r\n                                        case 1:\r\n                                            data = _a.sent();\r\n                                            t.dispose();\r\n                                            return [2 /*return*/, data];\r\n                                    }\r\n                                });\r\n                            }); }))];\r\n                    case 3:\r\n                        probabilitesByBatch = _a.sent();\r\n                        out.dispose();\r\n                        predictionsByBatch = probabilitesByBatch\r\n                            .map(function (probabilites) { return new FaceExpressions(probabilites); });\r\n                        return [2 /*return*/, netInput.isBatchInput\r\n                                ? predictionsByBatch\r\n                                : predictionsByBatch[0]];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    FaceExpressionNet.prototype.getDefaultModelName = function () {\r\n        return 'face_expression_model';\r\n    };\r\n    FaceExpressionNet.prototype.getClassifierChannelsIn = function () {\r\n        return 256;\r\n    };\r\n    FaceExpressionNet.prototype.getClassifierChannelsOut = function () {\r\n        return 7;\r\n    };\r\n    return FaceExpressionNet;\r\n}(FaceProcessor));\r\nexport { FaceExpressionNet };\r\n//# sourceMappingURL=FaceExpressionNet.js.map","import { FaceExpressions } from '../faceExpressionNet/FaceExpressions';\r\nexport function isWithFaceExpressions(obj) {\r\n    return obj['expressions'] instanceof FaceExpressions;\r\n}\r\nexport function extendWithFaceExpressions(sourceObj, expressions) {\r\n    var extension = { expressions: expressions };\r\n    return Object.assign({}, sourceObj, extension);\r\n}\r\n//# sourceMappingURL=WithFaceExpressions.js.map","import { Point } from '../classes';\r\nimport { FaceExpressions } from '../faceExpressionNet';\r\nimport { isWithFaceDetection } from '../factories/WithFaceDetection';\r\nimport { isWithFaceExpressions } from '../factories/WithFaceExpressions';\r\nimport { round } from '../utils';\r\nimport { DrawTextField } from './DrawTextField';\r\nexport function drawFaceExpressions(canvasArg, faceExpressions, minConfidence, textFieldAnchor) {\r\n    if (minConfidence === void 0) { minConfidence = 0.1; }\r\n    var faceExpressionsArray = Array.isArray(faceExpressions) ? faceExpressions : [faceExpressions];\r\n    faceExpressionsArray.forEach(function (e) {\r\n        var expr = e instanceof FaceExpressions\r\n            ? e\r\n            : (isWithFaceExpressions(e) ? e.expressions : undefined);\r\n        if (!expr) {\r\n            throw new Error('drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof');\r\n        }\r\n        var sorted = expr.asSortedArray();\r\n        var resultsToDisplay = sorted.filter(function (expr) { return expr.probability > minConfidence; });\r\n        var anchor = isWithFaceDetection(e)\r\n            ? e.detection.box.bottomLeft\r\n            : (textFieldAnchor || new Point(0, 0));\r\n        var drawTextField = new DrawTextField(resultsToDisplay.map(function (expr) { return expr.expression + \" (\" + round(expr.probability) + \")\"; }), anchor);\r\n        drawTextField.draw(canvasArg);\r\n    });\r\n}\r\n//# sourceMappingURL=drawFaceExpressions.js.map","import { FaceDetection } from '../classes/FaceDetection';\r\nimport { FaceLandmarks } from '../classes/FaceLandmarks';\r\nimport { isWithFaceDetection } from './WithFaceDetection';\r\nexport function isWithFaceLandmarks(obj) {\r\n    return isWithFaceDetection(obj)\r\n        && obj['landmarks'] instanceof FaceLandmarks\r\n        && obj['unshiftedLandmarks'] instanceof FaceLandmarks\r\n        && obj['alignedRect'] instanceof FaceDetection;\r\n}\r\nexport function extendWithFaceLandmarks(sourceObj, unshiftedLandmarks) {\r\n    var shift = sourceObj.detection.box;\r\n    var landmarks = unshiftedLandmarks.shiftBy(shift.x, shift.y);\r\n    var rect = landmarks.align();\r\n    var imageDims = sourceObj.detection.imageDims;\r\n    var alignedRect = new FaceDetection(sourceObj.detection.score, rect.rescale(imageDims.reverse()), imageDims);\r\n    var extension = {\r\n        landmarks: landmarks,\r\n        unshiftedLandmarks: unshiftedLandmarks,\r\n        alignedRect: alignedRect\r\n    };\r\n    return Object.assign({}, sourceObj, extension);\r\n}\r\n//# sourceMappingURL=WithFaceLandmarks.js.map","import { extractConvParamsFactory, extractSeparableConvParamsFactory, extractWeightsFactory } from '../common';\r\nimport { range } from '../utils';\r\nfunction extractorsFactory(extractWeights, paramMappings) {\r\n    var extractConvParams = extractConvParamsFactory(extractWeights, paramMappings);\r\n    var extractSeparableConvParams = extractSeparableConvParamsFactory(extractWeights, paramMappings);\r\n    function extractReductionBlockParams(channelsIn, channelsOut, mappedPrefix) {\r\n        var separable_conv0 = extractSeparableConvParams(channelsIn, channelsOut, mappedPrefix + \"/separable_conv0\");\r\n        var separable_conv1 = extractSeparableConvParams(channelsOut, channelsOut, mappedPrefix + \"/separable_conv1\");\r\n        var expansion_conv = extractConvParams(channelsIn, channelsOut, 1, mappedPrefix + \"/expansion_conv\");\r\n        return { separable_conv0: separable_conv0, separable_conv1: separable_conv1, expansion_conv: expansion_conv };\r\n    }\r\n    function extractMainBlockParams(channels, mappedPrefix) {\r\n        var separable_conv0 = extractSeparableConvParams(channels, channels, mappedPrefix + \"/separable_conv0\");\r\n        var separable_conv1 = extractSeparableConvParams(channels, channels, mappedPrefix + \"/separable_conv1\");\r\n        var separable_conv2 = extractSeparableConvParams(channels, channels, mappedPrefix + \"/separable_conv2\");\r\n        return { separable_conv0: separable_conv0, separable_conv1: separable_conv1, separable_conv2: separable_conv2 };\r\n    }\r\n    return {\r\n        extractConvParams: extractConvParams,\r\n        extractSeparableConvParams: extractSeparableConvParams,\r\n        extractReductionBlockParams: extractReductionBlockParams,\r\n        extractMainBlockParams: extractMainBlockParams\r\n    };\r\n}\r\nexport function extractParams(weights, numMainBlocks) {\r\n    var paramMappings = [];\r\n    var _a = extractWeightsFactory(weights), extractWeights = _a.extractWeights, getRemainingWeights = _a.getRemainingWeights;\r\n    var _b = extractorsFactory(extractWeights, paramMappings), extractConvParams = _b.extractConvParams, extractSeparableConvParams = _b.extractSeparableConvParams, extractReductionBlockParams = _b.extractReductionBlockParams, extractMainBlockParams = _b.extractMainBlockParams;\r\n    var entry_flow_conv_in = extractConvParams(3, 32, 3, 'entry_flow/conv_in');\r\n    var entry_flow_reduction_block_0 = extractReductionBlockParams(32, 64, 'entry_flow/reduction_block_0');\r\n    var entry_flow_reduction_block_1 = extractReductionBlockParams(64, 128, 'entry_flow/reduction_block_1');\r\n    var entry_flow = {\r\n        conv_in: entry_flow_conv_in,\r\n        reduction_block_0: entry_flow_reduction_block_0,\r\n        reduction_block_1: entry_flow_reduction_block_1\r\n    };\r\n    var middle_flow = {};\r\n    range(numMainBlocks, 0, 1).forEach(function (idx) {\r\n        middle_flow[\"main_block_\" + idx] = extractMainBlockParams(128, \"middle_flow/main_block_\" + idx);\r\n    });\r\n    var exit_flow_reduction_block = extractReductionBlockParams(128, 256, 'exit_flow/reduction_block');\r\n    var exit_flow_separable_conv = extractSeparableConvParams(256, 512, 'exit_flow/separable_conv');\r\n    var exit_flow = {\r\n        reduction_block: exit_flow_reduction_block,\r\n        separable_conv: exit_flow_separable_conv\r\n    };\r\n    if (getRemainingWeights().length !== 0) {\r\n        throw new Error(\"weights remaing after extract: \" + getRemainingWeights().length);\r\n    }\r\n    return {\r\n        paramMappings: paramMappings,\r\n        params: { entry_flow: entry_flow, middle_flow: middle_flow, exit_flow: exit_flow }\r\n    };\r\n}\r\n//# sourceMappingURL=extractParams.js.map","import { disposeUnusedWeightTensors, extractWeightEntryFactory, loadSeparableConvParamsFactory, } from '../common';\r\nimport { loadConvParamsFactory } from '../common/loadConvParamsFactory';\r\nimport { range } from '../utils';\r\nfunction loadParamsFactory(weightMap, paramMappings) {\r\n    var extractWeightEntry = extractWeightEntryFactory(weightMap, paramMappings);\r\n    var extractConvParams = loadConvParamsFactory(extractWeightEntry);\r\n    var extractSeparableConvParams = loadSeparableConvParamsFactory(extractWeightEntry);\r\n    function extractReductionBlockParams(mappedPrefix) {\r\n        var separable_conv0 = extractSeparableConvParams(mappedPrefix + \"/separable_conv0\");\r\n        var separable_conv1 = extractSeparableConvParams(mappedPrefix + \"/separable_conv1\");\r\n        var expansion_conv = extractConvParams(mappedPrefix + \"/expansion_conv\");\r\n        return { separable_conv0: separable_conv0, separable_conv1: separable_conv1, expansion_conv: expansion_conv };\r\n    }\r\n    function extractMainBlockParams(mappedPrefix) {\r\n        var separable_conv0 = extractSeparableConvParams(mappedPrefix + \"/separable_conv0\");\r\n        var separable_conv1 = extractSeparableConvParams(mappedPrefix + \"/separable_conv1\");\r\n        var separable_conv2 = extractSeparableConvParams(mappedPrefix + \"/separable_conv2\");\r\n        return { separable_conv0: separable_conv0, separable_conv1: separable_conv1, separable_conv2: separable_conv2 };\r\n    }\r\n    return {\r\n        extractConvParams: extractConvParams,\r\n        extractSeparableConvParams: extractSeparableConvParams,\r\n        extractReductionBlockParams: extractReductionBlockParams,\r\n        extractMainBlockParams: extractMainBlockParams\r\n    };\r\n}\r\nexport function extractParamsFromWeigthMap(weightMap, numMainBlocks) {\r\n    var paramMappings = [];\r\n    var _a = loadParamsFactory(weightMap, paramMappings), extractConvParams = _a.extractConvParams, extractSeparableConvParams = _a.extractSeparableConvParams, extractReductionBlockParams = _a.extractReductionBlockParams, extractMainBlockParams = _a.extractMainBlockParams;\r\n    var entry_flow_conv_in = extractConvParams('entry_flow/conv_in');\r\n    var entry_flow_reduction_block_0 = extractReductionBlockParams('entry_flow/reduction_block_0');\r\n    var entry_flow_reduction_block_1 = extractReductionBlockParams('entry_flow/reduction_block_1');\r\n    var entry_flow = {\r\n        conv_in: entry_flow_conv_in,\r\n        reduction_block_0: entry_flow_reduction_block_0,\r\n        reduction_block_1: entry_flow_reduction_block_1\r\n    };\r\n    var middle_flow = {};\r\n    range(numMainBlocks, 0, 1).forEach(function (idx) {\r\n        middle_flow[\"main_block_\" + idx] = extractMainBlockParams(\"middle_flow/main_block_\" + idx);\r\n    });\r\n    var exit_flow_reduction_block = extractReductionBlockParams('exit_flow/reduction_block');\r\n    var exit_flow_separable_conv = extractSeparableConvParams('exit_flow/separable_conv');\r\n    var exit_flow = {\r\n        reduction_block: exit_flow_reduction_block,\r\n        separable_conv: exit_flow_separable_conv\r\n    };\r\n    disposeUnusedWeightTensors(weightMap, paramMappings);\r\n    return { params: { entry_flow: entry_flow, middle_flow: middle_flow, exit_flow: exit_flow }, paramMappings: paramMappings };\r\n}\r\n//# sourceMappingURL=extractParamsFromWeigthMap.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { depthwiseSeparableConv } from '../common';\r\nimport { toNetInput } from '../dom';\r\nimport { NeuralNetwork } from '../NeuralNetwork';\r\nimport { normalize } from '../ops';\r\nimport { range } from '../utils';\r\nimport { extractParams } from './extractParams';\r\nimport { extractParamsFromWeigthMap } from './extractParamsFromWeigthMap';\r\nfunction conv(x, params, stride) {\r\n    return tf.add(tf.conv2d(x, params.filters, stride, 'same'), params.bias);\r\n}\r\nfunction reductionBlock(x, params, isActivateInput) {\r\n    if (isActivateInput === void 0) { isActivateInput = true; }\r\n    var out = isActivateInput ? tf.relu(x) : x;\r\n    out = depthwiseSeparableConv(out, params.separable_conv0, [1, 1]);\r\n    out = depthwiseSeparableConv(tf.relu(out), params.separable_conv1, [1, 1]);\r\n    out = tf.maxPool(out, [3, 3], [2, 2], 'same');\r\n    out = tf.add(out, conv(x, params.expansion_conv, [2, 2]));\r\n    return out;\r\n}\r\nfunction mainBlock(x, params) {\r\n    var out = depthwiseSeparableConv(tf.relu(x), params.separable_conv0, [1, 1]);\r\n    out = depthwiseSeparableConv(tf.relu(out), params.separable_conv1, [1, 1]);\r\n    out = depthwiseSeparableConv(tf.relu(out), params.separable_conv2, [1, 1]);\r\n    out = tf.add(out, x);\r\n    return out;\r\n}\r\nvar TinyXception = /** @class */ (function (_super) {\r\n    __extends(TinyXception, _super);\r\n    function TinyXception(numMainBlocks) {\r\n        var _this = _super.call(this, 'TinyXception') || this;\r\n        _this._numMainBlocks = numMainBlocks;\r\n        return _this;\r\n    }\r\n    TinyXception.prototype.forwardInput = function (input) {\r\n        var _this = this;\r\n        var params = this.params;\r\n        if (!params) {\r\n            throw new Error('TinyXception - load model before inference');\r\n        }\r\n        return tf.tidy(function () {\r\n            var batchTensor = input.toBatchTensor(112, true);\r\n            var meanRgb = [122.782, 117.001, 104.298];\r\n            var normalized = normalize(batchTensor, meanRgb).div(tf.scalar(256));\r\n            var out = tf.relu(conv(normalized, params.entry_flow.conv_in, [2, 2]));\r\n            out = reductionBlock(out, params.entry_flow.reduction_block_0, false);\r\n            out = reductionBlock(out, params.entry_flow.reduction_block_1);\r\n            range(_this._numMainBlocks, 0, 1).forEach(function (idx) {\r\n                out = mainBlock(out, params.middle_flow[\"main_block_\" + idx]);\r\n            });\r\n            out = reductionBlock(out, params.exit_flow.reduction_block);\r\n            out = tf.relu(depthwiseSeparableConv(out, params.exit_flow.separable_conv, [1, 1]));\r\n            return out;\r\n        });\r\n    };\r\n    TinyXception.prototype.forward = function (input) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this.forwardInput;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    TinyXception.prototype.getDefaultModelName = function () {\r\n        return 'tiny_xception_model';\r\n    };\r\n    TinyXception.prototype.extractParamsFromWeigthMap = function (weightMap) {\r\n        return extractParamsFromWeigthMap(weightMap, this._numMainBlocks);\r\n    };\r\n    TinyXception.prototype.extractParams = function (weights) {\r\n        return extractParams(weights, this._numMainBlocks);\r\n    };\r\n    return TinyXception;\r\n}(NeuralNetwork));\r\nexport { TinyXception };\r\n//# sourceMappingURL=TinyXception.js.map","export var Gender;\r\n(function (Gender) {\r\n    Gender[\"FEMALE\"] = \"female\";\r\n    Gender[\"MALE\"] = \"male\";\r\n})(Gender || (Gender = {}));\r\n//# sourceMappingURL=types.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { fullyConnectedLayer } from '../common/fullyConnectedLayer';\r\nimport { seperateWeightMaps } from '../faceProcessor/util';\r\nimport { TinyXception } from '../xception/TinyXception';\r\nimport { extractParams } from './extractParams';\r\nimport { extractParamsFromWeigthMap } from './extractParamsFromWeigthMap';\r\nimport { Gender } from './types';\r\nimport { NeuralNetwork } from '../NeuralNetwork';\r\nimport { NetInput, toNetInput } from '../dom';\r\nvar AgeGenderNet = /** @class */ (function (_super) {\r\n    __extends(AgeGenderNet, _super);\r\n    function AgeGenderNet(faceFeatureExtractor) {\r\n        if (faceFeatureExtractor === void 0) { faceFeatureExtractor = new TinyXception(2); }\r\n        var _this = _super.call(this, 'AgeGenderNet') || this;\r\n        _this._faceFeatureExtractor = faceFeatureExtractor;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(AgeGenderNet.prototype, \"faceFeatureExtractor\", {\r\n        get: function () {\r\n            return this._faceFeatureExtractor;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AgeGenderNet.prototype.runNet = function (input) {\r\n        var _this = this;\r\n        var params = this.params;\r\n        if (!params) {\r\n            throw new Error(this._name + \" - load model before inference\");\r\n        }\r\n        return tf.tidy(function () {\r\n            var bottleneckFeatures = input instanceof NetInput\r\n                ? _this.faceFeatureExtractor.forwardInput(input)\r\n                : input;\r\n            var pooled = tf.avgPool(bottleneckFeatures, [7, 7], [2, 2], 'valid').as2D(bottleneckFeatures.shape[0], -1);\r\n            var age = fullyConnectedLayer(pooled, params.fc.age).as1D();\r\n            var gender = fullyConnectedLayer(pooled, params.fc.gender);\r\n            return { age: age, gender: gender };\r\n        });\r\n    };\r\n    AgeGenderNet.prototype.forwardInput = function (input) {\r\n        var _this = this;\r\n        return tf.tidy(function () {\r\n            var _a = _this.runNet(input), age = _a.age, gender = _a.gender;\r\n            return { age: age, gender: tf.softmax(gender) };\r\n        });\r\n    };\r\n    AgeGenderNet.prototype.forward = function (input) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this.forwardInput;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AgeGenderNet.prototype.predictAgeAndGender = function (input) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var netInput, out, ages, genders, ageAndGenderTensors, predictionsByBatch;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, toNetInput(input)];\r\n                    case 1:\r\n                        netInput = _a.sent();\r\n                        return [4 /*yield*/, this.forwardInput(netInput)];\r\n                    case 2:\r\n                        out = _a.sent();\r\n                        ages = tf.unstack(out.age);\r\n                        genders = tf.unstack(out.gender);\r\n                        ageAndGenderTensors = ages.map(function (ageTensor, i) { return ({\r\n                            ageTensor: ageTensor,\r\n                            genderTensor: genders[i]\r\n                        }); });\r\n                        return [4 /*yield*/, Promise.all(ageAndGenderTensors.map(function (_a) {\r\n                                var ageTensor = _a.ageTensor, genderTensor = _a.genderTensor;\r\n                                return __awaiter(_this, void 0, void 0, function () {\r\n                                    var age, probMale, isMale, gender, genderProbability;\r\n                                    return __generator(this, function (_b) {\r\n                                        switch (_b.label) {\r\n                                            case 0: return [4 /*yield*/, ageTensor.data()];\r\n                                            case 1:\r\n                                                age = (_b.sent())[0];\r\n                                                return [4 /*yield*/, genderTensor.data()];\r\n                                            case 2:\r\n                                                probMale = (_b.sent())[0];\r\n                                                isMale = probMale > 0.5;\r\n                                                gender = isMale ? Gender.MALE : Gender.FEMALE;\r\n                                                genderProbability = isMale ? probMale : (1 - probMale);\r\n                                                ageTensor.dispose();\r\n                                                genderTensor.dispose();\r\n                                                return [2 /*return*/, { age: age, gender: gender, genderProbability: genderProbability }];\r\n                                        }\r\n                                    });\r\n                                });\r\n                            }))];\r\n                    case 3:\r\n                        predictionsByBatch = _a.sent();\r\n                        out.age.dispose();\r\n                        out.gender.dispose();\r\n                        return [2 /*return*/, netInput.isBatchInput\r\n                                ? predictionsByBatch\r\n                                : predictionsByBatch[0]];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    AgeGenderNet.prototype.getDefaultModelName = function () {\r\n        return 'age_gender_model';\r\n    };\r\n    AgeGenderNet.prototype.dispose = function (throwOnRedispose) {\r\n        if (throwOnRedispose === void 0) { throwOnRedispose = true; }\r\n        this.faceFeatureExtractor.dispose(throwOnRedispose);\r\n        _super.prototype.dispose.call(this, throwOnRedispose);\r\n    };\r\n    AgeGenderNet.prototype.loadClassifierParams = function (weights) {\r\n        var _a = this.extractClassifierParams(weights), params = _a.params, paramMappings = _a.paramMappings;\r\n        this._params = params;\r\n        this._paramMappings = paramMappings;\r\n    };\r\n    AgeGenderNet.prototype.extractClassifierParams = function (weights) {\r\n        return extractParams(weights);\r\n    };\r\n    AgeGenderNet.prototype.extractParamsFromWeigthMap = function (weightMap) {\r\n        var _a = seperateWeightMaps(weightMap), featureExtractorMap = _a.featureExtractorMap, classifierMap = _a.classifierMap;\r\n        this.faceFeatureExtractor.loadFromWeightMap(featureExtractorMap);\r\n        return extractParamsFromWeigthMap(classifierMap);\r\n    };\r\n    AgeGenderNet.prototype.extractParams = function (weights) {\r\n        var classifierWeightSize = (512 * 1 + 1) + (512 * 2 + 2);\r\n        var featureExtractorWeights = weights.slice(0, weights.length - classifierWeightSize);\r\n        var classifierWeights = weights.slice(weights.length - classifierWeightSize);\r\n        this.faceFeatureExtractor.extractWeights(featureExtractorWeights);\r\n        return this.extractClassifierParams(classifierWeights);\r\n    };\r\n    return AgeGenderNet;\r\n}(NeuralNetwork));\r\nexport { AgeGenderNet };\r\n//# sourceMappingURL=AgeGenderNet.js.map","import { extractFCParamsFactory, extractWeightsFactory } from '../common';\r\nexport function extractParams(weights) {\r\n    var paramMappings = [];\r\n    var _a = extractWeightsFactory(weights), extractWeights = _a.extractWeights, getRemainingWeights = _a.getRemainingWeights;\r\n    var extractFCParams = extractFCParamsFactory(extractWeights, paramMappings);\r\n    var age = extractFCParams(512, 1, 'fc/age');\r\n    var gender = extractFCParams(512, 2, 'fc/gender');\r\n    if (getRemainingWeights().length !== 0) {\r\n        throw new Error(\"weights remaing after extract: \" + getRemainingWeights().length);\r\n    }\r\n    return {\r\n        paramMappings: paramMappings,\r\n        params: { fc: { age: age, gender: gender } }\r\n    };\r\n}\r\n//# sourceMappingURL=extractParams.js.map","import { disposeUnusedWeightTensors, extractWeightEntryFactory } from '../common';\r\nexport function extractParamsFromWeigthMap(weightMap) {\r\n    var paramMappings = [];\r\n    var extractWeightEntry = extractWeightEntryFactory(weightMap, paramMappings);\r\n    function extractFcParams(prefix) {\r\n        var weights = extractWeightEntry(prefix + \"/weights\", 2);\r\n        var bias = extractWeightEntry(prefix + \"/bias\", 1);\r\n        return { weights: weights, bias: bias };\r\n    }\r\n    var params = {\r\n        fc: {\r\n            age: extractFcParams('fc/age'),\r\n            gender: extractFcParams('fc/gender')\r\n        }\r\n    };\r\n    disposeUnusedWeightTensors(weightMap, paramMappings);\r\n    return { params: params, paramMappings: paramMappings };\r\n}\r\n//# sourceMappingURL=extractParamsFromWeigthMap.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { Point } from '../classes';\r\nimport { FaceLandmarks68 } from '../classes/FaceLandmarks68';\r\nimport { toNetInput } from '../dom';\r\nimport { FaceProcessor } from '../faceProcessor/FaceProcessor';\r\nimport { isEven } from '../utils';\r\nvar FaceLandmark68NetBase = /** @class */ (function (_super) {\r\n    __extends(FaceLandmark68NetBase, _super);\r\n    function FaceLandmark68NetBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    FaceLandmark68NetBase.prototype.postProcess = function (output, inputSize, originalDimensions) {\r\n        var inputDimensions = originalDimensions.map(function (_a) {\r\n            var width = _a.width, height = _a.height;\r\n            var scale = inputSize / Math.max(height, width);\r\n            return {\r\n                width: width * scale,\r\n                height: height * scale\r\n            };\r\n        });\r\n        var batchSize = inputDimensions.length;\r\n        return tf.tidy(function () {\r\n            var createInterleavedTensor = function (fillX, fillY) {\r\n                return tf.stack([\r\n                    tf.fill([68], fillX),\r\n                    tf.fill([68], fillY)\r\n                ], 1).as2D(1, 136).as1D();\r\n            };\r\n            var getPadding = function (batchIdx, cond) {\r\n                var _a = inputDimensions[batchIdx], width = _a.width, height = _a.height;\r\n                return cond(width, height) ? Math.abs(width - height) / 2 : 0;\r\n            };\r\n            var getPaddingX = function (batchIdx) { return getPadding(batchIdx, function (w, h) { return w < h; }); };\r\n            var getPaddingY = function (batchIdx) { return getPadding(batchIdx, function (w, h) { return h < w; }); };\r\n            var landmarkTensors = output\r\n                .mul(tf.fill([batchSize, 136], inputSize))\r\n                .sub(tf.stack(Array.from(Array(batchSize), function (_, batchIdx) {\r\n                return createInterleavedTensor(getPaddingX(batchIdx), getPaddingY(batchIdx));\r\n            })))\r\n                .div(tf.stack(Array.from(Array(batchSize), function (_, batchIdx) {\r\n                return createInterleavedTensor(inputDimensions[batchIdx].width, inputDimensions[batchIdx].height);\r\n            })));\r\n            return landmarkTensors;\r\n        });\r\n    };\r\n    FaceLandmark68NetBase.prototype.forwardInput = function (input) {\r\n        var _this = this;\r\n        return tf.tidy(function () {\r\n            var out = _this.runNet(input);\r\n            return _this.postProcess(out, input.inputSize, input.inputDimensions.map(function (_a) {\r\n                var height = _a[0], width = _a[1];\r\n                return ({ height: height, width: width });\r\n            }));\r\n        });\r\n    };\r\n    FaceLandmark68NetBase.prototype.forward = function (input) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this.forwardInput;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    FaceLandmark68NetBase.prototype.detectLandmarks = function (input) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var netInput, landmarkTensors, landmarksForBatch;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, toNetInput(input)];\r\n                    case 1:\r\n                        netInput = _a.sent();\r\n                        landmarkTensors = tf.tidy(function () { return tf.unstack(_this.forwardInput(netInput)); });\r\n                        return [4 /*yield*/, Promise.all(landmarkTensors.map(function (landmarkTensor, batchIdx) { return __awaiter(_this, void 0, void 0, function () {\r\n                                var landmarksArray, _a, _b, xCoords, yCoords;\r\n                                return __generator(this, function (_c) {\r\n                                    switch (_c.label) {\r\n                                        case 0:\r\n                                            _b = (_a = Array).from;\r\n                                            return [4 /*yield*/, landmarkTensor.data()];\r\n                                        case 1:\r\n                                            landmarksArray = _b.apply(_a, [_c.sent()]);\r\n                                            xCoords = landmarksArray.filter(function (_, i) { return isEven(i); });\r\n                                            yCoords = landmarksArray.filter(function (_, i) { return !isEven(i); });\r\n                                            return [2 /*return*/, new FaceLandmarks68(Array(68).fill(0).map(function (_, i) { return new Point(xCoords[i], yCoords[i]); }), {\r\n                                                    height: netInput.getInputHeight(batchIdx),\r\n                                                    width: netInput.getInputWidth(batchIdx),\r\n                                                })];\r\n                                    }\r\n                                });\r\n                            }); }))];\r\n                    case 2:\r\n                        landmarksForBatch = _a.sent();\r\n                        landmarkTensors.forEach(function (t) { return t.dispose(); });\r\n                        return [2 /*return*/, netInput.isBatchInput\r\n                                ? landmarksForBatch\r\n                                : landmarksForBatch[0]];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    FaceLandmark68NetBase.prototype.getClassifierChannelsOut = function () {\r\n        return 136;\r\n    };\r\n    return FaceLandmark68NetBase;\r\n}(FaceProcessor));\r\nexport { FaceLandmark68NetBase };\r\n//# sourceMappingURL=FaceLandmark68NetBase.js.map","import { __extends } from \"tslib\";\r\nimport { FaceFeatureExtractor } from '../faceFeatureExtractor/FaceFeatureExtractor';\r\nimport { FaceLandmark68NetBase } from './FaceLandmark68NetBase';\r\nvar FaceLandmark68Net = /** @class */ (function (_super) {\r\n    __extends(FaceLandmark68Net, _super);\r\n    function FaceLandmark68Net(faceFeatureExtractor) {\r\n        if (faceFeatureExtractor === void 0) { faceFeatureExtractor = new FaceFeatureExtractor(); }\r\n        return _super.call(this, 'FaceLandmark68Net', faceFeatureExtractor) || this;\r\n    }\r\n    FaceLandmark68Net.prototype.getDefaultModelName = function () {\r\n        return 'face_landmark_68_model';\r\n    };\r\n    FaceLandmark68Net.prototype.getClassifierChannelsIn = function () {\r\n        return 256;\r\n    };\r\n    return FaceLandmark68Net;\r\n}(FaceLandmark68NetBase));\r\nexport { FaceLandmark68Net };\r\n//# sourceMappingURL=FaceLandmark68Net.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { toNetInput } from '../dom';\r\nimport { NeuralNetwork } from '../NeuralNetwork';\r\nimport { normalize } from '../ops';\r\nimport { denseBlock3 } from './denseBlock';\r\nimport { extractParamsFromWeigthMapTiny } from './extractParamsFromWeigthMapTiny';\r\nimport { extractParamsTiny } from './extractParamsTiny';\r\nvar TinyFaceFeatureExtractor = /** @class */ (function (_super) {\r\n    __extends(TinyFaceFeatureExtractor, _super);\r\n    function TinyFaceFeatureExtractor() {\r\n        return _super.call(this, 'TinyFaceFeatureExtractor') || this;\r\n    }\r\n    TinyFaceFeatureExtractor.prototype.forwardInput = function (input) {\r\n        var params = this.params;\r\n        if (!params) {\r\n            throw new Error('TinyFaceFeatureExtractor - load model before inference');\r\n        }\r\n        return tf.tidy(function () {\r\n            var batchTensor = input.toBatchTensor(112, true);\r\n            var meanRgb = [122.782, 117.001, 104.298];\r\n            var normalized = normalize(batchTensor, meanRgb).div(tf.scalar(255));\r\n            var out = denseBlock3(normalized, params.dense0, true);\r\n            out = denseBlock3(out, params.dense1);\r\n            out = denseBlock3(out, params.dense2);\r\n            out = tf.avgPool(out, [14, 14], [2, 2], 'valid');\r\n            return out;\r\n        });\r\n    };\r\n    TinyFaceFeatureExtractor.prototype.forward = function (input) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this.forwardInput;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    TinyFaceFeatureExtractor.prototype.getDefaultModelName = function () {\r\n        return 'face_feature_extractor_tiny_model';\r\n    };\r\n    TinyFaceFeatureExtractor.prototype.extractParamsFromWeigthMap = function (weightMap) {\r\n        return extractParamsFromWeigthMapTiny(weightMap);\r\n    };\r\n    TinyFaceFeatureExtractor.prototype.extractParams = function (weights) {\r\n        return extractParamsTiny(weights);\r\n    };\r\n    return TinyFaceFeatureExtractor;\r\n}(NeuralNetwork));\r\nexport { TinyFaceFeatureExtractor };\r\n//# sourceMappingURL=TinyFaceFeatureExtractor.js.map","import { disposeUnusedWeightTensors } from '../common';\r\nimport { loadParamsFactory } from './loadParamsFactory';\r\nexport function extractParamsFromWeigthMapTiny(weightMap) {\r\n    var paramMappings = [];\r\n    var extractDenseBlock3Params = loadParamsFactory(weightMap, paramMappings).extractDenseBlock3Params;\r\n    var params = {\r\n        dense0: extractDenseBlock3Params('dense0', true),\r\n        dense1: extractDenseBlock3Params('dense1'),\r\n        dense2: extractDenseBlock3Params('dense2')\r\n    };\r\n    disposeUnusedWeightTensors(weightMap, paramMappings);\r\n    return { params: params, paramMappings: paramMappings };\r\n}\r\n//# sourceMappingURL=extractParamsFromWeigthMapTiny.js.map","import { extractWeightsFactory } from '../common';\r\nimport { extractorsFactory } from './extractorsFactory';\r\nexport function extractParamsTiny(weights) {\r\n    var paramMappings = [];\r\n    var _a = extractWeightsFactory(weights), extractWeights = _a.extractWeights, getRemainingWeights = _a.getRemainingWeights;\r\n    var extractDenseBlock3Params = extractorsFactory(extractWeights, paramMappings).extractDenseBlock3Params;\r\n    var dense0 = extractDenseBlock3Params(3, 32, 'dense0', true);\r\n    var dense1 = extractDenseBlock3Params(32, 64, 'dense1');\r\n    var dense2 = extractDenseBlock3Params(64, 128, 'dense2');\r\n    if (getRemainingWeights().length !== 0) {\r\n        throw new Error(\"weights remaing after extract: \" + getRemainingWeights().length);\r\n    }\r\n    return {\r\n        paramMappings: paramMappings,\r\n        params: { dense0: dense0, dense1: dense1, dense2: dense2 }\r\n    };\r\n}\r\n//# sourceMappingURL=extractParamsTiny.js.map","import { __extends } from \"tslib\";\r\nimport { TinyFaceFeatureExtractor } from '../faceFeatureExtractor/TinyFaceFeatureExtractor';\r\nimport { FaceLandmark68NetBase } from './FaceLandmark68NetBase';\r\nvar FaceLandmark68TinyNet = /** @class */ (function (_super) {\r\n    __extends(FaceLandmark68TinyNet, _super);\r\n    function FaceLandmark68TinyNet(faceFeatureExtractor) {\r\n        if (faceFeatureExtractor === void 0) { faceFeatureExtractor = new TinyFaceFeatureExtractor(); }\r\n        return _super.call(this, 'FaceLandmark68TinyNet', faceFeatureExtractor) || this;\r\n    }\r\n    FaceLandmark68TinyNet.prototype.getDefaultModelName = function () {\r\n        return 'face_landmark_68_tiny_model';\r\n    };\r\n    FaceLandmark68TinyNet.prototype.getClassifierChannelsIn = function () {\r\n        return 128;\r\n    };\r\n    return FaceLandmark68TinyNet;\r\n}(FaceLandmark68NetBase));\r\nexport { FaceLandmark68TinyNet };\r\n//# sourceMappingURL=FaceLandmark68TinyNet.js.map","import { __extends } from \"tslib\";\r\nimport { FaceLandmark68Net } from './FaceLandmark68Net';\r\nexport * from './FaceLandmark68Net';\r\nexport * from './FaceLandmark68TinyNet';\r\nvar FaceLandmarkNet = /** @class */ (function (_super) {\r\n    __extends(FaceLandmarkNet, _super);\r\n    function FaceLandmarkNet() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return FaceLandmarkNet;\r\n}(FaceLandmark68Net));\r\nexport { FaceLandmarkNet };\r\n//# sourceMappingURL=index.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { scale } from './scaleLayer';\r\nfunction convLayer(x, params, strides, withRelu, padding) {\r\n    if (padding === void 0) { padding = 'same'; }\r\n    var _a = params.conv, filters = _a.filters, bias = _a.bias;\r\n    var out = tf.conv2d(x, filters, strides, padding);\r\n    out = tf.add(out, bias);\r\n    out = scale(out, params.scale);\r\n    return withRelu ? tf.relu(out) : out;\r\n}\r\nexport function conv(x, params) {\r\n    return convLayer(x, params, [1, 1], true);\r\n}\r\nexport function convNoRelu(x, params) {\r\n    return convLayer(x, params, [1, 1], false);\r\n}\r\nexport function convDown(x, params) {\r\n    return convLayer(x, params, [2, 2], true, 'valid');\r\n}\r\n//# sourceMappingURL=convLayer.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nexport function scale(x, params) {\r\n    return tf.add(tf.mul(x, params.weights), params.biases);\r\n}\r\n//# sourceMappingURL=scaleLayer.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { extractWeightsFactory } from '../common';\r\nimport { isFloat } from '../utils';\r\nfunction extractorsFactory(extractWeights, paramMappings) {\r\n    function extractFilterValues(numFilterValues, numFilters, filterSize) {\r\n        var weights = extractWeights(numFilterValues);\r\n        var depth = weights.length / (numFilters * filterSize * filterSize);\r\n        if (isFloat(depth)) {\r\n            throw new Error(\"depth has to be an integer: \" + depth + \", weights.length: \" + weights.length + \", numFilters: \" + numFilters + \", filterSize: \" + filterSize);\r\n        }\r\n        return tf.tidy(function () { return tf.transpose(tf.tensor4d(weights, [numFilters, depth, filterSize, filterSize]), [2, 3, 1, 0]); });\r\n    }\r\n    function extractConvParams(numFilterValues, numFilters, filterSize, mappedPrefix) {\r\n        var filters = extractFilterValues(numFilterValues, numFilters, filterSize);\r\n        var bias = tf.tensor1d(extractWeights(numFilters));\r\n        paramMappings.push({ paramPath: mappedPrefix + \"/filters\" }, { paramPath: mappedPrefix + \"/bias\" });\r\n        return { filters: filters, bias: bias };\r\n    }\r\n    function extractScaleLayerParams(numWeights, mappedPrefix) {\r\n        var weights = tf.tensor1d(extractWeights(numWeights));\r\n        var biases = tf.tensor1d(extractWeights(numWeights));\r\n        paramMappings.push({ paramPath: mappedPrefix + \"/weights\" }, { paramPath: mappedPrefix + \"/biases\" });\r\n        return {\r\n            weights: weights,\r\n            biases: biases\r\n        };\r\n    }\r\n    function extractConvLayerParams(numFilterValues, numFilters, filterSize, mappedPrefix) {\r\n        var conv = extractConvParams(numFilterValues, numFilters, filterSize, mappedPrefix + \"/conv\");\r\n        var scale = extractScaleLayerParams(numFilters, mappedPrefix + \"/scale\");\r\n        return { conv: conv, scale: scale };\r\n    }\r\n    function extractResidualLayerParams(numFilterValues, numFilters, filterSize, mappedPrefix, isDown) {\r\n        if (isDown === void 0) { isDown = false; }\r\n        var conv1 = extractConvLayerParams((isDown ? 0.5 : 1) * numFilterValues, numFilters, filterSize, mappedPrefix + \"/conv1\");\r\n        var conv2 = extractConvLayerParams(numFilterValues, numFilters, filterSize, mappedPrefix + \"/conv2\");\r\n        return { conv1: conv1, conv2: conv2 };\r\n    }\r\n    return {\r\n        extractConvLayerParams: extractConvLayerParams,\r\n        extractResidualLayerParams: extractResidualLayerParams\r\n    };\r\n}\r\nexport function extractParams(weights) {\r\n    var _a = extractWeightsFactory(weights), extractWeights = _a.extractWeights, getRemainingWeights = _a.getRemainingWeights;\r\n    var paramMappings = [];\r\n    var _b = extractorsFactory(extractWeights, paramMappings), extractConvLayerParams = _b.extractConvLayerParams, extractResidualLayerParams = _b.extractResidualLayerParams;\r\n    var conv32_down = extractConvLayerParams(4704, 32, 7, 'conv32_down');\r\n    var conv32_1 = extractResidualLayerParams(9216, 32, 3, 'conv32_1');\r\n    var conv32_2 = extractResidualLayerParams(9216, 32, 3, 'conv32_2');\r\n    var conv32_3 = extractResidualLayerParams(9216, 32, 3, 'conv32_3');\r\n    var conv64_down = extractResidualLayerParams(36864, 64, 3, 'conv64_down', true);\r\n    var conv64_1 = extractResidualLayerParams(36864, 64, 3, 'conv64_1');\r\n    var conv64_2 = extractResidualLayerParams(36864, 64, 3, 'conv64_2');\r\n    var conv64_3 = extractResidualLayerParams(36864, 64, 3, 'conv64_3');\r\n    var conv128_down = extractResidualLayerParams(147456, 128, 3, 'conv128_down', true);\r\n    var conv128_1 = extractResidualLayerParams(147456, 128, 3, 'conv128_1');\r\n    var conv128_2 = extractResidualLayerParams(147456, 128, 3, 'conv128_2');\r\n    var conv256_down = extractResidualLayerParams(589824, 256, 3, 'conv256_down', true);\r\n    var conv256_1 = extractResidualLayerParams(589824, 256, 3, 'conv256_1');\r\n    var conv256_2 = extractResidualLayerParams(589824, 256, 3, 'conv256_2');\r\n    var conv256_down_out = extractResidualLayerParams(589824, 256, 3, 'conv256_down_out');\r\n    var fc = tf.tidy(function () { return tf.transpose(tf.tensor2d(extractWeights(256 * 128), [128, 256]), [1, 0]); });\r\n    paramMappings.push({ paramPath: \"fc\" });\r\n    if (getRemainingWeights().length !== 0) {\r\n        throw new Error(\"weights remaing after extract: \" + getRemainingWeights().length);\r\n    }\r\n    var params = {\r\n        conv32_down: conv32_down,\r\n        conv32_1: conv32_1,\r\n        conv32_2: conv32_2,\r\n        conv32_3: conv32_3,\r\n        conv64_down: conv64_down,\r\n        conv64_1: conv64_1,\r\n        conv64_2: conv64_2,\r\n        conv64_3: conv64_3,\r\n        conv128_down: conv128_down,\r\n        conv128_1: conv128_1,\r\n        conv128_2: conv128_2,\r\n        conv256_down: conv256_down,\r\n        conv256_1: conv256_1,\r\n        conv256_2: conv256_2,\r\n        conv256_down_out: conv256_down_out,\r\n        fc: fc\r\n    };\r\n    return { params: params, paramMappings: paramMappings };\r\n}\r\n//# sourceMappingURL=extractParams.js.map","import { disposeUnusedWeightTensors, extractWeightEntryFactory } from '../common';\r\nimport { isTensor2D } from '../utils';\r\nfunction extractorsFactory(weightMap, paramMappings) {\r\n    var extractWeightEntry = extractWeightEntryFactory(weightMap, paramMappings);\r\n    function extractScaleLayerParams(prefix) {\r\n        var weights = extractWeightEntry(prefix + \"/scale/weights\", 1);\r\n        var biases = extractWeightEntry(prefix + \"/scale/biases\", 1);\r\n        return { weights: weights, biases: biases };\r\n    }\r\n    function extractConvLayerParams(prefix) {\r\n        var filters = extractWeightEntry(prefix + \"/conv/filters\", 4);\r\n        var bias = extractWeightEntry(prefix + \"/conv/bias\", 1);\r\n        var scale = extractScaleLayerParams(prefix);\r\n        return { conv: { filters: filters, bias: bias }, scale: scale };\r\n    }\r\n    function extractResidualLayerParams(prefix) {\r\n        return {\r\n            conv1: extractConvLayerParams(prefix + \"/conv1\"),\r\n            conv2: extractConvLayerParams(prefix + \"/conv2\")\r\n        };\r\n    }\r\n    return {\r\n        extractConvLayerParams: extractConvLayerParams,\r\n        extractResidualLayerParams: extractResidualLayerParams\r\n    };\r\n}\r\nexport function extractParamsFromWeigthMap(weightMap) {\r\n    var paramMappings = [];\r\n    var _a = extractorsFactory(weightMap, paramMappings), extractConvLayerParams = _a.extractConvLayerParams, extractResidualLayerParams = _a.extractResidualLayerParams;\r\n    var conv32_down = extractConvLayerParams('conv32_down');\r\n    var conv32_1 = extractResidualLayerParams('conv32_1');\r\n    var conv32_2 = extractResidualLayerParams('conv32_2');\r\n    var conv32_3 = extractResidualLayerParams('conv32_3');\r\n    var conv64_down = extractResidualLayerParams('conv64_down');\r\n    var conv64_1 = extractResidualLayerParams('conv64_1');\r\n    var conv64_2 = extractResidualLayerParams('conv64_2');\r\n    var conv64_3 = extractResidualLayerParams('conv64_3');\r\n    var conv128_down = extractResidualLayerParams('conv128_down');\r\n    var conv128_1 = extractResidualLayerParams('conv128_1');\r\n    var conv128_2 = extractResidualLayerParams('conv128_2');\r\n    var conv256_down = extractResidualLayerParams('conv256_down');\r\n    var conv256_1 = extractResidualLayerParams('conv256_1');\r\n    var conv256_2 = extractResidualLayerParams('conv256_2');\r\n    var conv256_down_out = extractResidualLayerParams('conv256_down_out');\r\n    var fc = weightMap['fc'];\r\n    paramMappings.push({ originalPath: 'fc', paramPath: 'fc' });\r\n    if (!isTensor2D(fc)) {\r\n        throw new Error(\"expected weightMap[fc] to be a Tensor2D, instead have \" + fc);\r\n    }\r\n    var params = {\r\n        conv32_down: conv32_down,\r\n        conv32_1: conv32_1,\r\n        conv32_2: conv32_2,\r\n        conv32_3: conv32_3,\r\n        conv64_down: conv64_down,\r\n        conv64_1: conv64_1,\r\n        conv64_2: conv64_2,\r\n        conv64_3: conv64_3,\r\n        conv128_down: conv128_down,\r\n        conv128_1: conv128_1,\r\n        conv128_2: conv128_2,\r\n        conv256_down: conv256_down,\r\n        conv256_1: conv256_1,\r\n        conv256_2: conv256_2,\r\n        conv256_down_out: conv256_down_out,\r\n        fc: fc\r\n    };\r\n    disposeUnusedWeightTensors(weightMap, paramMappings);\r\n    return { params: params, paramMappings: paramMappings };\r\n}\r\n//# sourceMappingURL=extractParamsFromWeigthMap.js.map","import { __spreadArrays } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { conv, convDown, convNoRelu } from './convLayer';\r\nexport function residual(x, params) {\r\n    var out = conv(x, params.conv1);\r\n    out = convNoRelu(out, params.conv2);\r\n    out = tf.add(out, x);\r\n    out = tf.relu(out);\r\n    return out;\r\n}\r\nexport function residualDown(x, params) {\r\n    var out = convDown(x, params.conv1);\r\n    out = convNoRelu(out, params.conv2);\r\n    var pooled = tf.avgPool(x, 2, 2, 'valid');\r\n    var zeros = tf.zeros(pooled.shape);\r\n    var isPad = pooled.shape[3] !== out.shape[3];\r\n    var isAdjustShape = pooled.shape[1] !== out.shape[1] || pooled.shape[2] !== out.shape[2];\r\n    if (isAdjustShape) {\r\n        var padShapeX = __spreadArrays(out.shape);\r\n        padShapeX[1] = 1;\r\n        var zerosW = tf.zeros(padShapeX);\r\n        out = tf.concat([out, zerosW], 1);\r\n        var padShapeY = __spreadArrays(out.shape);\r\n        padShapeY[2] = 1;\r\n        var zerosH = tf.zeros(padShapeY);\r\n        out = tf.concat([out, zerosH], 2);\r\n    }\r\n    pooled = isPad ? tf.concat([pooled, zeros], 3) : pooled;\r\n    out = tf.add(pooled, out);\r\n    out = tf.relu(out);\r\n    return out;\r\n}\r\n//# sourceMappingURL=residualLayer.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { toNetInput } from '../dom';\r\nimport { NeuralNetwork } from '../NeuralNetwork';\r\nimport { normalize } from '../ops';\r\nimport { convDown } from './convLayer';\r\nimport { extractParams } from './extractParams';\r\nimport { extractParamsFromWeigthMap } from './extractParamsFromWeigthMap';\r\nimport { residual, residualDown } from './residualLayer';\r\nvar FaceRecognitionNet = /** @class */ (function (_super) {\r\n    __extends(FaceRecognitionNet, _super);\r\n    function FaceRecognitionNet() {\r\n        return _super.call(this, 'FaceRecognitionNet') || this;\r\n    }\r\n    FaceRecognitionNet.prototype.forwardInput = function (input) {\r\n        var params = this.params;\r\n        if (!params) {\r\n            throw new Error('FaceRecognitionNet - load model before inference');\r\n        }\r\n        return tf.tidy(function () {\r\n            var batchTensor = input.toBatchTensor(150, true).toFloat();\r\n            var meanRgb = [122.782, 117.001, 104.298];\r\n            var normalized = normalize(batchTensor, meanRgb).div(tf.scalar(256));\r\n            var out = convDown(normalized, params.conv32_down);\r\n            out = tf.maxPool(out, 3, 2, 'valid');\r\n            out = residual(out, params.conv32_1);\r\n            out = residual(out, params.conv32_2);\r\n            out = residual(out, params.conv32_3);\r\n            out = residualDown(out, params.conv64_down);\r\n            out = residual(out, params.conv64_1);\r\n            out = residual(out, params.conv64_2);\r\n            out = residual(out, params.conv64_3);\r\n            out = residualDown(out, params.conv128_down);\r\n            out = residual(out, params.conv128_1);\r\n            out = residual(out, params.conv128_2);\r\n            out = residualDown(out, params.conv256_down);\r\n            out = residual(out, params.conv256_1);\r\n            out = residual(out, params.conv256_2);\r\n            out = residualDown(out, params.conv256_down_out);\r\n            var globalAvg = out.mean([1, 2]);\r\n            var fullyConnected = tf.matMul(globalAvg, params.fc);\r\n            return fullyConnected;\r\n        });\r\n    };\r\n    FaceRecognitionNet.prototype.forward = function (input) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this.forwardInput;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    FaceRecognitionNet.prototype.computeFaceDescriptor = function (input) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var netInput, faceDescriptorTensors, faceDescriptorsForBatch;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, toNetInput(input)];\r\n                    case 1:\r\n                        netInput = _a.sent();\r\n                        faceDescriptorTensors = tf.tidy(function () { return tf.unstack(_this.forwardInput(netInput)); });\r\n                        return [4 /*yield*/, Promise.all(faceDescriptorTensors.map(function (t) { return t.data(); }))];\r\n                    case 2:\r\n                        faceDescriptorsForBatch = _a.sent();\r\n                        faceDescriptorTensors.forEach(function (t) { return t.dispose(); });\r\n                        return [2 /*return*/, netInput.isBatchInput\r\n                                ? faceDescriptorsForBatch\r\n                                : faceDescriptorsForBatch[0]];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    FaceRecognitionNet.prototype.getDefaultModelName = function () {\r\n        return 'face_recognition_model';\r\n    };\r\n    FaceRecognitionNet.prototype.extractParamsFromWeigthMap = function (weightMap) {\r\n        return extractParamsFromWeigthMap(weightMap);\r\n    };\r\n    FaceRecognitionNet.prototype.extractParams = function (weights) {\r\n        return extractParams(weights);\r\n    };\r\n    return FaceRecognitionNet;\r\n}(NeuralNetwork));\r\nexport { FaceRecognitionNet };\r\n//# sourceMappingURL=FaceRecognitionNet.js.map","export function extendWithFaceDescriptor(sourceObj, descriptor) {\r\n    var extension = { descriptor: descriptor };\r\n    return Object.assign({}, sourceObj, extension);\r\n}\r\n//# sourceMappingURL=WithFaceDescriptor.js.map","export function isWithAge(obj) {\r\n    return typeof obj['age'] === 'number';\r\n}\r\nexport function extendWithAge(sourceObj, age) {\r\n    var extension = { age: age };\r\n    return Object.assign({}, sourceObj, extension);\r\n}\r\n//# sourceMappingURL=WithAge.js.map","import { Gender } from '../ageGenderNet/types';\r\nimport { isValidProbablitiy } from '../utils';\r\nexport function isWithGender(obj) {\r\n    return (obj['gender'] === Gender.MALE || obj['gender'] === Gender.FEMALE)\r\n        && isValidProbablitiy(obj['genderProbability']);\r\n}\r\nexport function extendWithGender(sourceObj, gender, genderProbability) {\r\n    var extension = { gender: gender, genderProbability: genderProbability };\r\n    return Object.assign({}, sourceObj, extension);\r\n}\r\n//# sourceMappingURL=WithGender.js.map","var MtcnnOptions = /** @class */ (function () {\r\n    function MtcnnOptions(_a) {\r\n        var _b = _a === void 0 ? {} : _a, minFaceSize = _b.minFaceSize, scaleFactor = _b.scaleFactor, maxNumScales = _b.maxNumScales, scoreThresholds = _b.scoreThresholds, scaleSteps = _b.scaleSteps;\r\n        this._name = 'MtcnnOptions';\r\n        this._minFaceSize = minFaceSize || 20;\r\n        this._scaleFactor = scaleFactor || 0.709;\r\n        this._maxNumScales = maxNumScales || 10;\r\n        this._scoreThresholds = scoreThresholds || [0.6, 0.7, 0.7];\r\n        this._scaleSteps = scaleSteps;\r\n        if (typeof this._minFaceSize !== 'number' || this._minFaceSize < 0) {\r\n            throw new Error(this._name + \" - expected minFaceSize to be a number > 0\");\r\n        }\r\n        if (typeof this._scaleFactor !== 'number' || this._scaleFactor <= 0 || this._scaleFactor >= 1) {\r\n            throw new Error(this._name + \" - expected scaleFactor to be a number between 0 and 1\");\r\n        }\r\n        if (typeof this._maxNumScales !== 'number' || this._maxNumScales < 0) {\r\n            throw new Error(this._name + \" - expected maxNumScales to be a number > 0\");\r\n        }\r\n        if (!Array.isArray(this._scoreThresholds)\r\n            || this._scoreThresholds.length !== 3\r\n            || this._scoreThresholds.some(function (th) { return typeof th !== 'number'; })) {\r\n            throw new Error(this._name + \" - expected scoreThresholds to be an array of numbers of length 3\");\r\n        }\r\n        if (this._scaleSteps\r\n            && (!Array.isArray(this._scaleSteps) || this._scaleSteps.some(function (th) { return typeof th !== 'number'; }))) {\r\n            throw new Error(this._name + \" - expected scaleSteps to be an array of numbers\");\r\n        }\r\n    }\r\n    Object.defineProperty(MtcnnOptions.prototype, \"minFaceSize\", {\r\n        get: function () { return this._minFaceSize; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MtcnnOptions.prototype, \"scaleFactor\", {\r\n        get: function () { return this._scaleFactor; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MtcnnOptions.prototype, \"maxNumScales\", {\r\n        get: function () { return this._maxNumScales; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MtcnnOptions.prototype, \"scoreThresholds\", {\r\n        get: function () { return this._scoreThresholds; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MtcnnOptions.prototype, \"scaleSteps\", {\r\n        get: function () { return this._scaleSteps; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return MtcnnOptions;\r\n}());\r\nexport { MtcnnOptions };\r\n//# sourceMappingURL=MtcnnOptions.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { extractWeightsFactory } from '../common';\r\nfunction extractorsFactory(extractWeights, paramMappings) {\r\n    function extractDepthwiseConvParams(numChannels, mappedPrefix) {\r\n        var filters = tf.tensor4d(extractWeights(3 * 3 * numChannels), [3, 3, numChannels, 1]);\r\n        var batch_norm_scale = tf.tensor1d(extractWeights(numChannels));\r\n        var batch_norm_offset = tf.tensor1d(extractWeights(numChannels));\r\n        var batch_norm_mean = tf.tensor1d(extractWeights(numChannels));\r\n        var batch_norm_variance = tf.tensor1d(extractWeights(numChannels));\r\n        paramMappings.push({ paramPath: mappedPrefix + \"/filters\" }, { paramPath: mappedPrefix + \"/batch_norm_scale\" }, { paramPath: mappedPrefix + \"/batch_norm_offset\" }, { paramPath: mappedPrefix + \"/batch_norm_mean\" }, { paramPath: mappedPrefix + \"/batch_norm_variance\" });\r\n        return {\r\n            filters: filters,\r\n            batch_norm_scale: batch_norm_scale,\r\n            batch_norm_offset: batch_norm_offset,\r\n            batch_norm_mean: batch_norm_mean,\r\n            batch_norm_variance: batch_norm_variance\r\n        };\r\n    }\r\n    function extractConvParams(channelsIn, channelsOut, filterSize, mappedPrefix, isPointwiseConv) {\r\n        var filters = tf.tensor4d(extractWeights(channelsIn * channelsOut * filterSize * filterSize), [filterSize, filterSize, channelsIn, channelsOut]);\r\n        var bias = tf.tensor1d(extractWeights(channelsOut));\r\n        paramMappings.push({ paramPath: mappedPrefix + \"/filters\" }, { paramPath: mappedPrefix + \"/\" + (isPointwiseConv ? 'batch_norm_offset' : 'bias') });\r\n        return { filters: filters, bias: bias };\r\n    }\r\n    function extractPointwiseConvParams(channelsIn, channelsOut, filterSize, mappedPrefix) {\r\n        var _a = extractConvParams(channelsIn, channelsOut, filterSize, mappedPrefix, true), filters = _a.filters, bias = _a.bias;\r\n        return {\r\n            filters: filters,\r\n            batch_norm_offset: bias\r\n        };\r\n    }\r\n    function extractConvPairParams(channelsIn, channelsOut, mappedPrefix) {\r\n        var depthwise_conv = extractDepthwiseConvParams(channelsIn, mappedPrefix + \"/depthwise_conv\");\r\n        var pointwise_conv = extractPointwiseConvParams(channelsIn, channelsOut, 1, mappedPrefix + \"/pointwise_conv\");\r\n        return { depthwise_conv: depthwise_conv, pointwise_conv: pointwise_conv };\r\n    }\r\n    function extractMobilenetV1Params() {\r\n        var conv_0 = extractPointwiseConvParams(3, 32, 3, 'mobilenetv1/conv_0');\r\n        var conv_1 = extractConvPairParams(32, 64, 'mobilenetv1/conv_1');\r\n        var conv_2 = extractConvPairParams(64, 128, 'mobilenetv1/conv_2');\r\n        var conv_3 = extractConvPairParams(128, 128, 'mobilenetv1/conv_3');\r\n        var conv_4 = extractConvPairParams(128, 256, 'mobilenetv1/conv_4');\r\n        var conv_5 = extractConvPairParams(256, 256, 'mobilenetv1/conv_5');\r\n        var conv_6 = extractConvPairParams(256, 512, 'mobilenetv1/conv_6');\r\n        var conv_7 = extractConvPairParams(512, 512, 'mobilenetv1/conv_7');\r\n        var conv_8 = extractConvPairParams(512, 512, 'mobilenetv1/conv_8');\r\n        var conv_9 = extractConvPairParams(512, 512, 'mobilenetv1/conv_9');\r\n        var conv_10 = extractConvPairParams(512, 512, 'mobilenetv1/conv_10');\r\n        var conv_11 = extractConvPairParams(512, 512, 'mobilenetv1/conv_11');\r\n        var conv_12 = extractConvPairParams(512, 1024, 'mobilenetv1/conv_12');\r\n        var conv_13 = extractConvPairParams(1024, 1024, 'mobilenetv1/conv_13');\r\n        return {\r\n            conv_0: conv_0,\r\n            conv_1: conv_1,\r\n            conv_2: conv_2,\r\n            conv_3: conv_3,\r\n            conv_4: conv_4,\r\n            conv_5: conv_5,\r\n            conv_6: conv_6,\r\n            conv_7: conv_7,\r\n            conv_8: conv_8,\r\n            conv_9: conv_9,\r\n            conv_10: conv_10,\r\n            conv_11: conv_11,\r\n            conv_12: conv_12,\r\n            conv_13: conv_13\r\n        };\r\n    }\r\n    function extractPredictionLayerParams() {\r\n        var conv_0 = extractPointwiseConvParams(1024, 256, 1, 'prediction_layer/conv_0');\r\n        var conv_1 = extractPointwiseConvParams(256, 512, 3, 'prediction_layer/conv_1');\r\n        var conv_2 = extractPointwiseConvParams(512, 128, 1, 'prediction_layer/conv_2');\r\n        var conv_3 = extractPointwiseConvParams(128, 256, 3, 'prediction_layer/conv_3');\r\n        var conv_4 = extractPointwiseConvParams(256, 128, 1, 'prediction_layer/conv_4');\r\n        var conv_5 = extractPointwiseConvParams(128, 256, 3, 'prediction_layer/conv_5');\r\n        var conv_6 = extractPointwiseConvParams(256, 64, 1, 'prediction_layer/conv_6');\r\n        var conv_7 = extractPointwiseConvParams(64, 128, 3, 'prediction_layer/conv_7');\r\n        var box_encoding_0_predictor = extractConvParams(512, 12, 1, 'prediction_layer/box_predictor_0/box_encoding_predictor');\r\n        var class_predictor_0 = extractConvParams(512, 9, 1, 'prediction_layer/box_predictor_0/class_predictor');\r\n        var box_encoding_1_predictor = extractConvParams(1024, 24, 1, 'prediction_layer/box_predictor_1/box_encoding_predictor');\r\n        var class_predictor_1 = extractConvParams(1024, 18, 1, 'prediction_layer/box_predictor_1/class_predictor');\r\n        var box_encoding_2_predictor = extractConvParams(512, 24, 1, 'prediction_layer/box_predictor_2/box_encoding_predictor');\r\n        var class_predictor_2 = extractConvParams(512, 18, 1, 'prediction_layer/box_predictor_2/class_predictor');\r\n        var box_encoding_3_predictor = extractConvParams(256, 24, 1, 'prediction_layer/box_predictor_3/box_encoding_predictor');\r\n        var class_predictor_3 = extractConvParams(256, 18, 1, 'prediction_layer/box_predictor_3/class_predictor');\r\n        var box_encoding_4_predictor = extractConvParams(256, 24, 1, 'prediction_layer/box_predictor_4/box_encoding_predictor');\r\n        var class_predictor_4 = extractConvParams(256, 18, 1, 'prediction_layer/box_predictor_4/class_predictor');\r\n        var box_encoding_5_predictor = extractConvParams(128, 24, 1, 'prediction_layer/box_predictor_5/box_encoding_predictor');\r\n        var class_predictor_5 = extractConvParams(128, 18, 1, 'prediction_layer/box_predictor_5/class_predictor');\r\n        var box_predictor_0 = {\r\n            box_encoding_predictor: box_encoding_0_predictor,\r\n            class_predictor: class_predictor_0\r\n        };\r\n        var box_predictor_1 = {\r\n            box_encoding_predictor: box_encoding_1_predictor,\r\n            class_predictor: class_predictor_1\r\n        };\r\n        var box_predictor_2 = {\r\n            box_encoding_predictor: box_encoding_2_predictor,\r\n            class_predictor: class_predictor_2\r\n        };\r\n        var box_predictor_3 = {\r\n            box_encoding_predictor: box_encoding_3_predictor,\r\n            class_predictor: class_predictor_3\r\n        };\r\n        var box_predictor_4 = {\r\n            box_encoding_predictor: box_encoding_4_predictor,\r\n            class_predictor: class_predictor_4\r\n        };\r\n        var box_predictor_5 = {\r\n            box_encoding_predictor: box_encoding_5_predictor,\r\n            class_predictor: class_predictor_5\r\n        };\r\n        return {\r\n            conv_0: conv_0,\r\n            conv_1: conv_1,\r\n            conv_2: conv_2,\r\n            conv_3: conv_3,\r\n            conv_4: conv_4,\r\n            conv_5: conv_5,\r\n            conv_6: conv_6,\r\n            conv_7: conv_7,\r\n            box_predictor_0: box_predictor_0,\r\n            box_predictor_1: box_predictor_1,\r\n            box_predictor_2: box_predictor_2,\r\n            box_predictor_3: box_predictor_3,\r\n            box_predictor_4: box_predictor_4,\r\n            box_predictor_5: box_predictor_5\r\n        };\r\n    }\r\n    return {\r\n        extractMobilenetV1Params: extractMobilenetV1Params,\r\n        extractPredictionLayerParams: extractPredictionLayerParams\r\n    };\r\n}\r\nexport function extractParams(weights) {\r\n    var paramMappings = [];\r\n    var _a = extractWeightsFactory(weights), extractWeights = _a.extractWeights, getRemainingWeights = _a.getRemainingWeights;\r\n    var _b = extractorsFactory(extractWeights, paramMappings), extractMobilenetV1Params = _b.extractMobilenetV1Params, extractPredictionLayerParams = _b.extractPredictionLayerParams;\r\n    var mobilenetv1 = extractMobilenetV1Params();\r\n    var prediction_layer = extractPredictionLayerParams();\r\n    var extra_dim = tf.tensor3d(extractWeights(5118 * 4), [1, 5118, 4]);\r\n    var output_layer = {\r\n        extra_dim: extra_dim\r\n    };\r\n    paramMappings.push({ paramPath: 'output_layer/extra_dim' });\r\n    if (getRemainingWeights().length !== 0) {\r\n        throw new Error(\"weights remaing after extract: \" + getRemainingWeights().length);\r\n    }\r\n    return {\r\n        params: {\r\n            mobilenetv1: mobilenetv1,\r\n            prediction_layer: prediction_layer,\r\n            output_layer: output_layer\r\n        },\r\n        paramMappings: paramMappings\r\n    };\r\n}\r\n//# sourceMappingURL=extractParams.js.map","import { disposeUnusedWeightTensors, extractWeightEntryFactory } from '../common';\r\nimport { isTensor3D } from '../utils';\r\nfunction extractorsFactory(weightMap, paramMappings) {\r\n    var extractWeightEntry = extractWeightEntryFactory(weightMap, paramMappings);\r\n    function extractPointwiseConvParams(prefix, idx, mappedPrefix) {\r\n        var filters = extractWeightEntry(prefix + \"/Conv2d_\" + idx + \"_pointwise/weights\", 4, mappedPrefix + \"/filters\");\r\n        var batch_norm_offset = extractWeightEntry(prefix + \"/Conv2d_\" + idx + \"_pointwise/convolution_bn_offset\", 1, mappedPrefix + \"/batch_norm_offset\");\r\n        return { filters: filters, batch_norm_offset: batch_norm_offset };\r\n    }\r\n    function extractConvPairParams(idx) {\r\n        var mappedPrefix = \"mobilenetv1/conv_\" + idx;\r\n        var prefixDepthwiseConv = \"MobilenetV1/Conv2d_\" + idx + \"_depthwise\";\r\n        var mappedPrefixDepthwiseConv = mappedPrefix + \"/depthwise_conv\";\r\n        var mappedPrefixPointwiseConv = mappedPrefix + \"/pointwise_conv\";\r\n        var filters = extractWeightEntry(prefixDepthwiseConv + \"/depthwise_weights\", 4, mappedPrefixDepthwiseConv + \"/filters\");\r\n        var batch_norm_scale = extractWeightEntry(prefixDepthwiseConv + \"/BatchNorm/gamma\", 1, mappedPrefixDepthwiseConv + \"/batch_norm_scale\");\r\n        var batch_norm_offset = extractWeightEntry(prefixDepthwiseConv + \"/BatchNorm/beta\", 1, mappedPrefixDepthwiseConv + \"/batch_norm_offset\");\r\n        var batch_norm_mean = extractWeightEntry(prefixDepthwiseConv + \"/BatchNorm/moving_mean\", 1, mappedPrefixDepthwiseConv + \"/batch_norm_mean\");\r\n        var batch_norm_variance = extractWeightEntry(prefixDepthwiseConv + \"/BatchNorm/moving_variance\", 1, mappedPrefixDepthwiseConv + \"/batch_norm_variance\");\r\n        return {\r\n            depthwise_conv: {\r\n                filters: filters,\r\n                batch_norm_scale: batch_norm_scale,\r\n                batch_norm_offset: batch_norm_offset,\r\n                batch_norm_mean: batch_norm_mean,\r\n                batch_norm_variance: batch_norm_variance\r\n            },\r\n            pointwise_conv: extractPointwiseConvParams('MobilenetV1', idx, mappedPrefixPointwiseConv)\r\n        };\r\n    }\r\n    function extractMobilenetV1Params() {\r\n        return {\r\n            conv_0: extractPointwiseConvParams('MobilenetV1', 0, 'mobilenetv1/conv_0'),\r\n            conv_1: extractConvPairParams(1),\r\n            conv_2: extractConvPairParams(2),\r\n            conv_3: extractConvPairParams(3),\r\n            conv_4: extractConvPairParams(4),\r\n            conv_5: extractConvPairParams(5),\r\n            conv_6: extractConvPairParams(6),\r\n            conv_7: extractConvPairParams(7),\r\n            conv_8: extractConvPairParams(8),\r\n            conv_9: extractConvPairParams(9),\r\n            conv_10: extractConvPairParams(10),\r\n            conv_11: extractConvPairParams(11),\r\n            conv_12: extractConvPairParams(12),\r\n            conv_13: extractConvPairParams(13)\r\n        };\r\n    }\r\n    function extractConvParams(prefix, mappedPrefix) {\r\n        var filters = extractWeightEntry(prefix + \"/weights\", 4, mappedPrefix + \"/filters\");\r\n        var bias = extractWeightEntry(prefix + \"/biases\", 1, mappedPrefix + \"/bias\");\r\n        return { filters: filters, bias: bias };\r\n    }\r\n    function extractBoxPredictorParams(idx) {\r\n        var box_encoding_predictor = extractConvParams(\"Prediction/BoxPredictor_\" + idx + \"/BoxEncodingPredictor\", \"prediction_layer/box_predictor_\" + idx + \"/box_encoding_predictor\");\r\n        var class_predictor = extractConvParams(\"Prediction/BoxPredictor_\" + idx + \"/ClassPredictor\", \"prediction_layer/box_predictor_\" + idx + \"/class_predictor\");\r\n        return { box_encoding_predictor: box_encoding_predictor, class_predictor: class_predictor };\r\n    }\r\n    function extractPredictionLayerParams() {\r\n        return {\r\n            conv_0: extractPointwiseConvParams('Prediction', 0, 'prediction_layer/conv_0'),\r\n            conv_1: extractPointwiseConvParams('Prediction', 1, 'prediction_layer/conv_1'),\r\n            conv_2: extractPointwiseConvParams('Prediction', 2, 'prediction_layer/conv_2'),\r\n            conv_3: extractPointwiseConvParams('Prediction', 3, 'prediction_layer/conv_3'),\r\n            conv_4: extractPointwiseConvParams('Prediction', 4, 'prediction_layer/conv_4'),\r\n            conv_5: extractPointwiseConvParams('Prediction', 5, 'prediction_layer/conv_5'),\r\n            conv_6: extractPointwiseConvParams('Prediction', 6, 'prediction_layer/conv_6'),\r\n            conv_7: extractPointwiseConvParams('Prediction', 7, 'prediction_layer/conv_7'),\r\n            box_predictor_0: extractBoxPredictorParams(0),\r\n            box_predictor_1: extractBoxPredictorParams(1),\r\n            box_predictor_2: extractBoxPredictorParams(2),\r\n            box_predictor_3: extractBoxPredictorParams(3),\r\n            box_predictor_4: extractBoxPredictorParams(4),\r\n            box_predictor_5: extractBoxPredictorParams(5)\r\n        };\r\n    }\r\n    return {\r\n        extractMobilenetV1Params: extractMobilenetV1Params,\r\n        extractPredictionLayerParams: extractPredictionLayerParams\r\n    };\r\n}\r\nexport function extractParamsFromWeigthMap(weightMap) {\r\n    var paramMappings = [];\r\n    var _a = extractorsFactory(weightMap, paramMappings), extractMobilenetV1Params = _a.extractMobilenetV1Params, extractPredictionLayerParams = _a.extractPredictionLayerParams;\r\n    var extra_dim = weightMap['Output/extra_dim'];\r\n    paramMappings.push({ originalPath: 'Output/extra_dim', paramPath: 'output_layer/extra_dim' });\r\n    if (!isTensor3D(extra_dim)) {\r\n        throw new Error(\"expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have \" + extra_dim);\r\n    }\r\n    var params = {\r\n        mobilenetv1: extractMobilenetV1Params(),\r\n        prediction_layer: extractPredictionLayerParams(),\r\n        output_layer: {\r\n            extra_dim: extra_dim\r\n        }\r\n    };\r\n    disposeUnusedWeightTensors(weightMap, paramMappings);\r\n    return { params: params, paramMappings: paramMappings };\r\n}\r\n//# sourceMappingURL=extractParamsFromWeigthMap.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nexport function pointwiseConvLayer(x, params, strides) {\r\n    return tf.tidy(function () {\r\n        var out = tf.conv2d(x, params.filters, strides, 'same');\r\n        out = tf.add(out, params.batch_norm_offset);\r\n        return tf.clipByValue(out, 0, 6);\r\n    });\r\n}\r\n//# sourceMappingURL=pointwiseConvLayer.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { pointwiseConvLayer } from './pointwiseConvLayer';\r\nvar epsilon = 0.0010000000474974513;\r\nfunction depthwiseConvLayer(x, params, strides) {\r\n    return tf.tidy(function () {\r\n        var out = tf.depthwiseConv2d(x, params.filters, strides, 'same');\r\n        out = tf.batchNorm(out, params.batch_norm_mean, params.batch_norm_variance, params.batch_norm_offset, params.batch_norm_scale, epsilon);\r\n        return tf.clipByValue(out, 0, 6);\r\n    });\r\n}\r\nfunction getStridesForLayerIdx(layerIdx) {\r\n    return [2, 4, 6, 12].some(function (idx) { return idx === layerIdx; }) ? [2, 2] : [1, 1];\r\n}\r\nexport function mobileNetV1(x, params) {\r\n    return tf.tidy(function () {\r\n        var conv11 = null;\r\n        var out = pointwiseConvLayer(x, params.conv_0, [2, 2]);\r\n        var convPairParams = [\r\n            params.conv_1,\r\n            params.conv_2,\r\n            params.conv_3,\r\n            params.conv_4,\r\n            params.conv_5,\r\n            params.conv_6,\r\n            params.conv_7,\r\n            params.conv_8,\r\n            params.conv_9,\r\n            params.conv_10,\r\n            params.conv_11,\r\n            params.conv_12,\r\n            params.conv_13\r\n        ];\r\n        convPairParams.forEach(function (param, i) {\r\n            var layerIdx = i + 1;\r\n            var depthwiseConvStrides = getStridesForLayerIdx(layerIdx);\r\n            out = depthwiseConvLayer(out, param.depthwise_conv, depthwiseConvStrides);\r\n            out = pointwiseConvLayer(out, param.pointwise_conv, [1, 1]);\r\n            if (layerIdx === 11) {\r\n                conv11 = out;\r\n            }\r\n        });\r\n        if (conv11 === null) {\r\n            throw new Error('mobileNetV1 - output of conv layer 11 is null');\r\n        }\r\n        return {\r\n            out: out,\r\n            conv11: conv11\r\n        };\r\n    });\r\n}\r\n//# sourceMappingURL=mobileNetV1.js.map","export function nonMaxSuppression(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold) {\r\n    var numBoxes = boxes.shape[0];\r\n    var outputSize = Math.min(maxOutputSize, numBoxes);\r\n    var candidates = scores\r\n        .map(function (score, boxIndex) { return ({ score: score, boxIndex: boxIndex }); })\r\n        .filter(function (c) { return c.score > scoreThreshold; })\r\n        .sort(function (c1, c2) { return c2.score - c1.score; });\r\n    var suppressFunc = function (x) { return x <= iouThreshold ? 1 : 0; };\r\n    var selected = [];\r\n    candidates.forEach(function (c) {\r\n        if (selected.length >= outputSize) {\r\n            return;\r\n        }\r\n        var originalScore = c.score;\r\n        for (var j = selected.length - 1; j >= 0; --j) {\r\n            var iou = IOU(boxes, c.boxIndex, selected[j]);\r\n            if (iou === 0.0) {\r\n                continue;\r\n            }\r\n            c.score *= suppressFunc(iou);\r\n            if (c.score <= scoreThreshold) {\r\n                break;\r\n            }\r\n        }\r\n        if (originalScore === c.score) {\r\n            selected.push(c.boxIndex);\r\n        }\r\n    });\r\n    return selected;\r\n}\r\nfunction IOU(boxes, i, j) {\r\n    var boxesData = boxes.arraySync();\r\n    var yminI = Math.min(boxesData[i][0], boxesData[i][2]);\r\n    var xminI = Math.min(boxesData[i][1], boxesData[i][3]);\r\n    var ymaxI = Math.max(boxesData[i][0], boxesData[i][2]);\r\n    var xmaxI = Math.max(boxesData[i][1], boxesData[i][3]);\r\n    var yminJ = Math.min(boxesData[j][0], boxesData[j][2]);\r\n    var xminJ = Math.min(boxesData[j][1], boxesData[j][3]);\r\n    var ymaxJ = Math.max(boxesData[j][0], boxesData[j][2]);\r\n    var xmaxJ = Math.max(boxesData[j][1], boxesData[j][3]);\r\n    var areaI = (ymaxI - yminI) * (xmaxI - xminI);\r\n    var areaJ = (ymaxJ - yminJ) * (xmaxJ - xminJ);\r\n    if (areaI <= 0 || areaJ <= 0) {\r\n        return 0.0;\r\n    }\r\n    var intersectionYmin = Math.max(yminI, yminJ);\r\n    var intersectionXmin = Math.max(xminI, xminJ);\r\n    var intersectionYmax = Math.min(ymaxI, ymaxJ);\r\n    var intersectionXmax = Math.min(xmaxI, xmaxJ);\r\n    var intersectionArea = Math.max(intersectionYmax - intersectionYmin, 0.0) *\r\n        Math.max(intersectionXmax - intersectionXmin, 0.0);\r\n    return intersectionArea / (areaI + areaJ - intersectionArea);\r\n}\r\n//# sourceMappingURL=nonMaxSuppression.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nfunction getCenterCoordinatesAndSizesLayer(x) {\r\n    var vec = tf.unstack(tf.transpose(x, [1, 0]));\r\n    var sizes = [\r\n        tf.sub(vec[2], vec[0]),\r\n        tf.sub(vec[3], vec[1])\r\n    ];\r\n    var centers = [\r\n        tf.add(vec[0], tf.div(sizes[0], tf.scalar(2))),\r\n        tf.add(vec[1], tf.div(sizes[1], tf.scalar(2)))\r\n    ];\r\n    return {\r\n        sizes: sizes,\r\n        centers: centers\r\n    };\r\n}\r\nfunction decodeBoxesLayer(x0, x1) {\r\n    var _a = getCenterCoordinatesAndSizesLayer(x0), sizes = _a.sizes, centers = _a.centers;\r\n    var vec = tf.unstack(tf.transpose(x1, [1, 0]));\r\n    var div0_out = tf.div(tf.mul(tf.exp(tf.div(vec[2], tf.scalar(5))), sizes[0]), tf.scalar(2));\r\n    var add0_out = tf.add(tf.mul(tf.div(vec[0], tf.scalar(10)), sizes[0]), centers[0]);\r\n    var div1_out = tf.div(tf.mul(tf.exp(tf.div(vec[3], tf.scalar(5))), sizes[1]), tf.scalar(2));\r\n    var add1_out = tf.add(tf.mul(tf.div(vec[1], tf.scalar(10)), sizes[1]), centers[1]);\r\n    return tf.transpose(tf.stack([\r\n        tf.sub(add0_out, div0_out),\r\n        tf.sub(add1_out, div1_out),\r\n        tf.add(add0_out, div0_out),\r\n        tf.add(add1_out, div1_out)\r\n    ]), [1, 0]);\r\n}\r\nexport function outputLayer(boxPredictions, classPredictions, params) {\r\n    return tf.tidy(function () {\r\n        var batchSize = boxPredictions.shape[0];\r\n        var boxes = decodeBoxesLayer(tf.reshape(tf.tile(params.extra_dim, [batchSize, 1, 1]), [-1, 4]), tf.reshape(boxPredictions, [-1, 4]));\r\n        boxes = tf.reshape(boxes, [batchSize, (boxes.shape[0] / batchSize), 4]);\r\n        var scoresAndClasses = tf.sigmoid(tf.slice(classPredictions, [0, 0, 1], [-1, -1, -1]));\r\n        var scores = tf.slice(scoresAndClasses, [0, 0, 0], [-1, -1, 1]);\r\n        scores = tf.reshape(scores, [batchSize, scores.shape[1]]);\r\n        var boxesByBatch = tf.unstack(boxes);\r\n        var scoresByBatch = tf.unstack(scores);\r\n        return {\r\n            boxes: boxesByBatch,\r\n            scores: scoresByBatch\r\n        };\r\n    });\r\n}\r\n//# sourceMappingURL=outputLayer.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { convLayer } from '../common';\r\nexport function boxPredictionLayer(x, params) {\r\n    return tf.tidy(function () {\r\n        var batchSize = x.shape[0];\r\n        var boxPredictionEncoding = tf.reshape(convLayer(x, params.box_encoding_predictor), [batchSize, -1, 1, 4]);\r\n        var classPrediction = tf.reshape(convLayer(x, params.class_predictor), [batchSize, -1, 3]);\r\n        return {\r\n            boxPredictionEncoding: boxPredictionEncoding,\r\n            classPrediction: classPrediction\r\n        };\r\n    });\r\n}\r\n//# sourceMappingURL=boxPredictionLayer.js.map","var SsdMobilenetv1Options = /** @class */ (function () {\r\n    function SsdMobilenetv1Options(_a) {\r\n        var _b = _a === void 0 ? {} : _a, minConfidence = _b.minConfidence, maxResults = _b.maxResults;\r\n        this._name = 'SsdMobilenetv1Options';\r\n        this._minConfidence = minConfidence || 0.5;\r\n        this._maxResults = maxResults || 100;\r\n        if (typeof this._minConfidence !== 'number' || this._minConfidence <= 0 || this._minConfidence >= 1) {\r\n            throw new Error(this._name + \" - expected minConfidence to be a number between 0 and 1\");\r\n        }\r\n        if (typeof this._maxResults !== 'number') {\r\n            throw new Error(this._name + \" - expected maxResults to be a number\");\r\n        }\r\n    }\r\n    Object.defineProperty(SsdMobilenetv1Options.prototype, \"minConfidence\", {\r\n        get: function () { return this._minConfidence; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SsdMobilenetv1Options.prototype, \"maxResults\", {\r\n        get: function () { return this._maxResults; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SsdMobilenetv1Options;\r\n}());\r\nexport { SsdMobilenetv1Options };\r\n//# sourceMappingURL=SsdMobilenetv1Options.js.map","export var TinyYolov2SizeType;\r\n(function (TinyYolov2SizeType) {\r\n    TinyYolov2SizeType[TinyYolov2SizeType[\"XS\"] = 224] = \"XS\";\r\n    TinyYolov2SizeType[TinyYolov2SizeType[\"SM\"] = 320] = \"SM\";\r\n    TinyYolov2SizeType[TinyYolov2SizeType[\"MD\"] = 416] = \"MD\";\r\n    TinyYolov2SizeType[TinyYolov2SizeType[\"LG\"] = 608] = \"LG\";\r\n})(TinyYolov2SizeType || (TinyYolov2SizeType = {}));\r\nvar TinyYolov2Options = /** @class */ (function () {\r\n    function TinyYolov2Options(_a) {\r\n        var _b = _a === void 0 ? {} : _a, inputSize = _b.inputSize, scoreThreshold = _b.scoreThreshold;\r\n        this._name = 'TinyYolov2Options';\r\n        this._inputSize = inputSize || 416;\r\n        this._scoreThreshold = scoreThreshold || 0.5;\r\n        if (typeof this._inputSize !== 'number' || this._inputSize % 32 !== 0) {\r\n            throw new Error(this._name + \" - expected inputSize to be a number divisible by 32\");\r\n        }\r\n        if (typeof this._scoreThreshold !== 'number' || this._scoreThreshold <= 0 || this._scoreThreshold >= 1) {\r\n            throw new Error(this._name + \" - expected scoreThreshold to be a number between 0 and 1\");\r\n        }\r\n    }\r\n    Object.defineProperty(TinyYolov2Options.prototype, \"inputSize\", {\r\n        get: function () { return this._inputSize; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TinyYolov2Options.prototype, \"scoreThreshold\", {\r\n        get: function () { return this._scoreThreshold; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return TinyYolov2Options;\r\n}());\r\nexport { TinyYolov2Options };\r\n//# sourceMappingURL=TinyYolov2Options.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { Rect } from '../classes';\r\nimport { FaceDetection } from '../classes/FaceDetection';\r\nimport { toNetInput } from '../dom';\r\nimport { NeuralNetwork } from '../NeuralNetwork';\r\nimport { extractParams } from './extractParams';\r\nimport { extractParamsFromWeigthMap } from './extractParamsFromWeigthMap';\r\nimport { mobileNetV1 } from './mobileNetV1';\r\nimport { nonMaxSuppression } from './nonMaxSuppression';\r\nimport { outputLayer } from './outputLayer';\r\nimport { predictionLayer } from './predictionLayer';\r\nimport { SsdMobilenetv1Options } from './SsdMobilenetv1Options';\r\nvar SsdMobilenetv1 = /** @class */ (function (_super) {\r\n    __extends(SsdMobilenetv1, _super);\r\n    function SsdMobilenetv1() {\r\n        return _super.call(this, 'SsdMobilenetv1') || this;\r\n    }\r\n    SsdMobilenetv1.prototype.forwardInput = function (input) {\r\n        var params = this.params;\r\n        if (!params) {\r\n            throw new Error('SsdMobilenetv1 - load model before inference');\r\n        }\r\n        return tf.tidy(function () {\r\n            var batchTensor = input.toBatchTensor(512, false).toFloat();\r\n            var x = tf.sub(tf.mul(batchTensor, tf.scalar(0.007843137718737125)), tf.scalar(1));\r\n            var features = mobileNetV1(x, params.mobilenetv1);\r\n            var _a = predictionLayer(features.out, features.conv11, params.prediction_layer), boxPredictions = _a.boxPredictions, classPredictions = _a.classPredictions;\r\n            return outputLayer(boxPredictions, classPredictions, params.output_layer);\r\n        });\r\n    };\r\n    SsdMobilenetv1.prototype.forward = function (input) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this.forwardInput;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1: return [2 /*return*/, _a.apply(this, [_b.sent()])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SsdMobilenetv1.prototype.locateFaces = function (input, options) {\r\n        if (options === void 0) { options = {}; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, maxResults, minConfidence, netInput, _b, _boxes, _scores, boxes, scores, i, scoresData, _c, _d, iouThreshold, indices, reshapedDims, inputSize, padX, padY, boxesData, results;\r\n            return __generator(this, function (_e) {\r\n                switch (_e.label) {\r\n                    case 0:\r\n                        _a = new SsdMobilenetv1Options(options), maxResults = _a.maxResults, minConfidence = _a.minConfidence;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1:\r\n                        netInput = _e.sent();\r\n                        _b = this.forwardInput(netInput), _boxes = _b.boxes, _scores = _b.scores;\r\n                        boxes = _boxes[0];\r\n                        scores = _scores[0];\r\n                        for (i = 1; i < _boxes.length; i++) {\r\n                            _boxes[i].dispose();\r\n                            _scores[i].dispose();\r\n                        }\r\n                        _d = (_c = Array).from;\r\n                        return [4 /*yield*/, scores.data()];\r\n                    case 2:\r\n                        scoresData = _d.apply(_c, [_e.sent()]);\r\n                        iouThreshold = 0.5;\r\n                        indices = nonMaxSuppression(boxes, scoresData, maxResults, iouThreshold, minConfidence);\r\n                        reshapedDims = netInput.getReshapedInputDimensions(0);\r\n                        inputSize = netInput.inputSize;\r\n                        padX = inputSize / reshapedDims.width;\r\n                        padY = inputSize / reshapedDims.height;\r\n                        boxesData = boxes.arraySync();\r\n                        results = indices\r\n                            .map(function (idx) {\r\n                            var _a = [\r\n                                Math.max(0, boxesData[idx][0]),\r\n                                Math.min(1.0, boxesData[idx][2])\r\n                            ].map(function (val) { return val * padY; }), top = _a[0], bottom = _a[1];\r\n                            var _b = [\r\n                                Math.max(0, boxesData[idx][1]),\r\n                                Math.min(1.0, boxesData[idx][3])\r\n                            ].map(function (val) { return val * padX; }), left = _b[0], right = _b[1];\r\n                            return new FaceDetection(scoresData[idx], new Rect(left, top, right - left, bottom - top), {\r\n                                height: netInput.getInputHeight(0),\r\n                                width: netInput.getInputWidth(0)\r\n                            });\r\n                        });\r\n                        boxes.dispose();\r\n                        scores.dispose();\r\n                        return [2 /*return*/, results];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    SsdMobilenetv1.prototype.getDefaultModelName = function () {\r\n        return 'ssd_mobilenetv1_model';\r\n    };\r\n    SsdMobilenetv1.prototype.extractParamsFromWeigthMap = function (weightMap) {\r\n        return extractParamsFromWeigthMap(weightMap);\r\n    };\r\n    SsdMobilenetv1.prototype.extractParams = function (weights) {\r\n        return extractParams(weights);\r\n    };\r\n    return SsdMobilenetv1;\r\n}(NeuralNetwork));\r\nexport { SsdMobilenetv1 };\r\n//# sourceMappingURL=SsdMobilenetv1.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { boxPredictionLayer } from './boxPredictionLayer';\r\nimport { pointwiseConvLayer } from './pointwiseConvLayer';\r\nexport function predictionLayer(x, conv11, params) {\r\n    return tf.tidy(function () {\r\n        var conv0 = pointwiseConvLayer(x, params.conv_0, [1, 1]);\r\n        var conv1 = pointwiseConvLayer(conv0, params.conv_1, [2, 2]);\r\n        var conv2 = pointwiseConvLayer(conv1, params.conv_2, [1, 1]);\r\n        var conv3 = pointwiseConvLayer(conv2, params.conv_3, [2, 2]);\r\n        var conv4 = pointwiseConvLayer(conv3, params.conv_4, [1, 1]);\r\n        var conv5 = pointwiseConvLayer(conv4, params.conv_5, [2, 2]);\r\n        var conv6 = pointwiseConvLayer(conv5, params.conv_6, [1, 1]);\r\n        var conv7 = pointwiseConvLayer(conv6, params.conv_7, [2, 2]);\r\n        var boxPrediction0 = boxPredictionLayer(conv11, params.box_predictor_0);\r\n        var boxPrediction1 = boxPredictionLayer(x, params.box_predictor_1);\r\n        var boxPrediction2 = boxPredictionLayer(conv1, params.box_predictor_2);\r\n        var boxPrediction3 = boxPredictionLayer(conv3, params.box_predictor_3);\r\n        var boxPrediction4 = boxPredictionLayer(conv5, params.box_predictor_4);\r\n        var boxPrediction5 = boxPredictionLayer(conv7, params.box_predictor_5);\r\n        var boxPredictions = tf.concat([\r\n            boxPrediction0.boxPredictionEncoding,\r\n            boxPrediction1.boxPredictionEncoding,\r\n            boxPrediction2.boxPredictionEncoding,\r\n            boxPrediction3.boxPredictionEncoding,\r\n            boxPrediction4.boxPredictionEncoding,\r\n            boxPrediction5.boxPredictionEncoding\r\n        ], 1);\r\n        var classPredictions = tf.concat([\r\n            boxPrediction0.classPrediction,\r\n            boxPrediction1.classPrediction,\r\n            boxPrediction2.classPrediction,\r\n            boxPrediction3.classPrediction,\r\n            boxPrediction4.classPrediction,\r\n            boxPrediction5.classPrediction\r\n        ], 1);\r\n        return {\r\n            boxPredictions: boxPredictions,\r\n            classPredictions: classPredictions\r\n        };\r\n    });\r\n}\r\n//# sourceMappingURL=predictionLayer.js.map","import { Point } from '../classes';\r\nexport var IOU_THRESHOLD = 0.4;\r\nexport var BOX_ANCHORS = [\r\n    new Point(0.738768, 0.874946),\r\n    new Point(2.42204, 2.65704),\r\n    new Point(4.30971, 7.04493),\r\n    new Point(10.246, 4.59428),\r\n    new Point(12.6868, 11.8741)\r\n];\r\nexport var BOX_ANCHORS_SEPARABLE = [\r\n    new Point(1.603231, 2.094468),\r\n    new Point(6.041143, 7.080126),\r\n    new Point(2.882459, 3.518061),\r\n    new Point(4.266906, 5.178857),\r\n    new Point(9.041765, 10.66308)\r\n];\r\nexport var MEAN_RGB_SEPARABLE = [117.001, 114.697, 97.404];\r\nexport var DEFAULT_MODEL_NAME = 'tiny_yolov2_model';\r\nexport var DEFAULT_MODEL_NAME_SEPARABLE_CONV = 'tiny_yolov2_separable_conv_model';\r\n//# sourceMappingURL=const.js.map","import { __extends } from \"tslib\";\r\nimport { SsdMobilenetv1 } from './SsdMobilenetv1';\r\nexport * from './SsdMobilenetv1';\r\nexport * from './SsdMobilenetv1Options';\r\nexport function createSsdMobilenetv1(weights) {\r\n    var net = new SsdMobilenetv1();\r\n    net.extractWeights(weights);\r\n    return net;\r\n}\r\nexport function createFaceDetectionNet(weights) {\r\n    return createSsdMobilenetv1(weights);\r\n}\r\n// alias for backward compatibily\r\nvar FaceDetectionNet = /** @class */ (function (_super) {\r\n    __extends(FaceDetectionNet, _super);\r\n    function FaceDetectionNet() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return FaceDetectionNet;\r\n}(SsdMobilenetv1));\r\nexport { FaceDetectionNet };\r\n//# sourceMappingURL=index.js.map","var isNumber = function (arg) { return typeof arg === 'number'; };\r\nexport function validateConfig(config) {\r\n    if (!config) {\r\n        throw new Error(\"invalid config: \" + config);\r\n    }\r\n    if (typeof config.withSeparableConvs !== 'boolean') {\r\n        throw new Error(\"config.withSeparableConvs has to be a boolean, have: \" + config.withSeparableConvs);\r\n    }\r\n    if (!isNumber(config.iouThreshold) || config.iouThreshold < 0 || config.iouThreshold > 1.0) {\r\n        throw new Error(\"config.iouThreshold has to be a number between [0, 1], have: \" + config.iouThreshold);\r\n    }\r\n    if (!Array.isArray(config.classes)\r\n        || !config.classes.length\r\n        || !config.classes.every(function (c) { return typeof c === 'string'; })) {\r\n        throw new Error(\"config.classes has to be an array class names: string[], have: \" + JSON.stringify(config.classes));\r\n    }\r\n    if (!Array.isArray(config.anchors)\r\n        || !config.anchors.length\r\n        || !config.anchors.map(function (a) { return a || {}; }).every(function (a) { return isNumber(a.x) && isNumber(a.y); })) {\r\n        throw new Error(\"config.anchors has to be an array of { x: number, y: number }, have: \" + JSON.stringify(config.anchors));\r\n    }\r\n    if (config.meanRgb && (!Array.isArray(config.meanRgb)\r\n        || config.meanRgb.length !== 3\r\n        || !config.meanRgb.every(isNumber))) {\r\n        throw new Error(\"config.meanRgb has to be an array of shape [number, number, number], have: \" + JSON.stringify(config.meanRgb));\r\n    }\r\n}\r\n//# sourceMappingURL=config.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nexport function leaky(x) {\r\n    return tf.tidy(function () {\r\n        var min = tf.mul(x, tf.scalar(0.10000000149011612));\r\n        return tf.add(tf.relu(tf.sub(x, min)), min);\r\n        //return tf.maximum(x, min)\r\n    });\r\n}\r\n//# sourceMappingURL=leaky.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { leaky } from './leaky';\r\nexport function convWithBatchNorm(x, params) {\r\n    return tf.tidy(function () {\r\n        var out = tf.pad(x, [[0, 0], [1, 1], [1, 1], [0, 0]]);\r\n        out = tf.conv2d(out, params.conv.filters, [1, 1], 'valid');\r\n        out = tf.sub(out, params.bn.sub);\r\n        out = tf.mul(out, params.bn.truediv);\r\n        out = tf.add(out, params.conv.bias);\r\n        return leaky(out);\r\n    });\r\n}\r\n//# sourceMappingURL=convWithBatchNorm.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { leaky } from './leaky';\r\nexport function depthwiseSeparableConv(x, params) {\r\n    return tf.tidy(function () {\r\n        var out = tf.pad(x, [[0, 0], [1, 1], [1, 1], [0, 0]]);\r\n        out = tf.separableConv2d(out, params.depthwise_filter, params.pointwise_filter, [1, 1], 'valid');\r\n        out = tf.add(out, params.bias);\r\n        return leaky(out);\r\n    });\r\n}\r\n//# sourceMappingURL=depthwiseSeparableConv.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { extractConvParamsFactory } from '../common';\r\nimport { extractSeparableConvParamsFactory } from '../common/extractSeparableConvParamsFactory';\r\nimport { extractWeightsFactory } from '../common/extractWeightsFactory';\r\nfunction extractorsFactory(extractWeights, paramMappings) {\r\n    var extractConvParams = extractConvParamsFactory(extractWeights, paramMappings);\r\n    function extractBatchNormParams(size, mappedPrefix) {\r\n        var sub = tf.tensor1d(extractWeights(size));\r\n        var truediv = tf.tensor1d(extractWeights(size));\r\n        paramMappings.push({ paramPath: mappedPrefix + \"/sub\" }, { paramPath: mappedPrefix + \"/truediv\" });\r\n        return { sub: sub, truediv: truediv };\r\n    }\r\n    function extractConvWithBatchNormParams(channelsIn, channelsOut, mappedPrefix) {\r\n        var conv = extractConvParams(channelsIn, channelsOut, 3, mappedPrefix + \"/conv\");\r\n        var bn = extractBatchNormParams(channelsOut, mappedPrefix + \"/bn\");\r\n        return { conv: conv, bn: bn };\r\n    }\r\n    var extractSeparableConvParams = extractSeparableConvParamsFactory(extractWeights, paramMappings);\r\n    return {\r\n        extractConvParams: extractConvParams,\r\n        extractConvWithBatchNormParams: extractConvWithBatchNormParams,\r\n        extractSeparableConvParams: extractSeparableConvParams\r\n    };\r\n}\r\nexport function extractParams(weights, config, boxEncodingSize, filterSizes) {\r\n    var _a = extractWeightsFactory(weights), extractWeights = _a.extractWeights, getRemainingWeights = _a.getRemainingWeights;\r\n    var paramMappings = [];\r\n    var _b = extractorsFactory(extractWeights, paramMappings), extractConvParams = _b.extractConvParams, extractConvWithBatchNormParams = _b.extractConvWithBatchNormParams, extractSeparableConvParams = _b.extractSeparableConvParams;\r\n    var params;\r\n    if (config.withSeparableConvs) {\r\n        var s0 = filterSizes[0], s1 = filterSizes[1], s2 = filterSizes[2], s3 = filterSizes[3], s4 = filterSizes[4], s5 = filterSizes[5], s6 = filterSizes[6], s7 = filterSizes[7], s8 = filterSizes[8];\r\n        var conv0 = config.isFirstLayerConv2d\r\n            ? extractConvParams(s0, s1, 3, 'conv0')\r\n            : extractSeparableConvParams(s0, s1, 'conv0');\r\n        var conv1 = extractSeparableConvParams(s1, s2, 'conv1');\r\n        var conv2 = extractSeparableConvParams(s2, s3, 'conv2');\r\n        var conv3 = extractSeparableConvParams(s3, s4, 'conv3');\r\n        var conv4 = extractSeparableConvParams(s4, s5, 'conv4');\r\n        var conv5 = extractSeparableConvParams(s5, s6, 'conv5');\r\n        var conv6 = s7 ? extractSeparableConvParams(s6, s7, 'conv6') : undefined;\r\n        var conv7 = s8 ? extractSeparableConvParams(s7, s8, 'conv7') : undefined;\r\n        var conv8 = extractConvParams(s8 || s7 || s6, 5 * boxEncodingSize, 1, 'conv8');\r\n        params = { conv0: conv0, conv1: conv1, conv2: conv2, conv3: conv3, conv4: conv4, conv5: conv5, conv6: conv6, conv7: conv7, conv8: conv8 };\r\n    }\r\n    else {\r\n        var s0 = filterSizes[0], s1 = filterSizes[1], s2 = filterSizes[2], s3 = filterSizes[3], s4 = filterSizes[4], s5 = filterSizes[5], s6 = filterSizes[6], s7 = filterSizes[7], s8 = filterSizes[8];\r\n        var conv0 = extractConvWithBatchNormParams(s0, s1, 'conv0');\r\n        var conv1 = extractConvWithBatchNormParams(s1, s2, 'conv1');\r\n        var conv2 = extractConvWithBatchNormParams(s2, s3, 'conv2');\r\n        var conv3 = extractConvWithBatchNormParams(s3, s4, 'conv3');\r\n        var conv4 = extractConvWithBatchNormParams(s4, s5, 'conv4');\r\n        var conv5 = extractConvWithBatchNormParams(s5, s6, 'conv5');\r\n        var conv6 = extractConvWithBatchNormParams(s6, s7, 'conv6');\r\n        var conv7 = extractConvWithBatchNormParams(s7, s8, 'conv7');\r\n        var conv8 = extractConvParams(s8, 5 * boxEncodingSize, 1, 'conv8');\r\n        params = { conv0: conv0, conv1: conv1, conv2: conv2, conv3: conv3, conv4: conv4, conv5: conv5, conv6: conv6, conv7: conv7, conv8: conv8 };\r\n    }\r\n    if (getRemainingWeights().length !== 0) {\r\n        throw new Error(\"weights remaing after extract: \" + getRemainingWeights().length);\r\n    }\r\n    return { params: params, paramMappings: paramMappings };\r\n}\r\n//# sourceMappingURL=extractParams.js.map","import { disposeUnusedWeightTensors } from '../common/disposeUnusedWeightTensors';\r\nimport { loadSeparableConvParamsFactory } from '../common/extractSeparableConvParamsFactory';\r\nimport { extractWeightEntryFactory } from '../common/extractWeightEntryFactory';\r\nfunction extractorsFactory(weightMap, paramMappings) {\r\n    var extractWeightEntry = extractWeightEntryFactory(weightMap, paramMappings);\r\n    function extractBatchNormParams(prefix) {\r\n        var sub = extractWeightEntry(prefix + \"/sub\", 1);\r\n        var truediv = extractWeightEntry(prefix + \"/truediv\", 1);\r\n        return { sub: sub, truediv: truediv };\r\n    }\r\n    function extractConvParams(prefix) {\r\n        var filters = extractWeightEntry(prefix + \"/filters\", 4);\r\n        var bias = extractWeightEntry(prefix + \"/bias\", 1);\r\n        return { filters: filters, bias: bias };\r\n    }\r\n    function extractConvWithBatchNormParams(prefix) {\r\n        var conv = extractConvParams(prefix + \"/conv\");\r\n        var bn = extractBatchNormParams(prefix + \"/bn\");\r\n        return { conv: conv, bn: bn };\r\n    }\r\n    var extractSeparableConvParams = loadSeparableConvParamsFactory(extractWeightEntry);\r\n    return {\r\n        extractConvParams: extractConvParams,\r\n        extractConvWithBatchNormParams: extractConvWithBatchNormParams,\r\n        extractSeparableConvParams: extractSeparableConvParams\r\n    };\r\n}\r\nexport function extractParamsFromWeigthMap(weightMap, config) {\r\n    var paramMappings = [];\r\n    var _a = extractorsFactory(weightMap, paramMappings), extractConvParams = _a.extractConvParams, extractConvWithBatchNormParams = _a.extractConvWithBatchNormParams, extractSeparableConvParams = _a.extractSeparableConvParams;\r\n    var params;\r\n    if (config.withSeparableConvs) {\r\n        var numFilters = (config.filterSizes && config.filterSizes.length || 9);\r\n        params = {\r\n            conv0: config.isFirstLayerConv2d ? extractConvParams('conv0') : extractSeparableConvParams('conv0'),\r\n            conv1: extractSeparableConvParams('conv1'),\r\n            conv2: extractSeparableConvParams('conv2'),\r\n            conv3: extractSeparableConvParams('conv3'),\r\n            conv4: extractSeparableConvParams('conv4'),\r\n            conv5: extractSeparableConvParams('conv5'),\r\n            conv6: numFilters > 7 ? extractSeparableConvParams('conv6') : undefined,\r\n            conv7: numFilters > 8 ? extractSeparableConvParams('conv7') : undefined,\r\n            conv8: extractConvParams('conv8')\r\n        };\r\n    }\r\n    else {\r\n        params = {\r\n            conv0: extractConvWithBatchNormParams('conv0'),\r\n            conv1: extractConvWithBatchNormParams('conv1'),\r\n            conv2: extractConvWithBatchNormParams('conv2'),\r\n            conv3: extractConvWithBatchNormParams('conv3'),\r\n            conv4: extractConvWithBatchNormParams('conv4'),\r\n            conv5: extractConvWithBatchNormParams('conv5'),\r\n            conv6: extractConvWithBatchNormParams('conv6'),\r\n            conv7: extractConvWithBatchNormParams('conv7'),\r\n            conv8: extractConvParams('conv8')\r\n        };\r\n    }\r\n    disposeUnusedWeightTensors(weightMap, paramMappings);\r\n    return { params: params, paramMappings: paramMappings };\r\n}\r\n//# sourceMappingURL=extractParamsFromWeigthMap.js.map","import { __assign, __awaiter, __extends, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { BoundingBox } from '../classes/BoundingBox';\r\nimport { ObjectDetection } from '../classes/ObjectDetection';\r\nimport { convLayer } from '../common';\r\nimport { toNetInput } from '../dom';\r\nimport { NeuralNetwork } from '../NeuralNetwork';\r\nimport { sigmoid } from '../ops';\r\nimport { nonMaxSuppression } from '../ops/nonMaxSuppression';\r\nimport { normalize } from '../ops/normalize';\r\nimport { validateConfig } from './config';\r\nimport { convWithBatchNorm } from './convWithBatchNorm';\r\nimport { depthwiseSeparableConv } from './depthwiseSeparableConv';\r\nimport { extractParams } from './extractParams';\r\nimport { extractParamsFromWeigthMap } from './extractParamsFromWeigthMap';\r\nimport { leaky } from './leaky';\r\nimport { TinyYolov2Options } from './TinyYolov2Options';\r\nvar TinyYolov2Base = /** @class */ (function (_super) {\r\n    __extends(TinyYolov2Base, _super);\r\n    function TinyYolov2Base(config) {\r\n        var _this = _super.call(this, 'TinyYolov2') || this;\r\n        validateConfig(config);\r\n        _this._config = config;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(TinyYolov2Base.prototype, \"config\", {\r\n        get: function () {\r\n            return this._config;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TinyYolov2Base.prototype, \"withClassScores\", {\r\n        get: function () {\r\n            return this.config.withClassScores || this.config.classes.length > 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TinyYolov2Base.prototype, \"boxEncodingSize\", {\r\n        get: function () {\r\n            return 5 + (this.withClassScores ? this.config.classes.length : 0);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TinyYolov2Base.prototype.runTinyYolov2 = function (x, params) {\r\n        var out = convWithBatchNorm(x, params.conv0);\r\n        out = tf.maxPool(out, [2, 2], [2, 2], 'same');\r\n        out = convWithBatchNorm(out, params.conv1);\r\n        out = tf.maxPool(out, [2, 2], [2, 2], 'same');\r\n        out = convWithBatchNorm(out, params.conv2);\r\n        out = tf.maxPool(out, [2, 2], [2, 2], 'same');\r\n        out = convWithBatchNorm(out, params.conv3);\r\n        out = tf.maxPool(out, [2, 2], [2, 2], 'same');\r\n        out = convWithBatchNorm(out, params.conv4);\r\n        out = tf.maxPool(out, [2, 2], [2, 2], 'same');\r\n        out = convWithBatchNorm(out, params.conv5);\r\n        out = tf.maxPool(out, [2, 2], [1, 1], 'same');\r\n        out = convWithBatchNorm(out, params.conv6);\r\n        out = convWithBatchNorm(out, params.conv7);\r\n        return convLayer(out, params.conv8, 'valid', false);\r\n    };\r\n    TinyYolov2Base.prototype.runMobilenet = function (x, params) {\r\n        var out = this.config.isFirstLayerConv2d\r\n            ? leaky(convLayer(x, params.conv0, 'valid', false))\r\n            : depthwiseSeparableConv(x, params.conv0);\r\n        out = tf.maxPool(out, [2, 2], [2, 2], 'same');\r\n        out = depthwiseSeparableConv(out, params.conv1);\r\n        out = tf.maxPool(out, [2, 2], [2, 2], 'same');\r\n        out = depthwiseSeparableConv(out, params.conv2);\r\n        out = tf.maxPool(out, [2, 2], [2, 2], 'same');\r\n        out = depthwiseSeparableConv(out, params.conv3);\r\n        out = tf.maxPool(out, [2, 2], [2, 2], 'same');\r\n        out = depthwiseSeparableConv(out, params.conv4);\r\n        out = tf.maxPool(out, [2, 2], [2, 2], 'same');\r\n        out = depthwiseSeparableConv(out, params.conv5);\r\n        out = tf.maxPool(out, [2, 2], [1, 1], 'same');\r\n        out = params.conv6 ? depthwiseSeparableConv(out, params.conv6) : out;\r\n        out = params.conv7 ? depthwiseSeparableConv(out, params.conv7) : out;\r\n        return convLayer(out, params.conv8, 'valid', false);\r\n    };\r\n    TinyYolov2Base.prototype.forwardInput = function (input, inputSize) {\r\n        var _this = this;\r\n        var params = this.params;\r\n        if (!params) {\r\n            throw new Error('TinyYolov2 - load model before inference');\r\n        }\r\n        return tf.tidy(function () {\r\n            var batchTensor = input.toBatchTensor(inputSize, false).toFloat();\r\n            batchTensor = _this.config.meanRgb\r\n                ? normalize(batchTensor, _this.config.meanRgb)\r\n                : batchTensor;\r\n            batchTensor = batchTensor.div(tf.scalar(256));\r\n            return _this.config.withSeparableConvs\r\n                ? _this.runMobilenet(batchTensor, params)\r\n                : _this.runTinyYolov2(batchTensor, params);\r\n        });\r\n    };\r\n    TinyYolov2Base.prototype.forward = function (input, inputSize) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this.forwardInput;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1: return [4 /*yield*/, _a.apply(this, [_b.sent(), inputSize])];\r\n                    case 2: return [2 /*return*/, _b.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    TinyYolov2Base.prototype.detect = function (input, forwardParams) {\r\n        if (forwardParams === void 0) { forwardParams = {}; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, inputSize, scoreThreshold, netInput, out, out0, inputDimensions, results, boxes, scores, classScores, classNames, indices, detections;\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = new TinyYolov2Options(forwardParams), inputSize = _a.inputSize, scoreThreshold = _a.scoreThreshold;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1:\r\n                        netInput = _b.sent();\r\n                        return [4 /*yield*/, this.forwardInput(netInput, inputSize)];\r\n                    case 2:\r\n                        out = _b.sent();\r\n                        out0 = tf.tidy(function () { return tf.unstack(out)[0].expandDims(); });\r\n                        inputDimensions = {\r\n                            width: netInput.getInputWidth(0),\r\n                            height: netInput.getInputHeight(0)\r\n                        };\r\n                        return [4 /*yield*/, this.extractBoxes(out0, netInput.getReshapedInputDimensions(0), scoreThreshold)];\r\n                    case 3:\r\n                        results = _b.sent();\r\n                        out.dispose();\r\n                        out0.dispose();\r\n                        boxes = results.map(function (res) { return res.box; });\r\n                        scores = results.map(function (res) { return res.score; });\r\n                        classScores = results.map(function (res) { return res.classScore; });\r\n                        classNames = results.map(function (res) { return _this.config.classes[res.label]; });\r\n                        indices = nonMaxSuppression(boxes.map(function (box) { return box.rescale(inputSize); }), scores, this.config.iouThreshold, true);\r\n                        detections = indices.map(function (idx) {\r\n                            return new ObjectDetection(scores[idx], classScores[idx], classNames[idx], boxes[idx], inputDimensions);\r\n                        });\r\n                        return [2 /*return*/, detections];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    TinyYolov2Base.prototype.getDefaultModelName = function () {\r\n        return '';\r\n    };\r\n    TinyYolov2Base.prototype.extractParamsFromWeigthMap = function (weightMap) {\r\n        return extractParamsFromWeigthMap(weightMap, this.config);\r\n    };\r\n    TinyYolov2Base.prototype.extractParams = function (weights) {\r\n        var filterSizes = this.config.filterSizes || TinyYolov2Base.DEFAULT_FILTER_SIZES;\r\n        var numFilters = filterSizes ? filterSizes.length : undefined;\r\n        if (numFilters !== 7 && numFilters !== 8 && numFilters !== 9) {\r\n            throw new Error(\"TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found \" + numFilters + \" filterSizes in config\");\r\n        }\r\n        return extractParams(weights, this.config, this.boxEncodingSize, filterSizes);\r\n    };\r\n    TinyYolov2Base.prototype.extractBoxes = function (outputTensor, inputBlobDimensions, scoreThreshold) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var width, height, inputSize, correctionFactorX, correctionFactorY, numCells, numBoxes, _a, boxesTensor, scoresTensor, classScoresTensor, results, scoresData, boxesData, row, col, anchor, score, ctX, ctY, width_1, height_1, x, y, pos, _b, classScore, label, _c;\r\n            var _this = this;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        width = inputBlobDimensions.width, height = inputBlobDimensions.height;\r\n                        inputSize = Math.max(width, height);\r\n                        correctionFactorX = inputSize / width;\r\n                        correctionFactorY = inputSize / height;\r\n                        numCells = outputTensor.shape[1];\r\n                        numBoxes = this.config.anchors.length;\r\n                        _a = tf.tidy(function () {\r\n                            var reshaped = outputTensor.reshape([numCells, numCells, numBoxes, _this.boxEncodingSize]);\r\n                            var boxes = reshaped.slice([0, 0, 0, 0], [numCells, numCells, numBoxes, 4]);\r\n                            var scores = reshaped.slice([0, 0, 0, 4], [numCells, numCells, numBoxes, 1]);\r\n                            var classScores = _this.withClassScores\r\n                                ? tf.softmax(reshaped.slice([0, 0, 0, 5], [numCells, numCells, numBoxes, _this.config.classes.length]), 3)\r\n                                : tf.scalar(0);\r\n                            return [boxes, scores, classScores];\r\n                        }), boxesTensor = _a[0], scoresTensor = _a[1], classScoresTensor = _a[2];\r\n                        results = [];\r\n                        return [4 /*yield*/, scoresTensor.array()];\r\n                    case 1:\r\n                        scoresData = _d.sent();\r\n                        return [4 /*yield*/, boxesTensor.array()];\r\n                    case 2:\r\n                        boxesData = _d.sent();\r\n                        row = 0;\r\n                        _d.label = 3;\r\n                    case 3:\r\n                        if (!(row < numCells)) return [3 /*break*/, 12];\r\n                        col = 0;\r\n                        _d.label = 4;\r\n                    case 4:\r\n                        if (!(col < numCells)) return [3 /*break*/, 11];\r\n                        anchor = 0;\r\n                        _d.label = 5;\r\n                    case 5:\r\n                        if (!(anchor < numBoxes)) return [3 /*break*/, 10];\r\n                        score = sigmoid(scoresData[row][col][anchor][0]);\r\n                        if (!(!scoreThreshold || score > scoreThreshold)) return [3 /*break*/, 9];\r\n                        ctX = ((col + sigmoid(boxesData[row][col][anchor][0])) / numCells) * correctionFactorX;\r\n                        ctY = ((row + sigmoid(boxesData[row][col][anchor][1])) / numCells) * correctionFactorY;\r\n                        width_1 = ((Math.exp(boxesData[row][col][anchor][2]) * this.config.anchors[anchor].x) / numCells) * correctionFactorX;\r\n                        height_1 = ((Math.exp(boxesData[row][col][anchor][3]) * this.config.anchors[anchor].y) / numCells) * correctionFactorY;\r\n                        x = (ctX - (width_1 / 2));\r\n                        y = (ctY - (height_1 / 2));\r\n                        pos = { row: row, col: col, anchor: anchor };\r\n                        if (!this.withClassScores) return [3 /*break*/, 7];\r\n                        return [4 /*yield*/, this.extractPredictedClass(classScoresTensor, pos)];\r\n                    case 6:\r\n                        _c = _d.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 7:\r\n                        _c = { classScore: 1, label: 0 };\r\n                        _d.label = 8;\r\n                    case 8:\r\n                        _b = _c, classScore = _b.classScore, label = _b.label;\r\n                        results.push(__assign({ box: new BoundingBox(x, y, x + width_1, y + height_1), score: score, classScore: score * classScore, label: label }, pos));\r\n                        _d.label = 9;\r\n                    case 9:\r\n                        anchor++;\r\n                        return [3 /*break*/, 5];\r\n                    case 10:\r\n                        col++;\r\n                        return [3 /*break*/, 4];\r\n                    case 11:\r\n                        row++;\r\n                        return [3 /*break*/, 3];\r\n                    case 12:\r\n                        boxesTensor.dispose();\r\n                        scoresTensor.dispose();\r\n                        classScoresTensor.dispose();\r\n                        return [2 /*return*/, results];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    TinyYolov2Base.prototype.extractPredictedClass = function (classesTensor, pos) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var row, col, anchor, classesData;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        row = pos.row, col = pos.col, anchor = pos.anchor;\r\n                        return [4 /*yield*/, classesTensor.array()];\r\n                    case 1:\r\n                        classesData = _a.sent();\r\n                        return [2 /*return*/, Array(this.config.classes.length).fill(0)\r\n                                .map(function (_, i) { return classesData[row][col][anchor][i]; })\r\n                                .map(function (classScore, label) { return ({\r\n                                classScore: classScore,\r\n                                label: label\r\n                            }); })\r\n                                .reduce(function (max, curr) { return max.classScore > curr.classScore ? max : curr; })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    TinyYolov2Base.DEFAULT_FILTER_SIZES = [\r\n        3, 16, 32, 64, 128, 256, 512, 1024, 1024\r\n    ];\r\n    return TinyYolov2Base;\r\n}(NeuralNetwork));\r\nexport { TinyYolov2Base };\r\n//# sourceMappingURL=TinyYolov2Base.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport { FaceDetection } from '../classes';\r\nimport { BOX_ANCHORS, BOX_ANCHORS_SEPARABLE, DEFAULT_MODEL_NAME, DEFAULT_MODEL_NAME_SEPARABLE_CONV, IOU_THRESHOLD, MEAN_RGB_SEPARABLE, } from './const';\r\nimport { TinyYolov2Base } from './TinyYolov2Base';\r\nvar TinyYolov2 = /** @class */ (function (_super) {\r\n    __extends(TinyYolov2, _super);\r\n    function TinyYolov2(withSeparableConvs) {\r\n        if (withSeparableConvs === void 0) { withSeparableConvs = true; }\r\n        var _this = this;\r\n        var config = Object.assign({}, {\r\n            withSeparableConvs: withSeparableConvs,\r\n            iouThreshold: IOU_THRESHOLD,\r\n            classes: ['face']\r\n        }, withSeparableConvs\r\n            ? {\r\n                anchors: BOX_ANCHORS_SEPARABLE,\r\n                meanRgb: MEAN_RGB_SEPARABLE\r\n            }\r\n            : {\r\n                anchors: BOX_ANCHORS,\r\n                withClassScores: true\r\n            });\r\n        _this = _super.call(this, config) || this;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(TinyYolov2.prototype, \"withSeparableConvs\", {\r\n        get: function () {\r\n            return this.config.withSeparableConvs;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TinyYolov2.prototype, \"anchors\", {\r\n        get: function () {\r\n            return this.config.anchors;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TinyYolov2.prototype.locateFaces = function (input, forwardParams) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var objectDetections;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.detect(input, forwardParams)];\r\n                    case 1:\r\n                        objectDetections = _a.sent();\r\n                        return [2 /*return*/, objectDetections.map(function (det) { return new FaceDetection(det.score, det.relativeBox, { width: det.imageWidth, height: det.imageHeight }); })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    TinyYolov2.prototype.getDefaultModelName = function () {\r\n        return this.withSeparableConvs ? DEFAULT_MODEL_NAME_SEPARABLE_CONV : DEFAULT_MODEL_NAME;\r\n    };\r\n    TinyYolov2.prototype.extractParamsFromWeigthMap = function (weightMap) {\r\n        return _super.prototype.extractParamsFromWeigthMap.call(this, weightMap);\r\n    };\r\n    return TinyYolov2;\r\n}(TinyYolov2Base));\r\nexport { TinyYolov2 };\r\n//# sourceMappingURL=TinyYolov2.js.map","import { __extends } from \"tslib\";\r\nimport { TinyYolov2Options } from '../tinyYolov2';\r\nvar TinyFaceDetectorOptions = /** @class */ (function (_super) {\r\n    __extends(TinyFaceDetectorOptions, _super);\r\n    function TinyFaceDetectorOptions() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._name = 'TinyFaceDetectorOptions';\r\n        return _this;\r\n    }\r\n    return TinyFaceDetectorOptions;\r\n}(TinyYolov2Options));\r\nexport { TinyFaceDetectorOptions };\r\n//# sourceMappingURL=TinyFaceDetectorOptions.js.map","import { __awaiter, __generator } from \"tslib\";\r\nvar ComposableTask = /** @class */ (function () {\r\n    function ComposableTask() {\r\n    }\r\n    ComposableTask.prototype.then = function (onfulfilled) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = onfulfilled;\r\n                        return [4 /*yield*/, this.run()];\r\n                    case 1: return [2 /*return*/, _a.apply(void 0, [_b.sent()])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ComposableTask.prototype.run = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                throw new Error('ComposableTask - run is not implemented');\r\n            });\r\n        });\r\n    };\r\n    return ComposableTask;\r\n}());\r\nexport { ComposableTask };\r\n//# sourceMappingURL=ComposableTask.js.map","import { __awaiter, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { extractFaces, extractFaceTensors } from '../dom';\r\nimport { isWithFaceLandmarks } from '../factories/WithFaceLandmarks';\r\nexport function extractAllFacesAndComputeResults(parentResults, input, computeResults, extractedFaces, getRectForAlignment) {\r\n    if (getRectForAlignment === void 0) { getRectForAlignment = function (_a) {\r\n        var alignedRect = _a.alignedRect;\r\n        return alignedRect;\r\n    }; }\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var faceBoxes, faces, _a, _b, results;\r\n        return __generator(this, function (_c) {\r\n            switch (_c.label) {\r\n                case 0:\r\n                    faceBoxes = parentResults.map(function (parentResult) {\r\n                        return isWithFaceLandmarks(parentResult)\r\n                            ? getRectForAlignment(parentResult)\r\n                            : parentResult.detection;\r\n                    });\r\n                    _a = extractedFaces;\r\n                    if (_a) return [3 /*break*/, 5];\r\n                    if (!(input instanceof tf.Tensor)) return [3 /*break*/, 2];\r\n                    return [4 /*yield*/, extractFaceTensors(input, faceBoxes)];\r\n                case 1:\r\n                    _b = _c.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 2: return [4 /*yield*/, extractFaces(input, faceBoxes)];\r\n                case 3:\r\n                    _b = _c.sent();\r\n                    _c.label = 4;\r\n                case 4:\r\n                    _a = (_b);\r\n                    _c.label = 5;\r\n                case 5:\r\n                    faces = _a;\r\n                    return [4 /*yield*/, computeResults(faces)];\r\n                case 6:\r\n                    results = _c.sent();\r\n                    faces.forEach(function (f) { return f instanceof tf.Tensor && f.dispose(); });\r\n                    return [2 /*return*/, results];\r\n            }\r\n        });\r\n    });\r\n}\r\nexport function extractSingleFaceAndComputeResult(parentResult, input, computeResult, extractedFaces, getRectForAlignment) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var _this = this;\r\n        return __generator(this, function (_a) {\r\n            return [2 /*return*/, extractAllFacesAndComputeResults([parentResult], input, function (faces) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\r\n                    return [2 /*return*/, computeResult(faces[0])];\r\n                }); }); }, extractedFaces, getRectForAlignment)];\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=extractFacesAndComputeResults.js.map","import { __assign } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { extractConvParamsFactory, extractFCParamsFactory, extractWeightsFactory, } from '../common';\r\nfunction extractorsFactory(extractWeights, paramMappings) {\r\n    var extractConvParams = extractConvParamsFactory(extractWeights, paramMappings);\r\n    var extractFCParams = extractFCParamsFactory(extractWeights, paramMappings);\r\n    function extractPReluParams(size, paramPath) {\r\n        var alpha = tf.tensor1d(extractWeights(size));\r\n        paramMappings.push({ paramPath: paramPath });\r\n        return alpha;\r\n    }\r\n    function extractSharedParams(numFilters, mappedPrefix, isRnet) {\r\n        if (isRnet === void 0) { isRnet = false; }\r\n        var conv1 = extractConvParams(numFilters[0], numFilters[1], 3, mappedPrefix + \"/conv1\");\r\n        var prelu1_alpha = extractPReluParams(numFilters[1], mappedPrefix + \"/prelu1_alpha\");\r\n        var conv2 = extractConvParams(numFilters[1], numFilters[2], 3, mappedPrefix + \"/conv2\");\r\n        var prelu2_alpha = extractPReluParams(numFilters[2], mappedPrefix + \"/prelu2_alpha\");\r\n        var conv3 = extractConvParams(numFilters[2], numFilters[3], isRnet ? 2 : 3, mappedPrefix + \"/conv3\");\r\n        var prelu3_alpha = extractPReluParams(numFilters[3], mappedPrefix + \"/prelu3_alpha\");\r\n        return { conv1: conv1, prelu1_alpha: prelu1_alpha, conv2: conv2, prelu2_alpha: prelu2_alpha, conv3: conv3, prelu3_alpha: prelu3_alpha };\r\n    }\r\n    function extractPNetParams() {\r\n        var sharedParams = extractSharedParams([3, 10, 16, 32], 'pnet');\r\n        var conv4_1 = extractConvParams(32, 2, 1, 'pnet/conv4_1');\r\n        var conv4_2 = extractConvParams(32, 4, 1, 'pnet/conv4_2');\r\n        return __assign(__assign({}, sharedParams), { conv4_1: conv4_1, conv4_2: conv4_2 });\r\n    }\r\n    function extractRNetParams() {\r\n        var sharedParams = extractSharedParams([3, 28, 48, 64], 'rnet', true);\r\n        var fc1 = extractFCParams(576, 128, 'rnet/fc1');\r\n        var prelu4_alpha = extractPReluParams(128, 'rnet/prelu4_alpha');\r\n        var fc2_1 = extractFCParams(128, 2, 'rnet/fc2_1');\r\n        var fc2_2 = extractFCParams(128, 4, 'rnet/fc2_2');\r\n        return __assign(__assign({}, sharedParams), { fc1: fc1, prelu4_alpha: prelu4_alpha, fc2_1: fc2_1, fc2_2: fc2_2 });\r\n    }\r\n    function extractONetParams() {\r\n        var sharedParams = extractSharedParams([3, 32, 64, 64], 'onet');\r\n        var conv4 = extractConvParams(64, 128, 2, 'onet/conv4');\r\n        var prelu4_alpha = extractPReluParams(128, 'onet/prelu4_alpha');\r\n        var fc1 = extractFCParams(1152, 256, 'onet/fc1');\r\n        var prelu5_alpha = extractPReluParams(256, 'onet/prelu5_alpha');\r\n        var fc2_1 = extractFCParams(256, 2, 'onet/fc2_1');\r\n        var fc2_2 = extractFCParams(256, 4, 'onet/fc2_2');\r\n        var fc2_3 = extractFCParams(256, 10, 'onet/fc2_3');\r\n        return __assign(__assign({}, sharedParams), { conv4: conv4, prelu4_alpha: prelu4_alpha, fc1: fc1, prelu5_alpha: prelu5_alpha, fc2_1: fc2_1, fc2_2: fc2_2, fc2_3: fc2_3 });\r\n    }\r\n    return {\r\n        extractPNetParams: extractPNetParams,\r\n        extractRNetParams: extractRNetParams,\r\n        extractONetParams: extractONetParams\r\n    };\r\n}\r\nexport function extractParams(weights) {\r\n    var _a = extractWeightsFactory(weights), extractWeights = _a.extractWeights, getRemainingWeights = _a.getRemainingWeights;\r\n    var paramMappings = [];\r\n    var _b = extractorsFactory(extractWeights, paramMappings), extractPNetParams = _b.extractPNetParams, extractRNetParams = _b.extractRNetParams, extractONetParams = _b.extractONetParams;\r\n    var pnet = extractPNetParams();\r\n    var rnet = extractRNetParams();\r\n    var onet = extractONetParams();\r\n    if (getRemainingWeights().length !== 0) {\r\n        throw new Error(\"weights remaing after extract: \" + getRemainingWeights().length);\r\n    }\r\n    return { params: { pnet: pnet, rnet: rnet, onet: onet }, paramMappings: paramMappings };\r\n}\r\n//# sourceMappingURL=extractParams.js.map","import { __assign } from \"tslib\";\r\nimport { disposeUnusedWeightTensors, extractWeightEntryFactory } from '../common';\r\nfunction extractorsFactory(weightMap, paramMappings) {\r\n    var extractWeightEntry = extractWeightEntryFactory(weightMap, paramMappings);\r\n    function extractConvParams(prefix) {\r\n        var filters = extractWeightEntry(prefix + \"/weights\", 4, prefix + \"/filters\");\r\n        var bias = extractWeightEntry(prefix + \"/bias\", 1);\r\n        return { filters: filters, bias: bias };\r\n    }\r\n    function extractFCParams(prefix) {\r\n        var weights = extractWeightEntry(prefix + \"/weights\", 2);\r\n        var bias = extractWeightEntry(prefix + \"/bias\", 1);\r\n        return { weights: weights, bias: bias };\r\n    }\r\n    function extractPReluParams(paramPath) {\r\n        return extractWeightEntry(paramPath, 1);\r\n    }\r\n    function extractSharedParams(prefix) {\r\n        var conv1 = extractConvParams(prefix + \"/conv1\");\r\n        var prelu1_alpha = extractPReluParams(prefix + \"/prelu1_alpha\");\r\n        var conv2 = extractConvParams(prefix + \"/conv2\");\r\n        var prelu2_alpha = extractPReluParams(prefix + \"/prelu2_alpha\");\r\n        var conv3 = extractConvParams(prefix + \"/conv3\");\r\n        var prelu3_alpha = extractPReluParams(prefix + \"/prelu3_alpha\");\r\n        return { conv1: conv1, prelu1_alpha: prelu1_alpha, conv2: conv2, prelu2_alpha: prelu2_alpha, conv3: conv3, prelu3_alpha: prelu3_alpha };\r\n    }\r\n    function extractPNetParams() {\r\n        var sharedParams = extractSharedParams('pnet');\r\n        var conv4_1 = extractConvParams('pnet/conv4_1');\r\n        var conv4_2 = extractConvParams('pnet/conv4_2');\r\n        return __assign(__assign({}, sharedParams), { conv4_1: conv4_1, conv4_2: conv4_2 });\r\n    }\r\n    function extractRNetParams() {\r\n        var sharedParams = extractSharedParams('rnet');\r\n        var fc1 = extractFCParams('rnet/fc1');\r\n        var prelu4_alpha = extractPReluParams('rnet/prelu4_alpha');\r\n        var fc2_1 = extractFCParams('rnet/fc2_1');\r\n        var fc2_2 = extractFCParams('rnet/fc2_2');\r\n        return __assign(__assign({}, sharedParams), { fc1: fc1, prelu4_alpha: prelu4_alpha, fc2_1: fc2_1, fc2_2: fc2_2 });\r\n    }\r\n    function extractONetParams() {\r\n        var sharedParams = extractSharedParams('onet');\r\n        var conv4 = extractConvParams('onet/conv4');\r\n        var prelu4_alpha = extractPReluParams('onet/prelu4_alpha');\r\n        var fc1 = extractFCParams('onet/fc1');\r\n        var prelu5_alpha = extractPReluParams('onet/prelu5_alpha');\r\n        var fc2_1 = extractFCParams('onet/fc2_1');\r\n        var fc2_2 = extractFCParams('onet/fc2_2');\r\n        var fc2_3 = extractFCParams('onet/fc2_3');\r\n        return __assign(__assign({}, sharedParams), { conv4: conv4, prelu4_alpha: prelu4_alpha, fc1: fc1, prelu5_alpha: prelu5_alpha, fc2_1: fc2_1, fc2_2: fc2_2, fc2_3: fc2_3 });\r\n    }\r\n    return {\r\n        extractPNetParams: extractPNetParams,\r\n        extractRNetParams: extractRNetParams,\r\n        extractONetParams: extractONetParams\r\n    };\r\n}\r\nexport function extractParamsFromWeigthMap(weightMap) {\r\n    var paramMappings = [];\r\n    var _a = extractorsFactory(weightMap, paramMappings), extractPNetParams = _a.extractPNetParams, extractRNetParams = _a.extractRNetParams, extractONetParams = _a.extractONetParams;\r\n    var pnet = extractPNetParams();\r\n    var rnet = extractRNetParams();\r\n    var onet = extractONetParams();\r\n    disposeUnusedWeightTensors(weightMap, paramMappings);\r\n    return { params: { pnet: pnet, rnet: rnet, onet: onet }, paramMappings: paramMappings };\r\n}\r\n//# sourceMappingURL=extractParamsFromWeigthMap.js.map","export function getSizesForScale(scale, _a) {\r\n    var height = _a[0], width = _a[1];\r\n    return {\r\n        height: Math.floor(height * scale),\r\n        width: Math.floor(width * scale)\r\n    };\r\n}\r\n//# sourceMappingURL=getSizesForScale.js.map","import { __extends } from \"tslib\";\r\nimport { Box } from '../classes';\r\nvar MtcnnBox = /** @class */ (function (_super) {\r\n    __extends(MtcnnBox, _super);\r\n    function MtcnnBox(left, top, right, bottom) {\r\n        return _super.call(this, { left: left, top: top, right: right, bottom: bottom }, true) || this;\r\n    }\r\n    return MtcnnBox;\r\n}(Box));\r\nexport { MtcnnBox };\r\n//# sourceMappingURL=MtcnnBox.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nexport function normalize(x) {\r\n    return tf.tidy(function () { return tf.mul(tf.sub(x, tf.scalar(127.5)), tf.scalar(0.0078125)); });\r\n}\r\n//# sourceMappingURL=normalize.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nexport function prelu(x, alpha) {\r\n    return tf.tidy(function () {\r\n        return tf.add(tf.relu(x), tf.mul(alpha, tf.neg(tf.relu(tf.neg(x)))));\r\n    });\r\n}\r\n//# sourceMappingURL=prelu.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { convLayer } from '../common';\r\nimport { prelu } from './prelu';\r\nexport function sharedLayer(x, params, isPnet) {\r\n    if (isPnet === void 0) { isPnet = false; }\r\n    return tf.tidy(function () {\r\n        var out = convLayer(x, params.conv1, 'valid');\r\n        out = prelu(out, params.prelu1_alpha);\r\n        out = tf.maxPool(out, isPnet ? [2, 2] : [3, 3], [2, 2], 'same');\r\n        out = convLayer(out, params.conv2, 'valid');\r\n        out = prelu(out, params.prelu2_alpha);\r\n        out = isPnet ? out : tf.maxPool(out, [3, 3], [2, 2], 'valid');\r\n        out = convLayer(out, params.conv3, 'valid');\r\n        out = prelu(out, params.prelu3_alpha);\r\n        return out;\r\n    });\r\n}\r\n//# sourceMappingURL=sharedLayers.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { BoundingBox, Point } from '../classes';\r\nimport { nonMaxSuppression } from '../ops';\r\nimport { CELL_SIZE, CELL_STRIDE } from './config';\r\nimport { getSizesForScale } from './getSizesForScale';\r\nimport { MtcnnBox } from './MtcnnBox';\r\nimport { normalize } from './normalize';\r\nimport { PNet } from './PNet';\r\nfunction rescaleAndNormalize(x, scale) {\r\n    return tf.tidy(function () {\r\n        var _a = getSizesForScale(scale, x.shape.slice(1)), height = _a.height, width = _a.width;\r\n        var resized = tf.image.resizeBilinear(x, [height, width]);\r\n        var normalized = normalize(resized);\r\n        return tf.transpose(normalized, [0, 2, 1, 3]);\r\n    });\r\n}\r\nfunction extractBoundingBoxes(scoresTensor, regionsTensor, scale, scoreThreshold) {\r\n    // TODO: fix this!, maybe better to use tf.gather here\r\n    var indices = [];\r\n    var scoresData = scoresTensor.arraySync();\r\n    for (var y = 0; y < scoresTensor.shape[0]; y++) {\r\n        for (var x = 0; x < scoresTensor.shape[1]; x++) {\r\n            if (scoresData[y][x] >= scoreThreshold) {\r\n                indices.push(new Point(x, y));\r\n            }\r\n        }\r\n    }\r\n    var boundingBoxes = indices.map(function (idx) {\r\n        var cell = new BoundingBox(Math.round((idx.y * CELL_STRIDE + 1) / scale), Math.round((idx.x * CELL_STRIDE + 1) / scale), Math.round((idx.y * CELL_STRIDE + CELL_SIZE) / scale), Math.round((idx.x * CELL_STRIDE + CELL_SIZE) / scale));\r\n        var score = scoresData[idx.y][idx.x];\r\n        var regionsData = regionsTensor.arraySync();\r\n        var region = new MtcnnBox(regionsData[idx.y][idx.x][0], regionsData[idx.y][idx.x][1], regionsData[idx.y][idx.x][2], regionsData[idx.y][idx.x][3]);\r\n        return {\r\n            cell: cell,\r\n            score: score,\r\n            region: region\r\n        };\r\n    });\r\n    return boundingBoxes;\r\n}\r\nexport function stage1(imgTensor, scales, scoreThreshold, params, stats) {\r\n    stats.stage1 = [];\r\n    var pnetOutputs = scales.map(function (scale) { return tf.tidy(function () {\r\n        var statsForScale = { scale: scale };\r\n        var resized = rescaleAndNormalize(imgTensor, scale);\r\n        var ts = Date.now();\r\n        var _a = PNet(resized, params), prob = _a.prob, regions = _a.regions;\r\n        statsForScale.pnet = Date.now() - ts;\r\n        var scoresTensor = tf.unstack(tf.unstack(prob, 3)[1])[0];\r\n        var regionsTensor = tf.unstack(regions)[0];\r\n        return {\r\n            scoresTensor: scoresTensor,\r\n            regionsTensor: regionsTensor,\r\n            scale: scale,\r\n            statsForScale: statsForScale\r\n        };\r\n    }); });\r\n    var boxesForScale = pnetOutputs.map(function (_a) {\r\n        var scoresTensor = _a.scoresTensor, regionsTensor = _a.regionsTensor, scale = _a.scale, statsForScale = _a.statsForScale;\r\n        var boundingBoxes = extractBoundingBoxes(scoresTensor, regionsTensor, scale, scoreThreshold);\r\n        scoresTensor.dispose();\r\n        regionsTensor.dispose();\r\n        if (!boundingBoxes.length) {\r\n            stats.stage1.push(statsForScale);\r\n            return [];\r\n        }\r\n        var ts = Date.now();\r\n        var indices = nonMaxSuppression(boundingBoxes.map(function (bbox) { return bbox.cell; }), boundingBoxes.map(function (bbox) { return bbox.score; }), 0.5);\r\n        statsForScale.nms = Date.now() - ts;\r\n        statsForScale.numBoxes = indices.length;\r\n        stats.stage1.push(statsForScale);\r\n        return indices.map(function (boxIdx) { return boundingBoxes[boxIdx]; });\r\n    });\r\n    var allBoxes = boxesForScale.reduce(function (all, boxes) { return all.concat(boxes); }, []);\r\n    var finalBoxes = [];\r\n    var finalScores = [];\r\n    if (allBoxes.length > 0) {\r\n        var ts = Date.now();\r\n        var indices = nonMaxSuppression(allBoxes.map(function (bbox) { return bbox.cell; }), allBoxes.map(function (bbox) { return bbox.score; }), 0.7);\r\n        stats.stage1_nms = Date.now() - ts;\r\n        finalScores = indices.map(function (idx) { return allBoxes[idx].score; });\r\n        finalBoxes = indices\r\n            .map(function (idx) { return allBoxes[idx]; })\r\n            .map(function (_a) {\r\n            var cell = _a.cell, region = _a.region;\r\n            return new BoundingBox(cell.left + (region.left * cell.width), cell.top + (region.top * cell.height), cell.right + (region.right * cell.width), cell.bottom + (region.bottom * cell.height)).toSquare().round();\r\n        });\r\n    }\r\n    return {\r\n        boxes: finalBoxes,\r\n        scores: finalScores\r\n    };\r\n}\r\n//# sourceMappingURL=stage1.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { convLayer } from '../common';\r\nimport { sharedLayer } from './sharedLayers';\r\nexport function PNet(x, params) {\r\n    return tf.tidy(function () {\r\n        var out = sharedLayer(x, params, true);\r\n        var conv = convLayer(out, params.conv4_1, 'valid');\r\n        var max = tf.expandDims(tf.max(conv, 3), 3);\r\n        var prob = tf.softmax(tf.sub(conv, max), 3);\r\n        var regions = convLayer(out, params.conv4_2, 'valid');\r\n        return { prob: prob, regions: regions };\r\n    });\r\n}\r\n//# sourceMappingURL=PNet.js.map","export var CELL_STRIDE = 2;\r\nexport var CELL_SIZE = 12;\r\n//# sourceMappingURL=config.js.map","import { __awaiter, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { createCanvas, createCanvasFromMedia, getContext2dOrThrow } from '../dom';\r\nimport { env } from '../env';\r\nimport { normalize } from './normalize';\r\nexport function extractImagePatches(img, boxes, _a) {\r\n    var width = _a.width, height = _a.height;\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var imgCtx, bitmaps, imagePatchesDatas;\r\n        var _this = this;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    imgCtx = getContext2dOrThrow(img);\r\n                    return [4 /*yield*/, Promise.all(boxes.map(function (box) { return __awaiter(_this, void 0, void 0, function () {\r\n                            var _a, y, ey, x, ex, fromX, fromY, imgData;\r\n                            return __generator(this, function (_b) {\r\n                                _a = box.padAtBorders(img.height, img.width), y = _a.y, ey = _a.ey, x = _a.x, ex = _a.ex;\r\n                                fromX = x - 1;\r\n                                fromY = y - 1;\r\n                                imgData = imgCtx.getImageData(fromX, fromY, (ex - fromX), (ey - fromY));\r\n                                return [2 /*return*/, env.isNodejs() ? createCanvasFromMedia(imgData) : createImageBitmap(imgData)];\r\n                            });\r\n                        }); }))];\r\n                case 1:\r\n                    bitmaps = _b.sent();\r\n                    imagePatchesDatas = [];\r\n                    bitmaps.forEach(function (bmp) {\r\n                        var patch = createCanvas({ width: width, height: height });\r\n                        var patchCtx = getContext2dOrThrow(patch);\r\n                        patchCtx.drawImage(bmp, 0, 0, width, height);\r\n                        var data = patchCtx.getImageData(0, 0, width, height).data;\r\n                        var currData = [];\r\n                        // RGBA -> BGR\r\n                        for (var i = 0; i < data.length; i += 4) {\r\n                            currData.push(data[i + 2]);\r\n                            currData.push(data[i + 1]);\r\n                            currData.push(data[i]);\r\n                        }\r\n                        imagePatchesDatas.push(currData);\r\n                    });\r\n                    return [2 /*return*/, imagePatchesDatas.map(function (data) {\r\n                            var t = tf.tidy(function () {\r\n                                var imagePatchTensor = tf.transpose(tf.tensor4d(data, [1, width, height, 3]), [0, 2, 1, 3]).toFloat();\r\n                                return normalize(imagePatchTensor);\r\n                            });\r\n                            return t;\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=extractImagePatches.js.map","import { __awaiter, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { nonMaxSuppression } from '../ops';\r\nimport { extractImagePatches } from './extractImagePatches';\r\nimport { MtcnnBox } from './MtcnnBox';\r\nimport { RNet } from './RNet';\r\nexport function stage2(img, inputBoxes, scoreThreshold, params, stats) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var ts, rnetInputs, rnetOuts, scoresTensor, scores, _a, _b, indices, filteredBoxes, filteredScores, finalBoxes, finalScores, indicesNms, regions_1;\r\n        return __generator(this, function (_c) {\r\n            switch (_c.label) {\r\n                case 0:\r\n                    ts = Date.now();\r\n                    return [4 /*yield*/, extractImagePatches(img, inputBoxes, { width: 24, height: 24 })];\r\n                case 1:\r\n                    rnetInputs = _c.sent();\r\n                    stats.stage2_extractImagePatches = Date.now() - ts;\r\n                    ts = Date.now();\r\n                    rnetOuts = rnetInputs.map(function (rnetInput) {\r\n                        var out = RNet(rnetInput, params);\r\n                        rnetInput.dispose();\r\n                        return out;\r\n                    });\r\n                    stats.stage2_rnet = Date.now() - ts;\r\n                    scoresTensor = rnetOuts.length > 1\r\n                        ? tf.concat(rnetOuts.map(function (out) { return out.scores; }))\r\n                        : rnetOuts[0].scores;\r\n                    _b = (_a = Array).from;\r\n                    return [4 /*yield*/, scoresTensor.data()];\r\n                case 2:\r\n                    scores = _b.apply(_a, [_c.sent()]);\r\n                    scoresTensor.dispose();\r\n                    indices = scores\r\n                        .map(function (score, idx) { return ({ score: score, idx: idx }); })\r\n                        .filter(function (c) { return c.score > scoreThreshold; })\r\n                        .map(function (_a) {\r\n                        var idx = _a.idx;\r\n                        return idx;\r\n                    });\r\n                    filteredBoxes = indices.map(function (idx) { return inputBoxes[idx]; });\r\n                    filteredScores = indices.map(function (idx) { return scores[idx]; });\r\n                    finalBoxes = [];\r\n                    finalScores = [];\r\n                    if (filteredBoxes.length > 0) {\r\n                        ts = Date.now();\r\n                        indicesNms = nonMaxSuppression(filteredBoxes, filteredScores, 0.7);\r\n                        stats.stage2_nms = Date.now() - ts;\r\n                        regions_1 = indicesNms.map(function (idx) {\r\n                            var regionsData = rnetOuts[indices[idx]].regions.arraySync();\r\n                            return new MtcnnBox(regionsData[0][0], regionsData[0][1], regionsData[0][2], regionsData[0][3]);\r\n                        });\r\n                        finalScores = indicesNms.map(function (idx) { return filteredScores[idx]; });\r\n                        finalBoxes = indicesNms.map(function (idx, i) { return filteredBoxes[idx].calibrate(regions_1[i]); });\r\n                    }\r\n                    rnetOuts.forEach(function (t) {\r\n                        t.regions.dispose();\r\n                        t.scores.dispose();\r\n                    });\r\n                    return [2 /*return*/, {\r\n                            boxes: finalBoxes,\r\n                            scores: finalScores\r\n                        }];\r\n            }\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=stage2.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { fullyConnectedLayer } from '../common/fullyConnectedLayer';\r\nimport { prelu } from './prelu';\r\nimport { sharedLayer } from './sharedLayers';\r\nexport function RNet(x, params) {\r\n    return tf.tidy(function () {\r\n        var convOut = sharedLayer(x, params);\r\n        var vectorized = tf.reshape(convOut, [convOut.shape[0], params.fc1.weights.shape[0]]);\r\n        var fc1 = fullyConnectedLayer(vectorized, params.fc1);\r\n        var prelu4 = prelu(fc1, params.prelu4_alpha);\r\n        var fc2_1 = fullyConnectedLayer(prelu4, params.fc2_1);\r\n        var max = tf.expandDims(tf.max(fc2_1, 1), 1);\r\n        var prob = tf.softmax(tf.sub(fc2_1, max), 1);\r\n        var regions = fullyConnectedLayer(prelu4, params.fc2_2);\r\n        var scores = tf.unstack(prob, 1)[1];\r\n        return { scores: scores, regions: regions };\r\n    });\r\n}\r\n//# sourceMappingURL=RNet.js.map","import { __awaiter, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { Point } from '../classes';\r\nimport { nonMaxSuppression } from '../ops';\r\nimport { extractImagePatches } from './extractImagePatches';\r\nimport { MtcnnBox } from './MtcnnBox';\r\nimport { ONet } from './ONet';\r\nexport function stage3(img, inputBoxes, scoreThreshold, params, stats) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var ts, onetInputs, onetOuts, scoresTensor, scores, _a, _b, indices, filteredRegions, filteredBoxes, filteredScores, finalBoxes, finalScores, points, indicesNms;\r\n        return __generator(this, function (_c) {\r\n            switch (_c.label) {\r\n                case 0:\r\n                    ts = Date.now();\r\n                    return [4 /*yield*/, extractImagePatches(img, inputBoxes, { width: 48, height: 48 })];\r\n                case 1:\r\n                    onetInputs = _c.sent();\r\n                    stats.stage3_extractImagePatches = Date.now() - ts;\r\n                    ts = Date.now();\r\n                    onetOuts = onetInputs.map(function (onetInput) {\r\n                        var out = ONet(onetInput, params);\r\n                        onetInput.dispose();\r\n                        return out;\r\n                    });\r\n                    stats.stage3_onet = Date.now() - ts;\r\n                    scoresTensor = onetOuts.length > 1\r\n                        ? tf.concat(onetOuts.map(function (out) { return out.scores; }))\r\n                        : onetOuts[0].scores;\r\n                    _b = (_a = Array).from;\r\n                    return [4 /*yield*/, scoresTensor.data()];\r\n                case 2:\r\n                    scores = _b.apply(_a, [_c.sent()]);\r\n                    scoresTensor.dispose();\r\n                    indices = scores\r\n                        .map(function (score, idx) { return ({ score: score, idx: idx }); })\r\n                        .filter(function (c) { return c.score > scoreThreshold; })\r\n                        .map(function (_a) {\r\n                        var idx = _a.idx;\r\n                        return idx;\r\n                    });\r\n                    filteredRegions = indices.map(function (idx) {\r\n                        var regionsData = onetOuts[idx].regions.arraySync();\r\n                        return new MtcnnBox(regionsData[0][0], regionsData[0][1], regionsData[0][2], regionsData[0][3]);\r\n                    });\r\n                    filteredBoxes = indices\r\n                        .map(function (idx, i) { return inputBoxes[idx].calibrate(filteredRegions[i]); });\r\n                    filteredScores = indices.map(function (idx) { return scores[idx]; });\r\n                    finalBoxes = [];\r\n                    finalScores = [];\r\n                    points = [];\r\n                    if (filteredBoxes.length > 0) {\r\n                        ts = Date.now();\r\n                        indicesNms = nonMaxSuppression(filteredBoxes, filteredScores, 0.7, false);\r\n                        stats.stage3_nms = Date.now() - ts;\r\n                        finalBoxes = indicesNms.map(function (idx) { return filteredBoxes[idx]; });\r\n                        finalScores = indicesNms.map(function (idx) { return filteredScores[idx]; });\r\n                        points = indicesNms.map(function (idx, i) {\r\n                            return Array(5).fill(0).map(function (_, ptIdx) {\r\n                                var pointsData = onetOuts[idx].points.arraySync();\r\n                                return new Point(((pointsData[0][ptIdx] * (finalBoxes[i].width + 1)) + finalBoxes[i].left), ((pointsData[0][ptIdx + 5] * (finalBoxes[i].height + 1)) + finalBoxes[i].top));\r\n                            });\r\n                        });\r\n                    }\r\n                    onetOuts.forEach(function (t) {\r\n                        t.regions.dispose();\r\n                        t.scores.dispose();\r\n                        t.points.dispose();\r\n                    });\r\n                    return [2 /*return*/, {\r\n                            boxes: finalBoxes,\r\n                            scores: finalScores,\r\n                            points: points\r\n                        }];\r\n            }\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=stage3.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nimport { convLayer } from '../common';\r\nimport { fullyConnectedLayer } from '../common/fullyConnectedLayer';\r\nimport { prelu } from './prelu';\r\nimport { sharedLayer } from './sharedLayers';\r\nexport function ONet(x, params) {\r\n    return tf.tidy(function () {\r\n        var out = sharedLayer(x, params);\r\n        out = tf.maxPool(out, [2, 2], [2, 2], 'same');\r\n        out = convLayer(out, params.conv4, 'valid');\r\n        out = prelu(out, params.prelu4_alpha);\r\n        var vectorized = tf.reshape(out, [out.shape[0], params.fc1.weights.shape[0]]);\r\n        var fc1 = fullyConnectedLayer(vectorized, params.fc1);\r\n        var prelu5 = prelu(fc1, params.prelu5_alpha);\r\n        var fc2_1 = fullyConnectedLayer(prelu5, params.fc2_1);\r\n        var max = tf.expandDims(tf.max(fc2_1, 1), 1);\r\n        var prob = tf.softmax(tf.sub(fc2_1, max), 1);\r\n        var regions = fullyConnectedLayer(prelu5, params.fc2_2);\r\n        var points = fullyConnectedLayer(prelu5, params.fc2_3);\r\n        var scores = tf.unstack(prob, 1)[1];\r\n        return { scores: scores, regions: regions, points: points };\r\n    });\r\n}\r\n//# sourceMappingURL=ONet.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { Point, Rect } from '../classes';\r\nimport { FaceDetection } from '../classes/FaceDetection';\r\nimport { FaceLandmarks5 } from '../classes/FaceLandmarks5';\r\nimport { toNetInput } from '../dom';\r\nimport { extendWithFaceDetection, extendWithFaceLandmarks } from '../factories';\r\nimport { NeuralNetwork } from '../NeuralNetwork';\r\nimport { bgrToRgbTensor } from './bgrToRgbTensor';\r\nimport { CELL_SIZE } from './config';\r\nimport { extractParams } from './extractParams';\r\nimport { extractParamsFromWeigthMap } from './extractParamsFromWeigthMap';\r\nimport { getSizesForScale } from './getSizesForScale';\r\nimport { MtcnnOptions } from './MtcnnOptions';\r\nimport { pyramidDown } from './pyramidDown';\r\nimport { stage1 } from './stage1';\r\nimport { stage2 } from './stage2';\r\nimport { stage3 } from './stage3';\r\nvar Mtcnn = /** @class */ (function (_super) {\r\n    __extends(Mtcnn, _super);\r\n    function Mtcnn() {\r\n        return _super.call(this, 'Mtcnn') || this;\r\n    }\r\n    Mtcnn.prototype.load = function (weightsOrUrl) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                console.warn('mtcnn is deprecated and will be removed soon');\r\n                return [2 /*return*/, _super.prototype.load.call(this, weightsOrUrl)];\r\n            });\r\n        });\r\n    };\r\n    Mtcnn.prototype.loadFromDisk = function (filePath) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                console.warn('mtcnn is deprecated and will be removed soon');\r\n                return [2 /*return*/, _super.prototype.loadFromDisk.call(this, filePath)];\r\n            });\r\n        });\r\n    };\r\n    Mtcnn.prototype.forwardInput = function (input, forwardParams) {\r\n        if (forwardParams === void 0) { forwardParams = {}; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var params, inputCanvas, stats, tsTotal, imgTensor, onReturn, _a, height, width, _b, minFaceSize, scaleFactor, maxNumScales, scoreThresholds, scaleSteps, scales, ts, out1, out2, out3, results;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        params = this.params;\r\n                        if (!params) {\r\n                            throw new Error('Mtcnn - load model before inference');\r\n                        }\r\n                        inputCanvas = input.canvases[0];\r\n                        if (!inputCanvas) {\r\n                            throw new Error('Mtcnn - inputCanvas is not defined, note that passing tensors into Mtcnn.forwardInput is not supported yet.');\r\n                        }\r\n                        stats = {};\r\n                        tsTotal = Date.now();\r\n                        imgTensor = tf.tidy(function () {\r\n                            return bgrToRgbTensor(tf.expandDims(tf.browser.fromPixels(inputCanvas)).toFloat());\r\n                        });\r\n                        onReturn = function (results) {\r\n                            // dispose tensors on return\r\n                            imgTensor.dispose();\r\n                            stats.total = Date.now() - tsTotal;\r\n                            return results;\r\n                        };\r\n                        _a = imgTensor.shape.slice(1), height = _a[0], width = _a[1];\r\n                        _b = new MtcnnOptions(forwardParams), minFaceSize = _b.minFaceSize, scaleFactor = _b.scaleFactor, maxNumScales = _b.maxNumScales, scoreThresholds = _b.scoreThresholds, scaleSteps = _b.scaleSteps;\r\n                        scales = (scaleSteps || pyramidDown(minFaceSize, scaleFactor, [height, width]))\r\n                            .filter(function (scale) {\r\n                            var sizes = getSizesForScale(scale, [height, width]);\r\n                            return Math.min(sizes.width, sizes.height) > CELL_SIZE;\r\n                        })\r\n                            .slice(0, maxNumScales);\r\n                        stats.scales = scales;\r\n                        stats.pyramid = scales.map(function (scale) { return getSizesForScale(scale, [height, width]); });\r\n                        ts = Date.now();\r\n                        return [4 /*yield*/, stage1(imgTensor, scales, scoreThresholds[0], params.pnet, stats)];\r\n                    case 1:\r\n                        out1 = _c.sent();\r\n                        stats.total_stage1 = Date.now() - ts;\r\n                        if (!out1.boxes.length) {\r\n                            return [2 /*return*/, onReturn({ results: [], stats: stats })];\r\n                        }\r\n                        stats.stage2_numInputBoxes = out1.boxes.length;\r\n                        // using the inputCanvas to extract and resize the image patches, since it is faster\r\n                        // than doing this on the gpu\r\n                        ts = Date.now();\r\n                        return [4 /*yield*/, stage2(inputCanvas, out1.boxes, scoreThresholds[1], params.rnet, stats)];\r\n                    case 2:\r\n                        out2 = _c.sent();\r\n                        stats.total_stage2 = Date.now() - ts;\r\n                        if (!out2.boxes.length) {\r\n                            return [2 /*return*/, onReturn({ results: [], stats: stats })];\r\n                        }\r\n                        stats.stage3_numInputBoxes = out2.boxes.length;\r\n                        ts = Date.now();\r\n                        return [4 /*yield*/, stage3(inputCanvas, out2.boxes, scoreThresholds[2], params.onet, stats)];\r\n                    case 3:\r\n                        out3 = _c.sent();\r\n                        stats.total_stage3 = Date.now() - ts;\r\n                        results = out3.boxes.map(function (box, idx) { return extendWithFaceLandmarks(extendWithFaceDetection({}, new FaceDetection(out3.scores[idx], new Rect(box.left / width, box.top / height, box.width / width, box.height / height), {\r\n                            height: height,\r\n                            width: width\r\n                        })), new FaceLandmarks5(out3.points[idx].map(function (pt) { return pt.sub(new Point(box.left, box.top)).div(new Point(box.width, box.height)); }), { width: box.width, height: box.height })); });\r\n                        return [2 /*return*/, onReturn({ results: results, stats: stats })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Mtcnn.prototype.forward = function (input, forwardParams) {\r\n        if (forwardParams === void 0) { forwardParams = {}; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this.forwardInput;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1: return [4 /*yield*/, _a.apply(this, [_b.sent(),\r\n                            forwardParams])];\r\n                    case 2: return [2 /*return*/, (_b.sent()).results];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Mtcnn.prototype.forwardWithStats = function (input, forwardParams) {\r\n        if (forwardParams === void 0) { forwardParams = {}; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this.forwardInput;\r\n                        return [4 /*yield*/, toNetInput(input)];\r\n                    case 1: return [2 /*return*/, _a.apply(this, [_b.sent(),\r\n                            forwardParams])];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Mtcnn.prototype.getDefaultModelName = function () {\r\n        return 'mtcnn_model';\r\n    };\r\n    Mtcnn.prototype.extractParamsFromWeigthMap = function (weightMap) {\r\n        return extractParamsFromWeigthMap(weightMap);\r\n    };\r\n    Mtcnn.prototype.extractParams = function (weights) {\r\n        return extractParams(weights);\r\n    };\r\n    return Mtcnn;\r\n}(NeuralNetwork));\r\nexport { Mtcnn };\r\n//# sourceMappingURL=Mtcnn.js.map","import * as tf from '@tensorflow/tfjs-core';\r\nexport function bgrToRgbTensor(tensor) {\r\n    return tf.tidy(function () { return tf.stack(tf.unstack(tensor, 3).reverse(), 3); });\r\n}\r\n//# sourceMappingURL=bgrToRgbTensor.js.map","import { CELL_SIZE } from './config';\r\nexport function pyramidDown(minFaceSize, scaleFactor, dims) {\r\n    var height = dims[0], width = dims[1];\r\n    var m = CELL_SIZE / minFaceSize;\r\n    var scales = [];\r\n    var minLayer = Math.min(height, width) * m;\r\n    var exp = 0;\r\n    while (minLayer >= 12) {\r\n        scales.push(m * Math.pow(scaleFactor, exp));\r\n        minLayer = minLayer * scaleFactor;\r\n        exp += 1;\r\n    }\r\n    return scales;\r\n}\r\n//# sourceMappingURL=pyramidDown.js.map","import { Point } from '../classes';\r\nexport var IOU_THRESHOLD = 0.4;\r\nexport var BOX_ANCHORS = [\r\n    new Point(1.603231, 2.094468),\r\n    new Point(6.041143, 7.080126),\r\n    new Point(2.882459, 3.518061),\r\n    new Point(4.266906, 5.178857),\r\n    new Point(9.041765, 10.66308)\r\n];\r\nexport var MEAN_RGB = [117.001, 114.697, 97.404];\r\n//# sourceMappingURL=const.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport { FaceDetection } from '../classes';\r\nimport { TinyYolov2Base } from '../tinyYolov2/TinyYolov2Base';\r\nimport { BOX_ANCHORS, IOU_THRESHOLD, MEAN_RGB } from './const';\r\nvar TinyFaceDetector = /** @class */ (function (_super) {\r\n    __extends(TinyFaceDetector, _super);\r\n    function TinyFaceDetector() {\r\n        var _this = this;\r\n        var config = {\r\n            withSeparableConvs: true,\r\n            iouThreshold: IOU_THRESHOLD,\r\n            classes: ['face'],\r\n            anchors: BOX_ANCHORS,\r\n            meanRgb: MEAN_RGB,\r\n            isFirstLayerConv2d: true,\r\n            filterSizes: [3, 16, 32, 64, 128, 256, 512]\r\n        };\r\n        _this = _super.call(this, config) || this;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(TinyFaceDetector.prototype, \"anchors\", {\r\n        get: function () {\r\n            return this.config.anchors;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TinyFaceDetector.prototype.locateFaces = function (input, forwardParams) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var objectDetections;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.detect(input, forwardParams)];\r\n                    case 1:\r\n                        objectDetections = _a.sent();\r\n                        return [2 /*return*/, objectDetections.map(function (det) { return new FaceDetection(det.score, det.relativeBox, { width: det.imageWidth, height: det.imageHeight }); })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    TinyFaceDetector.prototype.getDefaultModelName = function () {\r\n        return 'tiny_face_detector_model';\r\n    };\r\n    TinyFaceDetector.prototype.extractParamsFromWeigthMap = function (weightMap) {\r\n        return _super.prototype.extractParamsFromWeigthMap.call(this, weightMap);\r\n    };\r\n    return TinyFaceDetector;\r\n}(TinyYolov2Base));\r\nexport { TinyFaceDetector };\r\n//# sourceMappingURL=TinyFaceDetector.js.map","import { AgeGenderNet } from '../ageGenderNet/AgeGenderNet';\r\nimport { FaceExpressionNet } from '../faceExpressionNet/FaceExpressionNet';\r\nimport { FaceLandmark68Net } from '../faceLandmarkNet/FaceLandmark68Net';\r\nimport { FaceLandmark68TinyNet } from '../faceLandmarkNet/FaceLandmark68TinyNet';\r\nimport { FaceRecognitionNet } from '../faceRecognitionNet/FaceRecognitionNet';\r\nimport { Mtcnn } from '../mtcnn/Mtcnn';\r\nimport { SsdMobilenetv1 } from '../ssdMobilenetv1/SsdMobilenetv1';\r\nimport { TinyFaceDetector } from '../tinyFaceDetector/TinyFaceDetector';\r\nimport { TinyYolov2 } from '../tinyYolov2';\r\nexport var nets = {\r\n    ssdMobilenetv1: new SsdMobilenetv1(),\r\n    tinyFaceDetector: new TinyFaceDetector(),\r\n    tinyYolov2: new TinyYolov2(),\r\n    mtcnn: new Mtcnn(),\r\n    faceLandmark68Net: new FaceLandmark68Net(),\r\n    faceLandmark68TinyNet: new FaceLandmark68TinyNet(),\r\n    faceRecognitionNet: new FaceRecognitionNet(),\r\n    faceExpressionNet: new FaceExpressionNet(),\r\n    ageGenderNet: new AgeGenderNet()\r\n};\r\n/**\r\n * Attempts to detect all faces in an image using SSD Mobilenetv1 Network.\r\n *\r\n * @param input The input image.\r\n * @param options (optional, default: see SsdMobilenetv1Options constructor for default parameters).\r\n * @returns Bounding box of each face with score.\r\n */\r\nexport var ssdMobilenetv1 = function (input, options) {\r\n    return nets.ssdMobilenetv1.locateFaces(input, options);\r\n};\r\n/**\r\n * Attempts to detect all faces in an image using the Tiny Face Detector.\r\n *\r\n * @param input The input image.\r\n * @param options (optional, default: see TinyFaceDetectorOptions constructor for default parameters).\r\n * @returns Bounding box of each face with score.\r\n */\r\nexport var tinyFaceDetector = function (input, options) {\r\n    return nets.tinyFaceDetector.locateFaces(input, options);\r\n};\r\n/**\r\n * Attempts to detect all faces in an image using the Tiny Yolov2 Network.\r\n *\r\n * @param input The input image.\r\n * @param options (optional, default: see TinyYolov2Options constructor for default parameters).\r\n * @returns Bounding box of each face with score.\r\n */\r\nexport var tinyYolov2 = function (input, options) {\r\n    return nets.tinyYolov2.locateFaces(input, options);\r\n};\r\n/**\r\n * Attempts to detect all faces in an image and the 5 point face landmarks\r\n * of each detected face using the MTCNN Network.\r\n *\r\n * @param input The input image.\r\n * @param options (optional, default: see MtcnnOptions constructor for default parameters).\r\n * @returns Bounding box of each face with score and 5 point face landmarks.\r\n */\r\nexport var mtcnn = function (input, options) {\r\n    return nets.mtcnn.forward(input, options);\r\n};\r\n/**\r\n * Detects the 68 point face landmark positions of the face shown in an image.\r\n *\r\n * @param inputs The face image extracted from the bounding box of a face. Can\r\n * also be an array of input images, which will be batch processed.\r\n * @returns 68 point face landmarks or array thereof in case of batch input.\r\n */\r\nexport var detectFaceLandmarks = function (input) {\r\n    return nets.faceLandmark68Net.detectLandmarks(input);\r\n};\r\n/**\r\n * Detects the 68 point face landmark positions of the face shown in an image\r\n * using a tinier version of the 68 point face landmark model, which is slightly\r\n * faster at inference, but also slightly less accurate.\r\n *\r\n * @param inputs The face image extracted from the bounding box of a face. Can\r\n * also be an array of input images, which will be batch processed.\r\n * @returns 68 point face landmarks or array thereof in case of batch input.\r\n */\r\nexport var detectFaceLandmarksTiny = function (input) {\r\n    return nets.faceLandmark68TinyNet.detectLandmarks(input);\r\n};\r\n/**\r\n * Computes a 128 entry vector (face descriptor / face embeddings) from the face shown in an image,\r\n * which uniquely represents the features of that persons face. The computed face descriptor can\r\n * be used to measure the similarity between faces, by computing the euclidean distance of two\r\n * face descriptors.\r\n *\r\n * @param inputs The face image extracted from the aligned bounding box of a face. Can\r\n * also be an array of input images, which will be batch processed.\r\n * @returns Face descriptor with 128 entries or array thereof in case of batch input.\r\n */\r\nexport var computeFaceDescriptor = function (input) {\r\n    return nets.faceRecognitionNet.computeFaceDescriptor(input);\r\n};\r\n/**\r\n * Recognizes the facial expressions from a face image.\r\n *\r\n * @param inputs The face image extracted from the bounding box of a face. Can\r\n * also be an array of input images, which will be batch processed.\r\n * @returns Facial expressions with corresponding probabilities or array thereof in case of batch input.\r\n */\r\nexport var recognizeFaceExpressions = function (input) {\r\n    return nets.faceExpressionNet.predictExpressions(input);\r\n};\r\n/**\r\n * Predicts age and gender from a face image.\r\n *\r\n * @param inputs The face image extracted from the bounding box of a face. Can\r\n * also be an array of input images, which will be batch processed.\r\n * @returns Predictions with age, gender and gender probability or array thereof in case of batch input.\r\n */\r\nexport var predictAgeAndGender = function (input) {\r\n    return nets.ageGenderNet.predictAgeAndGender(input);\r\n};\r\nexport var loadSsdMobilenetv1Model = function (url) { return nets.ssdMobilenetv1.load(url); };\r\nexport var loadTinyFaceDetectorModel = function (url) { return nets.tinyFaceDetector.load(url); };\r\nexport var loadMtcnnModel = function (url) { return nets.mtcnn.load(url); };\r\nexport var loadTinyYolov2Model = function (url) { return nets.tinyYolov2.load(url); };\r\nexport var loadFaceLandmarkModel = function (url) { return nets.faceLandmark68Net.load(url); };\r\nexport var loadFaceLandmarkTinyModel = function (url) { return nets.faceLandmark68TinyNet.load(url); };\r\nexport var loadFaceRecognitionModel = function (url) { return nets.faceRecognitionNet.load(url); };\r\nexport var loadFaceExpressionModel = function (url) { return nets.faceExpressionNet.load(url); };\r\nexport var loadAgeGenderModel = function (url) { return nets.ageGenderNet.load(url); };\r\n// backward compatibility\r\nexport var loadFaceDetectionModel = loadSsdMobilenetv1Model;\r\nexport var locateFaces = ssdMobilenetv1;\r\nexport var detectLandmarks = detectFaceLandmarks;\r\n//# sourceMappingURL=nets.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport { extendWithFaceExpressions } from '../factories/WithFaceExpressions';\r\nimport { ComposableTask } from './ComposableTask';\r\nimport { ComputeAllFaceDescriptorsTask, ComputeSingleFaceDescriptorTask } from './ComputeFaceDescriptorsTasks';\r\nimport { extractAllFacesAndComputeResults, extractSingleFaceAndComputeResult } from './extractFacesAndComputeResults';\r\nimport { nets } from './nets';\r\nimport { PredictAllAgeAndGenderTask, PredictAllAgeAndGenderWithFaceAlignmentTask, PredictSingleAgeAndGenderTask, PredictSingleAgeAndGenderWithFaceAlignmentTask, } from './PredictAgeAndGenderTask';\r\nvar PredictFaceExpressionsTaskBase = /** @class */ (function (_super) {\r\n    __extends(PredictFaceExpressionsTaskBase, _super);\r\n    function PredictFaceExpressionsTaskBase(parentTask, input, extractedFaces) {\r\n        var _this = _super.call(this) || this;\r\n        _this.parentTask = parentTask;\r\n        _this.input = input;\r\n        _this.extractedFaces = extractedFaces;\r\n        return _this;\r\n    }\r\n    return PredictFaceExpressionsTaskBase;\r\n}(ComposableTask));\r\nexport { PredictFaceExpressionsTaskBase };\r\nvar PredictAllFaceExpressionsTask = /** @class */ (function (_super) {\r\n    __extends(PredictAllFaceExpressionsTask, _super);\r\n    function PredictAllFaceExpressionsTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PredictAllFaceExpressionsTask.prototype.run = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parentResults, faceExpressionsByFace;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.parentTask];\r\n                    case 1:\r\n                        parentResults = _a.sent();\r\n                        return [4 /*yield*/, extractAllFacesAndComputeResults(parentResults, this.input, function (faces) { return __awaiter(_this, void 0, void 0, function () {\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0: return [4 /*yield*/, Promise.all(faces.map(function (face) { return nets.faceExpressionNet.predictExpressions(face); }))];\r\n                                        case 1: return [2 /*return*/, _a.sent()];\r\n                                    }\r\n                                });\r\n                            }); }, this.extractedFaces)];\r\n                    case 2:\r\n                        faceExpressionsByFace = _a.sent();\r\n                        return [2 /*return*/, parentResults.map(function (parentResult, i) { return extendWithFaceExpressions(parentResult, faceExpressionsByFace[i]); })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PredictAllFaceExpressionsTask.prototype.withAgeAndGender = function () {\r\n        return new PredictAllAgeAndGenderTask(this, this.input);\r\n    };\r\n    return PredictAllFaceExpressionsTask;\r\n}(PredictFaceExpressionsTaskBase));\r\nexport { PredictAllFaceExpressionsTask };\r\nvar PredictSingleFaceExpressionsTask = /** @class */ (function (_super) {\r\n    __extends(PredictSingleFaceExpressionsTask, _super);\r\n    function PredictSingleFaceExpressionsTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PredictSingleFaceExpressionsTask.prototype.run = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parentResult, faceExpressions;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.parentTask];\r\n                    case 1:\r\n                        parentResult = _a.sent();\r\n                        if (!parentResult) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, extractSingleFaceAndComputeResult(parentResult, this.input, function (face) { return nets.faceExpressionNet.predictExpressions(face); }, this.extractedFaces)];\r\n                    case 2:\r\n                        faceExpressions = _a.sent();\r\n                        return [2 /*return*/, extendWithFaceExpressions(parentResult, faceExpressions)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PredictSingleFaceExpressionsTask.prototype.withAgeAndGender = function () {\r\n        return new PredictSingleAgeAndGenderTask(this, this.input);\r\n    };\r\n    return PredictSingleFaceExpressionsTask;\r\n}(PredictFaceExpressionsTaskBase));\r\nexport { PredictSingleFaceExpressionsTask };\r\nvar PredictAllFaceExpressionsWithFaceAlignmentTask = /** @class */ (function (_super) {\r\n    __extends(PredictAllFaceExpressionsWithFaceAlignmentTask, _super);\r\n    function PredictAllFaceExpressionsWithFaceAlignmentTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PredictAllFaceExpressionsWithFaceAlignmentTask.prototype.withAgeAndGender = function () {\r\n        return new PredictAllAgeAndGenderWithFaceAlignmentTask(this, this.input);\r\n    };\r\n    PredictAllFaceExpressionsWithFaceAlignmentTask.prototype.withFaceDescriptors = function () {\r\n        return new ComputeAllFaceDescriptorsTask(this, this.input);\r\n    };\r\n    return PredictAllFaceExpressionsWithFaceAlignmentTask;\r\n}(PredictAllFaceExpressionsTask));\r\nexport { PredictAllFaceExpressionsWithFaceAlignmentTask };\r\nvar PredictSingleFaceExpressionsWithFaceAlignmentTask = /** @class */ (function (_super) {\r\n    __extends(PredictSingleFaceExpressionsWithFaceAlignmentTask, _super);\r\n    function PredictSingleFaceExpressionsWithFaceAlignmentTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PredictSingleFaceExpressionsWithFaceAlignmentTask.prototype.withAgeAndGender = function () {\r\n        return new PredictSingleAgeAndGenderWithFaceAlignmentTask(this, this.input);\r\n    };\r\n    PredictSingleFaceExpressionsWithFaceAlignmentTask.prototype.withFaceDescriptor = function () {\r\n        return new ComputeSingleFaceDescriptorTask(this, this.input);\r\n    };\r\n    return PredictSingleFaceExpressionsWithFaceAlignmentTask;\r\n}(PredictSingleFaceExpressionsTask));\r\nexport { PredictSingleFaceExpressionsWithFaceAlignmentTask };\r\n//# sourceMappingURL=PredictFaceExpressionsTask.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport { extendWithAge } from '../factories/WithAge';\r\nimport { extendWithGender } from '../factories/WithGender';\r\nimport { ComposableTask } from './ComposableTask';\r\nimport { ComputeAllFaceDescriptorsTask, ComputeSingleFaceDescriptorTask } from './ComputeFaceDescriptorsTasks';\r\nimport { extractAllFacesAndComputeResults, extractSingleFaceAndComputeResult } from './extractFacesAndComputeResults';\r\nimport { nets } from './nets';\r\nimport { PredictAllFaceExpressionsTask, PredictAllFaceExpressionsWithFaceAlignmentTask, PredictSingleFaceExpressionsTask, PredictSingleFaceExpressionsWithFaceAlignmentTask, } from './PredictFaceExpressionsTask';\r\nvar PredictAgeAndGenderTaskBase = /** @class */ (function (_super) {\r\n    __extends(PredictAgeAndGenderTaskBase, _super);\r\n    function PredictAgeAndGenderTaskBase(parentTask, input, extractedFaces) {\r\n        var _this = _super.call(this) || this;\r\n        _this.parentTask = parentTask;\r\n        _this.input = input;\r\n        _this.extractedFaces = extractedFaces;\r\n        return _this;\r\n    }\r\n    return PredictAgeAndGenderTaskBase;\r\n}(ComposableTask));\r\nexport { PredictAgeAndGenderTaskBase };\r\nvar PredictAllAgeAndGenderTask = /** @class */ (function (_super) {\r\n    __extends(PredictAllAgeAndGenderTask, _super);\r\n    function PredictAllAgeAndGenderTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PredictAllAgeAndGenderTask.prototype.run = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parentResults, ageAndGenderByFace;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.parentTask];\r\n                    case 1:\r\n                        parentResults = _a.sent();\r\n                        return [4 /*yield*/, extractAllFacesAndComputeResults(parentResults, this.input, function (faces) { return __awaiter(_this, void 0, void 0, function () {\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0: return [4 /*yield*/, Promise.all(faces.map(function (face) { return nets.ageGenderNet.predictAgeAndGender(face); }))];\r\n                                        case 1: return [2 /*return*/, _a.sent()];\r\n                                    }\r\n                                });\r\n                            }); }, this.extractedFaces)];\r\n                    case 2:\r\n                        ageAndGenderByFace = _a.sent();\r\n                        return [2 /*return*/, parentResults.map(function (parentResult, i) {\r\n                                var _a = ageAndGenderByFace[i], age = _a.age, gender = _a.gender, genderProbability = _a.genderProbability;\r\n                                return extendWithAge(extendWithGender(parentResult, gender, genderProbability), age);\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PredictAllAgeAndGenderTask.prototype.withFaceExpressions = function () {\r\n        return new PredictAllFaceExpressionsTask(this, this.input);\r\n    };\r\n    return PredictAllAgeAndGenderTask;\r\n}(PredictAgeAndGenderTaskBase));\r\nexport { PredictAllAgeAndGenderTask };\r\nvar PredictSingleAgeAndGenderTask = /** @class */ (function (_super) {\r\n    __extends(PredictSingleAgeAndGenderTask, _super);\r\n    function PredictSingleAgeAndGenderTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PredictSingleAgeAndGenderTask.prototype.run = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parentResult, _a, age, gender, genderProbability;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.parentTask];\r\n                    case 1:\r\n                        parentResult = _b.sent();\r\n                        if (!parentResult) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, extractSingleFaceAndComputeResult(parentResult, this.input, function (face) { return nets.ageGenderNet.predictAgeAndGender(face); }, this.extractedFaces)];\r\n                    case 2:\r\n                        _a = _b.sent(), age = _a.age, gender = _a.gender, genderProbability = _a.genderProbability;\r\n                        return [2 /*return*/, extendWithAge(extendWithGender(parentResult, gender, genderProbability), age)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PredictSingleAgeAndGenderTask.prototype.withFaceExpressions = function () {\r\n        return new PredictSingleFaceExpressionsTask(this, this.input);\r\n    };\r\n    return PredictSingleAgeAndGenderTask;\r\n}(PredictAgeAndGenderTaskBase));\r\nexport { PredictSingleAgeAndGenderTask };\r\nvar PredictAllAgeAndGenderWithFaceAlignmentTask = /** @class */ (function (_super) {\r\n    __extends(PredictAllAgeAndGenderWithFaceAlignmentTask, _super);\r\n    function PredictAllAgeAndGenderWithFaceAlignmentTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PredictAllAgeAndGenderWithFaceAlignmentTask.prototype.withFaceExpressions = function () {\r\n        return new PredictAllFaceExpressionsWithFaceAlignmentTask(this, this.input);\r\n    };\r\n    PredictAllAgeAndGenderWithFaceAlignmentTask.prototype.withFaceDescriptors = function () {\r\n        return new ComputeAllFaceDescriptorsTask(this, this.input);\r\n    };\r\n    return PredictAllAgeAndGenderWithFaceAlignmentTask;\r\n}(PredictAllAgeAndGenderTask));\r\nexport { PredictAllAgeAndGenderWithFaceAlignmentTask };\r\nvar PredictSingleAgeAndGenderWithFaceAlignmentTask = /** @class */ (function (_super) {\r\n    __extends(PredictSingleAgeAndGenderWithFaceAlignmentTask, _super);\r\n    function PredictSingleAgeAndGenderWithFaceAlignmentTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    PredictSingleAgeAndGenderWithFaceAlignmentTask.prototype.withFaceExpressions = function () {\r\n        return new PredictSingleFaceExpressionsWithFaceAlignmentTask(this, this.input);\r\n    };\r\n    PredictSingleAgeAndGenderWithFaceAlignmentTask.prototype.withFaceDescriptor = function () {\r\n        return new ComputeSingleFaceDescriptorTask(this, this.input);\r\n    };\r\n    return PredictSingleAgeAndGenderWithFaceAlignmentTask;\r\n}(PredictSingleAgeAndGenderTask));\r\nexport { PredictSingleAgeAndGenderWithFaceAlignmentTask };\r\n//# sourceMappingURL=PredictAgeAndGenderTask.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport { extendWithFaceDescriptor } from '../factories/WithFaceDescriptor';\r\nimport { ComposableTask } from './ComposableTask';\r\nimport { extractAllFacesAndComputeResults, extractSingleFaceAndComputeResult } from './extractFacesAndComputeResults';\r\nimport { nets } from './nets';\r\nimport { PredictAllAgeAndGenderWithFaceAlignmentTask, PredictSingleAgeAndGenderWithFaceAlignmentTask, } from './PredictAgeAndGenderTask';\r\nimport { PredictAllFaceExpressionsWithFaceAlignmentTask, PredictSingleFaceExpressionsWithFaceAlignmentTask, } from './PredictFaceExpressionsTask';\r\nvar ComputeFaceDescriptorsTaskBase = /** @class */ (function (_super) {\r\n    __extends(ComputeFaceDescriptorsTaskBase, _super);\r\n    function ComputeFaceDescriptorsTaskBase(parentTask, input) {\r\n        var _this = _super.call(this) || this;\r\n        _this.parentTask = parentTask;\r\n        _this.input = input;\r\n        return _this;\r\n    }\r\n    return ComputeFaceDescriptorsTaskBase;\r\n}(ComposableTask));\r\nexport { ComputeFaceDescriptorsTaskBase };\r\nvar ComputeAllFaceDescriptorsTask = /** @class */ (function (_super) {\r\n    __extends(ComputeAllFaceDescriptorsTask, _super);\r\n    function ComputeAllFaceDescriptorsTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ComputeAllFaceDescriptorsTask.prototype.run = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parentResults, descriptors;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.parentTask];\r\n                    case 1:\r\n                        parentResults = _a.sent();\r\n                        return [4 /*yield*/, extractAllFacesAndComputeResults(parentResults, this.input, function (faces) { return Promise.all(faces.map(function (face) {\r\n                                return nets.faceRecognitionNet.computeFaceDescriptor(face);\r\n                            })); }, null, function (parentResult) { return parentResult.landmarks.align(null, { useDlibAlignment: true }); })];\r\n                    case 2:\r\n                        descriptors = _a.sent();\r\n                        return [2 /*return*/, descriptors.map(function (descriptor, i) { return extendWithFaceDescriptor(parentResults[i], descriptor); })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ComputeAllFaceDescriptorsTask.prototype.withFaceExpressions = function () {\r\n        return new PredictAllFaceExpressionsWithFaceAlignmentTask(this, this.input);\r\n    };\r\n    ComputeAllFaceDescriptorsTask.prototype.withAgeAndGender = function () {\r\n        return new PredictAllAgeAndGenderWithFaceAlignmentTask(this, this.input);\r\n    };\r\n    return ComputeAllFaceDescriptorsTask;\r\n}(ComputeFaceDescriptorsTaskBase));\r\nexport { ComputeAllFaceDescriptorsTask };\r\nvar ComputeSingleFaceDescriptorTask = /** @class */ (function (_super) {\r\n    __extends(ComputeSingleFaceDescriptorTask, _super);\r\n    function ComputeSingleFaceDescriptorTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ComputeSingleFaceDescriptorTask.prototype.run = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parentResult, descriptor;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.parentTask];\r\n                    case 1:\r\n                        parentResult = _a.sent();\r\n                        if (!parentResult) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        return [4 /*yield*/, extractSingleFaceAndComputeResult(parentResult, this.input, function (face) { return nets.faceRecognitionNet.computeFaceDescriptor(face); }, null, function (parentResult) { return parentResult.landmarks.align(null, { useDlibAlignment: true }); })];\r\n                    case 2:\r\n                        descriptor = _a.sent();\r\n                        return [2 /*return*/, extendWithFaceDescriptor(parentResult, descriptor)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ComputeSingleFaceDescriptorTask.prototype.withFaceExpressions = function () {\r\n        return new PredictSingleFaceExpressionsWithFaceAlignmentTask(this, this.input);\r\n    };\r\n    ComputeSingleFaceDescriptorTask.prototype.withAgeAndGender = function () {\r\n        return new PredictSingleAgeAndGenderWithFaceAlignmentTask(this, this.input);\r\n    };\r\n    return ComputeSingleFaceDescriptorTask;\r\n}(ComputeFaceDescriptorsTaskBase));\r\nexport { ComputeSingleFaceDescriptorTask };\r\n//# sourceMappingURL=ComputeFaceDescriptorsTasks.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport { extractFaces, extractFaceTensors } from '../dom';\r\nimport { extendWithFaceLandmarks } from '../factories/WithFaceLandmarks';\r\nimport { ComposableTask } from './ComposableTask';\r\nimport { ComputeAllFaceDescriptorsTask, ComputeSingleFaceDescriptorTask } from './ComputeFaceDescriptorsTasks';\r\nimport { nets } from './nets';\r\nimport { PredictAllAgeAndGenderWithFaceAlignmentTask, PredictSingleAgeAndGenderWithFaceAlignmentTask, } from './PredictAgeAndGenderTask';\r\nimport { PredictAllFaceExpressionsWithFaceAlignmentTask, PredictSingleFaceExpressionsWithFaceAlignmentTask, } from './PredictFaceExpressionsTask';\r\nvar DetectFaceLandmarksTaskBase = /** @class */ (function (_super) {\r\n    __extends(DetectFaceLandmarksTaskBase, _super);\r\n    function DetectFaceLandmarksTaskBase(parentTask, input, useTinyLandmarkNet) {\r\n        var _this = _super.call(this) || this;\r\n        _this.parentTask = parentTask;\r\n        _this.input = input;\r\n        _this.useTinyLandmarkNet = useTinyLandmarkNet;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DetectFaceLandmarksTaskBase.prototype, \"landmarkNet\", {\r\n        get: function () {\r\n            return this.useTinyLandmarkNet\r\n                ? nets.faceLandmark68TinyNet\r\n                : nets.faceLandmark68Net;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DetectFaceLandmarksTaskBase;\r\n}(ComposableTask));\r\nexport { DetectFaceLandmarksTaskBase };\r\nvar DetectAllFaceLandmarksTask = /** @class */ (function (_super) {\r\n    __extends(DetectAllFaceLandmarksTask, _super);\r\n    function DetectAllFaceLandmarksTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DetectAllFaceLandmarksTask.prototype.run = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parentResults, detections, faces, _a, faceLandmarksByFace;\r\n            var _this = this;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.parentTask];\r\n                    case 1:\r\n                        parentResults = _b.sent();\r\n                        detections = parentResults.map(function (res) { return res.detection; });\r\n                        if (!(this.input instanceof tf.Tensor)) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, extractFaceTensors(this.input, detections)];\r\n                    case 2:\r\n                        _a = _b.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 3: return [4 /*yield*/, extractFaces(this.input, detections)];\r\n                    case 4:\r\n                        _a = _b.sent();\r\n                        _b.label = 5;\r\n                    case 5:\r\n                        faces = _a;\r\n                        return [4 /*yield*/, Promise.all(faces.map(function (face) { return _this.landmarkNet.detectLandmarks(face); }))];\r\n                    case 6:\r\n                        faceLandmarksByFace = _b.sent();\r\n                        faces.forEach(function (f) { return f instanceof tf.Tensor && f.dispose(); });\r\n                        return [2 /*return*/, parentResults.map(function (parentResult, i) {\r\n                                return extendWithFaceLandmarks(parentResult, faceLandmarksByFace[i]);\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    DetectAllFaceLandmarksTask.prototype.withFaceExpressions = function () {\r\n        return new PredictAllFaceExpressionsWithFaceAlignmentTask(this, this.input);\r\n    };\r\n    DetectAllFaceLandmarksTask.prototype.withAgeAndGender = function () {\r\n        return new PredictAllAgeAndGenderWithFaceAlignmentTask(this, this.input);\r\n    };\r\n    DetectAllFaceLandmarksTask.prototype.withFaceDescriptors = function () {\r\n        return new ComputeAllFaceDescriptorsTask(this, this.input);\r\n    };\r\n    return DetectAllFaceLandmarksTask;\r\n}(DetectFaceLandmarksTaskBase));\r\nexport { DetectAllFaceLandmarksTask };\r\nvar DetectSingleFaceLandmarksTask = /** @class */ (function (_super) {\r\n    __extends(DetectSingleFaceLandmarksTask, _super);\r\n    function DetectSingleFaceLandmarksTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DetectSingleFaceLandmarksTask.prototype.run = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parentResult, detection, faces, _a, landmarks;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.parentTask];\r\n                    case 1:\r\n                        parentResult = _b.sent();\r\n                        if (!parentResult) {\r\n                            return [2 /*return*/];\r\n                        }\r\n                        detection = parentResult.detection;\r\n                        if (!(this.input instanceof tf.Tensor)) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, extractFaceTensors(this.input, [detection])];\r\n                    case 2:\r\n                        _a = _b.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 3: return [4 /*yield*/, extractFaces(this.input, [detection])];\r\n                    case 4:\r\n                        _a = _b.sent();\r\n                        _b.label = 5;\r\n                    case 5:\r\n                        faces = _a;\r\n                        return [4 /*yield*/, this.landmarkNet.detectLandmarks(faces[0])];\r\n                    case 6:\r\n                        landmarks = _b.sent();\r\n                        faces.forEach(function (f) { return f instanceof tf.Tensor && f.dispose(); });\r\n                        return [2 /*return*/, extendWithFaceLandmarks(parentResult, landmarks)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    DetectSingleFaceLandmarksTask.prototype.withFaceExpressions = function () {\r\n        return new PredictSingleFaceExpressionsWithFaceAlignmentTask(this, this.input);\r\n    };\r\n    DetectSingleFaceLandmarksTask.prototype.withAgeAndGender = function () {\r\n        return new PredictSingleAgeAndGenderWithFaceAlignmentTask(this, this.input);\r\n    };\r\n    DetectSingleFaceLandmarksTask.prototype.withFaceDescriptor = function () {\r\n        return new ComputeSingleFaceDescriptorTask(this, this.input);\r\n    };\r\n    return DetectSingleFaceLandmarksTask;\r\n}(DetectFaceLandmarksTaskBase));\r\nexport { DetectSingleFaceLandmarksTask };\r\n//# sourceMappingURL=DetectFaceLandmarksTasks.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\r\nimport { extendWithFaceDetection } from '../factories/WithFaceDetection';\r\nimport { MtcnnOptions } from '../mtcnn/MtcnnOptions';\r\nimport { SsdMobilenetv1Options } from '../ssdMobilenetv1/SsdMobilenetv1Options';\r\nimport { TinyFaceDetectorOptions } from '../tinyFaceDetector/TinyFaceDetectorOptions';\r\nimport { TinyYolov2Options } from '../tinyYolov2';\r\nimport { ComposableTask } from './ComposableTask';\r\nimport { DetectAllFaceLandmarksTask, DetectSingleFaceLandmarksTask } from './DetectFaceLandmarksTasks';\r\nimport { nets } from './nets';\r\nimport { PredictAllAgeAndGenderTask, PredictSingleAgeAndGenderTask } from './PredictAgeAndGenderTask';\r\nimport { PredictAllFaceExpressionsTask, PredictSingleFaceExpressionsTask } from './PredictFaceExpressionsTask';\r\nvar DetectFacesTaskBase = /** @class */ (function (_super) {\r\n    __extends(DetectFacesTaskBase, _super);\r\n    function DetectFacesTaskBase(input, options) {\r\n        if (options === void 0) { options = new SsdMobilenetv1Options(); }\r\n        var _this = _super.call(this) || this;\r\n        _this.input = input;\r\n        _this.options = options;\r\n        return _this;\r\n    }\r\n    return DetectFacesTaskBase;\r\n}(ComposableTask));\r\nexport { DetectFacesTaskBase };\r\nvar DetectAllFacesTask = /** @class */ (function (_super) {\r\n    __extends(DetectAllFacesTask, _super);\r\n    function DetectAllFacesTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DetectAllFacesTask.prototype.run = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, input, options, faceDetectionFunction;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this, input = _a.input, options = _a.options;\r\n                        if (!(options instanceof MtcnnOptions)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, nets.mtcnn.forward(input, options)];\r\n                    case 1: return [2 /*return*/, (_b.sent())\r\n                            .map(function (result) { return result.detection; })];\r\n                    case 2:\r\n                        faceDetectionFunction = options instanceof TinyFaceDetectorOptions\r\n                            ? function (input) { return nets.tinyFaceDetector.locateFaces(input, options); }\r\n                            : (options instanceof SsdMobilenetv1Options\r\n                                ? function (input) { return nets.ssdMobilenetv1.locateFaces(input, options); }\r\n                                : (options instanceof TinyYolov2Options\r\n                                    ? function (input) { return nets.tinyYolov2.locateFaces(input, options); }\r\n                                    : null));\r\n                        if (!faceDetectionFunction) {\r\n                            throw new Error('detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | MtcnnOptions | TinyYolov2Options');\r\n                        }\r\n                        return [2 /*return*/, faceDetectionFunction(input)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    DetectAllFacesTask.prototype.runAndExtendWithFaceDetections = function () {\r\n        var _this = this;\r\n        return new Promise(function (res) { return __awaiter(_this, void 0, void 0, function () {\r\n            var detections;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.run()];\r\n                    case 1:\r\n                        detections = _a.sent();\r\n                        return [2 /*return*/, res(detections.map(function (detection) { return extendWithFaceDetection({}, detection); }))];\r\n                }\r\n            });\r\n        }); });\r\n    };\r\n    DetectAllFacesTask.prototype.withFaceLandmarks = function (useTinyLandmarkNet) {\r\n        if (useTinyLandmarkNet === void 0) { useTinyLandmarkNet = false; }\r\n        return new DetectAllFaceLandmarksTask(this.runAndExtendWithFaceDetections(), this.input, useTinyLandmarkNet);\r\n    };\r\n    DetectAllFacesTask.prototype.withFaceExpressions = function () {\r\n        return new PredictAllFaceExpressionsTask(this.runAndExtendWithFaceDetections(), this.input);\r\n    };\r\n    DetectAllFacesTask.prototype.withAgeAndGender = function () {\r\n        return new PredictAllAgeAndGenderTask(this.runAndExtendWithFaceDetections(), this.input);\r\n    };\r\n    return DetectAllFacesTask;\r\n}(DetectFacesTaskBase));\r\nexport { DetectAllFacesTask };\r\nvar DetectSingleFaceTask = /** @class */ (function (_super) {\r\n    __extends(DetectSingleFaceTask, _super);\r\n    function DetectSingleFaceTask() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DetectSingleFaceTask.prototype.run = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var faceDetections, faceDetectionWithHighestScore;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, new DetectAllFacesTask(this.input, this.options)];\r\n                    case 1:\r\n                        faceDetections = _a.sent();\r\n                        faceDetectionWithHighestScore = faceDetections[0];\r\n                        faceDetections.forEach(function (faceDetection) {\r\n                            if (faceDetection.score > faceDetectionWithHighestScore.score) {\r\n                                faceDetectionWithHighestScore = faceDetection;\r\n                            }\r\n                        });\r\n                        return [2 /*return*/, faceDetectionWithHighestScore];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    DetectSingleFaceTask.prototype.runAndExtendWithFaceDetection = function () {\r\n        var _this = this;\r\n        return new Promise(function (res) { return __awaiter(_this, void 0, void 0, function () {\r\n            var detection;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.run()];\r\n                    case 1:\r\n                        detection = _a.sent();\r\n                        return [2 /*return*/, res(detection ? extendWithFaceDetection({}, detection) : undefined)];\r\n                }\r\n            });\r\n        }); });\r\n    };\r\n    DetectSingleFaceTask.prototype.withFaceLandmarks = function (useTinyLandmarkNet) {\r\n        if (useTinyLandmarkNet === void 0) { useTinyLandmarkNet = false; }\r\n        return new DetectSingleFaceLandmarksTask(this.runAndExtendWithFaceDetection(), this.input, useTinyLandmarkNet);\r\n    };\r\n    DetectSingleFaceTask.prototype.withFaceExpressions = function () {\r\n        return new PredictSingleFaceExpressionsTask(this.runAndExtendWithFaceDetection(), this.input);\r\n    };\r\n    DetectSingleFaceTask.prototype.withAgeAndGender = function () {\r\n        return new PredictSingleAgeAndGenderTask(this.runAndExtendWithFaceDetection(), this.input);\r\n    };\r\n    return DetectSingleFaceTask;\r\n}(DetectFacesTaskBase));\r\nexport { DetectSingleFaceTask };\r\n//# sourceMappingURL=DetectFacesTasks.js.map","import { FaceMatch } from '../classes/FaceMatch';\r\nimport { LabeledFaceDescriptors } from '../classes/LabeledFaceDescriptors';\r\nimport { euclideanDistance } from '../euclideanDistance';\r\nvar FaceMatcher = /** @class */ (function () {\r\n    function FaceMatcher(inputs, distanceThreshold) {\r\n        if (distanceThreshold === void 0) { distanceThreshold = 0.6; }\r\n        this._distanceThreshold = distanceThreshold;\r\n        var inputArray = Array.isArray(inputs) ? inputs : [inputs];\r\n        if (!inputArray.length) {\r\n            throw new Error(\"FaceRecognizer.constructor - expected atleast one input\");\r\n        }\r\n        var count = 1;\r\n        var createUniqueLabel = function () { return \"person \" + count++; };\r\n        this._labeledDescriptors = inputArray.map(function (desc) {\r\n            if (desc instanceof LabeledFaceDescriptors) {\r\n                return desc;\r\n            }\r\n            if (desc instanceof Float32Array) {\r\n                return new LabeledFaceDescriptors(createUniqueLabel(), [desc]);\r\n            }\r\n            if (desc.descriptor && desc.descriptor instanceof Float32Array) {\r\n                return new LabeledFaceDescriptors(createUniqueLabel(), [desc.descriptor]);\r\n            }\r\n            throw new Error(\"FaceRecognizer.constructor - expected inputs to be of type LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array | Array<LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array>\");\r\n        });\r\n    }\r\n    Object.defineProperty(FaceMatcher.prototype, \"labeledDescriptors\", {\r\n        get: function () { return this._labeledDescriptors; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FaceMatcher.prototype, \"distanceThreshold\", {\r\n        get: function () { return this._distanceThreshold; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FaceMatcher.prototype.computeMeanDistance = function (queryDescriptor, descriptors) {\r\n        return descriptors\r\n            .map(function (d) { return euclideanDistance(d, queryDescriptor); })\r\n            .reduce(function (d1, d2) { return d1 + d2; }, 0)\r\n            / (descriptors.length || 1);\r\n    };\r\n    FaceMatcher.prototype.matchDescriptor = function (queryDescriptor) {\r\n        var _this = this;\r\n        return this.labeledDescriptors\r\n            .map(function (_a) {\r\n            var descriptors = _a.descriptors, label = _a.label;\r\n            return new FaceMatch(label, _this.computeMeanDistance(queryDescriptor, descriptors));\r\n        })\r\n            .reduce(function (best, curr) { return best.distance < curr.distance ? best : curr; });\r\n    };\r\n    FaceMatcher.prototype.findBestMatch = function (queryDescriptor) {\r\n        var bestMatch = this.matchDescriptor(queryDescriptor);\r\n        return bestMatch.distance < this.distanceThreshold\r\n            ? bestMatch\r\n            : new FaceMatch('unknown', bestMatch.distance);\r\n    };\r\n    FaceMatcher.prototype.toJSON = function () {\r\n        return {\r\n            distanceThreshold: this.distanceThreshold,\r\n            labeledDescriptors: this.labeledDescriptors.map(function (ld) { return ld.toJSON(); })\r\n        };\r\n    };\r\n    FaceMatcher.fromJSON = function (json) {\r\n        var labeledDescriptors = json.labeledDescriptors\r\n            .map(function (ld) { return LabeledFaceDescriptors.fromJSON(ld); });\r\n        return new FaceMatcher(labeledDescriptors, json.distanceThreshold);\r\n    };\r\n    return FaceMatcher;\r\n}());\r\nexport { FaceMatcher };\r\n//# sourceMappingURL=FaceMatcher.js.map","export function euclideanDistance(arr1, arr2) {\r\n    if (arr1.length !== arr2.length)\r\n        throw new Error('euclideanDistance: arr1.length !== arr2.length');\r\n    var desc1 = Array.from(arr1);\r\n    var desc2 = Array.from(arr2);\r\n    return Math.sqrt(desc1\r\n        .map(function (val, i) { return val - desc2[i]; })\r\n        .reduce(function (res, diff) { return res + Math.pow(diff, 2); }, 0));\r\n}\r\n//# sourceMappingURL=euclideanDistance.js.map","<script>\r\n\r\n\r\n    import * as faceapi from 'datatrainX';\r\n\r\n\r\n    // ssd_mobilenetv1 options\r\n    //let minConfidence = 0.5\r\n    //const options = new faceapi.SsdMobilenetv1Options({ minConfidence })\r\n\r\n    // tiny_face_detector options\r\n    let inputSize = 512\r\n    let scoreThreshold = 0.5\r\n    const options = new faceapi.TinyFaceDetectorOptions({ inputSize, scoreThreshold })\r\n\r\n    let clientHeight;\r\n    let clientWidth;\r\n    let myCanvas;\r\n    let msgButton = \"Juste pour voir!\";\r\n    let videoSource = null;\r\n    let stream = null;\r\n    let loading = false;\r\n    let playVideo = false;\r\n\r\n\r\n    const videoCam = async () => {\r\n\r\n        loading = true;\r\n        //await faceapi.nets.ssdMobilenetv1.load('./weights/');\r\n        await faceapi.nets.tinyFaceDetector.load('./weights/');\r\n        await faceapi.loadFaceExpressionModel('./weights/')\r\n\r\n        if(!playVideo){\r\n            stream = await navigator.mediaDevices.getUserMedia({video: true,audio:false});\r\n            videoSource.srcObject = stream;\r\n            videoSource.play();\r\n            playVideo = true;\r\n            videoSource.hidden = false;\r\n            myCanvas.hidden = false;\r\n            msgButton = \"Ok j'ai vu!\";\r\n        }else{\r\n            stream.getTracks().forEach(function(track) {\r\n                track.stop();\r\n                msgButton = \"Juste pour voir!\";\r\n            });\r\n            videoSource.hidden = true;\r\n            myCanvas.hidden = true;\r\n            playVideo = false;\r\n            loading = false;\r\n        }\r\n\r\n    };\r\n\r\n\r\n    async function onPlay() {\r\n\r\n        const result = await faceapi.detectSingleFace(videoSource, options).withFaceExpressions();\r\n\r\n        if (result) {\r\n\r\n\r\n            const dims = faceapi.matchDimensions(myCanvas, {width: clientWidth, height: clientHeight});\r\n\r\n            const resizedResult = faceapi.resizeResults(result, dims);\r\n            const minConfidence = 0.05;\r\n\r\n            faceapi.draw.drawDetections(myCanvas, resizedResult);\r\n            faceapi.draw.drawFaceExpressions(myCanvas, resizedResult, minConfidence);\r\n            loading = false;\r\n        }\r\n\r\n        if(playVideo){\r\n            setTimeout(() => onPlay());\r\n        }\r\n\r\n    }\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n    #overlay {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n    }\r\n    .videoContent{\r\n        position: relative;\r\n        background-position: center;\r\n        background-image: url(\"./assets/img/video.png\");\r\n        background-size: 50%;\r\n        background-repeat: no-repeat;\r\n        min-width: 200px;\r\n\r\n    }\r\n\r\n    #inputVideo{\r\n        width: 100%;\r\n    }\r\n\r\n</style>\r\n\r\n<div>\r\n    <button class=\"button are-medium center is-danger\" on:click={videoCam}>\r\n            <span class=\"icon\">\r\n                <i class=\"fa-solid fa-video\"></i>\r\n            </span>\r\n        <span>{msgButton}</span>\r\n    </button>\r\n    {#if loading}\r\n    <button class=\"button is-warning is-loading center\">Loading</button>\r\n    {/if}\r\n    <div class=\"videoContent\" bind:clientWidth bind:clientHeight>\r\n        <video id=\"inputVideo\" on:loadedmetadata=\"{onPlay}\"  bind:this={videoSource}>\r\n            <track kind=\"caption\">\r\n        </video>\r\n        <canvas id=\"overlay\" bind:this={myCanvas} />\r\n    </div>\r\n\r\n</div>\r\n\r\n","import { SsdMobilenetv1Options } from '../ssdMobilenetv1/SsdMobilenetv1Options';\r\nimport { DetectAllFacesTask, DetectSingleFaceTask } from './DetectFacesTasks';\r\nexport function detectSingleFace(input, options) {\r\n    if (options === void 0) { options = new SsdMobilenetv1Options(); }\r\n    return new DetectSingleFaceTask(input, options);\r\n}\r\nexport function detectAllFaces(input, options) {\r\n    if (options === void 0) { options = new SsdMobilenetv1Options(); }\r\n    return new DetectAllFacesTask(input, options);\r\n}\r\n//# sourceMappingURL=detectFaces.js.map","import { Dimensions } from './classes';\r\nimport { FaceDetection } from './classes/FaceDetection';\r\nimport { FaceLandmarks } from './classes/FaceLandmarks';\r\nimport { extendWithFaceDetection, isWithFaceDetection } from './factories/WithFaceDetection';\r\nimport { extendWithFaceLandmarks, isWithFaceLandmarks } from './factories/WithFaceLandmarks';\r\nexport function resizeResults(results, dimensions) {\r\n    var _a = new Dimensions(dimensions.width, dimensions.height), width = _a.width, height = _a.height;\r\n    if (width <= 0 || height <= 0) {\r\n        throw new Error(\"resizeResults - invalid dimensions: \" + JSON.stringify({ width: width, height: height }));\r\n    }\r\n    if (Array.isArray(results)) {\r\n        return results.map(function (obj) { return resizeResults(obj, { width: width, height: height }); });\r\n    }\r\n    if (isWithFaceLandmarks(results)) {\r\n        var resizedDetection = results.detection.forSize(width, height);\r\n        var resizedLandmarks = results.unshiftedLandmarks.forSize(resizedDetection.box.width, resizedDetection.box.height);\r\n        return extendWithFaceLandmarks(extendWithFaceDetection(results, resizedDetection), resizedLandmarks);\r\n    }\r\n    if (isWithFaceDetection(results)) {\r\n        return extendWithFaceDetection(results, results.detection.forSize(width, height));\r\n    }\r\n    if (results instanceof FaceLandmarks || results instanceof FaceDetection) {\r\n        return results.forSize(width, height);\r\n    }\r\n    return results;\r\n}\r\n//# sourceMappingURL=resizeResults.js.map","import { getMediaDimensions } from './getMediaDimensions';\r\nexport function matchDimensions(input, reference, useMediaDimensions) {\r\n    if (useMediaDimensions === void 0) { useMediaDimensions = false; }\r\n    var _a = useMediaDimensions\r\n        ? getMediaDimensions(reference)\r\n        : reference, width = _a.width, height = _a.height;\r\n    input.width = width;\r\n    input.height = height;\r\n    return { width: width, height: height };\r\n}\r\n//# sourceMappingURL=matchDimensions.js.map","import { Box } from '../classes';\r\nimport { FaceDetection } from '../classes/FaceDetection';\r\nimport { isWithFaceDetection } from '../factories/WithFaceDetection';\r\nimport { round } from '../utils';\r\nimport { DrawBox } from './DrawBox';\r\nexport function drawDetections(canvasArg, detections) {\r\n    var detectionsArray = Array.isArray(detections) ? detections : [detections];\r\n    detectionsArray.forEach(function (det) {\r\n        var score = det instanceof FaceDetection\r\n            ? det.score\r\n            : (isWithFaceDetection(det) ? det.detection.score : undefined);\r\n        var box = det instanceof FaceDetection\r\n            ? det.box\r\n            : (isWithFaceDetection(det) ? det.detection.box : new Box(det));\r\n        var label = score ? \"\" + round(score) : undefined;\r\n        new DrawBox(box, { label: label }).draw(canvasArg);\r\n    });\r\n}\r\n//# sourceMappingURL=drawDetections.js.map","<script>\r\n\r\n    import * as animateScroll from \"svelte-scrollto\";\r\n    import {leftStartStore, layoutStore} from \"../stores\";\r\n    import Faceapi from \"./Faceapi.svelte\";\r\n\r\n    let innerWidth;\r\n    let innerHeight;\r\n    let clientHeight;\r\n    let top = 50;\r\n\r\n    let leftStartValue;\r\n\r\n    leftStartStore.subscribe(value => {\r\n        leftStartValue = value;\r\n    });\r\n\r\n\r\n</script>\r\n<style>\r\n    .start {\r\n        width: 100%;\r\n        padding: 0;\r\n        margin: auto;\r\n        position: absolute;\r\n        transition: left 2s;\r\n        left: 0px;\r\n        background-color: #3b065e;\r\n        z-index: 9;\r\n    }\r\n    .tile.is-ancestor {\r\n        margin-top: 0;\r\n    }\r\n    .notification {\r\n        padding: 1.25rem 1.5rem;\r\n    }\r\n    h2{\r\n        text-align: center;\r\n        font-size: 1.5em;\r\n        font-weight: bold;\r\n        margin-bottom: 8px;\r\n    }\r\n</style>\r\n<svelte:window bind:innerHeight bind:innerWidth   />\r\n\r\n<div id=\"presentation\" class=\"start jumbotron text-center\"  style=\"height: {innerHeight - top}px; left:{leftStartValue}px\">\r\n  <div class=\"container\">\r\n      <div class=\"tile is-ancestor\"  style=\"height: {innerHeight - top}px;\">\r\n          <div class=\"tile is-vertical is-8\">\r\n              <div class=\"tile\">\r\n                  <div class=\"tile is-parent is-vertical\">\r\n                      <article class=\"tile is-child notification is-primary\">\r\n                          <h2>Obtenir son profil d'apprenant</h2>\r\n                          <div class=\"buttons are-medium\">\r\n                              <button class=\"button are-medium center is-link is-rounded\"  on:click={layoutStore.set(\"trainX1\")}>\r\n                                <span class=\"icon\">\r\n                                  <i class=\"fa-solid fa-address-card\"></i>\r\n                                </span>\r\n                                  <span>Faire le test</span>\r\n                              </button>\r\n                          </div>\r\n                      </article>\r\n                      <article class=\"tile is-child notification is-warning\">\r\n                          <p class=\"title logo-text\">DataTrainX</p>\r\n                          <p>A travers la saisie d’un questionnaire (Kolb) nous cherchons à déterminer un profil d’apprenant dans le projet DataTrainx. L’utilisateur sera enregistré en vidéo et une comparaison sera effectuée avec les émotions que vous aurez exprimées.</p>\r\n                          <div class=\"buttons\">\r\n                              <button class=\"button are-medium right is-warning is-light\" on:click={() => animateScroll.scrollTo({element: \"#article\"})}>\r\n                                <span class=\"icon\">\r\n                                    <i class=\"fa-solid fa-circle-info\"></i>\r\n                                </span>\r\n                                  <span>En savoir plus</span>\r\n                              </button>\r\n                          </div>\r\n                      </article>\r\n                  </div>\r\n                  <div class=\"tile is-parent\">\r\n                      <article class=\"tile is-child notification is-info\">\r\n                          <p class=\"title\">Capture vidéo</p>\r\n                          <p class=\"subtitle\">Prêt à capturer vos émotions ?</p>\r\n                          <Faceapi/>\r\n                      </article>\r\n                  </div>\r\n              </div>\r\n              <div class=\"tile is-parent\">\r\n                  <article class=\"tile is-child notification is-danger\">\r\n                      <p class=\"title\">Protection de votre image</p>\r\n                      <p class=\"\">Des données collectés uniquement à des fins de recherche en partenaria avec l'IPST CNAM de l'université de Toulouse. DataTrainX est un projet d'étude personnel dans le cadre de mon mémoire d'ingénieur. Les données sont collectés sur mon propre serveur, il n'y a aucun autre intermédiaire et les données transitent de manière cryptée!</p>\r\n                  </article>\r\n              </div>\r\n          </div>\r\n          <div class=\"tile is-parent\">\r\n              <article class=\"tile is-child notification is-success\">\r\n                  <div class=\"content\">\r\n                      <p class=\"title\">Réseau neuronal convolutif</p>\r\n                      <div class=\"content\">\r\n                          <p>En apprentissage automatique, un réseau de neurones convolutifs, appellé aussi CNN, est un type de réseau de neurones artificiels, dans lequel le motif de connexion entre les neurones est inspiré par le cortex visuel des animaux. Les neurones de cette région du cerveau sont arrangés de sorte qu'ils correspondent à des régions qui se chevauchent lors du pavage du champ visuel.</p>\r\n                          <p>Leur fonctionnement est inspiré par les processus biologiques, ils consistent en un empilage multicouche de perceptrons, dont le but est de prétraiter de petites quantités d'informations.</p>\r\n                          <p>Les réseaux neuronaux convolutifs ont de larges applications dans la reconnaissance d'image et vidéo, les systèmes de recommandation et le traitement du langage naturel.</p>\r\n                          <button class=\"button is-primary\" id=\"explain-button\" on:click={leftStartStore.set(-innerWidth)}>\r\n                            <span class=\"icon\">\r\n                              <i class=\"fas fa-eye\"></i>\r\n                            </span>\r\n                              <span>Comment ça marche ?</span>\r\n                          </button>\r\n                      </div>\r\n                  </div>\r\n              </article>\r\n          </div>\r\n      </div>\r\n\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n","<script>\r\n    import Cnn from './Cnn.svelte';\r\n//    import {cnnStore, layoutStore, leftStartStore} from '../stores.js';\r\n    import Presentation from \"./Presentation.svelte\";\r\n    import Article from \"./article/Article.svelte\";\r\n\r\n\r\n    // Enum to control the displaying view\r\n    const View = {\r\n        OVERVIEW: 'overview',\r\n        LAYERVIEW: 'layerview',\r\n        DETAILVIEW: 'detailview'\r\n    };\r\n\r\n    let mainView = View.OVERVIEW;\r\n\r\n    /* Example to read loaded cnn in other components:\r\n  $: if ( $cnnStore.length != 0) {\r\n    console.log($cnnStore);\r\n  }\r\n  */\r\n\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n    #cnn {\r\n        width: 100%;\r\n        padding: 0;\r\n        margin: auto;\r\n        transition: left 2s;\r\n        left: 0px;\r\n    }\r\n</style>\r\n<main>\r\n    <section id='main'>\r\n        <Presentation/>\r\n    </section>\r\n    <section id='cnn'>\r\n        <Cnn/>\r\n    </section>\r\n    <section id='article'>\r\n        <Article/>\r\n    </section>\r\n</main>","<script>\n\n</script>\n\n\n<header id=\"header\">\n\n    <div id=\"logo\">\n        <div id=\"logo-text\">\n            DataTrainX\n        </div>\n        <div id=\"svg-logo-tagline\">\n            Outil de recherche des singularités cognitives d’un étudiant!\n        </div>\n    </div>\n\n    <div class=\"icons\">\n        <div class=\"icon\" title=\"Open-source code\">\n            <a target=\"_blank\" href=\"https://github.com/davy-blavette/DatatrainX\">\n                <i class=\"fa-brands fa-github\"></i>\n            </a>\n        </div>\n\n    </div>\n\n</header>","<script>\r\n\r\n</script>\r\n<style>\r\n\r\n    .footer{\r\n        color: #ffffff;\r\n        background-color: #333333;\r\n        padding-bottom: 1em;\r\n    }\r\n\r\n    .footer .logo-text{\r\n        font-size: 30px;\r\n        color: var(--light-gray);\r\n        font-family: 'Hemicube';\r\n        margin-right: 10px;\r\n    }\r\n\r\n    .footer .icon {\r\n        margin-left: 0px;\r\n        height: auto;\r\n        width: auto;\r\n    }\r\n    .footer .icon a {\r\n        color: white;\r\n        font-size: 2em;\r\n    }\r\n\r\n    .footer a:hover {\r\n        color: white;\r\n        text-decoration: underline;\r\n    }\r\n\r\n    .version{\r\n        display: block;\r\n    }\r\n\r\n</style>\r\n<footer class=\"footer\">\r\n    <div class=\"content has-text-centered\">\r\n        <span class=\"logo-text\">DataTrainX</span>\r\n        <span class=\"version\">Version 0.6.1</span>\r\n        <p>\r\n            By <a href=\"https://jgthms.com\">Davy Blavette</a>. The source code is licensed\r\n            <a href=\"http://opensource.org/licenses/mit-license.php\">MIT</a>. The website content\r\n            is licensed <a href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">CC BY NC SA 4.0</a>.\r\n        </p>\r\n        <div class=\"icon\" title=\"Open-source code\"><a target=\"_blank\" href=\"https://github.com/davy-blavette/DatatrainX\"><i class=\"fa-brands fa-github\"></i></a></div>\r\n    </div>\r\n</footer>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","select_option","select","i","length","option","__value","selected","selectedIndex","crossorigin","current_component","is_crossorigin","undefined","parent","error","toggle_class","toggle","classList","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","afterUpdate","after_update","createEventDispatcher","type","detail","callbacks","bubbles","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","flushidx","flush","saved_component","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","d","create_component","mount_component","customElement","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","subscriber","subscribe","invalidate","cnnStore","svgStore","vSpaceAroundGapStore","hSpaceAroundGapStore","nodeCoordinateStore","selectedScaleLevelStore","cnnLayerRangesStore","cnnLayerMinMaxStore","needRedrawStore","detailedModeStore","shouldIntermediateAnimateStore","isInSoftmaxStore","softmaxDetailViewStore","allowsSoftmaxAnimationStore","hoverInfoStore","modalStore","intermediateLayerPositionStore","leftStartStore","layoutStore","init2DArray","height","width","array","row","matrixDot","mat1","mat2","console","assert","result","j","matrixSlice","mat","xs","xe","ys","ye","s","matrixMax","curMax","Infinity","singleConv","kernel","stride","padding","stepSize","curWindow","dot","singleMaxPooling","kernelWidth","array1d","v","array2d","w","generateOutputMappings","output","kernelLength","padded_input_size","dilation","outputMapping","h_out","w_out","h_kern","w_kern","h_im","w_im","compute_input_multiplies_with_weight","hoverH","hoverW","weight_dims","outputMappings","input_multiplies_with_weight","h_weight","w_weight","flat_input","getMatrixSliceFromInputHighlights","matrix","highlights","indices","reduce","total","Math","floor","getMatrixSliceFromOutputHighlights","getVisualizationSizeConstraint","imageLength","getDataRange","image","maxRow","max","apply","minRow","min","range","abs","gridData","constraint","xpos","ypos","column","round","col","x","y","grid_final","isKernelMath","dataRange","outputLength","colorScale","d3","interpolateRdBu","isInputLayer","dispatch","oldHighlight","oldData","redraw","selectAll","remove","constrainedSvgSize","enter","normalizedValue","on","toString","replace","gridFinal","legendFinal","kernelRange","kernelColorScale","interpolateBrBG","multiplicationSymbolPadding","columns","texts","normalizedValueWithGap","isPaused","isInputInputLayer","testInputMatrixSlice","interval","counter","testOutputMatrixSlice","inputHighlights","outputHighlights","startConvolution","clearInterval","setInterval","flat_animated","animatedH","animatedW","inputMatrixSlice","outputMatrixSlice","testImage","testOutput","testKernel","handleScroll","isExited","outputFinal","log","gridInputMatrixSlice","gridOutputMatrixSlice","startRelu","gridImage","gridOutput","startMaxPool","createElementNS","softmaxViewComponent","logits","logitColors","selectedI","highlightI","outputName","outputValue","startAnimation","svg","formater","n","format","mouseOverHandler","g","curI","mouseLeaveHandler","formulaRightGroup","denominatorGroup","curX","curText","hasInitialized","curBBox","getBBox","denominatorGroupBBox","numeratorText","formulaLeftGroup","transition","duration","show","modalComponent","valiImg","files","inputValue","showLoading","usingURL","errorInfo","modalInfo","canvas","getContext","drawImage","getImageData","url","src","err","reader","FileReader","onload","readAsDataURL","preImage","crossOrigin","$","selector","querySelector","extend","args","assign","top","left","offsetTop","offsetLeft","offsetParent","directScroll","body","inSetter","scrollTop","documentElement","pageYOffset","scrollLeft","pageXOffset","defaultOptions","container","delay","offset","easing","t","pow","onStart","onDone","onAborting","scrollX","scrollY","_scrollTo","cumulativeOffsetContainer","_","cumulativeOffset","cumulativeOffsetTarget","initialX","initialY","targetX","targetY","diffX","diffY","scrolling","started","start_time","end_time","delayStart","tick","progress","scrollToTopLeft","fulfill","loop","scrollTo","opts","proceedOptions","animateScroll.scrollTo","innerWidth","nodeType","Node","layerName","bias","inputLinks","outputLinks","Link","source","dest","weight","constructCNN","async","inputImageFile","model","inputImageTensor","getInputImageArray","preTensor","tf","stack","outputs","layers","curTensor","squeeze","shape","transpose","allOutputs","cnn","inputLayer","inputShape","batchInputShape","inputImageArray","arraySync","curLayerIndex","layer","curLayerType","curLayerNodes","includes","biases","val","weights","preNode","curLink","curLogit","logit","sort","realIndex","link","preNodeWidth","preNodeNum","preNodeIndex","preNodeRow","preNodeCol","curNodeRealIndex","constructCNNFromOutputs","imageDataTo3DTensor","imageData","normalize","imageArray","pixelIndex","channelIndex","curEntry","arr","croppedArray","cropDimensions","startXIdx","startYIdx","networkInputSize","cropCentralSquare","tensor3d","imgFile","cssText","getElementsByTagName","reject","canvasImage","inputImage","Image","resizeCanvas","resizeContext","resizeFactor","translate","scale","rotate","PI","imageWidth","imageHeight","onerror","overviewConfig","nodeLength","plusSymbolRadius","numLayers","edgeOpacity","edgeInitColor","edgeHoverColor","edgeHoverOuting","edgeStrokeWidth","intermediateColor","layerColorScales","interpolateGreys","conv","relu","pool","fc","interpolateOranges","svgPaddings","bottom","right","kernelRectLength","gapRatio","modeImg","overlayRectOffset","classLists","getExtent","getOutputKnot","point","getInputKnot","gappedColorScale","gap","vSpaceAroundGap","hSpaceAroundGap","nodeCoordinate","selectedScaleLevel","cnnLayerRanges","cnnLayerMinMax","detailedMode","drawOutput","bufferCanvas","bufferContext","imageSingle","imageSingleArray","pixeIndex","color","rgb","largeCanvas","largeCanvasContext","putImageData","imageDataURL","toDataURL","drawOutputScore","ease","easeCubicIn","getLegendGradient","gradientName","gradient","curProgress","curColor","drawCNN","cnnGroup","nodeMouseOverHandler","nodeMouseLeaveHandler","nodeClickHandler","leftAccuumulatedSpace","curLayer","isOutput","layerGroup","nodeGroups","classed","outputRectScale","scaleLinear","domain","each","layerNames","dimension","detailedLabels","labels","legends","legendHeight","range1","range2","localLegendScale1","localLegendScale2","localLegendAxis1","axisBottom","tickFormat","tickValues","localLegendAxis2","localLegend1","localLegend2","module","moduleLegendScale","moduleLegendAxis","moduleLegend","global","globalLegendScale","globalLegendAxis","globalLegend","outputLegendAxis","outputLegend","inputScale","inputLegendAxis","inputLegend","drawLegends","linkGen","linkHorizontal","linkData","curTarget","inputNodeIndex","flattenDimension","curSource","curWeight","targetLayerIndex","targetNodeIndex","sourceNodeIndex","getLinkData","redChannel","color1","updateCNN","easeCubicOut","updateCNNLayerRanges","cnnLayerRangesLocal","curRange","aggregatedExtent","acc","cur","cnnLayerRangesComponent","numOfComponent","curArray","maxRange","cnnLayerRangesGlobal","moveLayerX","arg","layerIndex","disable","opacity","specialIndex","onEndFunc","transitionName","easeCubicInOut","addOverlayGradient","gradientID","stops","group","drawIntermediateLayerLegend","minMax","isInput","gradientAppendingName","gradientGap","normalizedColor","leftValue","zeroValue","rightValue","totalRange","zeroLocation","leftMidValue","rightMidValue","legendScale","legendAxis","intermediateLegend","legendGroup","drawArrow","sx","sy","tx","ty","dr","hFlip","marker","isEndOfAnimation","needRedraw","shouldIntermediateAnimate","intermediateLayerPosition","startOutputAnimation","kernelGroup","tickTime1D","slidingAnimation","originX","originY","oldTick","newTick","animationButtonClicked","startIntermediateAnimation","kernelGroupInput","kernelGroupResult","originXResult","xResult","stopPropagation","animateEdge","interrupt","dashoffset","easeLinear","drawIntermediateLayer","leftX","rightX","rightStart","intermediateGap","intermediateNodeMouseOverHandler","intermediateNodeMouseLeaveHandler","intermediateNodeClicked","intermediateLayer","intermediateX1","intermediateX2","intermediateMinMax","kernelExtent","outputY","curNode","outputOverlayGroup","strideTime","raise","ni","inputMatrix","kernelMatrix","interMatrix","dataMatrix","drawIntermidiateImage","groupLayer","nodeIndex","interaction","newNode","datum","overlayGroup","createIntermediateNode","kernelRectX","weightText","f2","sep","concat","clone","aggregatedMinMax","symbolY","symbolGroup","edgeGroup","lower","kernelMinMax","drawIntermediateLayerAnnotation","sliderX","sliderY","arrowSX","arrowSY","sliderX2","sliderY2","arrowSX2","arrowSY2","dr2","arrowTX2","arrowTY2","isFirstConv","kernelAnnotation","slideText","slideText2","plusAnnotation","textX","textY","plusText","biasTextY","addUnderneathRect","underGroup","addOverlayRect","redrawLayerIfNeeded","rangePre","rangeCur","drawConv1","rightGap","intermediateLayerAnnotation","drawConv2","finalMinMax","drawConv3","leftEnd","leftGap","drawConv4","isInSoftmax","allowsSoftmaxAnimation","softmaxDetailViewInfo","hoverInfo","layerIndexDict","flattenFactoredFDict","moveLegend","moveX","restore","legend","previousLegendX","previousLegendY","previousTransform","logitCircleMouseOverHandler","logitLayer","logitLayerLower","logitCircleMouseLeaveHandler","softmaxDetailViewMouseOverHandler","softmaxDetailViewMouseLeaveHandler","softmaxClicked","symbolX","outputX","softmaxLeftMid","pixelWidth","pixelHeight","topY","bottomY","middleGap","middleRectHeight","softmaxX","softmaxTextY","softmaxWidth","flattenRange","centerX","previousX","softmaxAnnotation","softmaxDetailAnnotation","scrollIntoView","behavior","arrowTX","arrowTY","hoverTextGroup","hoverText","flattenLeftPart","tempClone","tempPlusSymbol","logitColorScale","extent","flattenLength","flatten","underneathIs","curIIndex","drawOneEdgeGroup","curEdgeGroup","factoredF","class","vi","curNodeGroup","symbolClone","outputEdgeD1","outputEdgeD2","outputEdge1","outputEdge2","outputEdgeLength1","getTotalLength","outputEdgeLength2","totalLength","totalDuration","opacityDuration","anchorElement","pos","elem","targetel","getScreenCTM","ownerSVGElement","createSVGPoint","bbox","matrixTransform","getMidCoords","detailViewTop","detailview","getElementById","position","drawLogitLayer","drawFlatten","maxLayer","curLeftBound","intermediateLayerOverlay","flattenLayerLeftPart","preLayerDimension","preLayerGap","boundingBoxLength","flattenExtent","flattenMouseOverHandler","da","flattenMouseLeaveHandler","loc","meanValues","emptySpace","symbolEndX","softmaxArg","softmaxSymbol","Number","detailedLabelGroup","detailedLabelText","flattenAnnotation","flattenText","middleText","element_src","file","href","colorRange","inputIsInputLayer","iterations","overviewComponent","scaleLevelSet","previousSelectedScaleLevel","wholeSvg","selectedNode","isInIntermediateView","isInActPoolDetailView","actPoolDetailViewNodeIndex","actPoolDetailViewLayerIndex","detailedViewNum","disableControl","conv_1_1","relu_1_1","conv_1_2","relu_1_2","max_pool_1","conv_2_1","relu_2_1","conv_2_2","relu_2_2","max_pool_2","layerLegendDict","0","1","2","3","4","5","6","7","8","9","10","11","nodeData","imageOptions","selectedImage","selectedNodeIndex","isExitedFromDetailedView","isExitedFromCollapse","customImageURL","svgYMid","svgWidth","positionX","posX","emptySpaceClicked","quitIntermediateView","domG","domI","quitActPoolDetailView","sd","si","sg","actPoolDetailViewPreNodeMouseOverHandler","associatedLayerIndex","actPoolDetailViewPreNodeMouseLeaveHandler","actPoolDetailViewPreNodeClickHandler","dispatchEvent","Event","redrawRange","rightWidth","leftWidth","enterDetailView","prepareToEnterIntermediateView","modelFile","time","loadLayersModel","timeEnd","handleCustomImage","red","drawCustomImage","newImageName","selected_option","notYetImplemented","kernelName","expr","msg","assertNonNull","skipTypedArray","isArray","isTypedArray","sizeFromShape","arraysEqual","n1","n2","isInt","rightPad","repeat","Float32Array","Int32Array","Uint8Array","Uint8ClampedArray","bytesPerElement","dtype","isString","String","inferDtype","values","isBoolean","isFunction","constructor","computeStrides","rank","strides","toNestedArray","isComplex","createNestedArray","len","makeZerosTypedArray","assertNonNegativeIntegerDimensions","dimSize","isInteger","isPromise","object","Environment","flags","flagRegistry","urlFlags","getQueryParams","populateURLFlags","platformName","platform","env","getBool","warn","flagName","evaluationFn","setHook","flagValue","evaluateFlag","get","features","location","search","urlParams","split","keyValue","toLowerCase","parseValue","queryString","params","decodeURIComponent","decodeParam","join","ENV","globalNameSpace","getGlobalNamespace","ns","process","self","getGlobal","globalMap","_tfGlobals","getGlobalMap","singleton","kernelRegistry","gradRegistry","getKernel","backendName","makeKey","getGradient","getKernelsForBackend","it","entries","done","next","config","backend","toTypedArray","base.flatten","vals","num","isNaN","isFinite","base.checkConversionForErrors","noConversionNeeded","bool","decodeString","bytes","encoding","decode","Profiler","backendTimer","logger","Logger","inputs","holdResultWrapperFn","timer","util.now","timerAvailable","dataSync","kernelMs","tensorVals","checkComputationForErrors","timeMs","timing","extraInfo","getExtraProfileInfo","kernelProfile","all","valueContainer","logKernelProfile","util.rightPad","paddedName","inputShapesDescription","inputRank","tensorToString","verbose","padPerCol","numCols","valuesOrTuples","createComplexTuples","valToString","computeMaxSizePerColumn","valsLines","subTensorToString","isLast","storagePerElement","boolNumToString","firstValsSize","firstVals","lastVals","subshape","substrides","lines","end","newLineSep","pad","valStr","parseFloat","toFixed","complexTuples","TensorBuffer","util.sizeFromShape","util.assert","util.getArrayFromDType","locs","locToIndex","trackerFn","makeTensor","opHandler","Tensor","dataId","id","kept","isDisposedInternal","rankType","buffer","throwIfDisposed","read","util.decodeString","_a","readToGPU","readSync","isDisposed","disposeTensor","print","cast","trainable","makeVariable","defineProperty","Symbol","hasInstance","Variable","initialValue","tensorId","super","newValue","util.arraysEqual","incRef","disposeVariable","Rank","UpcastInt32AndMap","UpcastBoolAndMap","UpcastFloat32AndMap","UpcastComplex64AndMap","Function","upcastTypeMap","float32","int32","complex64","makeTypesMatch","typeA","typeB","upcastType","getTensorsInContainer","list","walkTensorContainer","seen","iterable","k","isRegisteredKernelInvocation","kernelInvocation","EngineState","registeredVariables","nextTapeNodeId","numBytes","numTensors","numStringTensors","numDataBuffers","gradientDepth","kernelDepth","scopeStack","numDataMovesStack","nextScopeId","tensorInfo","WeakMap","profiling","activeProfile","newBytes","newTensors","peakBytes","kernels","kernelNames","variableName","dispose","Engine","registry","registryFactory","pendingBackendInitId","state","pendingBackendInit","backendInstance","sortedBackends","getSortedBackends","initializeBackend","success","setBackend","asyncInit","initializeBackendsAndReturnBest","factory","priority","log.warn","setupRegisteredKernels","profiler","setupFunc","disposeFunc","registryFactoryEntry","force","refCount","floatPrecision","promiseId","catch","message","disposeRegisteredKernels","info","srcBackend","disposeData","move","shouldCheckForMemLeaks","nameOrFn","scopedRun","startScope","endScope","res","ex","nextTensorId","nextVariableId","ENGINE","runKernel","addTapeNode","activeScope","dy","gradInputs","attrs","runKernelFunc","numDataIdsBefore","outInfos","numDataIdsAfter","numDataIds","numOutputDataIds","numMoves","dataIdsLeaked","kernelParams","saved","isTapeOn","startingBytecount","startingNumTensors","kernelFunc","out","kernelOrScopeName","checkKernelForMemLeak","outTensors","outInfo","makeTensorFromDataId","tensorsToSave","getTensorsForGradient","saveTensorsForBackwardMode","forwardFunc","saveFunc","tensors","tensor","keep","tidy","outs","backwardsFunc","profileKernel","bytesAdded","totalBytesSnapshot","tensorsAdded","totalTensorsSnapshot","inputShapes","outputShapes","item","kernelTimeMs","gradConfig","inputsToSave","outputsToSave","inputTensorsToSave","saveAllInputs","inputName","outputTensorsToSave","backendVals","util.isString","encode","util.encodeString","write","trackTensor","bytesFromStringArray","util.bytesPerElement","track","removeDataId","varName","memory","unreliable","reasons","query","startBytes","startNumTensors","gradientsFunc","tapeNode","gradFunc","dys","util.makeZerosTypedArray","activeTape","scopeInfo","tensorsToTrackInParent","tensorsToTrackInParentSet","oldScope","scopeId","allowNoGradients","startTape","endTape","filteredTape","tape","tensorsFromX","nodesFromX","nodeInputs","anyInputFromX","tensorsLeadToY","nodesToY","prunedInputs","nodeInput","prunedNode","getFilteredNodesXToY","accumulatedGradientMap","makeOnesTypedArray","ones","tensorAccumulatedGradientMap","gradTensor","inputGradients","dx","curGradient","backpropagateGradients","grads","util.isFunction","every","inputMap","save","gradRes","gradMap","grad","timingInfo","wallMs","reset","getOrMakeEngine","_tfengine","environment","setEnvironmentGlobal","inferShape","firstElem","deepAssertShapeConsistency","subShape","assertDtype","expectedDtype","actualDType","argName","functionName","convertToTensor","parseAsDtype","inferredDtype","inferredShape","convertToTensorArray","registerFlag","debugValue","WorkerGlobalScope","versions","navigator","userAgent","test","vendor","op","opName","endsWith","substring","configurable","complex","complex_","real","imag","$real","$imag","shapeA","shapeB","errorMessagePrefix","util.assertShapesMatch","providedSize","inferredSize","inferred","flatDimsDontMatch","DTYPE_VALUE_SIZE_MAP","float16","uint16","uint8","useNodeBuffer","Buffer","Blob","atob","btoa","stringByteLength","str","byteLength","getModelArtifactsInfoForJSON","modelArtifacts","modelTopology","ArrayBuffer","dateSaved","modelTopologyType","modelTopologyBytes","JSON","stringify","weightSpecsBytes","weightSpecs","weightDataBytes","weightData","getFloat16Decoder","mantisaTable","convertMantissa","Uint32Array","computeFloat16MantisaTable","exponentTable","computeFloat16ExponentTable","offsetTable","computeFloat16OffsetTable","quantizedArray","bufferUint32View","float16Bits","float32Bits","IORouterRegistry","saveRouters","loadRouters","saveRouter","getInstance","loadRouter","getHandlers","loadOptions","handlerType","validHandlers","router","getIndexedDBFactory","theWindow","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","shimIndexedDB","setUpDatabase","openRequest","db","createObjectStore","keyPath","BrowserIndexedDB","modelPath","databaseAction","open","onupgradeneeded","onsuccess","modelTx","transaction","getRequest","objectStore","close","oncomplete","modelArtifactsInfo","infoTx","infoStore","putInfoRequest","put","putModelRequest","deleteInfoRequest","URL_SCHEME","indexedDBRouter","startsWith","registerSaveRouter","registerLoadRouter","BrowserIndexedDBManager","getAllInfoRequest","getAll","path","getInfoRequest","deleteModelData","deleteModelRequest","PATH_PREFIX","INFO_SUFFIX","MODEL_TOPOLOGY_SUFFIX","WEIGHT_SPECS_SUFFIX","WEIGHT_DATA_SUFFIX","MODEL_METADATA_SUFFIX","getModelKeys","topology","modelMetadata","removeItems","localStorage","removeItem","getModelPathFromKey","items","BrowserLocalStorage","LS","setItem","buf","fromCharCode","arrayBufferToBase64String","metadata","generatedBy","convertedBy","signature","userDefinedMetadata","modelInitializer","trainingConfig","parse","getItem","metadataString","weightDataBase64","byteOffset","charCodeAt","base64StringToArrayBuffer","localStorageRouter","BrowserLocalStorageManager","prefix","suffix","ModelStoreManagerRegistry","managers","scheme","manager","PlatformBrowser","fetch","textEncoder","TextEncoder","TextDecoder","setPlatform","registerManager","getNodeFetch","require","systemFetch","PlatformNode","util","requestInits","hrtime","cast_","$x","util.isValidDtype","clone_","monitorPromisesProgress","promises","onProgress","startFraction","endFraction","checkPromises","checkFraction","resolvedPromise","promise","fraction","loadWeights","manifest","filePathPrefix","weightNames","requestInit","weightsLoaderFactory","fetchUrls","fetchURLs","fetchFunc","requests","fetchURL","isBinary","bufferPromises","response","arrayBuffer","loadWeightsAsArrayBuffer","fetchWeightsFunction","groupIndicesToFetchMap","groupWeightsToFetch","weightsFound","allManifestWeightNames","manifestGroupConfig","groupIndex","groupOffset","weightsEntry","rawDtype","quantization","weightsBytes","enqueueWeightsForFetchingFn","manifestEntry","sizeBytes","weightName","weightIndex","found","weightsNotFound","groupIndicesToFetch","accumulator","shouldFetch","paths","filepath","fetchUrl","buffers","weightsTensorMap","bufferIndexOffset","numBuffers","groupBytes","groupBuffer","groupByteBuffer","groupBufferOffset","nameToTensorMap","specs","float16Decode","spec","quantizationSizeFactor","byteBuffer","Uint16Array","dtypeFactor","realTensor","imageTensor","decodeWeights","util.assertNonNegativeIntegerDimensions","matMul","matMul_","transposeA","transposeB","$a","$b","transpose_","perm","reverse","axis","assertAndGetBroadcastShape","unshift","fromPixels2DContext","toPixels","img","$img","originalImgTensor","depth","multiplier","rgba","ImageData","fromPixels","fromPixels_","pixels","numChannels","isPixelData","isImageData","isVideo","isImage","isCanvasLike","isImageBitmap","HTMLVideoElement","HTMLImageElement","ImageBitmap","HAVE_CURRENT_DATA_READY_STATE","readyState","videoWidth","videoHeight","OffscreenCanvas","OffscreenCanvasRenderingContext2D","numPixels","channel","add_","floorDiv","floorDiv_","div","div_","mul","mul_","tupleValuesAreOne","param","dimA","dimB","dimC","parseTupleParam","eitherStridesOrDilationsAreOne","dilations","checkPadOnDimRoundingMode","opDesc","dimRoundingMode","util.isInt","reshape","reshape_","avgPool","avgPool_","filterSize","conv_util.eitherStridesOrDilationsAreOne","x4D","reshapedTo4D","conv_util.checkPadOnDimRoundingMode","concat_","$tensors","sigmoid","sigmoid_","slice_","begin","batchNorm","batchNorm_","mean","variance","varianceEpsilon","$mean","$variance","$scale","$offset","xAs4D","bincount","bincount_","$weights","broadcastTo","broadcastTo_","xShape","some","newShape","reps","clipByValue","clipByValue_","clipValueMin","clipValueMax","conv2d","conv2d_","dataFormat","$filter","inDepth","depthwiseConv2d","depthwiseConv2d_","where","where_","condition","$condition","broadcastShape","exp","exp_","expandDims","expandDims_","dim","tile","tile_","greater","greater_","lessEqual","lessEqual_","neg","neg_","max_","keepDims","reductionIndices","sub","sub_","sum","sum_","maxPool","maxPool_","zeros","pad_","paddings","constantValue","step","relu_","round_","scalar","separableConv2d","separableConv2d_","depthwiseFilter","pointwiseFilter","$depthwiseFilter","$pointwiseFilter","inChannels","channelMultiplier","depthwise","slice3d","slice3d_","softmax","softmax_","$logits","split_","numOrSizeSplits","stack_","tensor1d","tensor2d","tensor4d","unstack","unstack_","cropAndResize","cropAndResize_","boxes","boxInd","cropSize","method","extrapolationValue","$image","$boxes","$boxInd","numBoxes","flipLeftRight","flipLeftRight_","grayscaleToRGB","grayscaleToRGB_","lastDimsIdx","lastDims","rotateWithOffset","rotateWithOffset_","radians","fillValue","center","nonMaxSuppSanityCheck","scores","maxOutputSize","iouThreshold","scoreThreshold","softNmsSigma","NEGATIVE_INFINITY","nonMaxSuppression","nonMaxSuppression_","$scores","binaryInsert","comparator","middle","compareResult","binarySearch_","defaultComparator","binarySearch","insertionPoint","nonMaxSuppressionImpl_","returnScoresTensor","padToMaxOutputSize","returnValidOutputs","candidates","score","boxIndex","suppressBeginIndex","ascendingComparator","selectedIndices","selectedScores","candidate","originalScore","ignoreCandidate","iou","intersectionOverUnion","suppressWeight","validOutputs","elemsToPad","iCoord","subarray","jCoord","yminI","xminI","ymaxI","xmaxI","yminJ","xminJ","ymaxJ","xmaxJ","areaI","areaJ","intersectionYmin","intersectionXmin","intersectionYmax","intersectionXmax","intersectionArea","c1","c2","nonMaxSuppressionAsync","boxesAndScores","boxesVals","scoresVals","nonMaxSuppressionV3Impl","nonMaxSuppressionWithScore","nonMaxSuppressionWithScore_","nonMaxSuppressionWithScoreAsync","nonMaxSuppressionV5Impl","nonMaxSuppressionPadded","nonMaxSuppressionPadded_","nonMaxSuppressionPaddedAsync","$maxOutputSize","$iouThreshold","$scoreThreshold","nonMaxSuppressionV4Impl","resizeBilinear","resizeBilinear_","images","alignCorners","halfPixelCenters","$images","batchImages","resizeNearestNeighbor","resizeNearestNeighbor_","threshold","threshold_","inverted","threshValue","totalPixelsInImage","grayscale","$threshold","$r","$g","histogram","classFirst","classSecond","meanFirst","meanSec","weightForeground","weightBack","bestThresh","bestInBetVar","cInBetVar","meanFirstDivA","meanSecFill","meanSecAdd","meanSecMul","cInBetVarSubA","cInBetVarSubB","cInBetVarMul","otsu","invCondition","transform","transform_","transforms","interpolation","fillMode","outputShape","$transforms","extendStatics","setPrototypeOf","__proto__","prototype","hasOwnProperty","__extends","TypeError","__","__assign","arguments","__awaiter","thisArg","_arguments","P","generator","fulfilled","rejected","__generator","label","sent","trys","ops","verb","throw","return","iterator","__spreadArrays","il","jl","Dimensions","isValidNumber","_width","_height","enumerable","isTensor","tf.Tensor","isTensor3D","isTensor4D","isEven","prec","isDimensions","getCenterPoint","pts","pt","Point","isValidProbablitiy","_x","_y","magnitude","sqrt","Box","_box","allowNegativeDimensions","box","isBbox","isRect","assertIsValidBox","rect","callee","toSquare","diff","rescale","scaleX","scaleY","padX","padY","clipAtImageBorders","imgWidth","imgHeight","clippedX","clippedY","newWidth","newHeight","shift","padAtBorders","h","edx","edy","ey","calibrate","region","BoundingBox","_super","ObjectDetection","classScore","className","relativeBox","imageDims","_imageDims","_score","_classScore","_className","forSize","FaceDetection","box1","box2","isIOU","interSection","area","indicesSortedByScore","pick","_loop_1","curr","idx","currBox","idxBox","meanRgb","tf.tidy","avg_r","tf.fill","avg_g","avg_b","avg_rgb","tf.concat","tf.sub","Rect","FaceLandmarks","relativeFaceLandmarkPositions","imgDims","_imgDims","_shift","_positions","_this","relativePositions","shiftBy","shiftByPoint","align","detection","useDlibAlignment","minBoxPadding","alignDlib","alignMinBbox","centers","getRefPointsForAlignment","leftEyeCenter","rightEyeCenter","mouthCenter","distToMouth","eyeToMouthDist","refPoint","minX","minY","maxX","maxY","positions","FaceLandmarks5","FaceLandmarks68","getJawOutline","getLeftEyeBrow","getRightEyeBrow","getNose","getLeftEye","getRightEye","getMouth","FaceMatch","distance","_label","_distance","withDistance","LabeledBox","assertIsValidLabeledBox","LabeledFaceDescriptors","descriptors","desc","_descriptors","toJSON","fromJSON","json","PredictedBox","assertIsValidPredictedBox","isWithFaceDetection","extendWithFaceDetection","sourceObj","extension","createBrowserEnv","Canvas","HTMLCanvasElement","CanvasRenderingContext2D","Video","createCanvasElement","createImageElement","readFile","createFileSystem","fs","requireFsError","filePath","rej","createNodejsEnv","fileSystem","isBrowser","isNodejs","version","setEnv","initialize","AnchorPosition","getEnv","monkeyPatch","_b","resolveInput","getContext2dOrThrow","canvasArg","DrawTextFieldOptions","anchorPosition","backgroundColor","fontColor","fontSize","fontStyle","TOP_LEFT","DrawTextField","measureWidth","measureText","w0","w1","measureHeight","getUpperLeft","canvasDims","isShiftLeft","BOTTOM_RIGHT","TOP_RIGHT","isShiftTop","BOTTOM_LEFT","textFieldWidth","textFieldHeight","draw","font","maxTextWidth","textHeight","fillStyle","upperLeft","fillRect","textLine","fillText","DrawBoxOptions","boxColor","lineWidth","drawLabelOptions","defaultDrawLabelOptions","DrawBox","strokeStyle","strokeRect","isMediaLoaded","media","complete","getMediaDimensions","naturalWidth","naturalHeight","createCanvas","createCanvasFromMedia","dims","imageTensorToCanvas","imgTensor","targetCanvas","imgTensor3D","tf.browser.toPixels","as3D","toInt","isMediaElement","NetInput","treatAsBatchInput","_imageTensors","_canvases","_treatAsBatchInput","_inputDimensions","_batchSize","batchSize","_inputSize","batchIdx","getReshapedInputDimensions","getInput","canvases","imageTensors","getInputDimensions","getInputHeight","getInputWidth","inputSize","computeReshapedDimensions","toBatchTensor","isCenterInputs","inputTensors","isCenterImage","dimDiff","paddingAmount","paddingAxis","createPaddingTensor","paddingTensorShape","paddingTensorAppend","remainingPaddingAmount","tensorsToStack","toFloat","padToSquare","tf.image","tf.browser.fromPixels","centerImage","inputCanvas","imageToSquare","tf.stack","as4D","toNetInput","inputArgArray","getIdxHint","inputArray","onLoad","currentTarget","onError","extractFaces","detections","netInput","tensorOrCanvas","det","faceImg","extractFaceTensors","tf.slice3d","fetchOrThrow","status","statusText","fetchJson","uri","getModelUris","defaultModelName","defaultManifestFilename","modelBaseUri","manifestUri","protocol","parts","manifestFile","loadWeightMap","tf.io.loadWeights","NeuralNetwork","_name","_params","_paramMappings","getParamFromPath","paramPath","traversePropertyPath","objProp","reassignParamFromPath","getParamList","getTrainableParams","tf.Variable","getFrozenParams","variable","freeze","tf.tensor","throwOnRedispose","serializeParams","flat","load","weightsOrUrl","extractWeights","loadFromUri","weightMap","getDefaultModelName","loadFromWeightMap","loadFromDisk","_c","_d","tf.io.weightsLoaderFactory","filePaths","extractParamsFromWeigthMap","paramMappings","extractParams","nextObj","depthwiseSeparableConv","tf.separableConv2d","depthwise_filter","pointwise_filter","tf.add","denseBlock3","denseBlockParams","isFirstLayer","out1","tf.relu","tf.conv2d","conv0","filters","out2","conv1","out3","conv2","denseBlock4","isScaleDown","out4","conv3","convLayer","withRelu","disposeUnusedWeightTensors","pm","originalPath","extractConvParamsFactory","channelsIn","channelsOut","mappedPrefix","tf.tensor4d","tf.tensor1d","extractFCParamsFactory","fc_weights","tf.tensor2d","fc_bias","SeparableConvParams","extractSeparableConvParamsFactory","loadSeparableConvParamsFactory","extractWeightEntry","extractWeightEntryFactory","paramRank","mappedPath","extractWeightsFactory","remainingWeights","numWeights","getRemainingWeights","extractorsFactory","extractConvParams","extractSeparableConvParams","extractDenseBlock3Params","extractDenseBlock4Params","loadConvParamsFactory","loadParamsFactory","FaceFeatureExtractor","forwardInput","tf.scalar","dense0","dense1","dense2","dense3","tf.avgPool","forward","fullyConnectedLayer","tf.matMul","seperateWeightMaps","featureExtractorMap","classifierMap","FaceProcessor","faceFeatureExtractor","_faceFeatureExtractor","runNet","bottleneckFeatures","as2D","loadClassifierParams","extractClassifierParams","extractFCParams","getClassifierChannelsIn","getClassifierChannelsOut","cIn","cOut","classifierWeightSize","featureExtractorWeights","classifierWeights","FACE_EXPRESSION_LABELS","FaceExpressions","probabilities","expression","asSortedArray","probability","e0","e1","FaceExpressionNet","tf.softmax","predictExpressions","probabilitesByBatch","predictionsByBatch","tf.unstack","probabilites","isBatchInput","extendWithFaceExpressions","expressions","drawFaceExpressions","faceExpressions","minConfidence","textFieldAnchor","resultsToDisplay","bottomLeft","isWithFaceLandmarks","extendWithFaceLandmarks","unshiftedLandmarks","landmarks","alignedRect","numMainBlocks","extractReductionBlockParams","separable_conv0","separable_conv1","expansion_conv","extractMainBlockParams","channels","separable_conv2","entry_flow","conv_in","reduction_block_0","reduction_block_1","middle_flow","exit_flow","reduction_block","separable_conv","reductionBlock","isActivateInput","tf.maxPool","Gender","TinyXception","_numMainBlocks","normalized","mainBlock","AgeGenderNet","pooled","age","as1D","gender","predictAgeAndGender","ages","genders","ageAndGenderTensors","ageTensor","genderTensor","probMale","isMale","genderProbability","MALE","FEMALE","extractFcParams","FaceLandmark68NetBase","postProcess","originalDimensions","inputDimensions","createInterleavedTensor","fillX","fillY","getPadding","cond","getPaddingX","getPaddingY","detectLandmarks","landmarkTensors","landmarksForBatch","landmarkTensor","landmarksArray","xCoords","yCoords","FaceLandmark68Net","TinyFaceFeatureExtractor","extractParamsFromWeigthMapTiny","extractParamsTiny","FaceLandmark68TinyNet","FaceLandmarkNet","tf.mul","convNoRelu","convDown","numFilterValues","numFilters","tf.transpose","extractFilterValues","extractConvLayerParams","extractScaleLayerParams","extractResidualLayerParams","isDown","conv32_down","conv32_1","conv32_2","conv32_3","conv64_down","conv64_1","conv64_2","conv64_3","conv128_down","conv128_1","conv128_2","conv256_down","conv256_1","conv256_2","conv256_down_out","isTensor2D","residual","residualDown","tf.zeros","isPad","padShapeX","zerosW","padShapeY","zerosH","FaceRecognitionNet","globalAvg","computeFaceDescriptor","faceDescriptorTensors","faceDescriptorsForBatch","extendWithFaceDescriptor","descriptor","extendWithAge","extendWithGender","MtcnnOptions","minFaceSize","scaleFactor","maxNumScales","scoreThresholds","scaleSteps","_minFaceSize","_scaleFactor","_maxNumScales","_scoreThresholds","_scaleSteps","th","isPointwiseConv","extractPointwiseConvParams","batch_norm_offset","extractConvPairParams","depthwise_conv","batch_norm_scale","batch_norm_mean","batch_norm_variance","extractDepthwiseConvParams","pointwise_conv","extractMobilenetV1Params","conv_0","conv_1","conv_2","conv_3","conv_4","conv_5","conv_6","conv_7","conv_8","conv_9","conv_10","conv_11","conv_12","conv_13","extractPredictionLayerParams","box_predictor_0","box_encoding_predictor","class_predictor","box_predictor_1","box_predictor_2","box_predictor_3","box_predictor_4","box_predictor_5","prefixDepthwiseConv","mappedPrefixDepthwiseConv","mappedPrefixPointwiseConv","extractBoxPredictorParams","extra_dim","mobilenetv1","prediction_layer","output_layer","pointwiseConvLayer","tf.clipByValue","mobileNetV1","conv11","layerIdx","depthwiseConvStrides","getStridesForLayerIdx","tf.depthwiseConv2d","tf.batchNorm","depthwiseConvLayer","IOU","boxesData","decodeBoxesLayer","x0","x1","vec","sizes","tf.div","getCenterCoordinatesAndSizesLayer","div0_out","tf.exp","add0_out","div1_out","add1_out","boxPredictionLayer","boxPredictionEncoding","tf.reshape","classPrediction","TinyYolov2SizeType","SsdMobilenetv1Options","maxResults","_minConfidence","_maxResults","SsdMobilenetv1","batchTensor","conv4","conv5","conv6","conv7","boxPrediction0","boxPrediction1","boxPrediction2","boxPrediction3","boxPrediction4","boxPrediction5","boxPredictions","classPredictions","predictionLayer","tf.tile","scoresAndClasses","tf.sigmoid","tf.slice","outputLayer","locateFaces","_boxes","_scores","scoresData","reshapedDims","results","_e","outputSize","tf.tensor3d","BOX_ANCHORS","FaceDetectionNet","BOX_ANCHORS_SEPARABLE","MEAN_RGB_SEPARABLE","isNumber","leaky","convWithBatchNorm","tf.pad","bn","truediv","extractConvWithBatchNormParams","extractBatchNormParams","TinyYolov2Options","_scoreThreshold","TinyYolov2Base","withSeparableConvs","classes","anchors","validateConfig","_config","withClassScores","runTinyYolov2","conv8","runMobilenet","isFirstLayerConv2d","detect","forwardParams","out0","classScores","classNames","extractBoxes","filterSizes","DEFAULT_FILTER_SIZES","boxEncodingSize","s0","s1","s2","s3","s4","s5","s6","s7","s8","outputTensor","inputBlobDimensions","correctionFactorX","correctionFactorY","numCells","boxesTensor","scoresTensor","classScoresTensor","ctX","ctY","width_1","height_1","reshaped","extractPredictedClass","classesTensor","classesData","TinyYolov2","TinyFaceDetectorOptions","ComposableTask","onfulfilled","extractAllFacesAndComputeResults","parentResults","computeResults","extractedFaces","getRectForAlignment","faceBoxes","faces","parentResult","extractSingleFaceAndComputeResult","computeResult","extractPReluParams","alpha","extractSharedParams","isRnet","prelu1_alpha","prelu2_alpha","prelu3_alpha","extractPNetParams","sharedParams","conv4_1","conv4_2","extractRNetParams","fc1","prelu4_alpha","fc2_1","fc2_2","extractONetParams","prelu5_alpha","fc2_3","pnet","rnet","onet","getSizesForScale","MtcnnBox","prelu","tf.neg","sharedLayer","isPnet","stage1","scales","stats","allBoxes","statsForScale","resized","rescaleAndNormalize","ts","tf.expandDims","tf.max","prob","regions","PNet","regionsTensor","boundingBoxes","cell","regionsData","extractBoundingBoxes","nms","boxIdx","finalBoxes","finalScores","stage1_nms","extractImagePatches","imgCtx","bitmaps","imagePatchesDatas","fromX","fromY","imgData","createImageBitmap","bmp","patchCtx","currData","stage2","inputBoxes","rnetInputs","rnetOuts","filteredBoxes","filteredScores","indicesNms","regions_1","stage2_extractImagePatches","rnetInput","convOut","prelu4","RNet","stage2_rnet","stage2_nms","stage3","onetInputs","onetOuts","filteredRegions","points","stage3_extractImagePatches","onetInput","prelu5","ONet","stage3_onet","stage3_nms","ptIdx","pointsData","Mtcnn","tsTotal","onReturn","bgrToRgbTensor","minLayer","pyramidDown","pyramid","total_stage1","stage2_numInputBoxes","total_stage2","stage3_numInputBoxes","total_stage3","forwardWithStats","MEAN_RGB","TinyFaceDetector","nets","ssdMobilenetv1","tinyFaceDetector","tinyYolov2","mtcnn","faceLandmark68Net","faceLandmark68TinyNet","faceRecognitionNet","faceExpressionNet","ageGenderNet","PredictFaceExpressionsTaskBase","parentTask","PredictAllFaceExpressionsTask","faceExpressionsByFace","face","withAgeAndGender","PredictAllAgeAndGenderTask","PredictSingleFaceExpressionsTask","PredictSingleAgeAndGenderTask","PredictAllFaceExpressionsWithFaceAlignmentTask","PredictAllAgeAndGenderWithFaceAlignmentTask","withFaceDescriptors","ComputeAllFaceDescriptorsTask","PredictSingleFaceExpressionsWithFaceAlignmentTask","PredictSingleAgeAndGenderWithFaceAlignmentTask","withFaceDescriptor","ComputeSingleFaceDescriptorTask","PredictAgeAndGenderTaskBase","ageAndGenderByFace","withFaceExpressions","ComputeFaceDescriptorsTaskBase","DetectFaceLandmarksTaskBase","useTinyLandmarkNet","DetectAllFaceLandmarksTask","faceLandmarksByFace","landmarkNet","DetectSingleFaceLandmarksTask","DetectFacesTaskBase","DetectAllFacesTask","faceDetectionFunction","runAndExtendWithFaceDetections","withFaceLandmarks","DetectSingleFaceTask","faceDetections","faceDetectionWithHighestScore","faceDetection","runAndExtendWithFaceDetection","FaceMatcher","distanceThreshold","_distanceThreshold","count","createUniqueLabel","_labeledDescriptors","computeMeanDistance","queryDescriptor","arr1","arr2","desc1","desc2","euclideanDistance","d1","d2","matchDescriptor","labeledDescriptors","best","findBestMatch","bestMatch","ld","getComputedStyle","iframe","tabIndex","unsubscribe","contentWindow","faceapi.TinyFaceDetectorOptions","clientHeight","clientWidth","myCanvas","msgButton","videoSource","stream","loading","playVideo","faceapi.nets","getTracks","hidden","mediaDevices","getUserMedia","video","audio","srcObject","play","onPlay","faceapi.detectSingleFace","resizedResult","resizeResults","dimensions","resizedDetection","resizedLandmarks","faceapi.resizeResults","reference","useMediaDimensions","faceapi.matchDimensions","faceapi.draw.drawFaceExpressions","setTimeout","innerHeight","leftStartValue"],"mappings":"gCAAA,SAASA,KAgBT,SAASC,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EAEhF,IAAIE,EA+HJ,MAAMC,EAA8B,oBAAXC,OACzB,IAAIC,EAAMF,EACJ,IAAMC,OAAOE,YAAYD,MACzB,IAAME,KAAKF,MACbG,EAAML,EAAYM,GAAMC,sBAAsBD,GAAMrB,EASxD,MAAMuB,EAAQ,IAAIC,IAClB,SAASC,EAAUR,GACfM,EAAMf,QAAQkB,IACLA,EAAKC,EAAEV,KACRM,EAAMK,OAAOF,GACbA,EAAKG,OAGM,IAAfN,EAAMO,MACNV,EAAIK,GA+HZ,SAASM,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAoDvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAUxC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GAQhC,SAASQ,EAAQC,GACb,OAAOC,SAASC,cAAcF,GAoBlC,SAASG,EAAKC,GACV,OAAOH,SAASI,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAEhB,SAASI,IACL,OAAOJ,EAAK,IAEhB,SAASK,EAAOjB,EAAMkB,EAAOC,EAASC,GAElC,OADApB,EAAKqB,iBAAiBH,EAAOC,EAASC,GAC/B,IAAMpB,EAAKsB,oBAAoBJ,EAAOC,EAASC,GA8B1D,SAASG,EAAKvB,EAAMwB,EAAWC,GACd,MAATA,EACAzB,EAAK0B,gBAAgBF,GAChBxB,EAAK2B,aAAaH,KAAeC,GACtCzB,EAAK4B,aAAaJ,EAAWC,GAqLrC,SAASI,EAASjB,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKkB,YAAcjB,IACnBD,EAAKC,KAAOA,GAEpB,SAASkB,EAAgBC,EAAOP,GAC5BO,EAAMP,MAAiB,MAATA,EAAgB,GAAKA,EAUvC,SAASQ,EAAUjC,EAAMkC,EAAKT,EAAOU,GACnB,OAAVV,EACAzB,EAAKoC,MAAMC,eAAeH,GAG1BlC,EAAKoC,MAAME,YAAYJ,EAAKT,EAAOU,EAAY,YAAc,IAGrE,SAASI,EAAcC,EAAQf,GAC3B,IAAK,IAAIgB,EAAI,EAAGA,EAAID,EAAOpB,QAAQsB,OAAQD,GAAK,EAAG,CAC/C,MAAME,EAASH,EAAOpB,QAAQqB,GAC9B,GAAIE,EAAOC,UAAYnB,EAEnB,YADAkB,EAAOE,UAAW,GAI1BL,EAAOM,eAAiB,EAiB5B,IAAIC,EAyQAC,EAxQJ,SAASC,IACL,QAAoBC,IAAhBH,EAA2B,CAC3BA,GAAc,EACd,IAC0B,oBAAXhE,QAA0BA,OAAOoE,QACnCpE,OAAOoE,OAAOzC,SAG3B,MAAO0C,GACHL,GAAc,GAGtB,OAAOA,EAsCX,SAASM,EAAa7C,EAASC,EAAM6C,GACjC9C,EAAQ+C,UAAUD,EAAS,MAAQ,UAAU7C,GAsNjD,SAAS+C,EAAsBC,GAC3BT,EAAoBS,EAExB,SAASC,IACL,IAAKV,EACD,MAAM,IAAIW,MAAM,oDACpB,OAAOX,EAKX,SAASY,EAAQ3F,GACbyF,IAAwBG,GAAGC,SAASC,KAAK9F,GAE7C,SAAS+F,EAAY/F,GACjByF,IAAwBG,GAAGI,aAAaF,KAAK9F,GAKjD,SAASiG,IACL,MAAMT,EAAYC,IAClB,MAAO,CAACS,EAAMC,KACV,MAAMC,EAAYZ,EAAUI,GAAGQ,UAAUF,GACzC,GAAIE,EAAW,CAGX,MAAMnD,EA/OlB,SAAsBiD,EAAMC,EAAQE,GAAU,GAC1C,MAAMC,EAAI7D,SAAS8D,YAAY,eAE/B,OADAD,EAAEE,gBAAgBN,EAAMG,GAAS,EAAOF,GACjCG,EA4OeG,CAAaP,EAAMC,GACjCC,EAAUM,QAAQpG,QAAQN,IACtBA,EAAG2G,KAAKnB,EAAWvC,OA4BnC,MAAM2D,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoBpH,GACzB8G,EAAiBhB,KAAK9F,GAuB1B,MAAMqH,EAAiB,IAAI/F,IAC3B,IAAIgG,EAAW,EACf,SAASC,IACL,MAAMC,EAAkBzC,EACxB,EAAG,CAGC,KAAOuC,EAAWV,EAAiBnC,QAAQ,CACvC,MAAMe,EAAYoB,EAAiBU,GACnCA,IACA/B,EAAsBC,GACtBiC,EAAOjC,EAAUI,IAKrB,IAHAL,EAAsB,MACtBqB,EAAiBnC,OAAS,EAC1B6C,EAAW,EACJT,EAAkBpC,QACrBoC,EAAkBa,KAAlBb,GAIJ,IAAK,IAAIrC,EAAI,EAAGA,EAAIsC,EAAiBrC,OAAQD,GAAK,EAAG,CACjD,MAAMmD,EAAWb,EAAiBtC,GAC7B6C,EAAeO,IAAID,KAEpBN,EAAeQ,IAAIF,GACnBA,KAGRb,EAAiBrC,OAAS,QACrBmC,EAAiBnC,QAC1B,KAAOsC,EAAgBtC,QACnBsC,EAAgBW,KAAhBX,GAEJI,GAAmB,EACnBE,EAAeS,QACfvC,EAAsBiC,GAE1B,SAASC,EAAO7B,GACZ,GAAoB,OAAhBA,EAAGmC,SAAmB,CACtBnC,EAAG6B,SACHrH,EAAQwF,EAAGoC,eACX,MAAMC,EAAQrC,EAAGqC,MACjBrC,EAAGqC,MAAQ,EAAE,GACbrC,EAAGmC,UAAYnC,EAAGmC,SAASG,EAAEtC,EAAGuC,IAAKF,GACrCrC,EAAGI,aAAa1F,QAAQ8G,IAiBhC,MAAMgB,EAAW,IAAI9G,IACrB,IAAI+G,EACJ,SAASC,IACLD,EAAS,CACLE,EAAG,EACH9G,EAAG,GACHyG,EAAGG,GAGX,SAASG,IACAH,EAAOE,GACRnI,EAAQiI,EAAO5G,GAEnB4G,EAASA,EAAOH,EAEpB,SAASO,EAAcC,EAAOC,GACtBD,GAASA,EAAMlE,IACf4D,EAAS1G,OAAOgH,GAChBA,EAAMlE,EAAEmE,IAGhB,SAASC,EAAeF,EAAOC,EAAOvG,EAAQuF,GAC1C,GAAIe,GAASA,EAAMG,EAAG,CAClB,GAAIT,EAASR,IAAIc,GACb,OACJN,EAASP,IAAIa,GACbL,EAAO5G,EAAEqE,KAAK,KACVsC,EAAS1G,OAAOgH,GACZf,IACIvF,GACAsG,EAAMI,EAAE,GACZnB,OAGRe,EAAMG,EAAEF,IA8oBhB,SAASI,EAAiBL,GACtBA,GAASA,EAAMjH,IAKnB,SAASuH,EAAgBxD,EAAW1D,EAAQI,EAAQ+G,GAChD,MAAMlB,SAAEA,EAAQlC,SAAEA,EAAQqD,WAAEA,EAAUlD,aAAEA,GAAiBR,EAAUI,GACnEmC,GAAYA,EAASoB,EAAErH,EAAQI,GAC1B+G,GAED7B,EAAoB,KAChB,MAAMgC,EAAiBvD,EAASwD,IAAItJ,GAAKuJ,OAAO/I,GAC5C2I,EACAA,EAAWpD,QAAQsD,GAKnBhJ,EAAQgJ,GAEZ5D,EAAUI,GAAGC,SAAW,KAGhCG,EAAa1F,QAAQ8G,GAEzB,SAASmC,EAAkB/D,EAAWgE,GAClC,MAAM5D,EAAKJ,EAAUI,GACD,OAAhBA,EAAGmC,WACH3H,EAAQwF,EAAGsD,YACXtD,EAAGmC,UAAYnC,EAAGmC,SAASe,EAAEU,GAG7B5D,EAAGsD,WAAatD,EAAGmC,SAAW,KAC9BnC,EAAGuC,IAAM,IAGjB,SAASsB,GAAWjE,EAAWhB,IACI,IAA3BgB,EAAUI,GAAGqC,MAAM,KACnBrB,EAAiBd,KAAKN,GAtzBrB2B,IACDA,GAAmB,EACnBH,EAAiB0C,KAAKnC,IAszBtB/B,EAAUI,GAAGqC,MAAM0B,KAAK,IAE5BnE,EAAUI,GAAGqC,MAAOzD,EAAI,GAAM,IAAO,GAAMA,EAAI,GAEnD,SAASoF,GAAKpE,EAAWrC,EAAS0G,EAAUC,EAAiBC,EAAWC,EAAOC,EAAehC,EAAQ,EAAE,IACpG,MAAMiC,EAAmBnF,EACzBQ,EAAsBC,GACtB,MAAMI,EAAKJ,EAAUI,GAAK,CACtBmC,SAAU,KACVI,IAAK,KAEL6B,MAAAA,EACAvC,OAAQ3H,EACRiK,UAAAA,EACAI,MAAOlK,IAEP4F,SAAU,GACVqD,WAAY,GACZkB,cAAe,GACfpC,cAAe,GACfhC,aAAc,GACdqE,QAAS,IAAIC,IAAInH,EAAQkH,UAAYH,EAAmBA,EAAiBtE,GAAGyE,QAAU,KAEtFjE,UAAWnG,IACXgI,MAAAA,EACAsC,YAAY,EACZC,KAAMrH,EAAQrB,QAAUoI,EAAiBtE,GAAG4E,MAEhDP,GAAiBA,EAAcrE,EAAG4E,MAClC,IAAIC,GAAQ,EAkBZ,GAjBA7E,EAAGuC,IAAM0B,EACHA,EAASrE,EAAWrC,EAAQ6G,OAAS,GAAI,CAACxF,EAAGkG,KAAQC,KACnD,MAAMnH,EAAQmH,EAAKlG,OAASkG,EAAK,GAAKD,EAOtC,OANI9E,EAAGuC,KAAO4B,EAAUnE,EAAGuC,IAAI3D,GAAIoB,EAAGuC,IAAI3D,GAAKhB,MACtCoC,EAAG2E,YAAc3E,EAAGuE,MAAM3F,IAC3BoB,EAAGuE,MAAM3F,GAAGhB,GACZiH,GACAhB,GAAWjE,EAAWhB,IAEvBkG,IAET,GACN9E,EAAG6B,SACHgD,GAAQ,EACRrK,EAAQwF,EAAGoC,eAEXpC,EAAGmC,WAAW+B,GAAkBA,EAAgBlE,EAAGuC,KAC/ChF,EAAQrB,OAAQ,CAChB,GAAIqB,EAAQyH,QAAS,CAEjB,MAAMC,EA/1ClB,SAAkBtI,GACd,OAAOuI,MAAMC,KAAKxI,EAAQyI,YA81CJC,CAAS9H,EAAQrB,QAE/B8D,EAAGmC,UAAYnC,EAAGmC,SAASmD,EAAEL,GAC7BA,EAAMvK,QAAQ8B,QAIdwD,EAAGmC,UAAYnC,EAAGmC,SAAStG,IAE3B0B,EAAQgI,OACR1C,EAAcjD,EAAUI,GAAGmC,UAC/BiB,EAAgBxD,EAAWrC,EAAQrB,OAAQqB,EAAQjB,OAAQiB,EAAQ8F,eAEnE1B,IAEJhC,EAAsB2E,GAkD1B,MAAMkB,GACFC,WACI9B,EAAkB+B,KAAM,GACxBA,KAAKC,SAAWzL,EAEpBuL,IAAInF,EAAMyB,GACN,MAAMvB,EAAakF,KAAK1F,GAAGQ,UAAUF,KAAUoF,KAAK1F,GAAGQ,UAAUF,GAAQ,IAEzE,OADAE,EAAUN,KAAK6B,GACR,KACH,MAAM6D,EAAQpF,EAAUqF,QAAQ9D,IACjB,IAAX6D,GACApF,EAAUsF,OAAOF,EAAO,IAGpCH,KAAKM,GA93DT,IAAkBC,EA+3DNN,KAAKO,QA/3DCD,EA+3DkBD,EA93DG,IAA5BzL,OAAO4L,KAAKF,GAAKnH,UA+3DhB6G,KAAK1F,GAAG2E,YAAa,EACrBe,KAAKO,MAAMF,GACXL,KAAK1F,GAAG2E,YAAa,ICz6DjC,MAAMwB,GAAmB,GAgBzB,SAASC,GAASxI,EAAOyI,EAAQnM,GAC7B,IAAIoM,EACJ,MAAMC,EAAc,IAAI7K,IACxB,SAAS8K,EAAIC,GACT,GAAI5L,EAAe+C,EAAO6I,KACtB7I,EAAQ6I,EACJH,GAAM,CACN,MAAMI,GAAaP,GAAiBtH,OACpC,IAAK,MAAM8H,KAAcJ,EACrBI,EAAW,KACXR,GAAiBjG,KAAKyG,EAAY/I,GAEtC,GAAI8I,EAAW,CACX,IAAK,IAAI9H,EAAI,EAAGA,EAAIuH,GAAiBtH,OAAQD,GAAK,EAC9CuH,GAAiBvH,GAAG,GAAGuH,GAAiBvH,EAAI,IAEhDuH,GAAiBtH,OAAS,IAuB1C,MAAO,CAAE2H,IAAAA,EAAK3E,OAlBd,SAAgBzH,GACZoM,EAAIpM,EAAGwD,KAiBWgJ,UAftB,SAAmBzM,EAAK0M,EAAa3M,GACjC,MAAMyM,EAAa,CAACxM,EAAK0M,GAMzB,OALAN,EAAYtE,IAAI0E,GACS,IAArBJ,EAAYvK,OACZsK,EAAOD,EAAMG,IAAQtM,GAEzBC,EAAIyD,GACG,KACH2I,EAAYzK,OAAO6K,GACM,IAArBJ,EAAYvK,OACZsK,IACAA,EAAO,SCpDhB,MAAMQ,GAAWV,GAAS,IACpBW,GAAWX,QAAS/G,GAEpB2H,GAAuBZ,QAAS/G,GAChC4H,GAAuBb,QAAS/G,GAEhC6H,GAAsBd,GAAS,IAC/Be,GAA0Bf,QAAS/G,GAEnC+H,GAAsBhB,GAAS,IAC/BiB,GAAsBjB,GAAS,IAE/BkB,GAAkBlB,GAAS,MAAC/G,OAAWA,IAEvCkI,GAAoBnB,IAAS,GAE7BoB,GAAiCpB,IAAS,GAE1CqB,GAAmBrB,IAAS,GAC5BsB,GAAyBtB,GAAS,IAClCuB,GAA8BvB,IAAS,GAEvCwB,GAAiBxB,GAAS,IAE1ByB,GAAazB,GAAS,IAEtB0B,GAAiC1B,GAAS,IAE1C2B,GAAiB3B,GAAS,GAE1B4B,GAAc5B,GAAS,gBCmIvB6B,GAAc,CAACC,EAAQC,EAAOpE,KACzC,IAAIqE,EAAQ,GAEZ,IAAK,IAAIzF,EAAI,EAAGA,EAAIuF,EAAQvF,IAAK,CAC/B,IAAI0F,EAAM,IAAInD,MAAMiD,GAAOpE,KAAKA,GAChCqE,EAAMlI,KAAKmI,GAEb,OAAOD,GAQHE,GAAY,CAACC,EAAMC,KACvBC,QAAQC,OAAOH,EAAK1J,SAAW2J,EAAK3J,OAAQ,0BAC5C4J,QAAQC,OAAOH,EAAK,GAAG1J,SAAW2J,EAAK,GAAG3J,OAAQ,0BAElD,IAAI8J,EAAS,EACb,IAAK,IAAI/J,EAAI,EAAGA,EAAI2J,EAAK1J,OAAQD,IAC/B,IAAK,IAAIgK,EAAI,EAAGA,EAAIL,EAAK,GAAG1J,OAAQ+J,IAClCD,GAAUJ,EAAK3J,GAAGgK,GAAKJ,EAAK5J,GAAGgK,GAInC,OAAOD,GA+BIE,GAAc,CAACC,EAAKC,EAAIC,EAAIC,EAAIC,IACpCJ,EAAIhI,MAAMiI,EAAIC,GAAIvF,IAAI0F,GAAKA,EAAErI,MAAMmI,EAAIC,IAO1CE,GAAaN,IACjB,IAAIO,GAAUC,EAAAA,EACd,IAAK,IAAI1K,EAAI,EAAGA,EAAIkK,EAAIjK,OAAQD,IAC9B,IAAK,IAAIgK,EAAI,EAAGA,EAAIE,EAAI,GAAGjK,OAAQ+J,IAC7BE,EAAIlK,GAAGgK,GAAKS,IACdA,EAASP,EAAIlK,GAAGgK,IAItB,OAAOS,GAoEIE,GAAa,CAACpL,EAAOqL,EAAQC,EAAO,EAAGC,EAAQ,KAI1DjB,QAAQC,OAAOvK,EAAMU,SAAWV,EAAM,GAAGU,OACtC,4BACH4J,QAAQC,OAAOc,EAAO3K,SAAW2K,EAAO,GAAG3K,OACzC,6BAEF,IAAI8K,GAAYxL,EAAMU,OAAS2K,EAAO3K,QAAU4K,EAAS,EAErDd,EAASV,GAAY0B,EAAUA,EAAU,GAG7C,IAAK,IAAIhH,EAAI,EAAGA,EAAIgH,EAAUhH,IAC5B,IAAK,IAAI9G,EAAI,EAAGA,EAAI8N,EAAU9N,IAAK,CACjC,IAAI+N,EAAYf,GAAY1K,EAAOwE,EAAI8G,EAAQ9G,EAAI8G,EAASD,EAAO3K,OACjEhD,EAAI4N,EAAQ5N,EAAI4N,EAASD,EAAO3K,QAC9BgL,EAAMvB,GAAUsB,EAAWJ,GAC/Bb,EAAOhG,GAAG9G,GAAKgO,EAGnB,OAAOlB,GA6EImB,GAAmB,CAAChB,EAAKiB,EAAY,EAAGN,EAAO,EAAGC,EAAQ,WACrEjB,QAAQC,OAAuB,IAAhBqB,EAAmB,gCAClCtB,QAAQC,OAAkB,IAAXe,EAAc,4BAC7BhB,QAAQC,OAAmB,UAAZgB,EAAqB,8BAKhCZ,EAAIjK,OAAS,GAAM,GAAiB,UAAZ6K,IAC1BZ,EAAMD,GAAYC,EAAK,EAAGA,EAAIjK,OAAS,EAAG,EAAGiK,EAAIjK,OAAS,IAG5D,IAAI8K,GAAYb,EAAIjK,OAASkL,GAAeN,EAAS,EACjDd,EAASV,GAAY0B,EAAUA,EAAU,GAE7C,IAAK,IAAIhH,EAAI,EAAGA,EAAIgH,EAAUhH,IAC5B,IAAK,IAAI9G,EAAI,EAAGA,EAAI8N,EAAU9N,IAAK,CACjC,IAAI+N,EAAYf,GAAYC,EAAKnG,EAAI8G,EAAQ9G,EAAI8G,EAASM,EACxDlO,EAAI4N,EAAQ5N,EAAI4N,EAASM,GAC3BpB,EAAOhG,GAAG9G,GAAKuN,GAAUQ,GAG9B,OAAOjB,GCxaD,SAASqB,GAAQnL,EAAQ9C,GAC9B,OAAOmJ,MAAMC,KAAK,CAACtG,OAAQA,GAAS9C,GAAMkO,EAAGrL,IAAM7C,EAAE6C,QAAMS,GAG7D,SAAS6K,GAAQhC,EAAQC,EAAOpM,GAC9B,OAAOmJ,MAAMC,KAAK,CAACtG,OAAQqJ,GAAS,CAAC+B,EAAGrL,IAAMsG,MAAMC,KAAK,CAACtG,OAAQsJ,GAAQpM,GAAMoO,EAAGvB,IAAM7M,EAAE6C,EAAGgK,QAAMvJ,IAG/F,SAAS+K,GAAuBX,EAAQY,EAAQC,EAAcC,EAAmBC,GACtF,MAAMC,EAAgBP,GAAQG,EAAOxL,OAAQwL,EAAOxL,OAAQ,CAACD,EAAGgK,IAAMsB,GAAQI,EAAcA,IAC5F,IAAK,IAAII,EAAQ,EAAGA,EAAQL,EAAOxL,OAAQ6L,IACzC,IAAK,IAAIC,EAAQ,EAAGA,EAAQN,EAAOxL,OAAQ8L,IACzC,IAAK,IAAIC,EAAS,EAAGA,EAASN,EAAcM,IAC1C,IAAK,IAAIC,EAAS,EAAGA,EAASP,EAAcO,IAAU,CACpD,MAAMC,EAAOJ,EAAQjB,EAASmB,EAASJ,EACjCO,EAAOJ,EAAQlB,EAASoB,EAASL,EACvCC,EAAcC,GAAOC,GAAOC,GAAQC,GAAUC,EAAOP,EAAoBQ,EAKjF,OAAON,EAGF,SAASO,GAAqCC,EAAQC,EACfX,EAAmBY,EAAaC,EAAgBd,GAG5F,MAAMe,EAA+BrB,GAAQO,EAAoBA,GACjE,IAAK,IAAIe,EAAW,EAAGA,EAAWhB,EAAcgB,IAC9C,IAAK,IAAIC,EAAW,EAAGA,EAAWjB,EAAciB,IAAY,CAC1D,MAAMC,EAAaJ,EAAeH,GAAQC,GAAQI,GAAUC,QAClC,IAAfC,IACXH,EAA6BG,GAAc,CAACF,EAAUC,IAG1D,OAAOF,EAGF,SAASI,GAAkCC,EAAQC,EAAYrB,GACpE,IAAIsB,EAAUD,EAAWE,OAAO,CAACC,EAAOlO,EAAOgI,KAClCvG,MAATzB,GAAoBkO,EAAM5L,KAAK0F,GAC1BkG,GACN,IACH,OAAOjD,GAAY6C,EAAQK,KAAKC,MAAMJ,EAAQ,GAAKF,EAAO7M,QAASkN,KAAKC,MAAMJ,EAAQ,GAAKF,EAAO7M,QAAUyL,EAAcsB,EAAQ,GAAKF,EAAO7M,OAAQ+M,EAAQ,GAAKF,EAAO7M,OAASyL,GAG9K,SAAS2B,GAAmCP,EAAQC,GACzD,IAAIC,EAAUD,EAAWE,OAAO,CAACC,EAAOlO,EAAOgI,KAClC,GAAThI,GAAgBkO,EAAM5L,KAAK0F,GACtBkG,GACN,IACH,OAAOjD,GAAY6C,EAAQK,KAAKC,MAAMJ,EAAQ,GAAKF,EAAO7M,QAASkN,KAAKC,MAAMJ,EAAQ,GAAKF,EAAO7M,QAAU,EAAG+M,EAAQ,GAAKF,EAAO7M,OAAQ+M,EAAQ,GAAKF,EAAO7M,OAAS,GAInK,SAASqN,GAA+BC,GAG7C,OAFiB,IAEGA,EADI,GAAA,GADP,IAEsEA,EAGlF,SAASC,GAAaC,GAC3B,IAAIC,EAASD,EAAM5I,KAAI,SAAS4E,GAAM,OAAO0D,KAAKQ,IAAIC,MAAMT,KAAM1D,MAC9DkE,EAAMR,KAAKQ,IAAIC,MAAM,KAAMF,GAC3BG,EAASJ,EAAM5I,KAAI,SAAS4E,GAAM,OAAO0D,KAAKW,IAAIF,MAAMT,KAAM1D,MAC9DqE,EAAMX,KAAKW,IAAIF,MAAM,KAAMC,GAM/B,MALY,CACVE,MAAO,EAAIZ,KAAKQ,IAAIR,KAAKa,IAAIF,GAAMX,KAAKa,IAAIL,IAC5CG,IAAKA,EACLH,IAAKA,GAKF,SAASM,GAASR,EAAOS,EAAWZ,GAA+BG,EAAMxN,SAO9E,IALA,IAAI7B,EAAO,IAAIkI,MACX6H,EAAO,EACPC,EAAO,EACP7E,EAAQ2E,EACR5E,EAAS4E,EACJzE,EAAM,EAAGA,EAAMgE,EAAMxN,OAAQwJ,IAAO,CAC3CrL,EAAKkD,KAAM,IAAIgF,OACf,IAAK,IAAI+H,EAAS,EAAGA,EAASZ,EAAM,GAAGxN,OAAQoO,IAC7CjQ,EAAKqL,GAAKnI,KAAK,CACbnD,KAAMgP,KAAKmB,MAA2B,IAArBb,EAAMhE,GAAK4E,IAAiB,IAC7C5E,IAAKA,EACL8E,IAAKF,EACLG,EAAGL,EACHM,EAAGL,EACH7E,MAAOA,EACPD,OAAQA,IAEV6E,GAAQ5E,EAEV4E,EAAO,EACPC,GAAQ9E,EAEV,OAAOlL,qMCiBTX,iFAtGMiR,QAfOtQ,iBACA2O,mBACA4B,iBACAT,gBACAU,mBACAC,aACAhE,iBACAiE,EAAaC,GAAGC,iCAChBC,GAAe,WAUpBC,EAAWzN,QAEb0N,EAAepC,EACfqC,EAAUhR,QAERiR,OACJN,GAAGhP,OAAO2O,GAAYY,UAAU,aAAaC,eACvCC,EAAqBpR,EAAK6B,OAASiO,EAAa,MAOlDzE,EANOsF,GAAGhP,OAAO2O,GAAY3O,OAAO,SACrCjB,KAAK,QAAS0Q,EAAqB,MACnC1Q,KAAK,SAAU0Q,EAAqB,MACpCnS,OAAO,OACPyB,KAAK,QAAS0Q,EAAqB,MACnC1Q,KAAK,SAAU0Q,EAAqB,MACxBF,UAAU,QACtBlR,KAAKA,GACLqR,QAAQpS,OAAO,KACfyB,KAAK,QAAS,OACJ2K,EAAI6F,UAAU,WACxBlR,eAAckG,UAAYA,KAC1BmL,QAAQpS,OAAO,QACfyB,KAAK,QAAQ,UACbA,KAAK,cAAcwF,UAAYA,EAAEkK,KACjC1P,KAAK,cAAcwF,UAAYA,EAAEmK,KACjC3P,KAAK,kBAAkBwF,UAAYA,EAAEiF,SACrCzK,KAAK,mBAAmBwF,UAAYA,EAAEgF,UACtC3J,MAAM,UAAW,IACjBA,MAAM,iBAAiB2E,OAClBoL,EAAkBpL,EAAEnG,YAEtBuR,EADET,EACgB,EAAI3K,EAAEnG,MAELmG,EAAEnG,KAAOyQ,EAAY,GAAKA,EAExCE,EAAWY,MAEnBC,GAAG,sBAAsBrL,GACpBlG,EAAK6B,QAAU4O,EACjBK,EAAS,WACP7C,OAAQc,KAAKW,IAAIX,KAAKC,MAAM9I,EAAEmF,IAAMoB,GAASgE,EAAe,GAC5DvC,OAAQa,KAAKW,IAAIX,KAAKC,MAAM9I,EAAEiK,IAAM1D,GAASgE,EAAe,KAG9DK,EAAS,WACP7C,OAAQc,KAAKW,IAAIX,KAAKC,MAAM9I,EAAEmF,IAAM,GAAIoF,EAAe,GACvDvC,OAAQa,KAAKW,IAAIX,KAAKC,MAAM9I,EAAEiK,IAAM,GAAIM,EAAe,WAI3DF,EACSlF,EAAI6F,UAAU,SACtBlR,eAAckG,UAAYA,KAC1BmL,QAAQpS,OAAO,QACfyB,KAAK,QAAQ,QACba,MAAM,YAAawN,KAAKC,MAAMc,EAxDP,KAwD6C,MACpEpP,KAAK,cAAcwF,UAAYA,EAAEkK,EAAIlK,EAAEiF,MAAQ,KAC/CzK,KAAK,cAAcwF,UAAYA,EAAEmK,EAAInK,EAAEgF,OAAS,KAChD3J,MAAM,iBAAiB2E,OACpBoL,EAAkBpL,EAAEnG,YAEpBuR,EADET,EACgB,EAAI3K,EAAEnG,MAELmG,EAAEnG,KAAOyQ,EAAY,GAAKA,EAE3Cc,EAAkB,IAAOA,EAAkB,GACtC,QAEA,WAGV/P,MAAM,cAAe,UACrBA,MAAM,oBAAqB,UAC3BxB,eAAcmG,UACNA,EAAEnG,KAAKyR,WAAWC,QAAQ,IAAK,gBAK9CtO,QACMnD,GAAQgR,IACVC,IACAD,EAAUhR,GAGR2O,GAAcoC,KACLJ,GAAGhP,OAAO2O,GAAY3O,OAAO,SAASA,OAAO,OACnDuP,UAAU,WACZ3P,MAAM,SAAW2E,GAAMqK,GAAiB5B,EAAW9M,QAAU8M,EAAWzI,EAAEmF,IAAMrL,EAAK6B,OAASqE,EAAEiK,KAAQ,QAAU,MACrHY,EAAepC,KAKnB5L,OACEkO,2ZAMSX,iXCmKbjR,2BAKAA,6GAlRMqS,EACAC,QAbO3R,aACAwM,iBACAsD,gBACAU,kBACAoB,iBACAlB,EAAaC,GAAGC,qCAChBiB,EAAmBlB,GAAGmB,iCACtBjB,GAAe,WAQpBkB,EAA8BhD,KAAKC,MAAMc,EAAa,OAExDkB,EAAUhR,QA2GRiR,OACJN,GAAGhP,OAAO+P,GAAWR,UAAU,aAAaC,eACtCC,EAAqB5E,EAAcxM,EAAK6B,OAASiO,EAAnB,EAAiC,EAAI9P,EAAK6B,OAASiO,EAAa,MAOhGzE,EANOsF,GAAGhP,OAAO+P,GAAW/P,OAAO,SACpCjB,KAAK,QAAS0Q,EAAqB,MACnC1Q,KAAK,SAAU0Q,EAAqB,MACpCnS,OAAO,OACPyB,KAAK,QAAS0Q,EAAqB,MACnC1Q,KAAK,SAAU0Q,EAAqB,MACxBF,UAAU,QACtBlR,KAAKA,GACLqR,QAAQpS,OAAO,KACfyB,KAAK,QAAS,OAEbsR,EAAU3G,EAAI6F,UAAU,WACzBlR,eAAckG,UAAYA,KAC1BmL,QAEHW,EAAQ/S,OAAO,QACZyB,KAAK,QAAQ,UACbA,KAAK,cAAcwF,UAAoB,IAARA,EAAEkK,EAAUlK,EAAEkK,EAAI2B,EAAoC,EAAN7L,EAAEkK,EAAQ2B,KACzFrR,KAAK,cAAcwF,UAAoB,IAARA,EAAEmK,EAAUnK,EAAEmK,EAAU,EAANnK,EAAEmK,KACnD3P,KAAK,kBAAkBwF,UAAYA,EAAEiF,SACrCzK,KAAK,mBAAmBwF,UAAYA,EAAEgF,UACtC3J,MAAM,UAAW,IACjBA,MAAM,iBAAiB2E,OAClBoL,EAAkBpL,EAAEnG,YAEtBuR,EADET,EACgB,EAAI3K,EAAEnG,MAELmG,EAAEnG,KAAOyQ,EAAY,GAAKA,EAExCE,EAAWY,MAEnB/P,MAAM,SAAU,SAEnByQ,EAAQ/S,OAAO,QACZyB,KAAK,QAAQ,UACbA,KAAK,cAAcwF,UAAoB,IAARA,EAAEkK,EAAUlK,EAAEkK,EAAI2B,EAAmC,EAAN7L,EAAEkK,EAAQ2B,KACxFrR,KAAK,cAAcwF,UAAoB,IAARA,EAAEmK,EAAUnK,EAAEmK,EAAInK,EAAEgF,OAAe,EAANhF,EAAEmK,EAAQnK,EAAEgF,UACxExK,KAAK,kBAAkBwF,UAAYA,EAAEiF,SACrCzK,KAAK,mBAAmBwF,UAAYA,EAAEgF,OAAS,KAC/C3J,MAAM,UAAW,IAEjBA,MAAM,iBAAiB2E,OAClBoL,GAAmB9E,EAAOtG,EAAEmF,KAAKnF,EAAEiK,KAAKpQ,KAAO6R,EAAYjC,MAAQ,GAAKiC,EAAYjC,aAGjFkC,KADsBP,EADjB,WAKZW,EAAQ5G,EAAI6F,UAAU,SACvBlR,eAAckG,UAAYA,KAC1BmL,QAEHY,EAAMhT,OAAO,QACVyB,KAAK,QAAQ,QACba,MAAM,YAAawN,KAAKC,MAAMc,EAvKL,KAuK2C,MACpEpP,KAAK,cAAcwF,UAAoB,IAARA,EAAEkK,EAAUlK,EAAEkK,EAAIlK,EAAEiF,MAAQ,EAAI4G,EAAmC,EAAN7L,EAAEkK,EAAQlK,EAAEiF,MAAQ,EAAI4G,KACpHrR,KAAK,cAAcwF,UAAoB,IAARA,EAAEmK,EAAUnK,EAAEmK,EAAInK,EAAEgF,OAAS,EAAU,EAANhF,EAAEmK,EAAQnK,EAAEgF,OAAS,KACrF3J,MAAM,iBAAiB2E,OAClBoL,EAAkBpL,EAAEnG,YAEtBuR,EADET,EACgB,EAAI3K,EAAEnG,MAELmG,EAAEnG,KAAOyQ,EAAY,GAAKA,EAE3Cc,EAAkB,IAAOA,EAAkB,GACzCT,GAAgBS,EAAkB,GAC7B,QAEF,QAEA,WAGV/P,MAAM,cAAe,UACrBA,MAAM,oBAAqB,UAC3BxB,eAAcmG,UAAYA,EAAEnG,QAG/BkS,EAAMhT,OAAO,QACVyB,KAAK,QAAQ,QACba,MAAM,YAAawN,KAAKC,MAAMc,EAjML,KAiM6C,MACtEpP,KAAK,cAAe,KACpBA,KAAK,cAAcwF,UAAoB,IAARA,EAAEkK,EAAUlK,EAAEkK,EAAI2B,EAA8B,EAAS,EAAN7L,EAAEkK,EAAQ2B,EAA8B,KAC1HrR,KAAK,cAAcwF,UAAoB,IAARA,EAAEmK,EAAUnK,EAAEmK,EAAInK,EAAEgF,OAAUhF,EAAEgF,OAAS,EAAW,EAANhF,EAAEmK,EAAQnK,EAAEgF,OAAUhF,EAAEgF,OAAS,KAC9G3J,MAAM,OAAQ,SACdA,MAAM,cAAe,UACrBA,MAAM,oBAAqB,UAC3BxB,eAAcmG,SAAY,OAE7B+L,EAAMhT,OAAO,QACVyB,KAAK,QAAQ,QACba,MAAM,YAAawN,KAAKC,MAAMc,EA5ML,KA4M2C,MACpEpP,KAAK,cAAcwF,UAAoB,IAARA,EAAEkK,EAAUlK,EAAEkK,EAAIlK,EAAEiF,MAAQ,EAAI4G,EAAmC,EAAN7L,EAAEkK,EAAQlK,EAAEiF,MAAQ,EAAI4G,KACpHrR,KAAK,cAAcwF,UAAoB,IAARA,EAAEmK,EAAUnK,EAAEmK,EAAInK,EAAEgF,OAAUhF,EAAEgF,OAAS,EAAW,EAANhF,EAAEmK,EAAQnK,EAAEgF,OAAUhF,EAAEgF,OAAS,KAC9G3J,MAAM,iBAAiB2E,OAGlBgM,OAFmB1F,EAAOtG,EAAEmF,KAAKnF,EAAEiK,KAAKpQ,KAAO6R,EAAYjC,MAAQ,GAAKiC,EAAYjC,OAC5E,UAERuC,EAAyB,IAAOA,EAAyB,GACpD,QAEA,WAGV3Q,MAAM,cAAe,UACrBA,MAAM,oBAAqB,UAC3BxB,eAAcmG,UAAYsG,EAAOtG,EAAEmF,KAAKnF,EAAEiK,KAAKpQ,QAElDkS,EAAMhT,OAAO,QACVyB,KAAK,QAAQ,QACba,MAAM,YAAawN,KAAKC,MAAMc,OAA4C,MAC1EpP,KAAK,cAAcwF,UAAoB,IAARA,EAAEkK,EAAUlK,EAAEkK,EAAIlK,EAAEiF,MAAQjF,EAAEiF,MAAQ,EAAI4G,EAAmC,EAAN7L,EAAEkK,EAAQlK,EAAEiF,MAAQjF,EAAEiF,MAAQ,EAAI4G,KACxIrR,KAAK,cAAcwF,UAAoB,IAARA,EAAEmK,EAAUnK,EAAEmK,EAAInK,EAAEgF,OAAS,EAAU,EAANhF,EAAEmK,EAAQnK,EAAEgF,OAAS,KACrF3J,MAAM,cAAe,UACrBA,MAAM,oBAAqB,UAC3BxB,eAAcmG,UAAYA,EAAEmF,KAAOmB,EAAO3K,OAAS,GAAKqE,EAAEiK,KAAO3D,EAAO3K,OAAS,EAAI,IAAM,eAGhGsB,OACMnD,GAAQgR,IACVC,IACAD,EAAUhR,KAiBd+C,OACEkO,2XAgBSU,qDAKAD,6PCrLDnM,KAAM1D,YAAU0D,KAAM,GAAG1D,YAgBxB0D,KAAO1D,YAAU0D,KAAO,GAAG1D,uCAdO0D,iBAAuBA,kBAA+BA,KAAO1D,qBACxF,aAAmBqN,GAA+B3J,KAAM1D,kBAC3D0D,YAAmBA,gBAAoBA,kBACpCA,wBAHIA,6BAMAA,YAA8BA,iBAAwB2J,GAA+B3J,KAAO1D,kBACvF0D,iBAAwB6J,GAAa7J,iBAAqBA,kBACvDA,8BACdA,iBAAmCA,mBAAgC,aACnE2J,GAA+B3J,KAAO1D,kBAAoB0D,8BAM7BA,iBAAwBA,mBAAgC,eACnFA,KAAO1D,kBAAoBqN,GAA+B3J,KAAO1D,kBAAoB0D,YAAmBA,wBADpGA,sCAnBG,sBACF,iBAAmB,qHAejB,uBACA,iBAAoB,4PAlB/ClG,SACEJ,sEAQFI,iDAOAA,SACEJ,8FAfUsG,KAAM1D,qCAAU0D,KAAM,GAAG1D,8CAEU0D,4BAAuBA,2BAA+BA,KAAO1D,2BACrEqN,GAA+B3J,KAAM1D,4BAC3D0D,qBAAmBA,0BAAoBA,4BACpCA,0CAGIA,wBAA8BA,0BAAwB2J,GAA+B3J,KAAO1D,4BACvF0D,0BAAwB6J,GAAa7J,2BAAqBA,4BACvDA,2CACdA,4BAAmCA,yBACnC2J,GAA+B3J,KAAO1D,4BAAoB0D,kCAI/DA,KAAO1D,qCAAU0D,KAAO,GAAG1D,8CAEO0D,4BAAwBA,2BACnDA,KAAO1D,2BAAoBqN,GAA+B3J,KAAO1D,4BAAoB0D,qBAAmBA,qSAlH/GkH,eACAe,aACAhB,YACA6C,aACAhC,eACA8E,gBACA3B,iBACAE,wBACA0B,GAAoB,WAEzBtB,EAAWzN,QAEbkK,EAAoB8B,EAAMxN,OAAS6K,EAInC2F,aACKzQ,EAAI,EAAGA,EAAI4K,EAAO3K,OAAQD,KACjCyQ,EAAqBnP,iBACZ0I,EAAI,EAAGA,EAAIY,EAAO3K,OAAQ+J,IACjCyG,EAAqBzQ,GAAGsB,KAAK,GAGjCmP,EAAuBxC,GAASwC,OAK5BC,EAOAC,EAXAC,EAAwB3C,IAAU,IAElC4C,KACAC,EAAmB1F,GAAQK,EAAOxL,OAASwL,EAAOxL,OAASD,IAAM,YAU5D+Q,EAAiBlG,GACxB8F,EAAU,MACNnE,EAAiBhB,GAAuBX,EAAQY,EAAQb,EAAO3K,OAAQ0L,EAAmBC,GAC1Ff,GAAU,IACV6F,GAAUM,cAAcN,QAC5BA,EAAWO,oBACLV,eACEW,EAAgBP,GAAWlF,EAAOxL,OAASwL,EAAOxL,YACxD6Q,EAAmB1F,GAAQK,EAAOxL,OAASwL,EAAOxL,OAASD,IAAM,UAC3DmR,EAAYhE,KAAKC,MAAM8D,EAAgBzF,EAAOxL,QAC9CmR,EAAYF,EAAgBzF,EAAOxL,WACzC6Q,EAAiBK,EAAY1F,EAAOxL,OAASmR,IAAa,SAC1DP,EAAkBzE,GAAqC+E,EAAWC,EAAWzF,EAAmBf,EAAO3K,OAAQuM,EAAgB5B,EAAO3K,eAChIoR,EAAmBxE,GAAkCY,EAAOoD,EAAiBjG,EAAO3K,YAC1FwQ,EAAuBxC,GAASoD,UAC1BC,EAAoBjE,GAAmC5B,EAAQqF,QACrEF,EAAwB3C,GAASqD,IACjCX,KACC,OAoBLI,EAAiBlG,OACb0G,EAAYtD,GAASR,GACrB+D,EAAavD,GAASxC,GACtBgG,EAAaxD,GAASrD,oXAjEvBe,EAAoB8B,EAAMxN,OAAS6K,iBAkBbM,GAAQK,EAAOxL,OAASwL,EAAOxL,OAASD,IAAM,mBAiDrE+Q,EAAiBlG,QACjB0G,EAAYtD,GAASR,SACrB+D,EAAavD,GAASxC,SACtBgG,EAAaxD,GAASrD,4CAzBCnM,OACnB+N,EAAiBhB,GAAuBX,EAAQY,EAAQb,EAAO3K,OAAQ0L,EAAmBC,OAC9FkF,EAAmB1F,GAAQK,EAAOxL,OAASwL,EAAOxL,OAASD,IAAM,UAC3DmR,EAAY1S,EAAMkD,OAAO0K,OACzB+E,EAAY3S,EAAMkD,OAAO2K,WAC/BwE,EAAiBK,EAAY1F,EAAOxL,OAASmR,IAAa,SAC1DP,EAAkBzE,GAAqC+E,EAAWC,EAAWzF,EAAmBf,EAAO3K,OAAQuM,EAAgB5B,EAAO3K,eAChIoR,EAAmBxE,GAAkCY,EAAOoD,EAAiBjG,EAAO3K,YAC1FwQ,EAAuBxC,GAASoD,UAC1BC,EAAoBjE,GAAmC5B,EAAQqF,QACrEF,EAAwB3C,GAASqD,SACjCf,GAAW,GACXrB,EAAS,WACP/Q,KAAMoS,gPC2DO5M,KACL,+CACA,qEAWIA,WAAeA,YAAeA,KAC9BkH,OAAAA,GAAkBe,SAAAA,YAAoBjI,eACnCA,gBAAuBA,uBACfA,wBAJYA,6lCA5CvClG,SAkBEJ,OAEEA,OAEEA,cAIAA,OACEA,cAIAA,4BAMAA,cAMJA,0BAQAA,+BAxB0CqU,gBAIY/N,kBAMEA,yCAL3CA,KACL,+CACA,kFAWIA,oBAAeA,uBAAeA,wBACQA,wBACnCA,0BAAuBA,iCACfA,0IAjDvBA,kFAAAA,+KA/FDkH,GAAS,QACNe,GAAW,WAeR8F,mCAzBEnS,aACAqL,gBACAgE,iBACAE,EAAaC,GAAGC,sCAChBwB,GAAoB,eACpBmB,GAAW,WAGhBzC,EAAWzN,QAGb8O,GAAW,EACXqB,EAAcjH,GAAWpL,EAAOqL,EAAQC,2RAGxC+G,EAAcjH,GAAWpL,EAAOqL,EAAQC,WAExChB,QAAQgI,IAAI,2BAA6BhH,sCAK3C0F,GAAYA,aAUsB9R,OAClC8R,EAAW9R,EAAMkD,OAAOxD,sBAIxBwT,GAAW,GACXzC,EAAS,WACP/Q,KAAMwT,+NC0CAhO,KAAM1D,YAAU0D,KAAM,GAAG1D,YAqBxB0D,KAAO1D,YAAU0D,KAAO,GAAG1D,uCAnBO0D,gBAAuBA,kBAA+BA,KAAO1D,qBACxF,aAAmBqN,GAA+B3J,KAAM1D,kBAAoB0D,YAAmB,qBAD3FA,4BAMJsK,KAAW,gBAAkBtK,mBAAgC,aACjE,aAAeA,8BAEXA,gBAAkCA,mBAAgC,aACtE,aAAeA,8BAGXA,gBAAmCA,mBAAgC,aACrE,aAAeA,8BAOcA,gBAAwBA,mBAAgC,eACnFA,KAAO1D,kBAAoBqN,GAA+B3J,KAAO1D,kBAAoB0D,YAAmB,qBADpGA,qCAxBG,sBACF,iBAAmB,6DAMpC,mCAGmC,sCAGA,yEAQhB,uBACA,iBAAoB,4PAvB/ClG,SACEJ,sEAMFI,SACEJ,yEAaFI,SACEJ,8FApBUsG,KAAM1D,qCAAU0D,KAAM,GAAG1D,6CAEU0D,yBAAuBA,2BAA+BA,KAAO1D,2BACrEqN,GAA+B3J,KAAM1D,2BAAoB0D,+CAK/CA,wBAClBA,yCAEXA,0BAAkCA,wBACvBA,yCAGXA,0BAAmCA,wBACtBA,kCAKpBA,KAAO1D,qCAAU0D,KAAO,GAAG1D,6CAEO0D,0BAAwBA,2BACnDA,KAAO1D,2BAAoBqN,GAA+B3J,KAAO1D,2BAAoB0D,+UAvG5F8J,aACAhC,eACA8E,gBACA3B,WAELM,EAAWzN,QASbiP,EAOAC,EAdAhF,EAAoB8B,EAAMxN,OAAS6K,EAGnCgH,EAAuB7D,KAAW,KAClC8D,EAAwB9D,KAAW,KACnC4C,EAAkBzF,GAAQqC,EAAMxN,OAASwN,EAAMxN,OAASD,IAAM,GAC9D8Q,EAAmB1F,GAAQK,EAAOxL,OAASwL,EAAOxL,OAASD,IAAM,YAW5DgS,IACPrB,EAAU,EACND,GAAUM,cAAcN,QAC5BA,EAAWO,oBACLV,eACEW,EAAgBP,GAAWlF,EAAOxL,OAASwL,EAAOxL,YACxD6Q,EAAmB1F,GAAQK,EAAOxL,OAASwL,EAAOxL,OAASD,IAAM,QACjE6Q,EAAkBzF,GAAQqC,EAAMxN,OAASwN,EAAMxN,OAASD,cAClDmR,EAAYhE,KAAKC,MAAM8D,EAAgBzF,EAAOxL,QAC9CmR,EAAYF,EAAgBzF,EAAOxL,WACzC6Q,EAAiBK,EAAY1F,EAAOxL,OAASmR,IAAa,SAC1DP,EAAgBM,EAAY1F,EAAOxL,OAASmR,IAAa,WACnDC,EAAmBxE,GAAkCY,EAAOoD,EAAiB,OACnFiB,EAAuB7D,GAASoD,UAC1BC,EAAoBjE,GAAmC5B,EAAQqF,OACrEiB,EAAwB9D,GAASqD,IACjCX,KACC,MAoBLqB,QACIC,EAAYhE,GAASR,GACrByE,EAAajE,GAASxC,2LAvDvBE,EAAoB8B,EAAMxN,OAAS6K,iBAQdM,GAAQqC,EAAMxN,OAASwN,EAAMxN,OAASD,IAAM,GAC3CoL,GAAQK,EAAOxL,OAASwL,EAAOxL,OAASD,IAAM,kBAgDrEgS,QACAC,EAAYhE,GAASR,QACrByE,EAAajE,GAASxC,kCAvBChN,OACvBqS,EAAmB1F,GAAQK,EAAOxL,OAASwL,EAAOxL,OAASD,IAAM,UAC3DmR,EAAY1S,EAAMkD,OAAO0K,OACzB+E,EAAY3S,EAAMkD,OAAO2K,WAC/BwE,EAAiBK,EAAY1F,EAAOxL,OAASmR,IAAa,SAC1DP,EAAkBzF,GAAQqC,EAAMxN,OAASwN,EAAMxN,OAASD,YACxD6Q,EAAgBM,EAAY1F,EAAOxL,OAASmR,IAAa,WACnDC,EAAmBxE,GAAkCY,EAAOoD,EAAiB,OACnFiB,EAAuB7D,GAASoD,UAC1BC,EAAoBjE,GAAmC5B,EAAQqF,OACrEiB,EAAwB9D,GAASqD,SACjCf,GAAW,GACXrB,EAAS,WACP/Q,KAAMoS,+KC+CO5M,KACL,+CACA,oEAYGA,YAAeA,cAAkBA,eAC7BA,wBAFmBA,mkCA7BtClG,SACEJ,OAEEA,OAEEA,cAIAA,OAEEA,cAIAA,4BAMAA,cAOJA,0BAMAA,+BAvB0CqU,gBAIY/N,kBAMEA,wCAL3CA,KACL,+CACA,iFAYGA,qBAAeA,wBAAkBA,wBAC7BA,0IAhCfA,kFAAAA,oLApEK+N,mCAtBEnS,aACAkM,gBACAmD,eACA+C,WAELzC,EAAWzN,QACb8O,GAAW,gLAGbA,GAAYA,aAGsB9R,OAClC8R,EAAW9R,EAAMkD,OAAOxD,kBAIxB+Q,EAAS,WACP/Q,MAAM,0LC8EAwF,KAAU1D,YAAU0D,KAAU,GAAG1D,YAmBhC0D,MAAW1D,YAAU0D,MAAW,GAAG1D,uCAhBD0D,gBAAuBA,kBAA+BA,KAAO1D,qBACxF,aAAmBqN,GAA+B3J,KAAM1D,kBAAoB0D,YAAmBA,wBAD3FA,6BAMJA,gBAAkCA,mBAAgC,aACpE2J,GAA+B3J,gBAA0BA,8BAGvDA,gBAAmCA,mBAAgC,aACrE2J,GAA+B3J,gBAA0BA,8BAO5BA,iBAAwBA,mBAAgC,eACnFA,KAAO1D,kBAAoBqN,GAA+B3J,KAAO1D,kBAAoB0D,YAAmBA,wBADpGA,sCAtBG,sBACE,iBAAuB,6DAO5C,mCAG+E,yEAQ5D,uBACI,iBAAwB,4PArBvDlG,SACEJ,sEAOFI,SACEJ,sDAUFI,SACEJ,gGAlBUsG,KAAU1D,uCAAU0D,KAAU,GAAG1D,6CAGE0D,0BAAuBA,2BAA+BA,KAAO1D,2BACrEqN,GAA+B3J,KAAM1D,4BAAoB0D,qBAAmBA,0CAK/FA,0BAAkCA,yBACpC2J,GAA+B3J,0BAA0BA,0CAGvDA,0BAAmCA,yBACrC2J,GAA+B3J,0BAA0BA,qCAK9DA,MAAW1D,wCAAU0D,MAAW,GAAG1D,8CAED0D,2BAAwBA,2BACnDA,KAAO1D,2BAAoBqN,GAA+B3J,KAAO1D,4BAAoB0D,qBAAmBA,qSAlH/GkH,eACAe,mBACAF,YACA+B,aACAhC,eACA8E,gBACA3B,WAELM,EAAWzN,QAEbkK,EAAoB8B,EAAMxN,OAAS6K,EAInC2F,aACKzQ,EAAI,EAAGA,EAAI0L,EAAc1L,KAChCyQ,EAAqBnP,iBACZ0I,EAAI,EAAGA,EAAI0B,EAAc1B,IAChCyG,EAAqBzQ,GAAGsB,KAAK,GAGjCmP,EAAuBxC,GAASwC,OAK5BC,EAOAC,EAXAC,EAAwB3C,KAAW,KAEnC4C,KACAC,EAAmB1F,GAAQK,EAAOxL,OAASwL,EAAOxL,OAASD,IAAM,YAW5DmS,EAAatH,GACpB8F,EAAU,MACNnE,EAAiBhB,GAAuBX,EAAQY,EAAQC,EAAcC,EAAmBC,GACzFf,GAAU,IACV6F,GAAUM,cAAcN,QAC5BA,EAAWO,oBACLV,eACEW,EAAgBP,GAAWlF,EAAOxL,OAASwL,EAAOxL,YACxD6Q,EAAmB1F,GAAQK,EAAOxL,OAASwL,EAAOxL,OAASD,IAAM,UAC3DmR,EAAYhE,KAAKC,MAAM8D,EAAgBzF,EAAOxL,QAC9CmR,EAAYF,EAAgBzF,EAAOxL,WACzC6Q,EAAiBK,EAAY1F,EAAOxL,OAASmR,IAAa,SAC1DP,EAAkBzE,GAAqC+E,EAAWC,EAAWzF,EAAmBD,EAAcc,EAAgBd,UACxH2F,EAAmBxE,GAAkCY,EAAOoD,EAAiBnF,OACnF+E,EAAuBxC,GAASoD,UAC1BC,EAAoBjE,GAAmC5B,EAAQqF,OACrEF,EAAwB3C,GAASqD,IACjCX,KACC,OAoBLwB,EAAatH,OACT0G,EAAYtD,GAASR,GACrB+D,EAAavD,GAASxC,sSAjEvBE,EAAoB8B,EAAMxN,OAAS6K,iBAkBbM,GAAQK,EAAOxL,OAASwL,EAAOxL,OAASD,IAAM,mBAiDrEmS,EAAatH,OACb0G,EAAYtD,GAASR,SACrB+D,EAAavD,GAASxC,sCAvBChN,OACnB+N,EAAiBhB,GAAuBX,EAAQY,EAAQC,EAAcC,EAAmBC,OAC7FkF,EAAmB1F,GAAQK,EAAOxL,OAASwL,EAAOxL,OAASD,IAAM,UAC3DmR,EAAY1S,EAAMkD,OAAO0K,OACzB+E,EAAY3S,EAAMkD,OAAO2K,WAC/BwE,EAAiBK,EAAY1F,EAAOxL,OAASmR,IAAa,SAC1DP,EAAkBzE,GAAqC+E,EAAWC,EAAWzF,EAAmBD,EAAcc,EAAgBd,UACxH2F,EAAmBxE,GAAkCY,EAAOoD,EAAiBnF,OACnF+E,EAAuBxC,GAASoD,UAC1BC,EAAoBjE,GAAmC5B,EAAQqF,OACrEF,EAAwB3C,GAASqD,SACjCf,GAAW,GACXrB,EAAS,WACP/Q,KAAMoS,qNC6FO5M,KACL,+CACA,2EAYUA,WAAqBA,YAAeA,YAC1CkH,YAAkBe,YAAoBjI,eACnCA,wBAHaA,gkCA7ChClG,SAiBEJ,OAEEA,OAEEA,cAIAA,OAEEA,cAIAA,4BAMAA,cAOJA,0BAOAA,+BAxB0CqU,gBAIY/N,kBAMEA,wCAL3CA,KACL,+CACA,wFAYUA,oBAAqBA,sBAAeA,wBACJA,wBACnCA,0IAjDfA,kFAAAA,+KA9HDkH,GAAS,QACNe,GAAW,WA6BR8F,mCArCEnS,mBACAmM,gBACAkD,eACA+C,WAELzC,EAAWzN,QAIb8O,GAAW,EACXqB,EAAc1G,GAAiB3L,4MAM/BqS,EAAc1G,GAAiB3L,UAE/BsK,QAAQgI,IAAI,2BAA6BhH,kCAK3C0F,GAAYA,GACZ1G,QAAQgI,IAAItB,aAGsB9R,OAClC8R,EAAW9R,EAAMkD,OAAOxD,kBAIxB+Q,EAAS,WACP/Q,MAAM,yLZwWZ,IAAqBH,oMajIO,mCACD,SAAE2F,UAAW,WbgInB3F,UACVC,SAASmU,gBAAgB,6BAA8BpU,grBa/IlEP,SACEJ,OAEEA,OACEA,cAIAA,cAKFA,cACoBA,mCAGpBA,cAEAA,mCAfwCqU,gBAIc/N,gCAM7BA,6DAtNlB+N,6BA9CLW,UAROC,kBACAC,gBACAC,iBACAC,oBACAC,kBACAC,qBACAC,KAGPC,EAAM,WACJ3D,EAAWzN,IACXqR,GAAYC,EAAGzO,SACT7D,IAAN6D,EACKyK,GAAGiE,OAAO,MAAVjE,CAAiBgE,GAEjBhE,GAAGiE,WAAW1O,KAAdyK,CAAoBgE,GAyBzBE,GAAoB3O,EAAGtE,EAAGkT,EAAGC,SACjCV,EAAaU,GACbjE,EAAS,aAAoBiE,KAAAA,KAGzBC,GAAqB9O,EAAGtE,EAAGkT,EAAGC,SAClCV,GAAc,GACdvD,EAAS,cAAqBiE,KAAAA,YAchChS,WACE0R,EAAM9D,GAAGhP,OAAOsS,GACbtS,OAAO,qBAENsT,EAAoBR,EAAIxV,OAAO,KAChCyB,KAAK,QAAS,iBACdA,KAAK,gCACLa,MAAM,YAAa,QAGlB2T,EAAmBD,EAAkBhW,OAAO,KAC7CyB,KAAK,QAAS,eACdA,KAAK,gCAGRwU,EAAiBjW,OAAO,QACrByB,KAAK,IAAK,GACVA,KAAK,IAAK,GACVa,MAAM,OAAQ,QACdxB,KAAK,SAIJoV,EAAO,EAGXjB,EAAOxW,SAASwI,EAAGtE,KACbA,EAHU,GAGO,GAAKA,EAHZ,GAG8B,IACxCuT,EAAO,OAGPC,EAAUF,EAAiBjW,OAAO,QACnCyB,KAAK,IAAKyU,GACVzU,KAAK,IAAiC,GAA5BqO,KAAKC,MAAMpN,EATV,IAUXL,MAAM,SAAU,aAChBA,MAAM,iBAAkB,OACxBgQ,GAAG,aAAcrL,EAAGyO,EAAGG,IAAMD,EAAiB3O,EAAGyO,EAAGG,EAAGlT,IACvD2P,GAAG,cAAerL,EAAGyO,EAAGG,IAAME,EAAkB9O,EAAGyO,EAAGG,EAAGlT,IACzD7B,aAEHqV,EAAQnW,OAAO,SACZyB,KAAK,wBAAyBkB,kBAC9BlB,KAAK,KAAM,KACXa,MAAM,OAAQ4S,EAAYvS,IAC1BL,MAAM,eAAiBK,IAAMwS,GAAcI,EAAea,eAAiB,EAAI,GAC/EtV,KAAK2U,EAASxO,IAEjBkP,EAAQnW,OAAO,SACZyB,KAAK,KAAM,KACXX,KAAK,SAEJuV,EAAUF,EAAQjW,OAAOoW,UAC7BJ,GAAQG,EAAQnK,MAAQ,EAEpBvJ,IAAMsS,EAAOrS,OAAS,GACxBqT,EAAiBjW,OAAO,QACrByB,KAAK,IAAKyU,GACVzU,KAAK,IAAiC,GAA5BqO,KAAKC,MAAMpN,EAjCZ,IAkCT7B,KAAK,KACRoV,GAAQ,IAERD,EAAiBjW,OAAO,QACrByB,KAAK,IAAKyU,EAAK,GACfzU,KAAK,IAAiC,GAA5BqO,KAAKC,MAAMpN,EAvCZ,IAwCTL,MAAM,OAAQ,QACdxB,KAAK,OAIZmV,EAAiBhE,UAAU,QACxBlR,KAAKkU,GACL7C,QACApS,OAAO,QACPyB,KAAK,KAAMwF,EAAGtE,IAAM,GAAKA,GACzBlB,KAAK,IAAK,GACVX,KAAKmG,GAAKwO,EAASxO,QAGlBsP,EAAuBN,EAAiB/V,OAAOoW,UAGnDN,EAAkBhW,OAAO,QACtByB,KAAK,QAAS,mBACdA,KAAK,MAAO,GACZA,KAAK,KAAM8U,EAAqBrK,MAAQ,GACxCzK,KAAK,KAAM,IACXA,KAAK,KAAM,IACXa,MAAM,eAAgB,KACtBA,MAAM,SAAU,YAOfkU,EAJiBR,EAAkBhW,OAAO,KAC3CyB,KAAK,QAAS,mBACdA,KAAK,gCAE2BzB,OAAO,QACvCyB,KAAK,IAAK8U,EAAqBpF,EAAIoF,EAAqBrK,MAAQ,GAChEzK,KAAK,IAAK,GACV6Q,GAAG,aAAcrL,EAAGyO,EAAGG,IAAMD,EAAiB3O,EAAGyO,EAAGG,EAAGV,IACvD7C,GAAG,cAAerL,EAAGyO,EAAGG,IAAME,EAAkB9O,EAAGyO,EAAGG,EAAGV,IACzD7S,MAAM,iBAAkB,OACxBA,MAAM,SAAU,aAChBA,MAAM,cAAe,UACrBxB,KAAK,QAER0V,EAAcxW,OAAO,SAClByB,KAAK,wBAAyB0T,kBAC9B1T,KAAK,KAAM,GACXa,MAAM,OAAQ4S,EAAYC,IAC1BrU,QAAQ2U,EAASR,EAAOE,KAE3BqB,EAAcxW,OAAO,SACjByB,KAAK,KAAM,GACZX,KAAK,SAGJ2V,EAAmBjB,EAAIxV,OAAO,KAC/ByB,KAAK,QAAS,gBACdA,KAAK,kCAEUgV,EAAiBzW,OAAO,QACvCyB,KAAK,IAAK,IACVA,KAAK,oBAAqB,UAC1BX,QAAQ2U,EAASH,EAAa,IAECpV,OAAOoW,UAEzCG,EAAiBzW,OAAO,QACrByB,KAAK,oBAAqB,UAC1BA,KAAK,IAAK,GACVA,KAAK,IAAK,GACVa,MAAM,OAAQ,QACdA,MAAM,cAAe,QACrBxB,KAAK,iUA9KI,OAAR0U,IACFA,EAAIvD,2BACD3P,MAAM,kBAAmB,QACzBA,MAAM,cAAe,UAExBkT,EAAIvD,2BAA2BmD,GAC9B9S,MAAM,cAAe,QACrBA,MAAM,kBAAmB,8BAKhB,OAARkT,GACFA,EAAI9S,wBAAwB6S,EAAe5S,GACxC+T,WAAW,gBACXC,SAASpB,EAAeoB,UACxBrU,MAAM,eAAgB,cAe3BuP,EAAS,qEA2MqBmD,2QCvDvB1O,KAAUhD,ohCAvCSgD,sXAsCLA,KAAUsQ,qSAnDdtQ,KAAUsQ,oHAL/BxW,SAGEJ,OAIEA,cAEAA,OACEA,OACEA,cACAA,cAGFA,OACEA,OACEA,OAGEA,WACcsG,aAGdtG,cAMFA,cAEAA,OACEA,OACEA,cAIAA,cAeRA,OAEEA,qBAKAA,OACEA,cAKAA,cAaRA,4CAxE0CsG,mBAKgBA,2DAyBjCA,kBAyBLA,mBAKAA,mBAgBRA,iBACDA,gCA/DaA,4BAHIA,mBAuCnBA,KAAUhD,sCADIgD,KAAUsQ,4BAnDdtQ,KAAUsQ,uFA/IzBC,EACAC,EAGAC,EAFAC,EAAa,GACbC,GAAc,EAEdC,GAAW,EACXC,GACFP,MAAM,EACNtT,MAAO,UAEHuO,EAAWzN,QAEbgT,GACFR,MAAM,GAERhL,GAAWrB,IAAI6M,GACfxL,GAAWjB,UAAUhJ,QAAUyV,EAAYzV,YA+D3CmC,OACc4N,GAAGhP,OAAOmU,GACnBnU,OAAO,0CA7DVuU,GAAc,OACdE,EAAUP,MAAO,SACjBO,EAAU7T,MAAQ4T,EAAW,uCAC3B,gDAQEG,EAASzW,SAASC,cAAc,UAChC2H,EAAU6O,EAAOC,WAAW,MAEhCD,EAAOnL,MAAQ4K,EAAQ5K,MACvBmL,EAAOpL,OAAS6K,EAAQ7K,OACxBzD,EAAQ+O,UAAUT,EAAS,EAAG,OAG5BtO,EAAQgP,aAAa,EAAG,EAAGV,EAAQ5K,MAAO4K,EAAQ7K,YAGlDgL,GAAc,OACdG,EAAUR,MAAO,KACjBhL,GAAWrB,IAAI6M,GACfvF,EAAS,YAAa4F,IAAKX,EAAQY,UACnCV,EAAa,YACPW,OAENV,GAAc,OACdE,EAAUP,MAAO,SACjBO,EAAU7T,MAAQ,8CAKpB4T,GAAW,MACPU,MAAaC,WACjBD,EAAOE,OAAU1W,QACf0V,EAAQY,IAAMtW,EAAMnB,OAAOyM,WAE7BkL,EAAOG,cAAchB,EAAM,cAI3BK,EAAUR,MAAO,KACjBhL,GAAWrB,IAAI6M,GAEfvF,EAAS,YAAamG,SAAUZ,EAAUY,qBAK1Cf,GAAc,OACdE,EAAUP,MAAO,SACjBE,EAAQmB,YAAc,mBACtBnB,EAAQY,IAAMV,iBAmFQA,gCAeED,4DA8CbD,qDAjFFD,wFCjJE,CACbqB,EAAEC,GACwB,iBAAbA,EACFvX,SAASwX,cAAcD,GAEzBA,EAETE,OAAM,IAAIC,IACDja,OAAOka,UAAUD,GAE1B9O,iBAAiB9I,GACf,IAAI8X,EAAM,EACNC,EAAO,EAEX,GACED,GAAO9X,EAAQgY,WAAa,EAC5BD,GAAQ/X,EAAQiY,YAAc,EAC9BjY,EAAUA,EAAQkY,mBACXlY,GAET,MAAO,CACL8X,IAAKA,EACLC,KAAMA,IAGVI,aAAanY,GACJA,GAAWA,IAAYE,UAAYF,IAAYE,SAASkY,KAEjEtP,UAAU9I,EAASiB,GACjB,IAAIoX,OAAqB3V,IAAVzB,EACf,OAAI8H,KAAKoP,aAAanY,GACbqY,EAAYrY,EAAQsY,UAAYrX,EAASjB,EAAQsY,UAEjDD,EACFnY,SAASqY,gBAAgBD,UAAYpY,SAASkY,KAAKE,UAAYrX,EAChE1C,OAAOia,aACLtY,SAASqY,gBAAgBD,WACzBpY,SAASkY,KAAKE,WACd,GAGVxP,WAAW9I,EAASiB,GAClB,IAAIoX,OAAqB3V,IAAVzB,EACf,OAAI8H,KAAKoP,aAAanY,GACbqY,EAAYrY,EAAQyY,WAAaxX,EAASjB,EAAQyY,WAElDJ,EACFnY,SAASqY,gBAAgBE,WAAavY,SAASkY,KAAKK,WAAaxX,EAClE1C,OAAOma,aACLxY,SAASqY,gBAAgBE,YACzBvY,SAASkY,KAAKK,YACd,IC/CZ,MAAME,GAAiB,CACrBC,UAAW,OACX3C,SAAU,IACV4C,MAAO,EACPC,OAAQ,EACRC,OC8CF,SAAoBC,GAChB,OAAOA,EAAI,GAAM,EAAMA,EAAIA,EAAIA,EAAI,GAAM5J,KAAK6J,IAAI,EAAMD,EAAI,EAAK,GAAO,GD9C1EE,QAAS3b,EACT4b,OAAQ5b,EACR6b,WAAY7b,EACZ8b,SAAS,EACTC,SAAS,GAGLC,GAAY3Y,IAChB,IAAIkY,OACFA,EAAM7C,SACNA,EAAQ4C,MACRA,EAAKE,OACLA,EAAMtI,EACNA,EAAE,EAACC,EACHA,EAAE,EAAC2I,QACHA,EAAOC,QACPA,EAAOJ,QACPA,EAAOC,OACPA,EAAMP,UACNA,EAASQ,WACTA,EAAUpZ,QACVA,GACEY,EAEkB,mBAAXkY,IACTA,EAASA,KAGX,IAAIU,EAA4BC,GAAEC,iBAAiBd,GAC/Ce,EAAyB3Z,EACzByZ,GAAEC,iBAAiB1Z,GACnB,CAAE8X,IAAKpH,EAAGqH,KAAMtH,GAEhBmJ,EAAWH,GAAEhB,WAAWG,GACxBiB,EAAWJ,GAAEnB,UAAUM,GAEvBkB,EACFH,EAAuB5B,KAAOyB,EAA0BzB,KAAOe,EAC7DiB,EACFJ,EAAuB7B,IAAM0B,EAA0B1B,IAAMgB,EAE3DkB,EAAQF,EAAUF,EACnBK,EAAQF,EAAUF,EAErB,IAAIK,GAAY,EACZC,GAAU,EACVC,EAAa5b,IAAQqa,EACrBwB,EAAWD,EAAanE,EAO5B,SAASvM,EAAM4Q,GACRA,IACHH,GAAU,EACVjB,EAAQlZ,EAAS,CAACyQ,EAAAA,EAAGC,EAAAA,KAIzB,SAAS6J,EAAKC,IAZd,SAAyBxa,EAAS8X,EAAKC,GACjCsB,GAASI,GAAEhB,WAAWzY,EAAS+X,GAC/BuB,GAASG,GAAEnB,UAAUtY,EAAS8X,GAWlC2C,CACE7B,EACAiB,EAAWI,EAAQO,EACnBZ,EAAWI,EAAQQ,GAIvB,SAAS7Q,IACPuQ,GAAY,EA+Bd,OhBiFF,SAAc9U,GACV,IAAInG,EACe,IAAfH,EAAMO,MACNV,EAAIK,GAEK,IAAI0F,QAAQgW,IACjB5b,EAAMwG,IAAIrG,EAAO,CAAEC,EAAGkG,EAAUhG,EAAGsb,MgBnH7CC,CAAKnc,IAWH,IAVK2b,GAAW3b,GAAO4b,GACrB1Q,GAAM,GAGJyQ,GAAW3b,GAAO6b,IACpBE,EAAK,GACL5Q,IACAwP,EAAOnZ,EAAS,CAACyQ,EAAAA,EAAGC,EAAAA,MAGjBwJ,EAEH,OADAd,EAAWpZ,EAAS,CAACyQ,EAAAA,EAAGC,EAAAA,KACjB,EAET,GAAIyJ,EAAS,CAGXI,EADU,EAAI,EAAIxB,GADRva,EAAM4b,GACanE,IAI/B,OAAO,IAGTvM,EAAMmP,GAEN0B,EAAK,GAEE5Q,GAmCIiR,GAAWha,GACf2Y,GAjCc3Y,CAAAA,IACtB,IAAIia,EAAOpB,GAAE9B,OAAO,GAAIgB,GAAgB/X,GAGvC,OAFAia,EAAKjC,UAAYa,GAAEjC,EAAEqD,EAAKjC,WAC1BiC,EAAK7a,QAAUyZ,GAAEjC,EAAEqD,EAAK7a,SACjB6a,GA6BUC,CAAela,+wVEzHlClB,SACIJ,OACIA,OACIA,cACAA,cACAA,OACIA,cACAA,cACAA,cACAA,cACAA,cACAA,cACAA,cACAA,cACAA,cAMAA,cACAA,cACAA,cAMAA,cACAA,OAEIA,cAOJA,cACAA,cACAA,cACAA,cACAA,gBACAA,gBACAA,gBACAA,gBACAA,gBACAA,gBACAA,gBACAA,gBACAA,gBACAA,gBAMAA,gBACAA,gBACAA,+FA/EZ8L,GAAenB,UAAUhJ,kBAmD6D8Z,IAAwB/a,QAAS,UAAWmZ,QAASnZ,EAAS8Y,KAAY1N,GAAevB,KAAKmR,kFCtDxL,MAMMC,GACG,QADHA,GAEE,OAFFA,GAGE,OAHFA,GAIE,OAJFA,GAKA,KALAA,GAMK,UAGX,MAAMC,GAUJpS,YAAYqS,EAAWlS,EAAOtF,EAAMyX,EAAM1N,GACxC3E,KAAKoS,UAAYA,EACjBpS,KAAKE,MAAQA,EACbF,KAAKpF,KAAOA,EACZoF,KAAKqS,KAAOA,EACZrS,KAAK2E,OAASA,EAGd3E,KAAKsS,WAAa,GAClBtS,KAAKuS,YAAc,IAIvB,MAAMC,GASJzS,YAAY0S,EAAQC,EAAMC,GACxB3S,KAAKyS,OAASA,EACdzS,KAAK0S,KAAOA,EACZ1S,KAAK2S,OAASA,GAYlB,MAyLaC,GAAeC,MAAOC,EAAgBC,KAGjD,IAAIC,QAAyBC,GAAmBH,GAAgB,GAM5DI,EAJwBC,GAAGC,MAAM,CAACJ,IAKlCK,EAAU,GAEd,IAAK,IAAIzT,EAAI,EAAGA,EAAImT,EAAMO,OAAOna,OAAQyG,IAAK,CAC5C,IAAI2T,EAAYR,EAAMO,OAAO1T,GAAGkH,MAAMoM,GAKlCvO,EAAS4O,EAAUC,UACK,IAAxB7O,EAAO8O,MAAMta,SACfwL,EAASA,EAAO+O,UAAU,CAAC,EAAG,EAAG,KAEnCL,EAAQ7Y,KAAKmK,GAGbuO,EAAYK,EAId,MAtN8B,EAACI,EAAYZ,EAAOC,KAClD,IAAIY,EAAM,GAENC,EAAa,GACbC,EAAaf,EAAMO,OAAO,GAAGS,gBAAgB3Y,MAAM,GACnD4Y,EAAkBhB,EAAiBU,UAAU,CAAC,EAAG,EAAG,IAAIO,YAG5D,IAAK,IAAI/a,EAAI,EAAGA,EAAI4a,EAAW,GAAI5a,IAAK,CACtC,IAAIzC,EAAO,IAAI0b,GAAK,QAASjZ,EAAGgZ,GAAgB,EAAG8B,EAAgB9a,IACnE2a,EAAWrZ,KAAK/D,GAGlBmd,EAAIpZ,KAAKqZ,GACT,IAAIK,EAAgB,EACpB,IAAK,IAAItU,EAAI,EAAGA,EAAImT,EAAMO,OAAOna,OAAQyG,IAAK,CAC5C,IAAIuU,EAAQpB,EAAMO,OAAO1T,GAErByT,EAAUM,EAAW/T,GAAG4T,UAC5BH,EAAUA,EAAQY,YAElB,IACIG,EADAC,EAAgB,GA4BpB,GAzBAtR,QAAQgI,IAAI,WAAaoJ,EAAMjd,MAE3Bid,EAAMjd,KAAKod,SAAS,QACtBF,EAAelC,GACNiC,EAAMjd,KAAKod,SAAS,QAC7BF,EAAelC,GACNiC,EAAMjd,KAAKod,SAAS,QAC7BF,EAAelC,GACNiC,EAAMjd,KAAKod,SAAS,UAC7BF,EAAelC,GACNiC,EAAMjd,KAAKod,SAAS,WAC7BF,EAAelC,GACNiC,EAAMjd,KAAKod,SAAS,UAEpBH,EAAMjd,KAAKod,SAAS,YAEpBH,EAAMjd,KAAKod,SAAS,UAEpBH,EAAMjd,KAAKod,SAAS,eAG7BvR,QAAQgI,IAAI,qBAIXqJ,EAAa,CAGd,OAAQA,GACN,KAAKlC,GAAe,CAClB,IAAIqC,EAASJ,EAAM9B,KAAKmC,IAAIP,YAExBQ,EAAUN,EAAMrQ,OAAO0Q,IAAId,UAAU,CAAC,EAAG,EAAG,EAAG,IAAIO,YAGvD,IAAK,IAAI/a,EAAI,EAAGA,EAAIma,EAAQla,OAAQD,IAAK,CACvC,IAAIzC,EAAO,IAAI0b,GAAKgC,EAAMjd,KAAMgC,EAAGkb,EAAcG,EAAOrb,GACpDma,EAAQna,IAIZ,IAAK,IAAIgK,EAAI,EAAGA,EAAI0Q,EAAIM,EAAgB,GAAG/a,OAAQ+J,IAAK,CACtD,IAAIwR,EAAUd,EAAIM,EAAgB,GAAGhR,GACjCyR,EAAU,IAAInC,GAAKkC,EAASje,EAAMge,EAAQvb,GAAGgK,IACjDwR,EAAQnC,YAAY/X,KAAKma,GACzBle,EAAK6b,WAAW9X,KAAKma,GAEvBN,EAAc7Z,KAAK/D,GAErB,MAEF,KAAKyb,GAAa,CAChB,IAAIqC,EAASJ,EAAM9B,KAAKmC,IAAIP,YAExBQ,EAAUN,EAAMrQ,OAAO0Q,IAAId,UAAU,CAAC,EAAG,IAAIO,YAGjD,IAAK,IAAI/a,EAAI,EAAGA,EAAIma,EAAQla,OAAQD,IAAK,CACvC,IAAIzC,EAAO,IAAI0b,GAAKgC,EAAMjd,KAAMgC,EAAGkb,EAAcG,EAAOrb,GACpDma,EAAQna,IAOR0b,EAAW,EACf,IAAK,IAAI1R,EAAI,EAAGA,EAAI0Q,EAAIM,EAAgB,GAAG/a,OAAQ+J,IAAK,CACtD,IAAIwR,EAAUd,EAAIM,EAAgB,GAAGhR,GACjCyR,EAAU,IAAInC,GAAKkC,EAASje,EAAMge,EAAQvb,GAAGgK,IACjDwR,EAAQnC,YAAY/X,KAAKma,GACzBle,EAAK6b,WAAW9X,KAAKma,GACrBC,GAAYF,EAAQ/P,OAAS8P,EAAQvb,GAAGgK,GAE1C0R,GAAYL,EAAOrb,GACnBzC,EAAKoe,MAAQD,EACbP,EAAc7Z,KAAK/D,GAIrBmd,EAAIM,EAAgB,GAAGY,KAAK,CAAC1f,EAAGC,IAAMD,EAAE2f,UAAY1f,EAAE0f,WACtD,MAEF,KAAK7C,GACL,KAAKA,GAAe,CAElB,IAAIG,EAAO,EACPM,EAAS,KAGb,IAAK,IAAIzZ,EAAI,EAAGA,EAAIma,EAAQla,OAAQD,IAAK,CACvC,IAAIzC,EAAO,IAAI0b,GAAKgC,EAAMjd,KAAMgC,EAAGkb,EAAc/B,EAAMgB,EAAQna,IAG3Dwb,EAAUd,EAAIM,EAAgB,GAAGhb,GACjC8b,EAAO,IAAIxC,GAAKkC,EAASje,EAAMkc,GACnC+B,EAAQnC,YAAY/X,KAAKwa,GACzBve,EAAK6b,WAAW9X,KAAKwa,GACrBX,EAAc7Z,KAAK/D,GAErB,MAEF,KAAKyb,GAAkB,CAErB,IAAIG,EAAO,EAEX,IAAK,IAAInZ,EAAI,EAAGA,EAAIma,EAAQla,OAAQD,IAAK,CAKvC,IAAI+b,EAAerB,EAAIM,EAAgB,GAAG,GAAGvP,OAAOxL,OAChD+b,EAAatB,EAAIM,EAAgB,GAAG/a,OACpCgc,EAAejc,EAAIgc,EACnBE,EAAa/O,KAAKC,MAAMD,KAAKC,MAAMpN,EAAIgc,GAAcD,GACrDI,EAAahP,KAAKC,MAAMpN,EAAIgc,GAAcD,EAG1CK,EAAmBH,GAAgBF,EAAeA,GAC9CG,EAAaH,EAAeI,EAEhC5e,EAAO,IAAI0b,GAAKgC,EAAMjd,KAAMgC,EAAGkb,EAC/B/B,EAAMgB,EAAQna,IAKlBzC,EAAKse,UAAYO,EAEjB,IAAIN,EAAO,IAAIxC,GAAKoB,EAAIM,EAAgB,GAAGiB,GACvC1e,EAAM,CAAC2e,EAAYC,IAEvBzB,EAAIM,EAAgB,GAAGiB,GAAc5C,YAAY/X,KAAKwa,GACtDve,EAAK6b,WAAW9X,KAAKwa,GAErBX,EAAc7Z,KAAK/D,GAIrB4d,EAAcS,KAAK,CAAC1f,EAAGC,IAAMD,EAAE8K,MAAQ7K,EAAE6K,OACzC,MAEF,QACE6C,QAAQlJ,MAAM,gCAKlB+Z,EAAIpZ,KAAK6Z,GACTH,KAGJ,OAAON,GAqCG2B,CAAwBlC,EAASN,EAAOC,IA2C9CwC,GAAsB,CAACC,EAAWhT,EAAOD,EAAQkT,GAAU,KAE/D,IAAIC,EAAaxC,GAAG9U,KAAK,CAACoE,EAAOD,EA7ThB,GA6TqC,GAAGyR,YAGzD,IAAK,IAAI/a,EAAI,EAAGA,EAAIuc,EAAUtc,OAAQD,IAAK,CACzC,IAAI0c,EAAavP,KAAKC,MAAMpN,EAAI,GAC5B2c,EAAe3c,EAAI,EACnByJ,EAAMF,IAAUD,EAAS6D,KAAKC,MAAMsP,EAAanT,GAC3CmT,EAAanT,EACnB8E,EAAS9E,IAAUD,EAASoT,EAAanT,EACnC4D,KAAKC,MAAMsP,EAAanT,GAElC,GAAIoT,EAxUW,EAwUgB,CAC7B,IAAIC,EAAYL,EAAUvc,GAEtBwc,IACFI,GAAY,KAEdH,EAAWhT,GAAK4E,GAAQsO,GAAgBC,GAU5C,OA3VuB,IAsVnBrT,GAtVmB,IAsVUD,IAC/BmT,EAvDsB,CAACI,IACzB,IAEIC,EAFAvT,EAAQsT,EAAI5c,OACZqJ,EAASuT,EAAI,GAAG5c,OAKpB,GAAIsJ,EAvSmB,IAuSSD,EAvST,GAuSoC,CAEzD,IAAIyT,EAAiB5P,KAAKW,IAAIvE,EAAOD,GACjC0T,EAAY7P,KAAKC,MAAM7D,EAAQ,GAAMwT,EAAiB,EACtDE,EAAY9P,KAAKC,MAAM9D,EAAS,GAAMyT,EAAiB,EACpCF,EAAI3a,MAAM8a,EAAWA,EAAYD,GAAgBlY,IAAI7E,GAAKA,EAAEkC,MAAM+a,EAAWA,EAAYF,QAC3G,CACL,IAAIC,EAAY7P,KAAKC,MAAM7D,EAAQ,GAAK4D,KAAKC,MAAM8P,IAC/CD,EAAY9P,KAAKC,MAAM9D,EAAS,GAAK6D,KAAKC,MAAM8P,IACpDJ,EAAeD,EAAI3a,MAAM8a,EAAWA,EAhTf,IAgT6CnY,IAAI7E,GAAKA,EAAEkC,MAAM+a,EAAWA,EAhTzE,KAkTvB,OAAOH,GAqCQK,CAAkBV,IAGpBxC,GAAGmD,SAASX,IAUrB1C,GAAqB,CAACsD,EAASb,GAAU,KAC7C,IAAI9H,EAASzW,SAASC,cAAc,UACpCwW,EAAO/U,MAAM2d,QAAU,gBACvBrf,SAASsf,qBAAqB,QAAQ,GAAG/f,YAAYkX,GACrD,IAAI7O,EAAU6O,EAAOC,WAAW,MAEhC,OAAO,IAAIlS,QAAQ,CAACC,EAAS8a,KAC3B,IAGIC,EAHAC,EAAa,IAAIC,MACrBD,EAAWpI,YAAc,YACzBoI,EAAW3I,IAAMsI,EAEjBK,EAAWvI,OAAS,KAMlB,GALAT,EAAOnL,MAAQmU,EAAWnU,MAC1BmL,EAAOpL,OAASoU,EAAWpU,OAIvBoU,EAAWnU,MArXI,IAqXwBmU,EAAWpU,OArXnC,GAqX8D,CAE/E,IAAIsU,EAAe3f,SAASC,cAAc,UACtC2f,EAAgBD,EAAajJ,WAAW,MAE5C,MAAMmJ,EAAe,GADE3Q,KAAKW,IAAI4P,EAAWnU,MAAOmU,EAAWpU,QAE7DsU,EAAarU,MAAQmU,EAAWnU,MAAQuU,EACxCF,EAAatU,OAASoU,EAAWpU,OAASwU,EAC1CD,EAAcjJ,UAAU8I,EAAY,EAAG,EAAGE,EAAarU,MACnDqU,EAAatU,QAIboU,EAAWnU,OAASmU,EAAWpU,SACjCzD,EAAQkY,UAAUH,EAAarU,MAAO,GACtC1D,EAAQmY,OAAO,EAAG,GAClBnY,EAAQkY,UAAUH,EAAarU,MAAQ,EAAGqU,EAAatU,OAAS,GAChEzD,EAAQoY,OAAO,GAAK9Q,KAAK+Q,GAAK,MAI5BR,EAAWnU,OAASmU,EAAWpU,OACjCzD,EAAQ+O,UAAUgJ,GAAeA,EAAarU,MAAQ,GAAIqU,EAAatU,OAAS,GAEhFzD,EAAQ+O,UAAUgJ,EAAc,EAAG,GAErCH,EAAc5X,EAAQgP,aAAa,EAAG,EAAG+I,EAAarU,MAClDqU,EAAatU,aAGjBzD,EAAQ+O,UAAU8I,EAAY,EAAG,GACjCD,EAAc5X,EAAQgP,aAAa,EAAG,EAAG6I,EAAWnU,MAChDmU,EAAWpU,QAGjB,IAAIiT,EAAYkB,EAAYrf,KACxB+f,EAAaV,EAAYlU,MACzB6U,EAAcX,EAAYnU,OAG9BoL,EAAO7W,WAAWC,YAAY4W,GAE9BhS,EAAQ4Z,GAAoBC,EAAW4B,EAAYC,EAAa5B,KAElEkB,EAAWW,QAAUb,KCtZlB,MAAMc,GAAiB,CAC5BC,WAHe,GAIfC,iBAAmBD,EACnBE,UAAY,GACZC,YAAc,GACdC,cAAgB,qBAChBC,eAAiB,qBACjBC,iBAAkB,EAClBC,gBAAkB,GAClBC,kBAAoB,OACpBC,iBAtBuB,CACvBzf,MAAO,CAACwP,GAAGkQ,iBAAkBlQ,GAAGkQ,iBAAkBlQ,GAAGkQ,kBACrDC,KAAMnQ,GAAGC,gBACTmQ,KAAMpQ,GAAGC,gBACToQ,KAAMrQ,GAAGC,gBACTqQ,GAAItQ,GAAGkQ,iBACPxF,OAAQ1K,GAAGmB,gBACXyL,MAAO5M,GAAGuQ,oBAgBVC,YAAa,CAAC1J,IAAK,GAAI2J,OAAQ,GAAI1J,KAAM,GAAI2J,MAAO,IACpDC,iBAAkB,EAAE,EACpBC,SAAU,EACVC,QAAS,EACTC,kBAAmB,GACnBC,WAAY,CAAC,SAAU,SAAU,OAAQ,SAAU,SAAU,WAAY,WC3BrEvB,GAAaD,GAAeC,WAMpBwB,GAAavW,IACzB,IAAIsE,EAAMpD,EAAAA,EACNiD,GAAOjD,EAAAA,EAGX,QAAqBjK,IAAjB+I,EAAMvJ,OACR,MAAO,CAACuJ,EAAOA,GAIjB,QAAwB/I,IAApB+I,EAAM,GAAGvJ,OAAsB,CACjC,IAAK,IAAID,EAAI,EAAGA,EAAIwJ,EAAM,GAAGvJ,OAAQD,IAC/BwJ,EAAMxJ,GAAK8N,EACbA,EAAMtE,EAAMxJ,GACHwJ,EAAMxJ,GAAK2N,IACpBA,EAAMnE,EAAMxJ,IAGhB,MAAO,CAAC8N,EAAKH,GAIf,IAAK,IAAI3N,EAAI,EAAGA,EAAIwJ,EAAMvJ,OAAQD,IAChC,IAAK,IAAIgK,EAAI,EAAGA,EAAIR,EAAM,GAAGvJ,OAAQ+J,IAC/BR,EAAMxJ,GAAGgK,GAAK8D,EAChBA,EAAMtE,EAAMxJ,GAAGgK,GACNR,EAAMxJ,GAAGgK,GAAK2D,IACvBA,EAAMnE,EAAMxJ,GAAGgK,IAIrB,MAAO,CAAC8D,EAAKH,IAmCFqS,GAAiBC,IACrB,CACLzR,EAAGyR,EAAMzR,EAAI+P,GACb9P,EAAGwR,EAAMxR,EAAI8P,GAAa,IAQjB2B,GAAgBD,IACpB,CACLzR,EAAGyR,EAAMzR,EACTC,EAAGwR,EAAMxR,EAAI8P,GAAa,IAoDjB4B,GAAmB,CAACrR,EAAYf,EAAO/O,EAAOohB,UAC7C3f,IAAR2f,IAAqBA,EAAM,GAExBtR,GADgB9P,EAAQ+O,EAAQ,GAAKA,GACP,EAAI,EAAIqS,GAAOA,ICnIhDpB,GAAmBV,GAAeU,iBAClCT,GAAaD,GAAeC,WAC5BE,GAAYH,GAAeG,UAC3BC,GAAcJ,GAAeI,YAC7BC,GAAgBL,GAAeK,cAC/BG,GAAkBR,GAAeQ,gBACjCS,GAAcjB,GAAeiB,YAC7BI,GAAWrB,GAAeqB,SAC1BG,GAAaxB,GAAewB,WAC5BhN,GAAW/D,GAAGiE,OAAO,OAG3B,IAAIH,QAAMpS,EACV0H,GAASH,UAAWhJ,IAAU6T,GAAM7T,IAEpC,IAAIqhB,QAAkB5f,EACtB2H,GAAqBJ,UAAWhJ,IAAUqhB,GAAkBrhB,IAE5D,IAAIshB,QAAkB7f,EACtB4H,GAAqBL,UAAWhJ,IAAUshB,GAAkBthB,IAE5D,IAAI0b,QAAMja,EACVyH,GAASF,UAAWhJ,IAAU0b,GAAM1b,IAEpC,IAAIuhB,QAAiB9f,EACrB6H,GAAoBN,UAAWhJ,IAAUuhB,GAAiBvhB,IAE1D,IAAIwhB,QAAqB/f,EACzB8H,GAAwBP,UAAWhJ,IAAUwhB,GAAqBxhB,IAElE,IAAIyhB,QAAiBhgB,EACrB+H,GAAoBR,UAAWhJ,IAAUyhB,GAAiBzhB,IAE1D,IAAI0hB,QAAiBjgB,EACrBgI,GAAoBT,UAAWhJ,IAAU0hB,GAAiB1hB,IAE1D,IAAI2hB,QAAelgB,EACnBkI,GAAkBX,UAAWhJ,IAAU2hB,GAAe3hB,IAS/C,MAAM4hB,GAAa,CAACtc,EAAGtE,EAAGkT,EAAGnF,KAClC,IAAIN,EAAQyF,EAAElT,GACV8O,EAAakQ,GAAiB1a,EAAE5C,MAErB,UAAX4C,EAAE5C,OACJoN,EAAaA,EAAWxK,EAAE0C,QAI5B,IAAIuG,OAAkC9M,IAApB6D,EAAEmH,OAAOxL,OAAuB,EAAIqE,EAAEmH,OAAOxL,OAC3D4gB,EAAe5iB,SAASC,cAAc,UACtC4iB,EAAgBD,EAAalM,WAAW,MAC5CkM,EAAatX,MAAQgE,EACrBsT,EAAavX,OAASiE,EAGtB,IAAIwT,EAAcD,EAAcjM,aAAa,EAAG,EAAGtH,EAAaA,GAC5DyT,EAAmBD,EAAY3iB,KAEnC,GAAoB,IAAhBmP,EACFyT,EAAiB,GAAK1c,EAAEmH,YAExB,IAAK,IAAIzL,EAAI,EAAGA,EAAIghB,EAAiB/gB,OAAQD,GAAG,EAAG,CACjD,IAAIihB,EAAY9T,KAAKC,MAAMpN,EAAI,GAC3ByJ,EAAM0D,KAAKC,MAAM6T,EAAY1T,GAC7Bc,EAAS4S,EAAY1T,EACrB2T,OAAQzgB,EAEVygB,EADa,UAAX5c,EAAE5C,MAA+B,OAAX4C,EAAE5C,KAClBqN,GAAGoS,IAAIrS,EAAW,EAAIxK,EAAEmH,OAAOhC,GAAK4E,KAEpCU,GAAGoS,IAAIrS,GAAYxK,EAAEmH,OAAOhC,GAAK4E,GAAUN,EAAQ,GAAKA,IAGlEiT,EAAiBhhB,GAAKkhB,EAAMnd,EAC5Bid,EAAiBhhB,EAAI,GAAKkhB,EAAMhO,EAChC8N,EAAiBhhB,EAAI,GAAKkhB,EAAM/kB,EAChC6kB,EAAiBhhB,EAAI,GAAK,IAM9B,IAAIohB,EAAcnjB,SAASC,cAAc,UACzCkjB,EAAY7X,MAAqB,EAAbgV,GACpB6C,EAAY9X,OAAsB,EAAbiV,GACrB,IAAI8C,EAAqBD,EAAYzM,WAAW,MAIhDmM,EAAcQ,aAAaP,EAAa,EAAG,GAC3CM,EAAmBzM,UAAUiM,EAAc,EAAG,EAAGtT,EAAaA,EAC1D,EAAG,EAAgB,EAAbgR,GAA6B,EAAbA,IAE1B,IAAIgD,EAAeH,EAAYI,YAC/BzS,GAAGhP,OAAO0N,GAAO3O,KAAK,aAAcyiB,GAGpCV,EAAatR,SACb6R,EAAY7R,UAURkS,GAAkB,CAACnd,EAAGtE,EAAGkT,EAAG8K,KACpBjP,GAAGhP,OAAOmT,EAAElT,IAClBD,OAAO,oBACRgU,WAAW,UACX6C,MAAM,KACN5C,SAAS,KACT0N,KAAK3S,GAAG4S,aACR7iB,KAAK,QAASkf,EAAM1Z,EAAEmH,UAqEvBmW,GAAoB,CAAC1O,EAAGpE,EAAY+S,EAAc/T,EAAKH,UAC/ClN,IAARqN,IAAqBA,EAAM,QACnBrN,IAARkN,IAAqBA,EAAM,GAC/B,IAAImU,EAAW5O,EAAE7V,OAAO,QACnBA,OAAO,sBACPyB,KAAK,KAAM,GAAG+iB,GACd/iB,KAAK,KAAM,MACXA,KAAK,KAAM,QACXA,KAAK,KAAM,QACXA,KAAK,KAAM,QACXA,KAAK,eAAgB,OAE1B,IAAK,IAAIkB,EAAI,EAAGA,EADI,GACeA,IAAK,CACtC,IAAI+hB,EAAc/hB,IACdgiB,EAAWlT,EAAWiT,GAAepU,EAAMG,GAAOA,GACtDgU,EAASzkB,OAAO,QACXyB,KAAK,SAA2B,IAAdijB,EAAH,KACfjjB,KAAK,aAAckjB,GACnBljB,KAAK,eAAgB,KA+LjBmjB,GAAU,CAAC1Y,EAAOD,EAAQ4Y,EAAUC,EACzBC,EAAuBC,KAG7C/B,IAAmB/W,EAAQgV,GAAaE,KAAc,EAAI,EAAIkB,IAC9DtX,GAAqBT,IAAI0Y,IACzB,IAAIgC,EAAwB,EAG5B,IAAK,IAAI5b,EAAI,EAAGA,EAAIgU,GAAIza,OAAQyG,IAAK,CACnC,IAAI6b,EAAW7H,GAAIhU,GACf8b,EAAqC,WAA1BD,EAAS,GAAGrJ,UAE3BqH,GAAejf,KAAK,IAIhBkhB,GAAiC,SAArBD,EAAS,GAAG7gB,KAC1B4gB,GAAyBhC,GAAkBX,GAE3C2C,GAAyBhC,GAI3B,IAAIxK,EAAOwM,EAEPG,EAAaP,EAAS7kB,OAAO,KAC5ByB,KAAK,QAAS,mBACdA,KAAK,KAAM,mBAAmB4H,GAEnC2Z,IAAmB/W,EAASiV,GAAagE,EAAStiB,SAC7CsiB,EAAStiB,OAAS,GACvBmI,GAAqBR,IAAIyY,IAEzB,IAAIqC,EAAaD,EAAWnT,UAAU,gBACjClR,KAAKmkB,EAAUje,GAAKA,EAAE0C,OACtByI,QACApS,OAAO,KACPyB,KAAK,QAAS,cACda,MAAM,SAAU,WAChBA,MAAM,iBAAkB,OACxBgQ,GAAG,QAAS0S,GACZ1S,GAAG,YAAawS,GAChBxS,GAAG,aAAcyS,GACjBO,QAAQ,cAAeH,GACvB1jB,KAAK,KAAM,CAACwF,EAAGtE,KAKd,IAAI6V,EAAM7V,EAAIue,IAAcve,EAAI,GAAKqgB,GAGrC,OAFAxK,GAAO0J,GAAY1J,IACnB0K,GAAe7Z,GAAGpF,KAAK,CAACkN,EAAGsH,EAAMrH,EAAGoH,IAC7B,SAASnP,UAAU1G,MAKhCyiB,EAAWnT,UAAU,iBAChBK,GAAG,YAAa,CAACrL,EAAGtE,EAAGkT,KACtBiP,EAAqB7d,EAAGtE,EAAGkT,GAC3BlK,GAAepB,IAAK,CAACqM,MAAM,EAAM9V,KAAM,iBAAiB2U,GAASxO,EAAEmH,YAEpEkE,GAAG,aAAc,CAACrL,EAAGtE,EAAGkT,KACvBkP,EAAsB9d,EAAGtE,EAAGkT,GAC5BlK,GAAepB,IAAK,CAACqM,MAAM,EAAO9V,KAAM,iBAAiB2U,GAASxO,EAAEmH,YAG5C,WAA1B8W,EAAS,GAAGrJ,WAEdwJ,EAAWrlB,OAAO,SACbyB,KAAK,QAAS,cACdA,KAAK,QAASyf,IACdzf,KAAK,SAAUyf,IACfzf,KAAK,IAAKgX,GACVhX,KAAK,IAAK,CAACwF,EAAGtE,IAAMugB,GAAe7Z,GAAG1G,GAAGyO,GAG9CiU,EAAWrlB,OAAO,QACbyB,KAAK,QAAS,YACdA,KAAK,QAASyf,IACdzf,KAAK,SAAUyf,IACfzf,KAAK,IAAKgX,GACVhX,KAAK,IAAK,CAACwF,EAAGtE,IAAMugB,GAAe7Z,GAAG1G,GAAGyO,GACzC9O,MAAM,OAAQ,QACdA,MAAM,SAAU,QAChBA,MAAM,eAAgB,GACtBgjB,QAAQ,UAAU,KAEvBD,EAAWrlB,OAAO,QACbyB,KAAK,QAAS,eACdA,KAAK,IAAKgX,GACVhX,KAAK,IAAK,CAACwF,EAAGtE,IAAMugB,GAAe7Z,GAAG1G,GAAGyO,EAAI8P,GAAa,EAAI,GAC9Dzf,KAAK,SAAUyf,GAAa,GAC5Bzf,KAAK,QAAS,GACda,MAAM,OAAQ,QACnB+iB,EAAWrlB,OAAO,QACbyB,KAAK,QAAS,eACdA,KAAK,IAAKgX,GACVhX,KAAK,IAAK,CAACwF,EAAGtE,IAAMugB,GAAe7Z,GAAG1G,GAAGyO,EAAI8P,GAAa,GAC1D5e,MAAM,oBAAqB,UAC3BA,MAAM,YAAa,QACnBA,MAAM,OAAQ,SACdA,MAAM,UAAW,IACjBxB,KAAK,CAACmG,EAAGtE,IAAM8f,GAAW9f,KAUjCsiB,GAAyB/D,GAI3BjW,GAAoBV,IAAI2Y,IAIxB,IAAIqC,EAAkB7T,GAAG8T,cACpBC,OAAOrC,GAAehV,QACtBsC,MAAM,CAAC,EAAGwQ,KAGf,IAAK,IAAI7X,EAAI,EAAGA,EAAIgU,GAAIza,OAAQyG,IAAK,CACnC,IAAIqH,EAAQ0S,GAAeD,IAAoB9Z,GAC/CmM,GAAI9S,OAAO,qBAAqB2G,GAC3B4I,UAAU,oBACVyT,KAAK,CAACze,EAAGtE,EAAGkT,IAAM0N,GAAWtc,EAAGtE,EAAGkT,EAAGnF,IAG7C8E,GAAIvD,UAAU,iBAAiByT,KAC3B,CAACze,EAAGtE,EAAGkT,IAAMuO,GAAgBnd,EAAGtE,EAAGkT,EAAG0P,IAI1C,IAAII,EAAatI,GAAI7V,IAAIP,GACA,WAAnBA,EAAE,GAAG4U,UACA,CACLlb,KAAMsG,EAAE,GAAG4U,UACX+J,UAAW,IAAI3e,EAAErE,WAGZ,CACLjC,KAAMsG,EAAE,GAAG4U,UACX+J,UAAW,IAAI3e,EAAE,GAAGmH,OAAOxL,WAAWqE,EAAE,GAAGmH,OAAOxL,WAAWqE,EAAErE,YAQjEijB,EAAiBrQ,GAAIvD,UAAU,0BAC9BlR,KAAK4kB,GACLvT,QACApS,OAAO,KACPyB,KAAK,QAAS,wBACdA,KAAK,KAAM,CAACwF,EAAGtE,IAAM,wBAAwBA,GAC7C2iB,QAAQ,UAAWhC,IACnB7hB,KAAK,YAAa,CAACwF,EAAGtE,IAGd,aAFCugB,GAAevgB,GAAG,GAAGwO,EAAI+P,GAAa,OACrCgB,GAAY1J,IAAMwK,IAAmB,EAAI,MAGnD1gB,MAAM,SAAU2E,GAAKA,EAAEtG,KAAKod,SAAS,UAAY,UAAY,QAC7DzL,GAAG,QAAUrL,IACZ,IAAIhH,EAAS,GACTgH,EAAEtG,KAAKod,SAAS,UAAW9d,EAAS,eACpCgH,EAAEtG,KAAKod,SAAS,UAAW9d,EAAS,QACpCgH,EAAEtG,KAAKod,SAAS,cAAe9d,EAAS,WACxCgH,EAAEtG,KAAKod,SAAS,WAAY9d,EAAS,SAG5BW,SAASwX,cAAc,YAAYnY,KAItD4lB,EAAe7lB,OAAO,SACjBc,KAAK,2BAEV+kB,EAAe7lB,OAAO,QACjBsC,MAAM,UAAW,IACjBA,MAAM,oBAAqB,UAC3BtC,OAAO,SACPsC,MAAM,YAAa,QACnBxB,KAAKmG,GAAKA,EAAEtG,MACZX,OAAO,SACPsC,MAAM,YAAa,OACnBA,MAAM,cAAe,UACrBb,KAAK,IAAK,GACVA,KAAK,KAAM,SACXX,KAAKmG,GAAKA,EAAE2e,WAEjB,IAAIE,EAAStQ,GAAIvD,UAAU,iBACtBlR,KAAK4kB,GACLvT,QACApS,OAAO,KACPyB,KAAK,QAAS,eACdA,KAAK,KAAM,CAACwF,EAAGtE,IAAM,eAAeA,GACpC2iB,QAAQ,SAAUhC,IAClB7hB,KAAK,YAAa,CAACwF,EAAGtE,IAGd,aAFCugB,GAAevgB,GAAG,GAAGwO,EAAI+P,GAAa,OACrCgB,GAAY1J,IAAMwK,IAAmB,EAAI,MAGnD1gB,MAAM,SAAU2E,GAAKA,EAAEtG,KAAKod,SAAS,UAAY,UAAY,QAC7DzL,GAAG,QAAUrL,IACZ,IAAIhH,EAAS,GACTgH,EAAEtG,KAAKod,SAAS,UAAW9d,EAAS,eACpCgH,EAAEtG,KAAKod,SAAS,UAAW9d,EAAS,QACpCgH,EAAEtG,KAAKod,SAAS,cAAe9d,EAAS,WACxCgH,EAAEtG,KAAKod,SAAS,WAAY9d,EAAS,SAG5BW,SAASwX,cAAc,YAAYnY,KAItD6lB,EAAO9lB,OAAO,SACTc,KAAK,2BAEVglB,EAAO9lB,OAAO,QACTsC,MAAM,oBAAqB,UAC3BA,MAAM,UAAW,IACjBxB,KAAKmG,GACAA,EAAEtG,KAAKod,SAAS,QAAkB,OAClC9W,EAAEtG,KAAKod,SAAS,QAAkB,OAClC9W,EAAEtG,KAAKod,SAAS,YAAsB,WACnC9W,EAAEtG,MAIf4jB,GAAkB/O,GAAKmM,GAAiBE,KAAM,gBAC9C0C,GAAkB/O,GAAKmM,GAAiBzf,MAAM,GAAI,iBAnahC,EAAC6jB,EAASC,KAE5B,IAAK,IAAIrjB,EAAI,EAAGA,EAAI,EAAGA,IAAI,CACzB,IAAIyH,EAAQ,EAAQ,EAAJzH,EACZsjB,EAAS7C,GAAetc,MAAMsD,GAC9B8b,EAAS9C,GAAetc,MAAMsD,EAAQ,GAEtC+b,EAAoBzU,GAAG8T,cACtB9U,MAAM,CAAC,EAAG,EAAIwQ,GAAa+B,GAAkB,MAC7CwC,OAAO,EAAEQ,EAAS,EAAGA,EAAS,IAE/BG,EAAoB1U,GAAG8T,cACtB9U,MAAM,CAAC,EAAG,EAAIwQ,GAAa,EAAI+B,GAAkB,MACjDwC,OAAO,EAAES,EAAS,EAAGA,EAAS,IAE/BG,EAAmB3U,GAAG4U,aACrB3F,MAAMwF,GACNI,WAAW7U,GAAGiE,OAAO,QACrB6Q,WAAW,EAAEP,EAAS,EAAG,EAAGA,EAAS,IAEtCQ,EAAmB/U,GAAG4U,aACrB3F,MAAMyF,GACNG,WAAW7U,GAAGiE,OAAO,QACrB6Q,WAAW,EAAEN,EAAS,EAAG,EAAGA,EAAS,IAEtCQ,EAAeX,EAAQ/lB,OAAO,KAC7ByB,KAAK,QAAS,uBACdA,KAAK,KAAM,gBAAgBkB,OAC3B2iB,QAAQ,UAAWhC,IAAuC,UAAvBH,IACnC1hB,KAAK,YAAa,aAAayhB,GAAe9Y,GAAO,GAAG+G,SAE7DuV,EAAa1mB,OAAO,KACfyB,KAAK,YAAa,gBAAgBukB,EAAe,MACjDlhB,KAAKuhB,GAEVK,EAAa1mB,OAAO,QACfyB,KAAK,QAAS,EAAIyf,GAAa+B,IAC/BxhB,KAAK,SAAUukB,GACf1jB,MAAM,OAAQ,sBAEnB,IAAIqkB,EAAeZ,EAAQ/lB,OAAO,KAC7ByB,KAAK,QAAS,uBACdA,KAAK,KAAM,gBAAgBkB,OAC3B2iB,QAAQ,UAAWhC,IAAuC,UAAvBH,IACnC1hB,KAAK,YAAa,aAAayhB,GAAe9Y,EAAQ,GAAG,GAAG+G,SAEjEwV,EAAa3mB,OAAO,KACfyB,KAAK,YAAa,gBAAgBukB,EAAe,MACjDlhB,KAAK2hB,GAEVE,EAAa3mB,OAAO,QACfyB,KAAK,QAAS,EAAIyf,GAAa,EAAI+B,IACnCxhB,KAAK,SAAUukB,GACf1jB,MAAM,OAAQ,sBAIrB,IAAK,IAAIK,EAAI,EAAGA,EAAI,EAAGA,IAAI,CACzB,IAAIyH,EAAQ,EAAQ,EAAJzH,EACZ+N,EAAQ0S,GAAewD,OAAOxc,GAE9Byc,EAAoBnV,GAAG8T,cACtB9U,MAAM,CAAC,EAAG,EAAIwQ,GAAa,EAAI+B,GAChC,EAAIA,GAAkBX,GAAW,MAChCmD,OAAO,EAAE/U,EAAQ,EAAGA,EAAQ,IAE7BoW,EAAmBpV,GAAG4U,aACrB3F,MAAMkG,GACNN,WAAW7U,GAAGiE,OAAO,QACrB6Q,WAAW,EAAE9V,EAAQ,GAAKA,EAAQ,EAAI,EAAGA,EAAQ,EAAGA,EAAQ,IAE7DqW,EAAehB,EAAQ/lB,OAAO,KAC7ByB,KAAK,QAAS,wBACdA,KAAK,KAAM,iBAAiBkB,GAC5B2iB,QAAQ,UAAWhC,IAAuC,WAAvBH,IACnC1hB,KAAK,YAAa,aAAayhB,GAAe9Y,GAAO,GAAG+G,SAE7D4V,EAAa/mB,OAAO,KACfyB,KAAK,YAAa,gBAAgBukB,EAAe,MACjDlhB,KAAKgiB,GAEVC,EAAa/mB,OAAO,QACfyB,KAAK,QAAS,EAAIyf,GAAa,EAAI+B,GAChC,EAAIA,GAAkBX,IACzB7gB,KAAK,SAAUukB,GACf1jB,MAAM,OAAQ,sBAIrB,IACIoO,EAAQ0S,GAAe4D,OADf,GAGRC,EAAoBvV,GAAG8T,cACtB9U,MAAM,CAAC,EAAG,GAAKwQ,GAAa,EAAI+B,GACjC,EAAIA,GAAkBX,GAAW,MAChCmD,OAAO,EAAE/U,EAAQ,EAAGA,EAAQ,IAE7BwW,EAAmBxV,GAAG4U,aACrB3F,MAAMsG,GACNV,WAAW7U,GAAGiE,OAAO,QACrB6Q,WAAW,EAAE9V,EAAQ,GAAKA,EAAQ,EAAI,EAAGA,EAAQ,EAAGA,EAAQ,IAE7DyW,EAAepB,EAAQ/lB,OAAO,KAC7ByB,KAAK,QAAS,wBACdA,KAAK,KAAM,iBACX6jB,QAAQ,UAAWhC,IAAuC,WAAvBH,IACnC1hB,KAAK,YAAa,aAAayhB,GAjBxB,GAiB8C,GAAG/R,SAE7DgW,EAAannB,OAAO,KACfyB,KAAK,YAAa,gBAAgBukB,EAAe,MACjDlhB,KAAKoiB,GAEVC,EAAannB,OAAO,QACfyB,KAAK,QAAS,GAAKyf,GAAa,EAAI+B,GACjC,EAAIA,GAAkBX,IACzB7gB,KAAK,SAAUukB,GACf1jB,MAAM,OAAQ,sBAInB,IAAIijB,EAAkB7T,GAAG8T,cACpBC,OAAOrC,GAAehV,QACtBsC,MAAM,CAAC,EAAGwQ,GAAa,MAExBkG,EAAmB1V,GAAG4U,aACrB3F,MAAM4E,GACNgB,WAAW7U,GAAGiE,OAAO,QACrB6Q,WAAW,CAAC,EAAGpD,GAAehV,OAAO,KAEtCiZ,EAAetB,EAAQ/lB,OAAO,KAC7ByB,KAAK,QAAS,wBACdA,KAAK,KAAM,iBACX6jB,QAAQ,UAAWhC,IACnB7hB,KAAK,YAAa,aAAayhB,GAAe,IAAI,GAAG/R,SAE1DkW,EAAarnB,OAAO,KACfyB,KAAK,YAAa,gBAAgBukB,EAAe,MACjDlhB,KAAKsiB,GAEVC,EAAarnB,OAAO,QACfyB,KAAK,QAASyf,IACdzf,KAAK,SAAUukB,GACf1jB,MAAM,OAAQ,QAGnB,IAAIglB,EAAa5V,GAAG8T,cACf9U,MAAM,CAAC,EAAGwQ,GAAa,MACvBuE,OAAO,CAAC,EAAG,IAEZ8B,EAAkB7V,GAAG4U,aACpB3F,MAAM2G,GACNf,WAAW7U,GAAGiE,OAAO,QACrB6Q,WAAW,CAAC,EAAG,GAAK,IAErBgB,EAAczB,EAAQ/lB,OAAO,KAC5ByB,KAAK,QAAS,uBACd6jB,QAAQ,UAAWhC,IACnB7hB,KAAK,YAAa,aAAayhB,GAAe,GAAG,GAAG/R,SAEzDqW,EAAYxnB,OAAO,KACdyB,KAAK,YAAa,gBAAgBukB,EAAe,MACjDlhB,KAAKyiB,GAEVC,EAAYxnB,OAAO,QACdyB,KAAK,IAAK,IACVA,KAAK,QAASyf,GAAa,IAC3Bzf,KAAK,SAAUukB,GACfvkB,KAAK,YAAa,eAAeyf,GAAW,MAAM8E,EAAa,MAC/D1jB,MAAM,SAAU,mBAChBA,MAAM,eAAgB,IACtBA,MAAM,OAAQ,wBAmQnBmlB,CAPcjS,GAAIxV,OAAO,KACpByB,KAAK,QAAS,gBACdA,KAAK,YAAa,gBACfygB,GAAY1J,IAAMwK,GAAmBP,GAAiB,OAAIO,GAC1D9B,GAAauB,GAAW7f,WALb,GAWnB,IAAI8kB,EAAUhW,GAAGiW,iBACZxW,EAAElK,GAAKA,EAAEkK,GACTC,EAAEnK,GAAKA,EAAEmK,GAEVwW,EDxjBqB,EAAC1E,EAAgB7F,KAC1C,IAAIuK,EAAW,GAEf,IAAK,IAAIve,EAAI,EAAGA,EAAIgU,EAAIza,OAAQyG,IAC9B,IAAK,IAAIqM,EAAI,EAAGA,EAAI2H,EAAIhU,GAAGzG,OAAQ8S,IAAK,CACtC,IAAIyP,EAAmC,WAAxB9H,EAAIhU,GAAGqM,GAAGmG,UACrBgM,EAAYhF,GAAaK,EAAe7Z,GAAGqM,IAC/C,IAAK,IAAIrP,EAAI,EAAGA,EAAIgX,EAAIhU,GAAGqM,GAAGqG,WAAWnZ,OAAQyD,IAAK,CAEpD,IAAIyhB,EAAiBzK,EAAIhU,GAAGqM,GAAGqG,WAAW1V,GAAG6V,OAAOvS,MAEpD,GAAIwb,EAAU,CACZ,IAAI4C,EAAmB1K,EAAIhU,EAAE,GAAG,GAAG+E,OAAOxL,OACxCya,EAAIhU,EAAE,GAAG,GAAG+E,OAAOxL,OACrB,GAAIklB,EAAiBC,GAAqB,EACtC,SAEJD,EAAiBhY,KAAKC,MAAM+X,EAAiBC,GAE/C,IAAIC,EAAYrF,GAAcO,EAAe7Z,EAAE,GAAGye,IAC9CG,EAAY5K,EAAIhU,GAAGqM,GAAGqG,WAAW1V,GAAG+V,OACxCwL,EAAS3jB,KAAK,CACZiY,OAAQ8L,EACR/nB,OAAQ4nB,EACRzL,OAAQ6L,EACRC,iBAAkB7e,EAClB8e,gBAAiBzS,EACjB0S,gBAAiBN,KAKzB,OAAOF,GCwhBQS,CAAYnF,GAAgB7F,IAE3BwH,EAAS7kB,OAAO,KAC3ByB,KAAK,QAAS,cAETwQ,UAAU,aACflR,KAAK6mB,GACLxV,QACApS,OAAO,QACPyB,KAAK,QAASwF,GACX,aAAaA,EAAEihB,yBAAyBjhB,EAAEihB,oBAAoBjhB,EAAEkhB,mBACnE1mB,KAAK,KAAMwF,GACR,QAAQA,EAAEihB,oBAAoBjhB,EAAEkhB,mBAAmBlhB,EAAEmhB,mBACxD3mB,KAAK,IAAKwF,GAAKygB,EAAQ,CAACxL,OAAQjV,EAAEiV,OAAQjc,OAAQgH,EAAEhH,UACpDqC,MAAM,OAAQ,QACdA,MAAM,eAAgBmf,IACtBnf,MAAM,UAAW+e,IACjB/e,MAAM,SAAUgf,IAGrB,IAGIgH,EAHkBzD,EAAS7kB,OAAO,KACjCyB,KAAK,QAAS,oBAEczB,OAAO,QACnCyB,KAAK,IAAKyhB,GAAe,GAAG,GAAG/R,EAAI+P,GAAa,GAChDzf,KAAK,IAAKyhB,GAAe,GAAG,GAAG9R,EAAI8P,GAAa,GAChDzf,KAAK,QAAS,mBACda,MAAM,oBAAqB,WAC3BA,MAAM,cAAe,UAEtBimB,EAAS,MAIXA,EAAS,OAGXD,EAAWtoB,OAAO,SACbsC,MAAM,oBAAqB,WAC3BA,MAAM,OAAQ,WACdxB,KANM,QAQXwnB,EAAWtoB,OAAO,SACbsC,MAAM,oBAAqB,WAC3BxB,KAAK,aA0BC0nB,GAAY,KAGvB,IAAIjD,EAAkB7T,GAAG8T,cACpBC,OAAOrC,GAAehV,QACtBsC,MAAM,CAAC,EAAGwQ,KAGf,IAAK,IAAI7X,EAAI,EAAGA,EAAIgU,GAAIza,OAAQyG,IAAK,CACnC,IAAI6b,EAAW7H,GAAIhU,GACfqH,EAAQ0S,GAAeD,IAAoB9Z,GAG3Cgc,EAFa7P,GAAI9S,OAAO,qBAAqB2G,GAErB4I,UAAU,gBACjClR,KAAKmkB,GAEN7b,EAAIgU,GAAIza,OAAS,EAEnByiB,EAAW3O,WAAW,aACjBC,SAAS,KACT0N,KAAK3S,GAAG+W,cACRnmB,MAAM,UAAW,GACjBgQ,GAAG,OAAO,WACTZ,GAAGhP,OAAO+G,MACL/G,OAAO,oBACPgjB,KAAK,CAACze,EAAGtE,EAAGkT,IAAM0N,GAAWtc,EAAGtE,EAAGkT,EAAGnF,IAC3CgB,GAAGhP,OAAO+G,MAAMiN,WAAW,UACtBC,SAAS,KACT0N,KAAK3S,GAAG4S,aACRhiB,MAAM,UAAW,MAG5B+iB,EAAWK,KACP,CAACze,EAAGtE,EAAGkT,IAAMuO,GAAgBnd,EAAGtE,EAAGkT,EAAG0P,IAO9C,IAAK,IAAI5iB,EAAI,EAAGA,EAAI,EAAGA,IAAI,CACzB,IAAIyH,EAAQ,EAAQ,EAAJzH,EACZsjB,EAAS7C,GAAetc,MAAMsD,GAC9B8b,EAAS9C,GAAetc,MAAMsD,EAAQ,GAEtC+b,EAAoBzU,GAAG8T,cACtB9U,MAAM,CAAC,EAAG,EAAIwQ,GAAa+B,KAC3BwC,OAAO,EAAEQ,EAAS,EAAGA,EAAS,IAE/BG,EAAoB1U,GAAG8T,cACtB9U,MAAM,CAAC,EAAG,EAAIwQ,GAAa,EAAI+B,KAC/BwC,OAAO,EAAES,EAAS,EAAGA,EAAS,IAE/BG,EAAmB3U,GAAG4U,aACrB3F,MAAMwF,GACNI,WAAW7U,GAAGiE,OAAO,QACrB6Q,WAAW,EAAEP,EAAS,EAAG,EAAGA,EAAS,IAEtCQ,EAAmB/U,GAAG4U,aACrB3F,MAAMyF,GACNG,WAAW7U,GAAGiE,OAAO,QACrB6Q,WAAW,EAAEN,EAAS,EAAG,EAAGA,EAAS,IAE1C1Q,GAAI9S,OAAO,kBAAkBC,OAAOD,OAAO,KAAKoC,KAAKuhB,GACrD7Q,GAAI9S,OAAO,kBAAkBC,OAAOD,OAAO,KAAKoC,KAAK2hB,GAIvD,IAAK,IAAI9jB,EAAI,EAAGA,EAAI,EAAGA,IAAI,CACzB,IAAIyH,EAAQ,EAAQ,EAAJzH,EACZ+N,EAAQ0S,GAAetc,MAAMsD,GAE7Byc,EAAoBnV,GAAG8T,cACtB9U,MAAM,CAAC,EAAG,EAAIwQ,GAAa,EAAI+B,GAChC,EAAIA,GAAkBX,GAAW,MAChCmD,OAAO,EAAE/U,EAAOA,IAEjBoW,EAAmBpV,GAAG4U,aACrB3F,MAAMkG,GACNN,WAAW7U,GAAGiE,OAAO,QACrB6Q,WAAW,EAAE9V,GAASA,EAAQ,EAAI,EAAGA,EAAM,EAAGA,IAEnD8E,GAAI9S,OAAO,mBAAmBC,GAAKD,OAAO,KAAKoC,KAAKgiB,GAItD,IACIpW,EAAQ0S,GAAe4D,OADf,GAGRC,EAAoBvV,GAAG8T,cACtB9U,MAAM,CAAC,EAAG,GAAKwQ,GAAa,EAAI+B,GACjC,EAAIA,GAAkBX,GAAW,MAChCmD,OAAO,EAAE/U,EAAOA,IAEjBwW,EAAmBxV,GAAG4U,aACrB3F,MAAMsG,GACNV,WAAW7U,GAAGiE,OAAO,QACrB6Q,WAAW,EAAE9V,GAASA,EAAQ,EAAI,EAAGA,EAAM,EAAGA,IAEnD8E,GAAI9S,OAAO,mBAAmBA,OAAO,KAAKoC,KAAKoiB,GAG/C,IAAIE,EAAmB1V,GAAG4U,aACrB3F,MAAM4E,GACNgB,WAAW7U,GAAGiE,OAAO,QACrB6Q,WAAW,CAAC,EAAGpD,GAAehV,OAAO,KAE1CoH,GAAI9S,OAAO,mBAAmBA,OAAO,KAAKoC,KAAKsiB,IAMpCsB,GAAuB,KAElC,IAAIC,EAAsB,CAAC,GACvBC,OAAWxlB,EAIfigB,GAAiB,GAEjB,IAAK,IAAIha,EAAI,EAAGA,EAAIgU,GAAIza,OAAS,EAAGyG,IAAK,CACvC,IAAI6b,EAAW7H,GAAIhU,GAIfwf,EADgB3D,EAAS1d,IAAI6B,GAAKqZ,GAAUrZ,EAAE+E,SACbwB,OAAO,CAACkZ,EAAKC,IACzC,CAACjZ,KAAKW,IAAIqY,EAAI,GAAIC,EAAI,IAAKjZ,KAAKQ,IAAIwY,EAAI,GAAIC,EAAI,MAEzD1F,GAAepf,KAAK,CAACwM,IAAKoY,EAAiB,GAAIvY,IAAKuY,EAAiB,KAG5C,SAArB3D,EAAS,GAAG7gB,MAAwC,OAArB6gB,EAAS,GAAG7gB,OAC7CwkB,EAAmBA,EAAiBrhB,IAAIsI,KAAKa,KAE7CiY,EAAW,GAAK,GACZ9Y,KAAKmB,MAAsC,IAAhCnB,KAAKQ,OAAOuY,IAA4B,WAGxCzlB,IAAbwlB,GACFD,EAAoB1kB,KAAK2kB,GAK7BD,EAAoB1kB,KAAK,GACzBof,GAAepf,KAAK,CAACwM,IAAK,EAAGH,IAAK,IAGlC,IAAI0Y,EAA0B,CAAC,GAC3BC,GAAkB7H,GAAY,GAAK,EACvC,IAAK,IAAIze,EAAI,EAAGA,EAAIsmB,EAAgBtmB,IAAK,CACvC,IAAIumB,EAAWP,EAAoB9jB,MAAM,EAAI,EAAIlC,EAAG,EAAI,EAAIA,EAAI,GAC5DwmB,EAAWrZ,KAAKQ,OAAO4Y,GAC3B,IAAK,IAAIvc,EAAI,EAAGA,EAAI,EAAGA,IACrBqc,EAAwB/kB,KAAKklB,GAGjCH,EAAwB/kB,KAAK,GAE7B,IAAImlB,EAAuB,CAAC,GACxBD,EAAWrZ,KAAKQ,OAAOqY,EAAoB9jB,MAAM,EACjD8jB,EAAoB/lB,OAAS,IACjC,IAAK,IAAID,EAAI,EAAGA,EAAIye,GAAY,EAAGze,IACjCymB,EAAqBnlB,KAAKklB,GAE5BC,EAAqBnlB,KAAK,GAG1Bmf,GAAetc,MAAQ6hB,EACvBvF,GAAewD,OAASoC,EACxB5F,GAAe4D,OAASoC,EACxBhG,GAAehV,OAAS,CAAC,EAAGsD,GAAGpB,IAAI+M,GAAIA,GAAIza,OAAS,GAAG4E,IAAIP,GAAKA,EAAEmH,UAElEjD,GAAoBZ,IAAI6Y,IACxBhY,GAAoBb,IAAI8Y,KC14BpB1B,GAAmBV,GAAeU,iBAClCT,GAAaD,GAAeC,WAC5BQ,GAAoBT,GAAeS,kBACnCQ,GAAcjB,GAAeiB,YAGnC,IAAI1M,QAAMpS,EACV0H,GAASH,UAAWhJ,IAAU6T,GAAM7T,IAEpC,IAAIqhB,QAAkB5f,EACtB2H,GAAqBJ,UAAWhJ,IAAUqhB,GAAkBrhB,IAerD,MAAM0nB,GAAcC,IACzB,IAAIC,EAAaD,EAAIC,WACjB/O,EAAU8O,EAAI9O,QACdgP,EAAUF,EAAIE,QACdjQ,EAAQ+P,EAAI/P,MACZkQ,EAAUH,EAAIG,QACdC,EAAeJ,EAAII,aACnBC,EAAYL,EAAIK,UAChBC,OAAwCxmB,IAAvBkmB,EAAIM,eAA+B,OAASN,EAAIM,eACjEjT,OAA4BvT,IAAjBkmB,EAAI3S,SAAyB,IAAM2S,EAAI3S,SAGvCnB,GAAI9S,OAAO,qBAAqB6mB,GACtCtX,UAAU,gBAAgByT,KAAK,CAACze,EAAGtE,EAAGkT,KAC7CnE,GAAGhP,OAAOmT,EAAElT,IACTL,MAAM,SAAUknB,GAAW7mB,IAAM+mB,EAAe,UAAY,WAC5DpnB,MAAM,iBAAkBknB,GAAW7mB,IAAM+mB,EAAe,OAAS,OACjEhnB,OAAO,SACPgU,WAAWkT,GACXvF,KAAK3S,GAAGmY,gBACRtQ,MAAMA,GACN5C,SAASA,GACTlV,KAAK,IAAK+Y,GAEb9I,GAAGhP,OAAOmT,EAAElT,IACTD,OAAO,iBACPgU,WAAWkT,GACXvF,KAAK3S,GAAGmY,gBACRtQ,MAAMA,GACN5C,SAASA,GACTlV,KAAK,IAAK+Y,QAEGpX,IAAZqmB,GAAyB9mB,IAAM+mB,GACjChY,GAAGhP,OAAOmT,EAAElT,IACTD,OAAO,SACPJ,MAAM,UAAWmnB,KAKxBjU,GAAIvD,UAAU,iBAAiBsX,GAC5B7S,WAAWkT,GACXvF,KAAK3S,GAAGmY,gBACRtQ,MAAMA,GACN5C,SAASA,GACTlV,KAAK,YAAa,IAGV,aAFC+Y,EAAU0G,GAAa,OACtBgB,GAAY1J,IAAMwK,IAAmB,EAAI,MAGnD1Q,GAAG,MAAOqX,GAEbnU,GAAIvD,UAAU,0BAA0BsX,GACrC7S,WAAWkT,GACXvF,KAAK3S,GAAGmY,gBACRtQ,MAAMA,GACN5C,SAASA,GACTlV,KAAK,YAAa,IAGV,aAFC+Y,EAAU0G,GAAa,OACtBgB,GAAY1J,IAAMwK,IAAmB,EAAI,MAGnD1Q,GAAG,MAAOqX,IASFG,GAAqB,CAACC,EAAYC,EAAOC,UACtC7mB,IAAV6mB,IACFA,EAAQzU,IAIV,IAGIiP,EAHOwF,EAAMjqB,OAAO,QACrByB,KAAK,QAAS,oBAEGzB,OAAO,kBACxByB,KAAK,KAAMsoB,GACXtoB,KAAK,KAAM,MACXA,KAAK,KAAM,QACXA,KAAK,KAAM,QACXA,KAAK,KAAM,QAEduoB,EAAMvrB,QAAQyO,IACZuX,EAASzkB,OAAO,QACbyB,KAAK,SAAUyL,EAAEsM,QACjB/X,KAAK,aAAcyL,EAAE2W,OACrBpiB,KAAK,eAAgByL,EAAEuc,YAuBjBS,GAA+BZ,IAC1C,IAAItD,EAAesD,EAAItD,aACrBrI,EAAgB2L,EAAI3L,cACpBjN,EAAQ4Y,EAAI5Y,MACZuZ,EAAQX,EAAIW,MACZE,EAASb,EAAIa,OACbje,EAAQod,EAAIpd,MACZiF,EAAImY,EAAInY,EACRC,EAAIkY,EAAIlY,EACRgZ,EAAUd,EAAIc,QACd3Y,EAAa6X,EAAI7X,WACjB4Y,EAAwBf,EAAIe,sBAC5BC,EAAchB,EAAIgB,iBAEDlnB,IAAfqO,IAA4BA,EAAakQ,GAAiBE,WAC1Cze,IAAhBknB,IAA6BA,EAAc,GAG/C,IAAI9F,EAAe,sBACf+F,EAAkBvc,GAAKyD,EAAWzD,GAAK,EAAI,EAAIsc,GAAeA,GAElE,IAAKF,EAAS,CACZ,IAAII,GAAaL,EAAO1Z,IAAMC,EAAQ,GAAKA,EACzC+Z,GAAa,EAAI/Z,EAAQ,GAAKA,EAC9Bga,GAAcP,EAAO7Z,IAAMI,EAAQ,GAAKA,EACxCia,EAAaR,EAAO7Z,IAAM6Z,EAAO1Z,IACjCma,GAAgB,EAAIT,EAAO1Z,KAAOka,EAClCE,EAAeL,GAAaC,EAAYD,GAAW,EACnDM,EAAgBL,GAAaC,EAAaD,GAAW,EAEnDT,EAAQ,CACV,CAACxQ,OAAQ,EAAGqK,MAAO0G,EAAgBC,GAAYf,QAAS,GACxD,CAACjQ,OAAQoR,EAAe,EACtB/G,MAAO0G,EAAgBM,GACvBpB,QAAS,GACX,CAACjQ,OAAQoR,EACP/G,MAAO0G,EAAgBE,GACvBhB,QAAS,GACX,CAACjQ,OAAQoR,GAAgB,EAAIH,GAAa,EACxC5G,MAAO0G,EAAgBO,GACvBrB,QAAS,GACX,CAACjQ,OAAQ,EAAGqK,MAAO0G,EAAgBG,GAAajB,QAAS,SAG7BrmB,IAA1BinB,GACFP,GAAmB,+BAAgCE,EAAOC,GAC1DzF,EAAe,uCAEfsF,GAAmB,GAAGO,EAAyBL,EAAOC,GACtDzF,EAAe,QAAQ6F,MAI3B,IAAIU,EAAcrZ,GAAG8T,cAClB9U,MAAM,CAAC,EAAGxE,EAAQ,MAClBuZ,OAAO2E,EAAU,CAAC,EAAG1Z,GAAS,CAACyZ,EAAO1Z,IAAK0Z,EAAO7Z,MAEjD0a,EAAatZ,GAAG4U,aACjB3F,MAAMoK,GACNxE,WAAW7U,GAAGiE,OAAOyU,EAAU,IAAM,QACrC5D,WAAW4D,EAAU,CAAC,EAAG1Z,GAAS,CAACyZ,EAAO1Z,IAAK,EAAG0Z,EAAO7Z,MAExD2a,EAAqBhB,EAAMjqB,OAAO,KACnCyB,KAAK,QAAS,wBAAuBkc,EAAgB,IACrDlc,KAAK,YAAa,aAAa0P,MAAMC,MAEpC8Z,EAAcD,EAAmBjrB,OAAO,KACzCyB,KAAK,YAAa,gBAAgBukB,EAAe,MACjDlhB,KAAKkmB,GAERE,EAAYjZ,UAAU,QACnB3P,MAAM,YAAa,OACnBA,MAAM,OAAQof,IAEjBwJ,EAAYjZ,UAAU,cACnB3P,MAAM,SAAUof,IAEnBuJ,EAAmBjrB,OAAO,QACvByB,KAAK,QAASyK,GACdzK,KAAK,SAAUukB,GACfvkB,KAAK,YAAa,UAAU2oB,EAAU,IAAM,aACzCle,EAAQ,MAAM8Z,EAAe,MAChC1jB,MAAM,OAAQkiB,IAgBN2G,GAAa7B,IACxB,IAAIW,EAAQX,EAAIW,MACdmB,EAAK9B,EAAI8B,GACTC,EAAK/B,EAAI+B,GACTC,EAAKhC,EAAIgC,GACTC,EAAKjC,EAAIiC,GACTC,EAAKlC,EAAIkC,GACTC,EAAQnC,EAAImC,MACZC,OAAwBtoB,IAAfkmB,EAAIoC,OAAuB,SAAWpC,EAAIoC,OAOzCzB,EAAMjqB,OAAO,KACtByB,KAAK,QAAS,eAEXzB,OAAO,QACVyB,KAAK,IAAK,IAAI2pB,KAAMC,KAAMG,KAAMA,SAAUC,EAAQ,EAAI,KAAKH,KAAMC,KACjE9pB,KAAK,aAAc,QAAQiqB,MAC3BppB,MAAM,SAAU,QAChBA,MAAM,OAAQ,SCnPbqf,GAAmBV,GAAeU,iBAClCT,GAAaD,GAAeC,WAC5BC,GAAmBF,GAAeE,iBAClCC,GAAYH,GAAeG,UAC3BM,GAAoBT,GAAeS,kBACnCW,GAAmBpB,GAAeoB,iBAClCH,GAAcjB,GAAeiB,YAC7BI,GAAWrB,GAAeqB,SAC1BE,GAAoBvB,GAAeuB,kBACnC/M,GAAW/D,GAAGiE,OAAO,OAC3B,IAAIgW,IAAmB,EAGnBnW,QAAMpS,EACV0H,GAASH,UAAWhJ,IAAU6T,GAAM7T,IAEpC,IAAIqhB,QAAkB5f,EACtB2H,GAAqBJ,UAAWhJ,IAAUqhB,GAAkBrhB,IAE5D,IAAIshB,QAAkB7f,EACtB4H,GAAqBL,UAAWhJ,IAAUshB,GAAkBthB,IAE5D,IAAI0b,QAAMja,EACVyH,GAASF,UAAWhJ,IAAU0b,GAAM1b,IAEpC,IAAIuhB,QAAiB9f,EACrB6H,GAAoBN,UAAWhJ,IAAUuhB,GAAiBvhB,IAE1D,IAAIwhB,QAAqB/f,EACzB8H,GAAwBP,UAAWhJ,IAAUwhB,GAAqBxhB,IAElE,IAAIyhB,QAAiBhgB,EACrB+H,GAAoBR,UAAWhJ,IAAUyhB,GAAiBzhB,IAE1D,IAAI0hB,QAAiBjgB,EACrBgI,GAAoBT,UAAWhJ,IAAU0hB,GAAiB1hB,IAE1D,IAAIiqB,GAAa,MAACxoB,OAAWA,GAC7BiI,GAAgBV,UAAWhJ,IAAUiqB,GAAajqB,IAElD,IAAIkqB,QAA4BzoB,EAChCmI,GAA+BZ,UAAUhJ,IACvCkqB,GAA4BlqB,IAG9B,IAAI2hB,QAAelgB,EACnBkI,GAAkBX,UAAWhJ,IAAU2hB,GAAe3hB,IAEtD,IAAImqB,QAA4B1oB,EAChCyI,GAA+BlB,UAAYhJ,IAAUmqB,GAA4BnqB,IAYjF,MAoHMoqB,GAAuB,CAACC,EAAaC,EAAYze,EAAQ+L,EAC7DoE,KACA,MAAMuO,EAAmB,KACvB,IAAIC,GAAWH,EAAYvqB,KAAK,iBAC5B2qB,GAAWJ,EAAYvqB,KAAK,iBAC5B4qB,GAAWL,EAAYvqB,KAAK,aAC5BkB,EAAI,EAAYspB,EAChBtf,EAAImD,KAAKC,MAAM,EAAYkc,GAC3B9a,EAAIgb,EAAUxpB,EAAI6K,EAClB4D,EAAIgb,EAAUzf,EAAIa,EAClB8e,GAAWD,EAAU,IAAMJ,EAAaA,GAG5CzW,GAAIvD,UAAU,aAAatP,KAAKgK,KAC7B+J,WAAW,uBACX6C,MAAMA,EAAQ,KACd5C,SAAS,KACTrU,MAAM,UAAW,GAElB0pB,EAAYvqB,KAAK,YAAa6qB,GAC7B5V,WAAW,wBACX6C,MAAMA,GACN5C,SAAS,KACTlV,KAAK,YAAa,aAAa0P,MAAMC,MACrCkB,GAAG,MAAO,KACO,IAAZga,IAYGX,IACHY,GAAuB5O,IAGvBkO,IACFK,OAIRA,KAGIM,GAA6B,CAACC,EAAkBC,EACpDT,EAAYze,KAEZ,MAAM0e,EAAmB,KACvB,IAAIC,GAAWM,EAAiBhrB,KAAK,iBACjC2qB,GAAWK,EAAiBhrB,KAAK,iBACjCkrB,GAAiBD,EAAkBjrB,KAAK,iBACxC4qB,GAAWI,EAAiBhrB,KAAK,aACjCkB,EAAI,EAAYspB,EAChBtf,EAAImD,KAAKC,MAAM,EAAYkc,GAC3B9a,EAAIgb,EAAUxpB,EAAI6K,EAClB4D,EAAIgb,EAAUzf,EAAIa,EAClBof,EAAUD,EAAiBN,EAAUJ,EAAcze,EACnD8e,GAAWD,EAAU,IAAMJ,EAAaA,GAG5CzW,GAAIvD,UAAU,aAAatP,KAAKgK,KAC7B+J,WAAW,uBACX6C,MAAMA,KACN5C,SAAS,KACTrU,MAAM,UAAW,GAEpBmqB,EAAiBhrB,KAAK,YAAa6qB,GAChC5V,WAAW,wBACX6C,MAtBO,KAuBP5C,SAAS,KACTlV,KAAK,YAAa,aAAa0P,MAAMC,MAExCsb,EAAkBjrB,KAAK,YAAa6qB,GACjC5V,WAAW,yBACX6C,MA5BO,KA6BP5C,SAAS,KACTlV,KAAK,YAAa,aAAamrB,MAAYxb,MAC3CkB,GAAG,MAAO,KAULuZ,IACFK,OAIRA,KAGIK,GAA0B5O,IACb,OAAbjM,GAAGtQ,OACLsQ,GAAGtQ,MAAMyrB,kBAGX,IACIZ,EAAa/K,IAAiC,EAAnBmB,IAC3B7U,EAA4B,EAAnB6U,GAEb,GAAIsJ,GAAkB,CAEpBpgB,GAA+BhB,KAAI,GAGnCiL,GAAIvD,UAAU,iBACXyE,aACAC,SAAS,KACTrU,MAAM,UAAW,GAGpBkT,GAAIvD,UAAU,qBACXyE,aACAC,SAAS,KACTrU,MAAM,UAAW,GAGpB,IAAK,IAAIK,EAAK,EAAGA,EAAIugB,GAAevF,EAAgB,GAAG/a,OAAQD,IAC7D6pB,GAA2B9a,GAAGhP,OAAO,iBAAiBC,GACpD+O,GAAGhP,OAAO,kBAAkBC,GAAMspB,EAAYze,GAIlDue,GAAqBra,GAAGhP,OAAO,kBAC7BupB,EAAYze,EA5BJ,IA4BmBmQ,GAG7BnI,GAAIvD,UAAU,kBACXxQ,KAAK,mBAAoB,OACzBA,KAAK,oBAAqB,GAC1BikB,KAAK,CAACze,EAAGtE,EAAGkT,IAAMiX,GAAY7lB,EAAGtE,EAAGkT,GAAG,MAG1CL,GAAI9S,OAAO,6BACRjB,KAAK,aAAc,gCAEtBkqB,IAAmB,MAEd,CAELpgB,GAA+BhB,KAAI,GAGnCiL,GAAIvD,UAAU,qBACXyE,WAAW,QACXC,SAAS,KACTrU,MAAM,UAAW,GAGDkT,GAAIvD,UAAU,iBACpBxQ,KAAK,YAAa,GAC5BiV,WAAW,QACXC,SAAS,KACTrU,MAAM,UAAW,GACjBgQ,GAAG,MAAO,CAACrL,EAAGtE,EAAGkT,KAChB,IAAInV,EAAUgR,GAAGhP,OAAOmT,EAAElT,IACtBwpB,GAAWzrB,EAAQe,KAAK,iBACxB2qB,GAAW1rB,EAAQe,KAAK,iBAC5Bf,EAAQe,KAAK,YAAa,aAAa0qB,MAAYC,QAIvD5W,GAAIvD,UAAU,kBACX8a,YACAtrB,KAAK,mBAAoB,OAG5B+T,GAAI9S,OAAO,6BACRjB,KAAK,aAAc,wBAEtBkqB,IAAmB,IAIjBmB,GAAc,CAAC7lB,EAAGtE,EAAGkT,EAAGmX,KACdtb,GAAGhP,OAAOmT,EAAElT,IAClB+T,aACLC,SAAS,KACT0N,KAAK3S,GAAGub,YACRxrB,KAAK,oBAAqBurB,GAC1B1a,GAAG,MAAO,CAACrL,EAAGtE,EAAGkT,KACZgW,IACFiB,GAAY7lB,EAAGtE,EAAGkT,EAAGmX,EAAa,QAkBpCE,GAAwB,CAACvP,EAAewP,EAAOC,EAAQC,EAC3DC,EAAiBrmB,EAAGtE,EAAG4qB,EACvBC,EAAmCC,KAKnC,IAAIC,EAAoBlY,GAAIxV,OAAO,KAChCyB,KAAK,QAAS,sBACda,MAAM,UAAW,GAGpBqpB,IAAmB,EAUnB,IAAIgC,EAAiBR,EAAQjM,GAAaoM,EACtCM,EAAiBD,EAAiBzM,GAA+B,IAAlBoM,EAI/CO,GAFQzK,GAAeD,IAAoBxF,GAC9BgE,GAAiB1a,EAAE5C,MACX,IAIrBujB,EAAW,GAQXkG,EADgB7mB,EAAE8U,WAAWvU,IAAIiX,GAAQiE,GAAUjE,EAAKrC,SAC3BxM,OAAO,CAACkZ,EAAKC,IACrC,CAACjZ,KAAKW,IAAIqY,EAAI,GAAIC,EAAI,IAAKjZ,KAAKQ,IAAIwY,EAAI,GAAIC,EAAI,MAErDpW,EAAmB7C,KAAKmB,MACgB,IAA1CnB,KAAKQ,OAAOwd,EAAatmB,IAAIsI,KAAKa,OAAgB,IADlC,EAKdnD,EAA4B,EAAnB6U,GAGT0L,EAAU7K,GAAevF,GAAehb,GAAGyO,EAC3C4c,EAAUxY,GAAI9S,OAAO,UAAUib,UAAsBhb,KACrDsrB,EAAqBD,EAAQhuB,OAAO,KACrCyB,KAAK,QAAS,iBACdA,KAAK,YAAa,aAAa2rB,MAAWW,MAEzCG,EAAape,KAAKC,MAAMmR,GAAa1T,GAEzC,IAAK,IAAI7K,EAAI,EAAGA,EAAIurB,EAAYvrB,IAC9B,IAAK,IAAIgK,EAAI,EAAGA,EAAIuhB,EAAYvhB,IAC9BshB,EAAmBjuB,OAAO,QACvByB,KAAK,QAAS,qBAAqBkB,KAAKgK,KACxClL,KAAK,QAAS+L,GACd/L,KAAK,SAAU+L,GACf/L,KAAK,IAAKkB,EAAI6K,GACd/L,KAAK,IAAKkL,EAAIa,GACdlL,MAAM,OAAQ,qBACdA,MAAM,SAAU,qBAChBA,MAAM,UAAW,GAKxB0rB,EAAQtrB,OAAO,iBAAiByrB,QAGhC,IAAInC,EAAc0B,EAAkB1tB,OAAO,KACxCyB,KAAK,QAAS,qCACdA,KAAK,YAAa,aAAa2rB,MAAWW,MAE7C/B,EAAYhsB,OAAO,QAChByB,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KAAK,QAA4B,EAAnB4gB,IACd5gB,KAAK,SAA6B,EAAnB4gB,IACf5gB,KAAK,OAAQ,QACbA,KAAK,SAAUigB,IAElBsK,EAAYvqB,KAAK,YAAa,GAC3BA,KAAK,gBAAiB2rB,GACtB3rB,KAAK,gBAAiBssB,GAEzB,IACI9B,EAAa/K,IAAiC,EAAnBmB,IAE/B0J,GAAqBC,EAAaC,EAAYze,EAHlC,IAGiDmQ,GAG7DuF,GAAevF,EAAgB,GAAGlf,QAAQ,CAACiX,EAAG0Y,KAG5C,IAAIC,EAAchR,GAAIM,EAAgB,GAAGyQ,GAAIhgB,OACzCkgB,EAAejR,GAAIM,GAAehb,GAAGoZ,WAAWqS,GAAIhS,OACpDmS,EAAcjhB,GAAW+gB,EAAaC,GAG1CT,EAAmB5pB,KAAKye,GAAU6L,IA/aR,EAACne,EAAOM,EAAOe,EAAY7O,EACvD4rB,KAEA,IAAIte,EAActN,EACd4gB,EAAe5iB,SAASC,cAAc,UACtC4iB,EAAgBD,EAAalM,WAAW,MAC5CkM,EAAatX,MAAQgE,EACrBsT,EAAavX,OAASiE,EAGtB,IAAIwT,EAAcD,EAAcjM,aAAa,EAAG,EAAGtH,EAAaA,GAC5DyT,EAAmBD,EAAY3iB,KAEnC,IAAK,IAAI4B,EAAI,EAAGA,EAAIghB,EAAiB/gB,OAAQD,GAAG,EAK9CghB,EAAiBhhB,GAAK,IAYxB,IAAIohB,EAAcnjB,SAASC,cAAc,UACzCkjB,EAAY7X,MAAqB,EAAbgV,GACpB6C,EAAY9X,OAAsB,EAAbiV,GACrB,IAAI8C,EAAqBD,EAAYzM,WAAW,MAIhDmM,EAAcQ,aAAaP,EAAa,EAAG,GAC3CM,EAAmBzM,UAAUiM,EAAc,EAAG,EAAGtT,EAAaA,EAC5D,EAAG,EAAgB,EAAbgR,GAA6B,EAAbA,IAExB,IAAIgD,EAAeH,EAAYI,YAC/B/T,EAAM3O,KAAK,aAAcyiB,GAGzBV,EAAatR,SACb6R,EAAY7R,UA6YVuc,CA7X2B,EAAC9Q,EAAexI,EAAWuZ,EAAYvd,EAAGC,EACvEud,EAAWnhB,EAAQ+f,EACnBC,EAAmCC,EAAyBmB,KAC5D,IAAIC,EAAUH,EAAW1uB,OAAO,KAC7B8uB,MAAMzR,GAAIM,EAAgB,GAAGgR,IAC7BltB,KAAK,QAAS,qBACdA,KAAK,SAAUmtB,EAAc,UAAW,WACxCntB,KAAK,iBAAkBmtB,EAAc,MAAO,QAC5CntB,KAAK,aAAcktB,GACnBrc,GAAG,YAAaib,GAChBjb,GAAG,aAAckb,GACjBlb,GAAG,QAAS,CAACrL,EAAG4O,EAAGlT,IAAM8qB,EAAwBxmB,EAAG4O,EAAGlT,EAAGwS,EACzDwI,IAEJkR,EAAQ7uB,OAAO,SACZyB,KAAK,QAASyf,IACdzf,KAAK,SAAUyf,IACfzf,KAAK,IAAK0P,GACV1P,KAAK,IAAK2P,GAGb,IAAI8c,EAAape,KAAKC,MAAMmR,GAAa1T,GACrCuhB,EAAeF,EAAQ7uB,OAAO,KAC/ByB,KAAK,QAAS,iBACdA,KAAK,YAAa,aAAa0P,MAAMC,MAExC,IAAK,IAAIzO,EAAI,EAAGA,EAAIurB,EAAYvrB,IAC9B,IAAK,IAAIgK,EAAI,EAAGA,EAAIuhB,EAAYvhB,IAC9BoiB,EAAa/uB,OAAO,QACjByB,KAAK,QAAS,qBAAqBkB,KAAKgK,KACxClL,KAAK,QAAS+L,GACd/L,KAAK,SAAU+L,GACf/L,KAAK,IAAKkB,EAAI6K,GACd/L,KAAK,IAAKkL,EAAIa,GACdlL,MAAM,OAAQ,qBACdA,MAAM,SAAU,qBAChBA,MAAM,UAAW,GAexB,OAVAusB,EAAQ7uB,OAAO,QACZyB,KAAK,QAAS,YACdA,KAAK,QAASyf,IACdzf,KAAK,SAAUyf,IACfzf,KAAK,IAAK0P,GACV1P,KAAK,IAAK2P,GACV9O,MAAM,OAAQ,QACdA,MAAM,SAAUof,IAChBpf,MAAM,eAAgB,GAElBusB,GAoUSG,CAAuBrR,EAAehb,EAAG+qB,EACrDC,EAAgBjY,EAAEtE,EAAGgd,EAAI5gB,EAAQ+f,EACjCC,EAAmCC,GAAyB,GAG1C/qB,OAAO,SACEgO,EAAOe,EAAYxK,EAAEmH,OAAOxL,QAIzDglB,EAAS3jB,KAAK,CACZiY,OAAQyG,GAAc,CAACxR,EAAGgc,EAAO/b,EAAGsE,EAAEtE,IACtCnR,OAAQ4iB,GAAa,CAAC1R,EAAGwc,EAAgBvc,EAAGsE,EAAEtE,IAC9CzQ,KAAM,SAASytB,YAAaA,MAI9BxG,EAAS3jB,KAAK,CACZiY,OAAQyG,GAAc,CAACxR,EAAGwc,EAAgBvc,EAAGsE,EAAEtE,IAC/CnR,OAAQ4iB,GAAa,CAAC1R,EAAGyc,EACvBxc,EAAG8R,GAAevF,GAAehb,GAAGyO,IACtCzQ,KAAM,UAAUytB,eAMlB,IAAIa,EAAc9B,EAA2B,EAAnB9K,GAAuB,EAC7C2J,EAAc0B,EAAkB1tB,OAAO,KACxCyB,KAAK,QAAS,iBAAiB2sB,GAC/B3sB,KAAK,YAAa,aAAawtB,MAAgBvZ,EAAEtE,MAEhD8d,EAAa,oBACbC,EAAKzd,GAAGiE,OAAO,OACnB,IAAK,IAAIjP,EAAI,EAAGA,EAAI4nB,EAAa1rB,OAAQ8D,IACvC,IAAK,IAAI9G,EAAI,EAAGA,EAAI0uB,EAAa,GAAG1rB,OAAQhD,IAAK,CAC/CosB,EAAYhsB,OAAO,QAChByB,KAAK,QAAS,UACdA,KAAK,IAAK4gB,GAAmBziB,GAC7B6B,KAAK,IAAK4gB,GAAmB3b,GAC7BjF,KAAK,QAAS4gB,IACd5gB,KAAK,SAAU4gB,IACf5gB,KAAK,OAAQqhB,GAAiBnB,GAAiBvF,OAAQzJ,EACtD2b,EAAa5nB,GAAG9G,GA/GL,KAiHf,IAAIwvB,EAAM,GACeA,EAAf,IAANxvB,GAAgB,GAAL8G,EAAgB,GAChB,IAAN9G,EAAiB,KACb,KACbsvB,EAAaA,EAAWG,OAAOD,EAAK,GAAGD,EAAGb,EAAa5nB,GAAG9G,KAG9DsvB,EAAaA,EAAWG,OAAO,KAE/BrD,EAAYhsB,OAAO,QAChByB,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KAAK,QAA4B,EAAnB4gB,IACd5gB,KAAK,SAA6B,EAAnB4gB,IACf5gB,KAAK,OAAQ,QACbA,KAAK,SAAUigB,IAElBsK,EAAY1pB,MAAM,iBAAkB,OACjCA,MAAM,SAAU,aAChBgQ,GAAG,YAAa,KACf3G,GAAepB,IAAK,CAACqM,MAAM,EAAM9V,KAAMouB,MAExC5c,GAAG,aAAc,KAChB3G,GAAepB,IAAK,CAACqM,MAAM,EAAO9V,KAAMouB,MAEzC5c,GAAG,QAAS,KAAOZ,GAAGtQ,MAAMyrB,oBAI/B,IAAIJ,EAAmBT,EAAYsD,OAAM,GACtChtB,MAAM,iBAAkB,QACxBA,MAAM,SAAU,WAChBgjB,QAAQ,gBAAgB,GACxBA,QAAQ,gBAAgB8I,GAAM,GAEjC3B,EAAiBnqB,MAAM,UAAW,IAC/B2P,UAAU,eACV3P,MAAM,UAAW,IAEpBmqB,EAAiBhrB,KAAK,YAAa,aAAa0rB,MAAUzX,EAAEtE,MACzD3P,KAAK,YAAa,GAClBA,KAAK,gBAAiB0rB,GACtB1rB,KAAK,gBAAiBiU,EAAEtE,GAE3B,IAAIsb,EAAoBV,EAAYsD,OAAM,GACvChtB,MAAM,iBAAkB,QACxBA,MAAM,SAAU,WAChBgjB,QAAQ,gBAAgB,GACxBA,QAAQ,iBAAiB8I,GAAM,GAElC1B,EAAkBpqB,MAAM,UAAW,IAChC2P,UAAU,eACV3P,MAAM,OAAQ,QAEjBoqB,EAAkBjrB,KAAK,YACrB,aAAaksB,MAAmBjY,EAAEtE,MACjC3P,KAAK,gBAAiBksB,GACtBlsB,KAAK,gBAAiBiU,EAAEtE,GAE3Bob,GAA2BC,EAAkBC,EAAmBT,EAC9Dze,KAIJ,IAAIqb,EAAmBgF,EAAmBje,OAAO,CAACkZ,EAAKC,IAC9C,CAACjZ,KAAKW,IAAIqY,EAAI,GAAIC,EAAI,IAAKjZ,KAAKQ,IAAIwY,EAAI,GAAIC,EAAI,MAErDwG,EAAmB,CAAC9e,IAAKoY,EAAiB,GAAIvY,IAAKuY,EAAiB,IAGpE2G,EAAUtM,GAAevF,GAAehb,GAAGyO,EAAI8P,GAAa,EAE5DuO,EAAc/B,EAAkB1tB,OAAO,KACxCyB,KAAK,QAAS,eACdA,KAAK,YAAa,aAAamsB,EAAiBzM,OAAqBqO,MAExEC,EAAYzvB,OAAO,QAChByB,KAAK,KAAM0f,IACX1f,KAAK,KAAM0f,IACX1f,KAAK,QAAS,EAAI0f,IAClB1f,KAAK,SAAU,EAAI0f,IACnB1f,KAAK,KAAM,GACXA,KAAK,KAAM,GACXa,MAAM,OAAQ,QACdA,MAAM,SAAUof,IAEnB+N,EAAYzvB,OAAO,QAChByB,KAAK,MAAO0f,GAAmB,IAC/B1f,KAAK,KAAK,IACVA,KAAK,QAAS,GAAK0f,GAAmB,IACtC1f,KAAK,SAnBe,GAoBpBa,MAAM,OAAQof,IAEjB+N,EAAYzvB,OAAO,QAChByB,KAAK,KAAK,IACVA,KAAK,MAAO0f,GAAmB,IAC/B1f,KAAK,QAzBe,GA0BpBA,KAAK,SAAU,GAAK0f,GAAmB,IACvC7e,MAAM,OAAQof,IAIR,GAAL/e,GAEF8sB,EAAYzvB,OAAO,UACdyB,KAAK,KAAM,GACXA,KAAK,KAAMyf,GAAa,EAAImB,IAC5B5gB,KAAK,IAAK,GACVa,MAAM,SAAUof,IAChBpf,MAAM,SAAU,aAChBA,MAAM,OAAQwgB,GAAiBnB,GAAiBvF,OAAQzJ,EACvD1L,EAAE6U,KAhOW,KAiOdxJ,GAAG,YAAa,KACf3G,GAAepB,IAAK,CAACqM,MAAM,EAAM9V,KAAM,SAAS2U,GAASxO,EAAE6U,UAE5DxJ,GAAG,aAAc,KAChB3G,GAAepB,IAAK,CAACqM,MAAM,EAAO9V,KAAM,SAAS2U,GAASxO,EAAE6U,UAIlE8L,EAAS3jB,KAAK,CACZiY,OAAQ,CAAC/K,EAAGyc,EAAiBzM,GAC3B/P,EAAG8R,GAAevF,GAAehb,GAAGyO,EAAI8P,IAC1CjhB,OAAQ,CAACkR,EAAGyc,EAAiBzM,GAC3B/P,EAAG8R,GAAevF,GAAehb,GAAGyO,EAAI8P,GAAa,EAAIC,IAC3DxgB,KAAM,gBAIR8uB,EAAYzvB,OAAO,UAChByB,KAAK,KAAM,GACXA,KAAK,MAAOyf,GAAa,EAAImB,IAC7B5gB,KAAK,IAAK,GACVa,MAAM,SAAUof,IAChBpf,MAAM,SAAU,aAChBA,MAAM,OAAQwgB,GAAiBnB,GAAiBvF,OAAQzJ,EACvD1L,EAAE6U,KAzPa,KA0PhBxJ,GAAG,YAAa,KACf3G,GAAepB,IAAK,CAACqM,MAAM,EAAM9V,KAAM,SAAS2U,GAASxO,EAAE6U,UAE5DxJ,GAAG,aAAc,KAChB3G,GAAepB,IAAK,CAACqM,MAAM,EAAO9V,KAAM,SAAS2U,GAASxO,EAAE6U,UAIhE8L,EAAS3jB,KAAK,CACZiY,OAAQ,CAAC/K,EAAGyc,EAAiBzM,GAC3B/P,EAAG8R,GAAevF,GAAehb,GAAGyO,GACtCnR,OAAQ,CAACkR,EAAGyc,EAAiBzM,GAC3B/P,EAAG8R,GAAevF,GAAehb,GAAGyO,EAAI8P,GAAa,EAAIC,IAC3DxgB,KAAM,eAKVinB,EAAS3jB,KAAK,CACZiY,OAAQyG,GAAc,CAACxR,EAAGyc,EAAiB,EAAIzM,GAAmBD,GAChE9P,EAAG8R,GAAevF,GAAehb,GAAGyO,IACtCnR,OAAQ4iB,GAAa,CAAC1R,EAAGic,EACvBhc,EAAG8R,GAAevF,GAAehb,GAAGyO,IACtCzQ,KAAM,kBAIRinB,EAAS3jB,KAAK,CACZiY,OAAQyG,GAAc,CAACxR,EAAGic,EACxBhc,EAAG8R,GAAevF,GAAehb,GAAGyO,IACtCnR,OAAQ4iB,GAAa,CAAC1R,EAAGkc,EACvBjc,EAAG8R,GAAevF,GAAehb,GAAGyO,IACtCzQ,KAAM,gBAIR+sB,EAAkB1tB,OAAO,KACtByB,KAAK,QAAS,wCACdA,KAAK,YAAa,IAGV,aAFCksB,EAAiBzM,GAAa,OAC7BgB,GAAY1J,IAAMwK,IAAmB,EAAI,MAGnDsC,QAAQ,SAAUhC,IAClBtjB,OAAO,QACPsC,MAAM,cAAe,UACrBA,MAAM,oBAAqB,UAC3BA,MAAM,cAAe,KACrBA,MAAM,UAAW,OACjBxB,KAAK,gBAER4sB,EAAkB1tB,OAAO,KACtByB,KAAK,QAAS,qBACdA,KAAK,YAAa,IAGV,aAFCksB,EAAiBzM,GAAa,OAC7BgB,GAAY1J,IAAMwK,IAAmB,EAAI,MAGnD1Q,GAAG,QAAS,IAAMia,GAAuB5O,IACzC3d,OAAO,SACPyB,KAAK,QAAS,4BACdA,KAAK,aAAc,gCACnBA,KAAK,IAAK,IACVA,KAAK,IAAK,GACVA,KAAK,SAAU,IACfA,KAAK,QAAS,IAGjBisB,EAAkB1tB,OAAO,KACtByB,KAAK,QAAS,iDACdA,KAAK,YAAa,IAGV,aAFCksB,EAAiBzM,GAAa,OAC7BgB,GAAY1J,IAAMwK,IAAmB,EAAI,MAGnDsC,QAAQ,UAAWhC,IACnBtjB,OAAO,QACPsC,MAAM,cAAe,UACrBA,MAAM,oBAAqB,UAC3BA,MAAM,UAAW,OACjBA,MAAM,cAAe,KACrBtC,OAAO,SACPc,KAAK,gBACLd,OAAO,SACPsC,MAAM,YAAa,OACnBA,MAAM,cAAe,UACrBb,KAAK,IAAK,GACVA,KAAK,KAAM,SACXX,KAAK,IAAIuc,GAAIM,GAAe,GAAGvP,OAAOxL,kBACnCya,GAAIM,GAAe,GAAGvP,OAAO,GAAGxL,kBAChCya,GAAIM,GAAe/a,WAGzB,IAAI8kB,EAAUhW,GAAGiW,iBACdxW,EAAElK,GAAKA,EAAEkK,GACTC,EAAEnK,GAAKA,EAAEmK,GAERse,EAAYhC,EAAkB1tB,OAAO,KACtCyB,KAAK,QAAS,cACdkuB,QAuBH,OAnBAD,EAAUzd,UAAU,QACjBlR,KAAK6mB,GACLxV,QACApS,OAAO,QACPslB,QAAQ,YAAare,GAAgB,gBAAXA,EAAEtG,MAC5Bc,KAAK,KAAMwF,GAAK,QAAQA,EAAEtG,MAC1Bc,KAAK,IAAKwF,GAAKygB,EAAQ,CAACxL,OAAQjV,EAAEiV,OAAQjc,OAAQgH,EAAEhH,UACpDqC,MAAM,OAAQ,QACdA,MAAM,eAAgB,GACtBA,MAAM,SAAUof,IAEnBgO,EAAUhtB,OAAO,qBACdJ,MAAM,UAAW,IAEpBotB,EAAUzd,UAAU,kBACjBxQ,KAAK,mBAAoB,OACzBA,KAAK,oBAAqB,GAC1BikB,KAAK,CAACze,EAAGtE,EAAGkT,IAAMiX,GAAY7lB,EAAGtE,EAAGkT,GAAGmX,MAEnC,CAACU,kBAAmBA,EACzBG,mBAAoB0B,EACpB5c,YAAaA,EACbid,aAAc,CAACnf,IAAKqd,EAAa,GAAIxd,IAAKwd,EAAa,MAcrD+B,GAAmCvG,IACvC,IAkBIwG,EAASC,EAASC,EAASC,EAASzE,EACpC0E,EAAUC,EAAUC,EAAUC,EAAUC,EAAKC,EAAUC,EAnBvDrD,EAAQ7D,EAAI6D,MACdxP,EAAgB2L,EAAI3L,cACpBsM,EAAQX,EAAIW,MACZqD,EAAkBhE,EAAIgE,gBACtBmD,EAAcnH,EAAImH,YAClB9tB,EAAI2mB,EAAI3mB,EAEN+tB,EAAmBzG,EAAMjqB,OAAO,KACjCyB,KAAK,QAAS,qBAEjBivB,EAAiB1wB,OAAO,QACrBc,KAAK,UACLW,KAAK,QAAS,mBACdA,KAAK,IAAK0rB,EAAQ,IAAM9K,GAAmB,GAC3C5gB,KAAK,IAAKyhB,GAAevF,EAAgB,GAAG,GAAGvM,EAAuB,EAAnBiR,IACnD/f,MAAM,oBAAqB,YAC3BA,MAAM,cAAe,OAKpBmuB,GACFX,EAAU3C,EACV4C,EAAU7M,GAAevF,EAAgB,GAAG,GAAGvM,EAAI8P,GAC9B,EAAnBmB,GACF2N,EAAU7C,EAAQ,EAClB8C,EAAU/M,GAAevF,EAAgB,GAAG,GAAGvM,EAAI8P,GAC9B,EAAnBmB,GAAuB,EACzBmJ,EAAK,KAYLsE,EAAU3C,EAAQ,EAAI9K,GAAmB,EACzC0N,EAAU7M,GAAevF,EAAgB,GAAG,GAAGvM,EAAI8P,GAAa,EAChE8O,EAAU7C,EAAQ,EAAI9K,GAAmB,EAAI,EAC7C4N,EAAU/M,GAAevF,EAAgB,GAAG,GAAGvM,EAAI8P,GAAa,GAChEsK,EAAK,GAEL0E,EAAW/C,EAAQ,EAAI9K,GAAmB,EAC1C8N,EAAWjN,GAAevF,EAAgB,GAAG,GAAGvM,EAAI,EACpDmf,EAAWpD,EAA2B,EAAnB9K,GAAuB,EAC1CmO,EAAWtN,GAAevF,EAAgB,GAAG,GAAGvM,EAAuB,EAAnBiR,GAAuB,EAC3E+N,EAAWjD,EAA2B,EAAnB9K,GAAuB,GAC1CgO,EAAWnN,GAAevF,EAAgB,GAAG,GAAGvM,EAAI,GACpDkf,EAAM,IAGR,IAAIK,EAAYD,EAAiB1wB,OAAO,QACrCyB,KAAK,IAAKquB,GACVruB,KAAK,IAAKsuB,GACVtuB,KAAK,QAAS,mBACda,MAAM,oBAAqB,WAC3BA,MAAM,cAAemuB,EAAc,QAAU,OAEhDE,EAAU3wB,OAAO,SACdsC,MAAM,oBAAqB,WAC3BxB,KAAK,mCAER6vB,EAAU3wB,OAAO,SACdyB,KAAK,IAAKquB,GACVruB,KAAK,KAAM,OACXa,MAAM,oBAAqB,WAC3BxB,KAAK,8BAQR6vB,EAAU3wB,OAAO,SACdyB,KAAK,IAAKquB,GACVruB,KAAK,KAAM,SACXa,MAAM,oBAAqB,WAC3BA,MAAM,cAAe,KACrBxB,KAAK,UAER6vB,EAAU3wB,OAAO,SACdsC,MAAM,oBAAqB,WAC3BA,MAAM,cAAe,KACrBxB,KAAK,iBAERqqB,GAAU,CACRlB,MAAOA,EACPqB,GAAI6B,EAAQ,EACZ5B,GAAIrI,GAAevF,EAAgB,GAAG,GAAGvM,EAAI8P,GAAa,EAC1DkK,GAAI4E,EACJ3E,GAAI4E,EACJxE,OAAQgF,EACRjF,GAAIA,EACJE,OAAQ,WAIV,IAAIkF,EAAaF,EAAiB1wB,OAAO,QACtCyB,KAAK,IAAKyuB,GACVzuB,KAAK,IAAK0uB,GACV1uB,KAAK,QAAS,mBACda,MAAM,oBAAqB,WAC3BA,MAAM,cAAemuB,EAAc,QAAU,OAEhDG,EAAW5wB,OAAO,SACfsC,MAAM,oBAAqB,WAC3BxB,KAAK,qBAER8vB,EAAW5wB,OAAO,SACfyB,KAAK,IAAKquB,GACVruB,KAAK,KAAM,OACXa,MAAM,oBAAqB,WAC3BxB,KAAK,oCAER8vB,EAAW5wB,OAAO,SACfyB,KAAK,IAAKquB,GACVruB,KAAK,KAAM,SACXa,MAAM,cAAe,KACrBA,MAAM,oBAAqB,WAC3BxB,KAAK,eAER8vB,EAAW5wB,OAAO,SACfsC,MAAM,cAAe,KACrBA,MAAM,oBAAqB,WAC3BxB,KAAK,iBAERqqB,GAAU,CACRlB,MAAOA,EACPqB,GAAIiF,EACJhF,GAAIiF,EACJpF,GAAIgF,EACJ/E,GAAIgF,EACJ7E,GAAI8E,EACJ7E,OAAQgF,EACR/E,OAAQ,WAKV,IAAImF,EAAiB5G,EAAMjqB,OAAO,KAC/ByB,KAAK,QAAS,mBAEbmsB,EAAiBT,EAAQ,EAAIjM,GAAa,IAAMoM,EAChDwD,EAAQlD,EACRmD,EAAQ7N,GAAevF,GAAehb,GAAGyO,EAAI8P,GAC1B,EAAnBmB,GAGM,IAAN1f,IAAWmuB,GAAS,IAGd,IAANnuB,IACFmuB,EAAQlD,EAAiBzM,GAAmB,GAC5C4P,GAAS,IAAM7P,IAGjB,IAAI8P,EAAWH,EAAe7wB,OAAO,QAClCyB,KAAK,IAAKqvB,GACVrvB,KAAK,IAAKsvB,GACVtvB,KAAK,QAAS,mBACda,MAAM,oBAAqB,WAC3BA,MAAM,cAAe,SAExB0uB,EAAShxB,OAAO,SACbsC,MAAM,oBAAqB,WAC3BxB,KAAK,2BAERkwB,EAAShxB,OAAO,SACbyB,KAAK,IAAKqvB,GACVrvB,KAAK,KAAM,OACXa,MAAM,oBAAqB,WAC3BxB,KAAK,6BAGNqqB,GADQ,IAANxoB,EACQ,CACRsnB,MAAOA,EACPmB,GAAIwC,EAAiB,GACrBvC,GAAInI,GAAevF,GAAehb,GAAGyO,GAAK8P,GAAa,EAAuB,EAAnBmB,IAC3DiJ,GAAIsC,EAAiB,EAAIzM,GAAmB,EAC5CoK,GAAIrI,GAAevF,GAAehb,GAAGyO,EAAI8P,GAAa,EAAIC,GAC1DqK,GAAI,GACJC,OAAO,EACPC,OAAQ,cAGA,CACRzB,MAAOA,EACPmB,GAAIwC,EAAiB,GACrBvC,GAAInI,GAAevF,GAAehb,GAAGyO,EAAI8P,GAAgC,EAAnBmB,GACtDiJ,GAAIsC,EAAiB,EAAIzM,GAAmB,EAC5CoK,GAAIrI,GAAevF,GAAehb,GAAGyO,EAAI8P,GAAa,EAAIC,GAC1DqK,GAAI,GACJC,OAAO,EACPC,OAAQ,eAKZ,IAAIuF,EAAY/N,GAAevF,GAAehb,GAAGyO,EACvC,IAANzO,EACFsuB,GAAa/P,GAAa,EAAImB,GAE9B4O,GAAa,EAAI5O,GAAmB,EAEtCwO,EAAe7wB,OAAO,QACnByB,KAAK,QAAS,mBACdA,KAAK,IAAKmsB,EAAiBzM,IAC3B1f,KAAK,IAAKwvB,GACV3uB,MAAM,cAAe,UACrBA,MAAM,oBAA2B,IAANK,EAAU,UAAY,YACjD7B,KAAK,SAcJowB,GAAoB,CAACvT,EAAehb,EAAGwqB,EAC3CG,EAAiB7f,EAAS8f,EAC1BC,EAAmCC,KAEnC,IAAI0D,EAAa3b,GAAI9S,OAAO,gBAE5B,IAAK,IAAIgT,EAAI,EAAGA,EAAI2H,GAAIM,EAAgB,GAAG/a,OAAQ8S,IACjDyb,EAAWnxB,OAAO,QACfyB,KAAK,QAAS,sBACdA,KAAK,KAAM,sBAAsBiU,GACjCjU,KAAK,IAAK0rB,EAAQ1f,GAClBhM,KAAK,IAAKyhB,GAAevF,EAAgB,GAAGjI,GAAGtE,EAAI3D,GACnDhM,KAAK,QAAU,EAAIyf,GAAaoM,EAAmB,EAAI7f,GACvDhM,KAAK,SAAUyf,GAAa,EAAIzT,GAChChM,KAAK,KAAM,IACXa,MAAM,OAAQ,4BACdA,MAAM,UAAW,GAGpBkT,GAAI9S,OAAO,WAAWib,EAAgB,UAAUjI,KAC7CpT,MAAM,iBAAkB,OACxBA,MAAM,SAAU,WAChBgQ,GAAG,YAAaib,GAChBjb,GAAG,aAAckb,GACjBlb,GAAG,QAAS,CAACrL,EAAGmnB,EAAIvY,IAAM4X,EAAwBxmB,EAAGmnB,EAAIvY,EACxDlT,EAAGgb,IAGTwT,EAAWxB,SAWAyB,GAAiB,CAAC5M,EAAcrT,EAAGC,EAAGlF,EAAOD,KACpDuJ,GAAI9S,OAAO,+BAA+BxB,SAC5CsU,GAAIxV,OAAO,KAAKyB,KAAK,QAAS,8BAGD+T,GAAI9S,OAAO,+BAEC1C,OAAO,QAC/CyB,KAAK,QAAS,WACda,MAAM,OAAQ,QAAQkiB,MACtBliB,MAAM,SAAU,QAChBb,KAAK,QAASyK,GACdzK,KAAK,SAAUwK,GACfxK,KAAK,IAAK0P,GACV1P,KAAK,IAAK2P,GACV9O,MAAM,UAAW,GAERoU,WAAW,QACpBC,SAAS,KACT0N,KAAK3S,GAAGmY,gBACRvnB,MAAM,UAAW,IAShB+uB,GAAsB,CAAC1T,EAAehb,KAG1C,IAAI2uB,EAAWlO,GAAeD,IAAoBxF,EAAgB,GAC9D4T,EAAWnO,GAAeD,IAAoBxF,GAC9CjN,EAAQZ,KAAKQ,IAAIghB,EAAUC,GAE3BD,EAAWC,GAEb/b,GAAI9S,OAAO,WAAWib,UAAsBhb,KACzCD,OAAO,oBACPgjB,KAAK,CAACze,EAAG4O,EAAGlT,IAAM4gB,GAAWtc,EAAG4O,EAAGlT,EAAG+N,IAIzCkb,GAAa,CAACjO,EAAehb,GAC7B0I,GAAgBd,IAAIqhB,KAEX0F,EAAWC,IAEpB/b,GAAI9S,OAAO,sBAAqBib,EAAgB,IAC7C1L,UAAU,oBACVyT,KAAK,CAACze,EAAG4O,EAAGlT,IAAM4gB,GAAWtc,EAAG4O,EAAGlT,EAAG+N,IAIzCkb,GAAa,CAACjO,EAAgB,OAAGva,GACjCiI,GAAgBd,IAAIqhB,KAKtB,IAAInb,EAAM4S,GAAe1F,EAAgB,GAAGlN,IAC1CH,EAAM+S,GAAe1F,EAAgB,GAAGrN,IAGtCoF,EAAI2H,GAAIM,GAAehb,GAC3B,IAAK,IAAI+D,EAAI,EAAGA,EAAIgP,EAAEtH,OAAOxL,OAAQ8D,IACnC,IAAK,IAAI9G,EAAI,EAAGA,EAAI8V,EAAEtH,OAAO,GAAGxL,OAAQhD,IAClC8V,EAAEtH,OAAO1H,GAAG9G,GAAK6Q,IAAOA,EAAMiF,EAAEtH,OAAO1H,GAAG9G,IAC1C8V,EAAEtH,OAAO1H,GAAG9G,GAAK0Q,IAAOA,EAAMoF,EAAEtH,OAAO1H,GAAG9G,IAIlD,MAAO,CAAC8Q,MAAOA,EAAOyZ,OAAQ,CAAC1Z,IAAKA,EAAKH,IAAKA,KAcnCkhB,GAAY,CAAC7T,EAAe1W,EAAGtE,EAAGuJ,EAAOD,EACpDshB,EAAkCC,EAClCC,KAEA,IAAIjT,EAAU0I,GAAevF,EAAgB,GAAG,GAAGxM,EAAI,EAAI+P,GACzD,EAAI+B,GAAkBX,GAA8B,EAAnBnB,GAC/BmM,EAAmBrK,GAAkBX,GAAW,EAAK,EACrD6K,EAAQjK,GAAevF,EAAgB,GAAG,GAAGxM,EAGjD2a,GAAoC,SAAItR,EAAU0G,GAClDrV,GAA+BtB,IAAIuhB,IAGnCtW,GAAI9S,OAAO,gBACRJ,MAAM,aAAc,UAGvB+mB,GAAW,CAACE,WAAY5L,EAAenD,QAASA,EAASgP,SAAS,EAChEjQ,MAAO,EAAGkQ,QAAS,IAAMC,aAAc/mB,IAGzC,IAAI0qB,EAAa7S,EAAU0G,GAAa+B,GAAkBX,GACtDmP,GAAYvlB,EAAQmhB,EAAa,GAAKnM,IAAc,GAGxD,IAAK,IAAIve,EAAIgb,EAAgB,EAAGhb,EAAIye,GAAWze,IAAK,CAElD0mB,GAAW,CAACE,WAAY5mB,EAAG6X,QADhB6S,GAAc1qB,GAAKgb,EAAgB,KAAOuD,GAAauQ,GACxBjI,SAAS,EAAMjQ,MAAO,IAOlEuQ,GAAmB,mBAHP,CAAC,CAACtQ,OAAQ,KAAMqK,MAAO,qBAAsB4F,QAAS,KAClE,CAACjQ,OAAQ,MAAOqK,MAAO,qBAAsB4F,QAAS,KACtD,CAACjQ,OAAQ,OAAQqK,MAAO,qBAAsB4F,QAAS,KAGvD2H,GAAe,mBAAoB/D,EAAa7K,GAAoB,EACpE,EAAGtW,EAAQmhB,EAAa7K,GACxBvW,EAASiW,GAAY1J,IAAM0J,GAAYC,QAGvC,IAAIuL,kBAACA,EAAiBG,mBAAEA,EAAkBlb,YAAEA,EAAWid,aAAEA,GACzD1C,GAAsBvP,EAAewP,EAAO3S,EAAS6S,EACnDC,EAAiBrmB,EAAGtE,EAAG4qB,EACvBC,EAAmCC,GACrCyD,GAAkBvT,EAAehb,EAAGwqB,EAAOG,EAAiB,EAC1DC,EAAkCC,EAClCC,GAIF,IAAIhd,EAAMpD,EAAAA,EAAUiD,GAAOjD,EAAAA,EACvBqI,EAAI2H,GAAIM,GAAehb,GAC3B,IAAK,IAAI+D,EAAI,EAAGA,EAAIgP,EAAEtH,OAAOxL,OAAQ8D,IACrC,IAAK,IAAI9G,EAAI,EAAGA,EAAI8V,EAAEtH,OAAO,GAAGxL,OAAQhD,IAClC8V,EAAEtH,OAAO1H,GAAG9G,GAAK6Q,IAAOA,EAAMiF,EAAEtH,OAAO1H,GAAG9G,IAC1C8V,EAAEtH,OAAO1H,GAAG9G,GAAK0Q,IAAOA,EAAMoF,EAAEtH,OAAO1H,GAAG9G,IAK3CkQ,KAAKW,IAAIA,EAAKod,EAAmBpd,KACjCX,KAAKQ,IAAIA,EAAKud,EAAmBvd,KAFtC,IAMIohB,EAA8Blc,GAAIxV,OAAO,KAC5CyB,KAAK,QAAS,iCACda,MAAM,UAAW,GAElButB,GAAgC,CAC9B1C,MAAOA,EACPxP,cAAeA,EACfsM,MAAOyH,EACPpE,gBAAiBA,EACjBmD,aAAa,EACb9tB,EAAGA,IAGOygB,GAAetc,MAAM6W,GAEjCuM,GAA4B,CAC1BlE,aAAc,EACdrI,cAAeA,EACfjN,MAAO,EACPuZ,MAAOyD,EACPxhB,MAAO,EAAIgV,GAAaoM,EACxBlD,SAAS,EACTjZ,EAAGgc,EACH/b,EAAG8Q,GAAY1J,OAAMwK,GAAyBA,GAC/B,GAAb9B,GAAkB,KA+BtB1L,GAAIvD,UAAU,yDACXyE,aACA6C,MAAM,KACN5C,SAAS,KACT0N,KAAK3S,GAAGmY,gBACRvnB,MAAM,UAAW,IAcTqvB,GAAY,CAAChU,EAAe1W,EAAGtE,EAAGuJ,EAAOD,EACpDshB,EAAkCC,EAClCC,KACA,IAAIjT,EAAU0I,GAAevF,EAAgB,GAAG,GAAGxM,EAAI,EAAI+P,GACzD,EAAI+B,GAAkBX,GAA8B,EAAnBnB,GAC/BmM,EAAmBrK,GAAkBX,GAAW,EAAK,EAGzDwJ,GAAoC,SAAItR,EAAU0G,GAClDrV,GAA+BtB,IAAIuhB,IAGnC,IAAIpb,MAACA,EAAKyZ,OAAEA,GAAUkH,GAAoB1T,EAAehb,GAGzD6S,GAAI9S,OAAO,gBACRJ,MAAM,aAAc,UAGvB+mB,GAAW,CAACE,WAAY5L,EAAenD,QAASA,EAASgP,SAAS,EAChEjQ,MAAO,EAAGkQ,QAAS,IAAMC,aAAc/mB,IAGzC,IAAI0qB,EAAa7S,EAAU0G,GAAa+B,GAAkBX,GACtDmP,GAAYvlB,EAAQmhB,EAAa,EAAInM,IAAc,EAGvD,IAAK,IAAIve,EAAIgb,EAAgB,EAAGhb,EAAIye,GAAWze,IAAK,CAElD0mB,GAAW,CAACE,WAAY5mB,EAAG6X,QADhB6S,GAAc1qB,GAAKgb,EAAgB,KAAOuD,GAAauQ,GACxBjI,SAAS,EAAMjQ,MAAO,IAIlE,IAAIyQ,EAAQ,CAAC,CAACxQ,OAAQ,KAAMqK,MAAO,qBAAsB4F,QAAS,KAChE,CAACjQ,OAAQ,MAAOqK,MAAO,qBAAsB4F,QAAS,KACtD,CAACjQ,OAAQ,OAAQqK,MAAO,qBAAsB4F,QAAS,IACzDK,GAAmB,yBAA0BE,GAK7CA,EAAQ,CAAC,CAACxQ,OAAQ,KAAMqK,MAAO,qBAAsB4F,QADhC,KAAQ,IAAO,OAFd,EAAIvI,GAAa+B,GAAkBX,KACtD,EAAIpB,GAA+B,EAAlBoM,KAGlB,CAAC9T,OAAQ,OAAQqK,MAAO,qBAAsB4F,QAAS,MACzDK,GAAmB,wBAAyBE,GAE5CoH,GAAe,yBAA0B/D,EAAa7K,GAAoB,EACxE,EAAGtW,EAAQmhB,EAAa7K,GACxBvW,EAASiW,GAAY1J,IAAM0J,GAAYC,QAEzCiP,GAAe,wBAAyBlO,GAAe,GAAG,GAAG/R,EAAIqR,GAAoB,EACnF,EAAgB,EAAbtB,GAAiB+B,GAAkBX,GAAWE,GACjDvW,EAASiW,GAAY1J,IAAM0J,GAAYC,QAGzC,IAAIgL,EAAQjK,GAAevF,EAAgB,GAAG,GAAGxM,GAC7Cuc,kBAACA,EAAiBG,mBAAEA,EAAkBlb,YAAEA,EAAWid,aAAEA,GACvD1C,GAAsBvP,EAAewP,EAAO3S,EAAS6S,EACnDC,EAAiBrmB,EAAGtE,EAAG4qB,EACvBC,EAAmCC,GACvCyD,GAAkBvT,EAAehb,EAAGwqB,EAAOG,EAAiB,EAC1DC,EAAkCC,EAClCC,GAIF,IAAImE,EAAc,CAChBnhB,IAAKX,KAAKW,IAAI0Z,EAAO1Z,IAAKod,EAAmBpd,KAC7CH,IAAKR,KAAKQ,IAAI6Z,EAAO7Z,IAAKud,EAAmBvd,MAI3CohB,EAA8Blc,GAAIxV,OAAO,KAC1CyB,KAAK,QAAS,iCACda,MAAM,UAAW,GAEpButB,GAAgC,CAC9B1C,MAAOA,EACPxP,cAAeA,EACfsM,MAAOyH,EACPpE,gBAAiBA,EACjB3qB,EAAGA,IAGLunB,GAA4B,CAC1BlE,aAAc,EACdrI,cAAeA,EACfjN,MAAOA,EACPyZ,OAAQyH,EACR3H,MAAOyD,EACPxhB,MAAO,EAAIgV,GAAaoM,EACxBnc,EAAGgc,EACH/b,EAAG8Q,GAAY1J,OAAMwK,GAAyBA,GAC/B,GAAb9B,KAGJgJ,GAA4B,CAC1BlE,aAAc,EACdrI,cAAeA,EACfjN,MAAOiC,EACPwX,OAAQyF,EACR3F,MAAOyD,EACPxhB,MAAO,EAAIgV,GAAaoM,EACxBnc,EAAGqJ,EAAU0G,IAAc,EAAIA,GAAaoM,GAC5Clc,EAAG8Q,GAAY1J,OAAMwK,GAAyBA,GAC/B,GAAb9B,GACFmJ,sBAAuB,sBACvB5Y,WAAYkQ,GAAiBvF,OAC7BkO,YAAa,KAIf9U,GAAIvD,UAAU,yDACXyE,aACA6C,MAAM,KACN5C,SAAS,KACT0N,KAAK3S,GAAGmY,gBACRvnB,MAAM,UAAW,IAcTuvB,GAAY,CAAClU,EAAe1W,EAAGtE,EAAGuJ,EAAOD,EACpDshB,EAAkCC,EAClCC,KAEA,IAAIjT,EAAU0I,GAAevF,GAAe,GAAGxM,EAC3Cgc,EAAQ3S,GAAW,EAAI0G,GACzB,EAAI+B,GAAkBX,GAA8B,EAAnBnB,IAC/BmM,EAAmBrK,GAAkBX,GAAW,EAAK,EAGzDwJ,GAAoC,SAAItR,EAAU0G,GAClDrV,GAA+BtB,IAAIuhB,IAGnCtW,GAAI9S,OAAO,gBACRJ,MAAM,aAAc,UAGvB,IAAIoO,MAACA,EAAKyZ,OAAEA,GAAUkH,GAAoB1T,EAAehb,GAGzD0mB,GAAW,CAACE,WAAY5L,EAAgB,EAAGnD,QAAS2S,EAClD3D,SAAS,EAAMjQ,MAAO,IAExB8P,GAAW,CAACE,WAAY5L,EACtBnD,QAASA,EAASgP,SAAS,EAC3BjQ,MAAO,EAAGkQ,QAAS,IAAMC,aAAc/mB,IAGzC,IAAImvB,EAAU3E,EAAQlK,GAClB8O,GAAWD,EAAU5O,GAAe,GAAG,GAAG/R,EAAI,EAAI+P,IAAc,EAChEmM,EAAanK,GAAevF,GAAe,GAAGxM,EAChD+P,GAAa+B,GAGf,IAAK,IAAItgB,EAAI,EAAGA,EAAIgb,EAAgB,EAAGhb,IAAK,CAC1C,IAAIuT,EAAOgN,GAAe,GAAG,GAAG/R,EAAIxO,GAAKue,GAAa6Q,GACtD1I,GAAW,CAACE,WAAY5mB,EAAG6X,QAAStE,EAAMsT,SAAS,EAAMjQ,MAAO,IAIlE,IAAIyQ,EAAQ,CAAC,CAACxQ,OAAQ,KAAMqK,MAAO,qBAAsB4F,QAAS,GAChE,CAACjQ,OAAQ,MAAOqK,MAAO,qBAAsB4F,QAAS,IACtD,CAACjQ,OAAQ,OAAQqK,MAAO,qBAAsB4F,QAAS,MACzDK,GAAmB,wBAAyBE,GAE5CA,EAAQ,CAAC,CAACxQ,OAAQ,KAAMqK,MAAO,qBAAsB4F,QAAS,KAC5D,CAACjQ,OAAQ,MAAOqK,MAAO,qBAAsB4F,QAAS,KACtD,CAACjQ,OAAQ,OAAQqK,MAAO,qBAAsB4F,QAAS,IACzDK,GAAmB,yBAA0BE,GAE7CoH,GAAe,wBAAyBlO,GAAe,GAAG,GAAG/R,EAAIqR,GAAoB,EACnF,EAAGsP,EAAU5O,GAAe,GAAG,GAAG/R,EAAIqR,GACtCvW,EAASiW,GAAY1J,IAAM0J,GAAYC,QAEzCiP,GAAe,yBAA0B/D,EAAa7K,GAAoB,EACxE,EAAGtW,EAAQmhB,EAAa7K,GACxBvW,EAASiW,GAAY1J,IAAM0J,GAAYC,QAGzC,IAAIuL,kBAACA,EAAiBG,mBAAEA,EAAkBlb,YAAEA,EAAWid,aAAEA,GACvD1C,GAAsBvP,EAAewP,EACnCjK,GAAevF,GAAe,GAAGxM,EAAGkc,EAAYC,EAChDrmB,EAAGtE,EAAG4qB,EACNC,EAAmCC,GACvCyD,GAAkBvT,EAAehb,EAAGwqB,EAAOG,EAAiB,EAC1DC,EAAkCC,EAClCC,GAIF,IAAImE,EAAc,CAChBnhB,IAAKX,KAAKW,IAAI0Z,EAAO1Z,IAAKod,EAAmBpd,KAC7CH,IAAKR,KAAKQ,IAAI6Z,EAAO7Z,IAAKud,EAAmBvd,MAI3CohB,EAA8Blc,GAAIxV,OAAO,KAC1CyB,KAAK,QAAS,iCACda,MAAM,UAAW,GAEpButB,GAAgC,CAC9B1C,MAAOA,EACPxP,cAAeA,EACfsM,MAAOyH,EACPpE,gBAAiBA,EACjB3qB,EAAGA,IAGLunB,GAA4B,CAC1BlE,aAAc,EACdrI,cAAeA,EACfjN,MAAOA,EACPuZ,MAAOyD,EACPxhB,MAAO,EAAIgV,GAAaoM,EACxBnD,OAAQyH,EACRzgB,EAAGgc,EACH/b,EAAG8Q,GAAY1J,OAAMwK,GAAyBA,GAC/B,GAAb9B,KAGJgJ,GAA4B,CAC1BlE,aAAc,EACdrI,cAAeA,EACfjN,MAAOiC,EACPwX,OAAQyF,EACR3F,MAAOyD,EACPxhB,MAAO,EAAIgV,GAAaoM,EACxBnc,EAAGqJ,EAAU0G,IAAc,EAAIA,GAAaoM,GAC5Clc,EAAG8Q,GAAY1J,OAAMwK,GAAyBA,GAC/B,GAAb9B,GACFmJ,sBAAuB,sBACvB5Y,WAAYkQ,GAAiBvF,OAC7BkO,YAAa,KAIf9U,GAAIvD,UAAU,yDACXyE,aACA6C,MAAM,KACN5C,SAAS,KACT0N,KAAK3S,GAAGmY,gBACRvnB,MAAM,UAAW,IAcT0vB,GAAY,CAACrU,EAAe1W,EAAGtE,EAAGuJ,EAAOD,EACpDshB,EAAkCC,EAClCC,KACA,IAAIjT,EAAU0I,GAAevF,GAAe,GAAGxM,EAC3Cgc,EAAQ3S,GAAW,EAAI0G,GACzB,EAAI+B,GAAkBX,GAA8B,EAAnBnB,IAC/BmM,EAAmBrK,GAAkBX,GAAW,EAAK,EAGzDwJ,GAAoC,SAAIqB,EACxCthB,GAA+BtB,IAAIuhB,IAGnCtW,GAAI9S,OAAO,gBACRJ,MAAM,aAAc,UAGvB,IAAIoO,MAACA,EAAKyZ,OAAEA,GAAUkH,GAAoB1T,EAAehb,GAGzD0mB,GAAW,CAACE,WAAY5L,EAAgB,EAAGnD,QAAS2S,EAClD3D,SAAS,EAAMjQ,MAAO,IAExB8P,GAAW,CAACE,WAAY5L,EACtBnD,QAASA,EAASgP,SAAS,EAC3BjQ,MAAO,EAAGkQ,QAAS,IAAMC,aAAc/mB,IAGzC,IAAImvB,EAAU3E,EAAQlK,GAClB8O,GAAWD,EAAU5O,GAAe,GAAG,GAAG/R,EAAI,EAAI+P,IAAc,EAChEmM,EAAa7S,EAAU0G,GAAa+B,GAGxC,IAAK,IAAItgB,EAAI,EAAGA,EAAIgb,EAAgB,EAAGhb,IAAK,CAC1C,IAAIuT,EAAOgN,GAAe,GAAG,GAAG/R,EAAIxO,GAAKue,GAAa6Q,GACtD1I,GAAW,CAACE,WAAY5mB,EAAG6X,QAAStE,EAAMsT,SAAS,EAAMjQ,MAAO,IAIlE,IAAIyQ,EAAQ,CAAC,CAACxQ,OAAQ,KAAMqK,MAAO,qBAAsB4F,QAAS,GAChE,CAACjQ,OAAQ,MAAOqK,MAAO,qBAAsB4F,QAAS,KACtD,CAACjQ,OAAQ,OAAQqK,MAAO,qBAAsB4F,QAAS,MACzDK,GAAmB,wBAAyBE,GAE5CA,EAAQ,CAAC,CAACxQ,OAAQ,KAAMqK,MAAO,qBAAsB4F,QAAS,KAC5D,CAACjQ,OAAQ,MAAOqK,MAAO,qBAAsB4F,QAAS,KACtD,CAACjQ,OAAQ,OAAQqK,MAAO,qBAAsB4F,QAAS,IACzDK,GAAmB,yBAA0BE,GAE7CoH,GAAe,wBAAyBlO,GAAe,GAAG,GAAG/R,EAAIqR,GAAoB,EACnF,EAAGsP,EAAU5O,GAAe,GAAG,GAAG/R,EAAIqR,GACtCvW,EAASiW,GAAY1J,IAAM0J,GAAYC,QAEzCiP,GAAe,yBAA0B/D,EAAa7K,GAAoB,EACxE,EAAGtW,EAAQmhB,EAAa7K,GACxBvW,EAASiW,GAAY1J,IAAM0J,GAAYC,QAGzC,IAAIuL,kBAACA,EAAiBG,mBAAEA,EAAkBlb,YAAEA,EAAWid,aAAEA,GACvD1C,GAAsBvP,EAAewP,EACnCjK,GAAevF,GAAe,GAAGxM,EAAGkc,EAAYC,EAChDrmB,EAAGtE,EAAG4qB,EACNC,EAAmCC,GACvCyD,GAAkBvT,EAAehb,EAAGwqB,EAAOG,EAAiB,EAC1DC,EAAkCC,EAClCC,GAIF,IAAImE,EAAc,CAChBnhB,IAAKX,KAAKW,IAAI0Z,EAAO1Z,IAAKod,EAAmBpd,KAC7CH,IAAKR,KAAKQ,IAAI6Z,EAAO7Z,IAAKud,EAAmBvd,MAI3CohB,EAA8Blc,GAAIxV,OAAO,KAC1CyB,KAAK,QAAS,iCACda,MAAM,UAAW,GAEpButB,GAAgC,CAC9B1C,MAAOA,EACPxP,cAAeA,EACfsM,MAAOyH,EACPpE,gBAAiBA,EACjB3qB,EAAGA,IAGLunB,GAA4B,CAC1BlE,aAAc,EACdrI,cAAeA,EACfjN,MAAOA,EACPuZ,MAAOyD,EACPvD,OAAQyH,EACR1lB,MAAO,EAAIgV,GAAaoM,EACxBnc,EAAGgc,EACH/b,EAAG8Q,GAAY1J,OAAMwK,GAAyBA,GAC/B,GAAb9B,KAGJgJ,GAA4B,CAC1BlE,aAAc,EACdrI,cAAeA,EACfjN,MAAOiC,EACPwX,OAAQyF,EACR3F,MAAOyD,EACPxhB,MAAO,EAAIgV,GAAaoM,EACxBnc,EAAGqJ,EAAU0G,IAAc,EAAIA,GAAaoM,GAC5Clc,EAAG8Q,GAAY1J,OAAMwK,GAAyBA,GAC/B,GAAb9B,GACFmJ,sBAAuB,sBACvB5Y,WAAYkQ,GAAiBvF,OAC7BkO,YAAa,KAIf9U,GAAIvD,UAAU,yDACXyE,aACA6C,MAAM,KACN5C,SAAS,KACT0N,KAAK3S,GAAGmY,gBACRvnB,MAAM,UAAW,IC1qDhBqf,GAAmBV,GAAeU,iBAClCT,GAAaD,GAAeC,WAC5BC,GAAmBF,GAAeE,iBAClCO,GAAoBT,GAAeS,kBACnCW,GAAmBpB,GAAeoB,iBAClCH,GAAcjB,GAAeiB,YAC7BI,GAAWrB,GAAeqB,SAC1B7e,GAAYwd,GAAewB,WAC3BhN,GAAW/D,GAAGiE,OAAO,OAG3B,IAAIH,QAAMpS,EACV0H,GAASH,UAAWhJ,IAAU6T,GAAM7T,IAEpC,IAAIqhB,QAAkB5f,EACtB2H,GAAqBJ,UAAWhJ,IAAUqhB,GAAkBrhB,IAE5D,IAAIshB,QAAkB7f,EACtB4H,GAAqBL,UAAWhJ,IAAUshB,GAAkBthB,IAE5D,IAAI0b,QAAMja,EACVyH,GAASF,UAAWhJ,IAAU0b,GAAM1b,IAEpC,IAAIuhB,QAAiB9f,EACrB6H,GAAoBN,UAAWhJ,IAAUuhB,GAAiBvhB,IAE1D,IAAIwhB,QAAqB/f,EACzB8H,GAAwBP,UAAWhJ,IAAUwhB,GAAqBxhB,IAElE,IAAIyhB,QAAiBhgB,EACrB+H,GAAoBR,UAAWhJ,IAAUyhB,GAAiBzhB,IAE1D,IAAI0hB,QAAiBjgB,EACrBgI,GAAoBT,UAAWhJ,IAAU0hB,GAAiB1hB,IAE1D,IAAIswB,QAAc7uB,EAClBoI,GAAiBb,UAAWhJ,IAAUswB,GAActwB,IAEpD,IAAIuwB,QAAyB9uB,EAC7BsI,GAA4Bf,UAAWhJ,IAAUuwB,GAAyBvwB,IAE1E,IAAIwwB,QAAwB/uB,EAC5BqI,GAAuBd,UAAWhJ,IAAUwwB,GAAwBxwB,IAEpE,IAAIywB,QAAYhvB,EAChBuI,GAAehB,UAAWhJ,IAAUywB,GAAYzwB,IAEhD,IAAI2hB,QAAelgB,EACnBkI,GAAkBX,UAAWhJ,IAAU2hB,GAAe3hB,IAEtD,IAAI0wB,GAWY,GAXZA,GAYQ,GAGRjc,IAAiB,EACjBnB,GAAS,GACTqd,GAAuB,GAE3B,MAAMC,GAAa,CAACtrB,EAAGtE,EAAGkT,EAAG2c,EAAO7b,EAAU8b,KAC5C,IAAIC,EAAShhB,GAAGhP,OAAOmT,EAAElT,IAEzB,GAAK8vB,EAaE,CAEL,IAAIE,GAAmBD,EAAOjxB,KAAK,aAC/BmxB,GAAmBF,EAAOjxB,KAAK,aAEnCixB,EAAOhc,WAAW,WACfC,SAASA,GACT0N,KAAK3S,GAAGmY,gBACRpoB,KAAK,YAAa,aAAakxB,MAAoBC,UArB1C,CACZ,IAAIC,EAAoBH,EAAOjxB,KAAK,aAChCkxB,GAAmBE,EAAkBrgB,QAAQ,mBAAoB,MACjEogB,GAAmBC,EAAkBrgB,QAAQ,mBAAoB,MAErEkgB,EAAOhc,WAAW,WACfC,SAASA,GACT0N,KAAK3S,GAAGmY,gBACRpoB,KAAK,YAAa,aAAakxB,EAAkBH,MAAUI,MAG9DF,EAAOjxB,KAAK,YAAakxB,GACzBD,EAAOjxB,KAAK,YAAamxB,KAavBE,GAA+BnwB,IAEnCgJ,GAAepB,IAAI,CACjBqM,MAAM,EACN9V,KAAM,UAAU2U,GAASR,GAAOtS,MAIlCwvB,GAAsB/c,WAAazS,EACnC8I,GAAuBlB,IAAI4nB,IAE3B,IAAIY,EAAavd,GAAI9S,OAAO,gBACxBswB,EAAkBxd,GAAI9S,OAAO,eAC7BgrB,EAAoBlY,GAAI9S,OAAO,uBAGnCqwB,EAAWrwB,OAAO,iBAAiBC,GAChCL,MAAM,eAAgB,GAGzBorB,EAAkBhrB,OAAO,sBAAsBC,GAC5CL,MAAM,UAAW,GACjBI,OAAO,UACPJ,MAAM,OAAQ2E,GAAKA,EAAEa,MAGxBkrB,EAAgBtwB,OAAO,gBAAgBC,GAAKwrB,QAG5C6E,EAAgB/gB,UAAU,0BAA0BtP,GACjDL,MAAM,eAAgB,IACtBA,MAAM,SAAU,WAEnB0wB,EAAgB/gB,UAAU,iBAAiBtP,GACxCL,MAAM,eAAgB,GACtBA,MAAM,SAAU,WAEnB0wB,EAAgB/gB,UAAU,sBAAsBtP,GAC7CL,MAAM,eAAgB,GACtBA,MAAM,SAAU,WAEnBywB,EAAW9gB,UAAU,sBAAsBtP,GACxCL,MAAM,eAAgB,GACtBA,MAAM,SAAU,YAGf2wB,GAAgCtwB,IAKpCgJ,GAAepB,IAAI,CACjBqM,MAAM,EACN9V,KAAM,UAAU2U,GAASR,GAAOtS,MAIlCwvB,GAAsB/c,YAAc,EACpC3J,GAAuBlB,IAAI4nB,IAE3B,IAAIY,EAAavd,GAAI9S,OAAO,gBACxBswB,EAAkBxd,GAAI9S,OAAO,eAC7BgrB,EAAoBlY,GAAI9S,OAAO,uBAGnCqwB,EAAWrwB,OAAO,iBAAiBC,GAChCL,MAAM,eAAgB,GAGzBorB,EAAkBhrB,OAAO,sBAAsBC,GAC5CL,MAAM,UAAW,IAGpB0wB,EAAgB/gB,UAAU,0BAA0BtP,GACjDL,MAAM,eAAgB,IACtBA,MAAM,SAAU,WAEnB0wB,EAAgB/gB,UAAU,iBAAiBtP,GACxCL,MAAM,eAAgB,IACtBA,MAAM,SAAU,WAEnB0wB,EAAgB/gB,UAAU,sBAAsBtP,GAC7CL,MAAM,eAAgB,KACtBA,MAAM,SAAU,WAEnBywB,EAAW9gB,UAAU,sBAAsBtP,GACxCL,MAAM,eAAgB,KACtBA,MAAM,SAAU,YAIR4wB,GAAqC9xB,IAChD0xB,GAA4B1xB,EAAMkD,OAAOwR,OAI9Bqd,GAAsC/xB,IACjD6xB,GAA6B7xB,EAAMkD,OAAOwR,OAoZtCsd,GAAkB9J,IACtB,IAAI3L,EAAgB2L,EAAI3L,cACtB6U,EAAQlJ,EAAIkJ,MACZa,EAAU/J,EAAI+J,QACd7D,EAAUlG,EAAIkG,QACd8D,EAAUhK,EAAIgK,QACdvF,EAAUzE,EAAIyE,QACdwF,EAAiBjK,EAAIiK,eACrBpe,EAAYmU,EAAInU,UAChBwY,EAAiBrE,EAAIqE,eACrBC,EAAiBtE,EAAIsE,eACrB4F,EAAalK,EAAIkK,WACjBC,EAAcnK,EAAImK,YAClBC,EAAOpK,EAAIoK,KACXC,EAAUrK,EAAIqK,QACdC,EAAYtK,EAAIsK,UAChBC,EAAmBvK,EAAIuK,iBACvBC,EAAWxK,EAAIwK,SACfC,EAAezK,EAAIyK,aACnBC,EAAe1K,EAAI0K,aACnBvE,EAAcnG,EAAImG,YAClBwE,EAAe3K,EAAI2K,aAGjBC,EAAUX,EAAyB,EAARf,EAAY,EAC3C9gB,GAAGtQ,MAAMyrB,kBAGLoF,IACFvmB,GAA4BnB,KAAI,GA7ClCiL,GAAI9S,OAAO,gBAAgBwP,SAC3BsD,GAAI9S,OAAO,sBAAsBwP,SACjCsD,GAAIvD,UAAU,sBAAsBC,SAIpCsD,GAAI9S,OAAO,eACRuP,UAAU,gBACV3P,MAAM,UAAW,GAEpBmJ,GAAuBlB,IAAI,CACvBqM,MAAM,EACN3B,OAAQ,MAoCVvJ,GAA4BnB,KAAI,GAIlCiL,GAAI9S,OAAO,+BACRA,OAAO,gBACPgU,WAAW,WACX2N,KAAK3S,GAAGmY,gBACRlT,SAjBY,KAkBZlV,KAAK,YAAa,aAAawwB,GAAc,GAAKO,SAGrDhd,GAAIvD,UAAU,yBAAwB0L,EAAgB,IACnD+H,KAAK,CAACze,EAAGtE,EAAGkT,IAAM0c,GAAWtrB,EAAGtE,EAAGkT,EAAG2c,EAtB1B,IAsB2CP,KAE1Dzc,GAAI9S,OAAO,uBACRA,OAAO,gBACPgjB,KAAK,CAACze,EAAGtE,EAAGkT,IAAM0c,GAAWtrB,EAAGtE,EAAGkT,EAAG2c,EA1B1B,IA0B2CP,KAE1Dzc,GAAI9S,OAAO,uBACRA,OAAO,yBACPgjB,KAAK,CAACze,EAAGtE,EAAGkT,IAAM0c,GAAWtrB,EAAGtE,EAAGkT,EAAG2c,EA9B1B,IA8B2CP,KAG1D,IAAK,IAAItvB,EAAIgb,EAAgB,EAAGhb,GAAK,EAAGA,IAAK,CAC3C,IACIwxB,GADW3e,GAAI9S,OAAO,qBAAqBC,GACrBD,OAAO,SAASjB,KAAK,KAE/C4nB,GAAW,CACTE,WAAY5mB,EACZ6X,QAHSyX,GAAckC,EAAY3B,EAAQ2B,EAAY3B,EAIvDhJ,SAAS,EACTjQ,MAAO,EACPqQ,eAAgB,UAChBjT,SA3CW,MAgDfnB,GAAI9S,OAAO,oBACRgU,WAAW,WACXC,SAlDY,KAmDZrU,MAAM,UAAW2vB,GAAc,EAAI,GACnC3vB,MAAM,iBAAkB2vB,GAAc,MAAQ,QAGjD,IAAImC,EAAoB5e,GAAI9S,OAAO,uBAChCJ,MAAM,iBAAkB2vB,GAAc,MAAQ,QAE7CoC,EAA0BD,EAAkBniB,UAAU,8BACvDlR,KAAK,CAAC,IACNqR,QACApS,OAAO,KACPyB,KAAK,QAAS,6BAGbwwB,IACFmC,EAAkBniB,UAAU,8BAA8BC,SAG5DkiB,EAAkB1xB,OAAO,gBACtBgU,WAAW,WACXC,SAvEY,KAwEZrU,MAAM,UAAW2vB,GAAc,EAAI,GAEtCmC,EAAkB1xB,OAAO,oBACtBJ,MAAM,SAAU,QAChBA,MAAM,iBAAkB,OACxBgQ,GAAG,QAAS,KACXZ,GAAGtQ,MAAMyrB,kBAETjsB,SAASwX,cAAc,oBAAoBkc,eAAe,CACxDC,SAAU,aAGb7d,WAAW,WACXC,SArFY,KAsFZrU,MAAM,UAAW2vB,GAAc,EAAI,GACnC3f,GAAG,MAAO,KACT,IAAK2f,GAAa,CAEhB,IAAInB,EAAQgD,EAAWE,EAAe,EAClCjD,EAAQgD,EAAe,GAET,IAAd5e,IACF4b,EAAQgD,EAAe,IAGzB,IAAIjzB,EAAOuzB,EAAwBr0B,OAAO,QACvCyB,KAAK,IAAKqvB,GACVrvB,KAAK,IAAKsvB,GACVtvB,KAAK,QAAS,uCACda,MAAM,oBAAqB,YAC3BA,MAAM,cAAe,UACrBxB,KAAK,cAERA,EAAKd,OAAO,SACTyB,KAAK,KAAM,GACXa,MAAM,OAAQ,WACdxB,KAAK,UAERA,EAAKd,OAAO,SACTyB,KAAK,KAAM,GACXX,KAAK,SAERA,EAAKd,OAAO,SACTyB,KAAK,IAAKqvB,GACVrvB,KAAK,KAAM,SACXX,KAAK,uBAGNqqB,GADgB,IAAdhW,EACQ,CACR8U,MAAOoK,EACPjJ,GAAI0I,EAAWE,EAAe,EAAI,EAClC3I,GAAI0I,EAAe,GACnBzI,GAAIwI,EAAWE,EAAe,EAC9BzI,GAAIwF,EAAQ,GACZvF,GAAI,GACJC,OAAO,EACPC,OAAQ,cAGA,CACRzB,MAAOoK,EACPjJ,GAAI0I,EAAWE,EAAe,EAAI,EAClC3I,GAAI0I,EAAe,EACnBzI,GAAIwI,EAAWE,EAAe,EAC9BzI,GAAIiE,EAAUrO,GAAmB,EACjCqK,GAAI,GACJC,OAAO,EACPC,OAAQ,eAKZoF,EAAQoD,EAAU,GAClBnD,GAAS7O,GAAY1J,IAAMwK,IAAmB,EAAI,EAClD,IAAIwR,EAAUN,EAAU,GACpBO,GAAWvS,GAAY1J,IAAMwK,IAAmB,EAAI,EAExDqR,EAAwBr0B,OAAO,KAC5ByB,KAAK,QAAS,wBACdA,KAAK,YAAa,IAGV,aAFCyyB,OACChS,GAAY1J,IAAMwK,IAAmB,EAAI,MAGnDsC,QAAQ,UAAWhC,IACnBtjB,OAAO,QAGPsC,MAAM,UAAW,IACjBA,MAAM,oBAAqB,UAC3BA,MAAM,YAAa,QACnBA,MAAM,cAAe,OACrBtC,OAAO,SACPyB,KAAK,IAAK,GACVX,KAAK,SACLd,OAAO,SACPyB,KAAK,IAAK,GACVa,MAAM,YAAa,OACnBA,MAAM,cAAe,UACrBb,KAAK,KAAM,SACXX,KAAK,QAERuzB,EAAwBr0B,OAAO,QAC5ByB,KAAK,QAAS,mBACdA,KAAK,IAAKqvB,GACVrvB,KAAK,KAAMygB,GAAY1J,IAAMwK,IAAmB,EAAI,GACpD1gB,MAAM,cAAe,SACrBxB,KAAK,UACLd,OAAO,SACPyB,KAAK,IAAKqvB,GACVrvB,KAAK,KAAM,OACXX,KAAK,iBAGRqqB,GAAU,CACRlB,MAAOoK,EACP/I,GAAIkJ,EACJjJ,GAAIkJ,EACJrJ,GAAI0F,EAAQ,EACZzF,GAAI0F,EAAQ,EACZvF,GAAI,GACJC,OAAO,EACPC,OAAQ,eAGV2I,EAAwBr0B,OAAO,QAC5ByB,KAAK,QAAS,mBACdA,KAAK,IAAKyhB,GAAemP,IAA0B,GAAGlhB,EAAI,IAC1D1P,KAAK,KAAMygB,GAAY1J,IAAMwK,IAAmB,EAAI,GACpD1gB,MAAM,cAAe,OACrBxB,KAAK,SACLd,OAAO,SACPyB,KAAK,IAAKyhB,GAAemP,IAA0B,GAAGlhB,EAAI,IAC1D1P,KAAK,KAAM,OACXX,KAAK,iBAERqqB,GAAU,CACRlB,MAAOoK,EACP/I,GAAIpI,GAAemP,IAA0B,GAAGlhB,EAAI,EACpDoa,GAAIkJ,EACJrJ,GAAIlI,GAAemP,IAA0B,GAAGlhB,EAAI,GACpDka,GAAI0F,EAAQ,EACZvF,GAAI,GACJC,OAAO,EACPC,OAAQ,eAGVlf,QAAQgI,IAAI0O,GAAevF,EAAgB,GAAG/a,QAE9C,IAAK,IAAID,EAAI,EAAGA,EAAIugB,GAAevF,EAAgB,GAAG/a,OAAQD,IAC5D0xB,EAAwBr0B,OAAO,QAC5ByB,KAAK,IAAKyyB,GACVzyB,KAAK,IAAKyhB,GAAevF,EAAgB,GAAGhb,GAAGyO,EAAI8P,GAAa,EAAI,GACpEzf,KAAK,QAAS,uCACdA,KAAK,KAAM,cAAckB,GACzBL,MAAM,cAAe,UACrBA,MAAM,oBAAqB,WAC3BA,MAAM,UAAW,GACjBxB,KAAK,GAAG2C,GAAUd,IAGvB,IAAI+xB,EAAiBL,EAAwBr0B,OAAO,KACjDyB,KAAK,QAAS,mCACda,MAAM,UAAW,GAEpBwuB,EAAQoD,EAAU,GAClBnD,EAAQ7N,GAAevF,EAAgB,GAAG,GAAGvM,EAAI8P,GAAa,EAE1D/L,EAAY,IACd4b,EAAQ7N,GAAevF,EAAgB,GAAGuF,GAAevF,EAAgB,GAAG/a,OAAS,GAAGwO,EAAI8P,GAAa,GAI3G,IAAIyT,EAAYD,EAAe10B,OAAO,QACnCyB,KAAK,IAAKqvB,GACVrvB,KAAK,IAAKsvB,GACVtvB,KAAK,QAAS,0DACda,MAAM,cAAe,SACrBA,MAAM,oBAAqB,YAC3BtC,OAAO,SACPsC,MAAM,cAAe,KACrBA,MAAM,oBAAqB,YAC3BxB,KAAK,eACLd,OAAO,SACPsC,MAAM,cAAe,KACrBA,MAAM,oBAAqB,YAC3BxB,KAAK,UAER6zB,EAAU30B,OAAO,SACdsC,MAAM,oBAAqB,YAC3Bb,KAAK,IAAKqvB,GACVrvB,KAAK,KAAM,OACXX,KAAK,QAER6zB,EAAU30B,OAAO,SACdsC,MAAM,oBAAqB,YAC3Bb,KAAK,KAAM,GACXa,MAAM,OAAQ,WACdxB,KAAK,SAER6zB,EAAU30B,OAAO,SACdsC,MAAM,oBAAqB,YAC3Bb,KAAK,KAAM,GACXX,KAAK,UAERqqB,GAAU,CACRlB,MAAOyK,EACPpJ,GAAI4I,EAAU,GACd3I,GAAIwF,EACJ3F,GAAI0F,EAAQ,EACZzF,GAAI0F,EAAQ,EACZvF,GAAI,GACJC,OAAO,OAMfjW,GAAI9S,OAAO,uBACRgU,WAAW,WACXC,SApSY,KAqSZrU,MAAM,UAAW2vB,GAAc,EAAI,GACnC3vB,MAAM,iBAAkB2vB,GAAc,MAAQ,QAGjD,IAAI2C,EAAkBpf,GAAI9S,OAAO,uBACjCkyB,EAAgBle,WAAW,WACxBC,SA3SY,KA4SZ0N,KAAK3S,GAAGmY,gBACRpoB,KAAK,YAAa,aAAawwB,GAAc,GAAKO,SAClDlgB,GAAG,MAAO,KAET,IAAK2f,GAAa,CAxtBD,CAAC3I,IACtB,IAAI3L,EAAgB2L,EAAI3L,cACtB6U,EAAQlJ,EAAIkJ,MACZe,EAAiBjK,EAAIiK,eACrBpe,EAAYmU,EAAInU,UAChBwY,EAAiBrE,EAAIqE,eACrBC,EAAiBtE,EAAIsE,eACrB4F,EAAalK,EAAIkK,WACjBC,EAAcnK,EAAImK,YAClBC,EAAOpK,EAAIoK,KACXC,EAAUrK,EAAIqK,QACdG,EAAWxK,EAAIwK,SACfF,EAAYtK,EAAIsK,UAChBC,EAAmBvK,EAAIuK,iBACvBpE,EAAcnG,EAAImG,YAClB4D,EAAU/J,EAAI+J,QACdY,EAAe3K,EAAI2K,aAEjBlB,EAAavd,GAAI9S,OAAO,uBACzB1C,OAAO,KACPyB,KAAK,QAAS,eACd0sB,QAGC0G,EAAYrf,GAAI9S,OAAO,uBACxBA,OAAO,kBACPA,OAAO,gBACP4sB,OAAM,GACN7tB,KAAK,QAAS,0BACdA,KAAK,YAAa,aAAa4xB,EAAUb,aACtCtP,GAAevF,GAAexI,GAAW/D,EAAI8P,GAAa,MAG7D5e,MAAM,iBAAkB,QACxB4P,SAEC4iB,EAAiB/B,EAAW/yB,OAAO,IAAM60B,EAAU30B,QAEvDsV,GAAI9S,OAAO,mBAAmByrB,QAE9B,IAAI6E,EAAkBxd,GAAI9S,OAAO,eAC9B1C,OAAO,KACPyB,KAAK,QAAS,qBACdkuB,QAGCuE,EAAUX,EAAyB,EAARf,EAAY,EAG3Cvd,GAAS,GACT,IAAK,IAAItS,EAAI,EAAGA,EAAI0a,GAAIgV,IAA0BzvB,OAAQD,IACxDsS,GAAOhR,KAAKoZ,GAAIgV,IAA0B1vB,GAAG2b,OAI/C,IAAIyW,EAAkBrjB,GAAG8T,cACtBC,OAAO/T,GAAGsjB,OAAO/f,KACjBvE,MAAM,CAAC,GAAK,IAIfqiB,EAAW/yB,OAAO,UACfyB,KAAK,QAAS,gBACdA,KAAK,KAAM,gBAAgB0T,GAC3B1T,KAAK,KAAMyyB,GACXzyB,KAAK,KAAMyhB,GAAevF,EAAgB,GAAGxI,GAAW/D,EAAI8P,GAAa,GACzEzf,KAAK,IANU,GAOfa,MAAM,OAAQqf,GAAiBrD,MAAMyW,EAAgB9f,GAAOE,MAC5D7S,MAAM,SAAU,aAChBA,MAAM,iBAAkB,OACxBA,MAAM,SAAUof,IAChBpP,GAAG,YAAa,IAAMwgB,GAA4B3d,IAClD7C,GAAG,aAAc,IAAM2gB,GAA6B9d,IACpD7C,GAAG,QAAS,KAAQZ,GAAGtQ,MAAMyrB,oBAGhC,IAAIwH,EAA0B7e,GAAI9S,OAAO,kCACtCA,OAAO,8BAEV2xB,EAAwB3xB,OAAO,eAAeyS,GAC3C7S,MAAM,UAAW,GAEpBwyB,EAAe3G,QAGf4E,EAAW/yB,OAAO,QACfyB,KAAK,QAAS,qBAAqB0T,GACnC1T,KAAK,KAAMmsB,EAAiB4E,EAA2B,EAAnBrR,IACpC1f,KAAK,KAAMqyB,GACXryB,KAAK,KAAMyhB,GAAevF,EAAgB,GAAGxI,GAAW/D,EAAI8P,GAAa,GACzEzf,KAAK,KAAMyhB,GAAevF,EAAgB,GAAGxI,GAAW/D,EAAI8P,GAAa,GACzE5e,MAAM,OAAQ,QACdA,MAAM,SAAU,WAChBA,MAAM,eAAgB,OACtBqtB,QAGH,IAAI/H,EAAW,GACXqN,EAAgB5X,GAAI6X,QAAQtyB,OAASya,GAAI,GAAGza,OAC5CuyB,EAAe,IAAIlsB,MAAMoU,GAAIgV,IAA0BzvB,QAAQqH,QAChExC,OAAOR,GAAKA,GAAKkO,GAChBigB,EAAY,EACZ1N,EAAUhW,GAAGiW,iBACdxW,EAAElK,GAAKA,EAAEkK,GACTC,EAAEnK,GAAKA,EAAEmK,GAEZ,MAAMikB,EAAmB,KAEvB,IAAKnD,GAIH,YAHA1c,GAAI9S,OAAO,eACRuP,UAAU,gBACVC,SAIL,IAAI4D,EAAOqf,EAAaC,GAEpBE,EAAe9f,GAAI9S,OAAO,eAC3BA,OAAO,gBAAgBoT,GAE1B,GAAIwf,EAAap0B,QAAS,CACxBo0B,EAAe9f,GAAI9S,OAAO,eACvB1C,OAAO,KACPyB,KAAK,QAAS,eACdA,KAAK,KAAM,eAAeqU,GAC1BxT,MAAM,UAAW,GAIpB,IAAK,IAAIxC,EAAI,EAAGA,EAAIm1B,EAAen1B,GAAK,EAAG,CACvB,CAAC,EAAGojB,GAAevF,EAAgB,GAAG/a,OAAS,GACrDnE,QAAQ4K,IAClB,IAAIksB,EAAYz1B,EAAIuJ,EAAI4rB,EAGxBrN,EAAS3jB,KAAK,CACZiY,OAAQ,CAAC/K,EAAGwc,EAAiB6F,EAAa,EAAIhB,EAC5CphB,EAAU,IAAN/H,EAAUqqB,EAAO5zB,EAAI2zB,EAAcE,EAAU7zB,EAAI2zB,GACvDxzB,OAAQ,CAACkR,EAAGyc,EAAiB4E,EAC3BphB,EAAG8R,GAAevF,GAAe7H,GAAM1E,EAAI8P,GAAa,GAC1DvX,MAAO4rB,EACPnZ,OAAQiB,GAAI6X,QAAQK,GAAWvZ,YAAYlG,GAAMsG,OACjDyH,MAAO,UACP3X,MAAO,GACPud,QAAS,EACT+L,MAAO,gBAAgB1f,MAM7B,IAAK,IAAI2f,EAAK,EAAGA,EAAKpY,GAAIgV,IAA0BzvB,OAAS,EAAG6yB,IAC9D7N,EAAS3jB,KAAK,CACZiY,OAAQ,CAAC/K,EAAGwc,EAAiB6F,EAAa,EAAIhB,EAC5CphB,EAAGsiB,EAAOuB,EAAgBxB,EAAcG,GAAa6B,EAAK,GAC1D5B,GAAoB4B,EAAK,KAC3Bx1B,OAAQ,CAACkR,EAAGyc,EAAiB4E,EAC3BphB,EAAG8R,GAAevF,GAAe7H,GAAM1E,EAAI8P,GAAa,GAC1DvX,OAAQ,EACRka,MAAO,UACP3X,MAAO,GACPud,QAAS,EACT+L,MAAO,yBAAyB1f,IAKpCwf,EAAarjB,UAAU,qBAAqB6D,GACzC/U,KAAK6mB,GACLxV,QACApS,OAAO,QACPyB,KAAK,QAASwF,GAAKA,EAAEuuB,OACrB/zB,KAAK,KAAMwF,GAAK,QAAQA,EAAEtG,MAC1Bc,KAAK,IAAKwF,GAAKygB,EAAQ,CAACxL,OAAQjV,EAAEiV,OAAQjc,OAAQgH,EAAEhH,UACpDqC,MAAM,OAAQ,QACdA,MAAM,eAAgB2E,GAAKA,EAAEiF,OAC7B5J,MAAM,SAAU2E,QAAiB7D,IAAZ6D,EAAE4c,MAAsBnC,GAAoBza,EAAE4c,OACnEvhB,MAAM,UAAW2E,GAAKA,EAAEwiB,SACxBnnB,MAAM,iBAAkB,QAG7B,IAAIozB,EAAe3C,EAAW/yB,OAAO,KAClCyB,KAAK,QAAS,eAAeqU,GAC7BxT,MAAM,UAAW,GAGhBqzB,EAAclG,EAAYH,OAAM,GACjChtB,MAAM,UAAW,GAGpBqzB,EAAYl0B,KAAK,QAAS,qBACvBA,KAAK,KAAM,qBAAqBqU,GAChCpT,OAAO,UACPosB,MAAM,CAAChnB,KAAMgb,GAAiBnB,GAAiBvF,OAC9C6X,EAAc5W,GAAIgV,IAA0Bvc,GAAMgG,KAAM,OACzDxZ,MAAM,iBAAkB,QACxBA,MAAM,OAAQ,WAEjBqzB,EAAYl0B,KAAK,YAAa,aAAa4xB,aACvCnQ,GAAevF,GAAe7H,GAAM1E,EAAI8P,GAAa,MAGzD,IAAI0U,EAAelO,EAAQ,CACzBxL,OAAQ,CACN/K,EAAGyc,EAAiB4E,EAA2B,EAAnBrR,GAC5B/P,EAAG8R,GAAevF,GAAe7H,GAAM1E,EAAI8P,GAAa,GAE1DjhB,OAAQ,CACNkR,EAAG+iB,EApJS,EAqJZ9iB,EAAG8R,GAAevF,GAAe7H,GAAM1E,EAAI8P,GAAa,KAIxD2U,EAAenO,EAAQ,CACzBxL,OAAQ,CACN/K,EAAG+iB,EA3JS,EA4JZ9iB,EAAG8R,GAAevF,GAAe7H,GAAM1E,EAAI8P,GAAa,GAE1DjhB,OAAQ,CACNkR,EAAG2iB,EACH1iB,EAAG8R,GAAevF,GAAexI,GAAW/D,EAAI8P,GAAa,KAO7D4U,EAAc9C,EAAgBhzB,OAAO,QACtCyB,KAAK,QAAS,qBAAqBqU,GACnCrU,KAAK,IAAKm0B,GACVtzB,MAAM,OAAQ,QACdA,MAAM,SAAU,WAChBA,MAAM,eAAgB,OAErByzB,EAAc/C,EAAgBhzB,OAAO,QACtCyB,KAAK,QAAS,qBAAqBqU,GACnCrU,KAAK,IAAKo0B,GACVvzB,MAAM,OAAQ,QACdA,MAAM,SAAU,WAChBA,MAAM,eAAgB,OAErB0zB,EAAoBF,EAAY51B,OAAO+1B,iBACvCC,EAAoBH,EAAY71B,OAAO+1B,iBACvCE,EAAcH,EAAoBE,EAClCE,EAAgBhgB,GAAiB,IAAM,IACvCigB,EAAkBjgB,GAAiB,IAAM,IAE7C0f,EAAYr0B,KAAK,mBAAoBu0B,EAAoB,IAAMA,GAC5Dv0B,KAAK,oBAAqBu0B,GAE7BD,EAAYt0B,KAAK,mBAAoBy0B,EAAoB,IAAMA,GAC5Dz0B,KAAK,oBAAqBy0B,GAE7BJ,EAAYpf,WAAW,uBACpBC,SAASqf,EAAoBG,EAAcC,GAC3C30B,KAAK,oBAAqB,GAE7Bs0B,EAAYrf,WAAW,uBACpB6C,MAAMyc,EAAoBG,EAAcC,GACxCzf,SAASuf,EAAoBC,EAAcC,GAC3C30B,KAAK,oBAAqB,GAG7Bi0B,EAAa11B,OAAO,UACjByB,KAAK,QAAS,gBACdA,KAAK,KAAM,gBAAgBqU,GAC3BrU,KAAK,KAAMyyB,GACXzyB,KAAK,KAAMyhB,GAAevF,EAAgB,GAAG7H,GAAM1E,EAAI8P,GAAa,GACpEzf,KAAK,IAAK,GACVa,MAAM,OAAQqf,GAAiBrD,MAAMyW,EAAgB9f,GAAOa,MAC5DxT,MAAM,SAAUof,IAChBpf,MAAM,SAAU,aAChBgQ,GAAG,YAAa,IAAMwgB,GAA4Bhd,IAClDxD,GAAG,aAAc,IAAM2gB,GAA6Bnd,IACpDxD,GAAG,QAAS,KAAQZ,GAAGtQ,MAAMyrB,oBAGhCsF,GAAsB5c,eAAiB,CACrC5S,EAAGmT,EACHa,SAAU0f,EAEVjgB,gBAAgB,GAElB3K,GAAuBlB,IAAI4nB,IAG3BuD,EAAahf,WAAW,gBACrBC,SAAS0f,GACT/zB,MAAM,UAAW,IAEf6S,EAAY,GAAa,GAARW,GAAeX,GAAa,GAAa,GAARW,IAErDue,EAAwB3xB,OAAO,oCAC5BgU,WAAW,gBACXC,SAAS0f,GACT/zB,MAAM,UAAW,GAGtB+xB,EAAwB3xB,OAAO,eAAeoT,GAC3CY,WAAW,gBACXC,SAAS0f,GACT/zB,MAAM,UAAW,GAEpBgzB,EAAa5e,WAAW,gBACrBC,SAAS0f,GACT/zB,MAAM,UAAW,GACjBgQ,GAAG,MAAO,KAET8iB,IACIA,EAAYD,EAAavyB,QAC3BglB,EAAW,GACXyN,MAEAjf,IAAiB,EACjB+b,GAAsB/b,gBAAiB,EACvC3K,GAAuBlB,IAAI4nB,OAIjCwD,EAAYjf,WAAW,gBACpBC,SAAS0f,GACT/zB,MAAM,UAAW,KAItB,IAAIg0B,EAAgB9gB,GAAI9S,OAAO,uBAC5BA,OAAO,gBAAgBxC,OACtBq2B,EJ9esB,EAAC/gB,EAAKghB,KAChC,QAAYpzB,IAARoS,EAAmB,CACrB,IAAIihB,EAAWD,EACf,KAAgC,MAAzBC,EAASC,cAA+C,MAAvBD,EAASj2B,YAC/Ci2B,EAAWA,EAASj2B,WAGtB,IAAIoiB,EAAQpN,EAAItV,OAAOy2B,gBAAgBC,iBACnCnnB,EAASgnB,EAASC,eAGlBzqB,EAFQwqB,EAASngB,UAEFrK,OAEnB2W,EAAMzR,GAAK,EACXyR,EAAMxR,GAAKnF,EAAS,EACpB,IAAI4qB,EAAOjU,EAAMkU,gBAAgBrnB,GACjC,MAAO,CACL+I,IAAKqe,EAAKzlB,EACVqH,KAAMoe,EAAK1lB,KI4dL4lB,CAAavhB,GAAK8gB,GAGxBU,EAAgB,MAFLtlB,GAAGhP,OAAO,YACDJ,MAAM,UAAUkQ,QAAQ,KAAM,IAAM,EACxB,GAEpC,MAAMykB,EAAar2B,SAASs2B,eAAe,cAC3CD,EAAW30B,MAAMkW,IAASwe,EAAH,KACvBC,EAAW30B,MAAMmW,KAAU8d,EAAI9d,KAAO,IAAM,GAApB,KACxBwe,EAAW30B,MAAM60B,SAAW,WAE5B1rB,GAAuBlB,IAAI,CACzBqM,MAAM,EACN3B,OAAQA,GACRC,YAAaD,GAAOzN,IAAIP,GAAK0a,GAAiBrD,MAAMyW,EAAgB9tB,KACpEkO,UAAWA,EACXC,YAAa,EACbC,WAAY5R,GAAU0R,GACtBG,YAAa+H,GAAIgV,IAA0Bld,GAAW/G,OACtDmH,eAAgB,CAAC5S,GAAI,EAAGgU,SAAU,EAAGP,eAAgBA,MAGvDif,IAGAnL,GAA4B,CAC1BlE,aAAc,EACdrI,cAAeA,EACfjN,MAAOgB,GAAGsjB,OAAO/f,IAAQ,GAAKvD,GAAGsjB,OAAO/f,IAAQ,GAChDkV,OAAQ,CAAC1Z,IAAKiB,GAAGsjB,OAAO/f,IAAQ,GAAI3E,IAAKoB,GAAGsjB,OAAO/f,IAAQ,IAC3DgV,MAAO8I,EACP7mB,MAAO4nB,GAAYlG,EAAoC,EAAnBzM,GAAuBqR,EAAQ,GACnEnI,sBAAuB,yBACvBC,YAAa,GACb7Y,WAAYkQ,GAAiBrD,MAC7BnN,EAAGyc,EAAoC,EAAnBzM,GAAuBqR,EAAQ,EACnDphB,EAAG8Q,GAAY1J,OAAMwK,GAAyBA,GAC/B,GAAb9B,KAIa6R,EAAW/yB,OAAO,KAChCyB,KAAK,QAAS,eACd6jB,QAAQ,SAAUhC,IAClB7hB,KAAK,YAAa,IAGV,aAFCyyB,OACChS,GAAY1J,IAAMwK,IAAmB,EAAI,MAI3ChjB,OAAO,QACfsC,MAAM,cAAe,UACrBA,MAAM,oBAAqB,UAC3BA,MAAM,UAAW,IACjBA,MAAM,cAAe,KACrBxB,KAAK,UA8WFs2B,CAlBe,CACbzZ,cAAeA,EACf6U,MAAOA,EACPe,eAAgBA,EAChBpe,UAAWA,EACXwY,eAAgBA,EAChBC,eAAgBA,EAChB4F,WAAYA,EACZC,YAAaA,EACbC,KAAMA,EACNC,QAASA,EACTC,UAAWA,EACXC,iBAAkBA,EAClBC,SAAUA,EACVrE,YAAaA,EACb4D,QAASA,EACTY,aAAcA,IAMlB,GAAKhC,GAiBH2C,EAAgBlyB,OAAO,uBAAuBwP,aAjB9B,CACF0iB,EAAgBlyB,OAAO,eAClC1C,OAAO,QACPyB,KAAK,QAAS,sBACdA,KAAK,KAAM4xB,GACX5xB,KAAK,KAAM+tB,GACX/tB,KAAK,KAAM6xB,EAAUd,GACrB/wB,KAAK,KAAMssB,GACXzrB,MAAM,eAAgB,KACtBA,MAAM,SAAU,WAChBA,MAAM,UAAW,GAEZoU,WAAW,WAChB6C,MAAM5C,KACNA,SAASA,KACTrU,MAAM,UAAW,GAKtB2vB,IAAeA,GACfzmB,GAAiBjB,IAAI0nB,OAadoF,GAAc,CAAC1Z,EAAe1W,EAAGtE,EAAGuJ,EAAOD,KAEtDuJ,GAAIvD,UAAU,kBACXqT,QAAQ,UAAU,GAErB,IAAIgS,EAAWpU,GAAevF,EAAgB,GAAG/a,OAAS,EACtD4wB,EAAatS,GAAa,EAE1BiV,EAAe,EAAIjV,GACrB,IAAM+B,GAAkBX,GAAWkR,EACjCrG,EAAQjK,GAAevF,GAAe,GAAGxM,EAAIglB,EAC7C7I,EAAmBrK,GAAkBX,GAAW,EAAK,EAEzD,IAAIoF,EAAUhW,GAAGiW,iBACdxW,EAAElK,GAAKA,EAAEkK,GACTC,EAAEnK,GAAKA,EAAEmK,GAGZoE,GAAI9S,OAAO,gBACRJ,MAAM,aAAc,UAGvB+mB,GAAW,CAACE,WAAY5L,EAAgB,EAAGnD,QAAS2S,EAClD3D,SAAS,EAAMjQ,MAAO,IAGxB8P,GAAW,CAACE,WAAY5L,EACtBnD,QAAS0I,GAAevF,GAAe,GAAGxM,EAAGqY,SAAS,EACtDjQ,MAAO,EAAGkQ,QAAS,IAAMC,aAAc/mB,IAGzC,IACIovB,GADU5E,EAAQlK,GACGC,GAAe,GAAG,GAAG/R,EAAI,GAAK+P,IAAc,GAOrE,GAAI6Q,EA3Be,GA6BjB,IAAK,IAAIpvB,EAAI,EAAGA,EAAIgb,EAAgB,EAAGhb,IAAK,CAC1C,IAAIuT,EAAOgN,GAAe,GAAG,GAAG/R,EAAIxO,GAAKue,GAAa6Q,GACtD1I,GAAW,CAACE,WAAY5mB,EAAG6X,QAAStE,EAAMsT,SAAS,EAAMjQ,MAAO,QAE7D,CACLwY,EAlCiB,GAmCjB,IAAIwF,EAAepK,EAAkB,EAAV4E,EAAc7Q,GAEzC,IAAK,IAAIve,EAAIgb,EAAgB,EAAGhb,GAAK,EAAGA,IACtC0mB,GAAW,CAACE,WAAY5mB,EAAG6X,QAAS+c,EAAc/N,SAAS,EAAMjQ,MAAO,IACxEge,EAAeA,EAAexF,EAAU7Q,GAQ5C4I,GAAmB,wBAHP,CAAC,CAACtQ,OAAQ,KAAMqK,MAAO,qBAAsB4F,QAAS,GAChE,CAACjQ,OAAQ,MAAOqK,MAAO,qBAAsB4F,QAAS,KACtD,CAACjQ,OAAQ,OAAQqK,MAAO,qBAAsB4F,QAAS,OAGzD,IAAI+N,EAA2BhiB,GAAIxV,OAAO,KACvCyB,KAAK,QAAS,8BAEjB+1B,EAAyBx3B,OAAO,QAC7ByB,KAAK,QAAS,WACda,MAAM,OAAQ,+BACdA,MAAM,SAAU,QAChBb,KAAK,QAAS0rB,EAAQjL,GAAYzJ,KAAkB,EAAVsZ,EAAe,GACzDtwB,KAAK,SAAUwK,EAASiW,GAAY1J,IAAM0J,GAAYC,QACtD1gB,KAAK,KAAMygB,GAAYzJ,MACvBhX,KAAK,IAAK,GACVa,MAAM,UAAW,GAEpBk1B,EAAyBvlB,UAAU,gBAChCyE,WAAW,QACXC,SAAS,KACT0N,KAAK3S,GAAGmY,gBACRvnB,MAAM,UAAW,GAGpB,IAAIorB,EAAoBlY,GAAIxV,OAAO,KAChCyB,KAAK,QAAS,sBACda,MAAM,UAAW,GAEhBqrB,EAAiBR,EAAQjM,GAAaoM,EACtCM,EAAiBD,EAAiBL,EAAkBkG,EACpD9iB,EAAQ0S,GAAeD,IAAoBxF,EAAgB,GAC3DlM,EAAakQ,GAAiBE,KAC9BoT,EAAgB5X,GAAI6X,QAAQtyB,OAASya,GAAI,GAAGza,OAC5CglB,EAAW,GAKX6P,EAHe/J,EAAkB1tB,OAAO,KACzCyB,KAAK,QAAS,iBAEuBzB,OAAO,KAC5CyB,KAAK,QAAS,sBAEbiyB,EAAOxQ,GAAevF,EAAgB,GAAG,GAAGvM,EAC5CuiB,EAAUzQ,GAAevF,EAAgB,GAAG2Z,GAAUlmB,EAAI8P,GA5F5C,IA6FZ+T,EAGFyC,EAAoBra,GAAIM,EAAgB,GAAG,GAAGvP,OAAOxL,OACrD+0B,EAAczW,IAAc,EAAIwW,GAGhCE,EAAoB1W,GAAawW,EAGjCG,EAAgBnmB,GAAGsjB,OAAO3X,GAAI6X,QAAQrwB,MAAMowB,GAC7CztB,IAAIP,GAAKA,EAAE+U,YAAYrZ,GAAGyZ,QAC1BiT,OAAOhS,GAAI6X,QAAQrwB,MAAM,EAAIowB,EAAe,GAAKA,GAC/CztB,IAAIP,GAAKA,EAAE+U,YAAYrZ,GAAGyZ,UAE3B6X,EAAoBnkB,KAAKmB,MACgB,IAA3CnB,KAAKQ,OAAOunB,EAAcrwB,IAAIsI,KAAKa,OAAgB,IADlC,EAGfmnB,EAA2B7wB,IAC7B,IAAI0C,EAAQ1C,EAAE0C,MAMZyoB,QADehvB,IAAb6D,EAAEmV,OACQ,CACVxF,MAAM,EACN9V,KAAM,gBAAgB2U,GAAS6c,GAAqB3oB,KAG1C,CACViN,MAAM,EACN9V,KAAM,WAAW2U,GAASxO,EAAEmV,SAGhCzQ,GAAepB,IAAI6nB,IAEnBqF,EAAqB/0B,OAAO,iBAAiBiH,GAC1CwkB,QACA7rB,MAAM,SAAUof,IAChBpf,MAAM,eAAgB,GAEzBm1B,EAAqB/0B,OAAO,iBAAiBiH,YAC1CwkB,QACA7rB,MAAM,eAAgB,GACtBA,MAAM,SAAUy1B,GAAMjV,GAAiBnB,GAAiBvF,OACvD6X,EAAc8D,EAAG3b,OAAQ,KAE7Bqb,EAAqB/0B,OAAO,aAAaiH,GACtCwkB,QACA7rB,MAAM,UAAW,IAGlB01B,EAA4B/wB,IAC9B,IAAI0C,EAAQ1C,EAAE0C,MAOZyoB,QADehvB,IAAb6D,EAAEmV,OACQ,CACVxF,MAAM,EACN9V,KAAM,gBAAgB2U,GAAS6c,GAAqB3oB,KAG1C,CACViN,MAAM,EACN9V,KAAM,WAAW2U,GAASxO,EAAEmV,SAGhCzQ,GAAepB,IAAI6nB,IAEnBqF,EAAqB/0B,OAAO,iBAAiBiH,GAC1CrH,MAAM,eAAgB,IACtBA,MAAM,SAAU,WAEnBm1B,EAAqB/0B,OAAO,iBAAiBiH,YAC1CrH,MAAM,eAAgB,IACtBA,MAAM,SAAUy1B,GAAMjV,GAAiBnB,GAAiBvF,OACvD6X,EAAc8D,EAAG3b,OAAQ,MAE7Bqb,EAAqB/0B,OAAO,aAAaiH,GACtCwkB,QACA7rB,MAAM,UAAW,IAExBkK,QAAQgI,IAAIygB,GACV3C,GAAuB,GACvB,IAAK,IAAIxyB,EAAI,EAAGA,EAAIm1B,EAAen1B,IAAK,CACpB,CAAC,EAAGw3B,GACV74B,QAAQ4K,IAClB,IAAIksB,EAAYz1B,EAAIuJ,EAAI4rB,EACxB3C,GAAqBiD,GAAalY,GAAI6X,QAAQK,GAAWnnB,OACzDqpB,EAAqBz3B,OAAO,QACzByB,KAAK,IAAKksB,GACVlsB,KAAK,IAAW,IAAN4H,EAAUqqB,EA5LT,IA4LgB5zB,EAAkB6zB,EA5LlC,IA4L4C7zB,GACvD2B,KAAK,QAAS+xB,GACd/xB,KAAK,SA9LM,KA+LXa,MAAM,SAAU,aAChBA,MAAM,OAAQmP,GAAY4L,GAAI6X,QAAQK,GAAWnnB,OAASsC,EAAQ,GAAKA,IACvE4B,GAAG,YAAa,IAAMwlB,EAAwB,CAACnuB,MAAO4rB,KACtDjjB,GAAG,aAAc,IAAM0lB,EAAyB,CAACruB,MAAO4rB,KACxDjjB,GAAG,QAAS,KAAQZ,GAAGtQ,MAAMyrB,oBAGhCjF,EAAS3jB,KAAK,CACZiY,OAAQ,CAAC/K,EAAGwc,EAAiB6F,EAAa,EACxCpiB,EAAU,IAAN/H,EAAUqqB,EAxMJ,IAwMW5zB,EAAkB6zB,EAxM7B,IAwMuC7zB,GACnDG,OAAQ,CAACkR,EAAGyc,EAEVxc,EAAG8R,GAAevF,GAAehb,GAAGyO,EAAI8P,GAAa,GACvDvX,MAAO4rB,EACPnZ,OAAQiB,GAAI6X,QAAQK,GAAWvZ,YAAYrZ,GAAGyZ,OAC9Czb,KAAM,WAAW40B,WACjB1R,MAAOf,GAAiBnB,GAAiBvF,OACvC6X,EAAc5W,GAAI6X,QAAQK,GAAWvZ,YAAYrZ,GAAGyZ,OAAQ,KAC9DlQ,MAAO,GACPud,QAAS,EACT+L,MAAO,mBAIT,IAAIppB,EAAM0D,KAAKC,MAAMjQ,EAAI43B,GACzB9P,EAAS3jB,KAAK,CACZhE,OAAQ,CAACkR,EAAGwc,EAAiB,EAC3Bvc,EAAU,IAAN/H,EAAUqqB,EA1NJ,IA0NW5zB,EAAkB6zB,EA1N7B,IA0NuC7zB,GACnDoc,OAAQ,CAAC/K,EAAGgc,EAAQjM,GAAa,EAC/B9P,EAAG8R,GAAevF,EAAgB,GAAGtU,GAAG+H,GAAK,EAAIhF,EAAM,GAAKurB,GAC9DhuB,MAAO4rB,EACP50B,KAAM,WAAW40B,EACjB1R,MAAO,UAIP3X,MAAO,GACPud,QAAS,EACT+L,MAAO,YAIT,IAAIyC,EAAM5a,GAAI6X,QAAQK,GAAWxZ,WAAW,GAAGK,OAC/Cqb,EAAqBz3B,OAAO,QACzByB,KAAK,KAAM,YAAY8zB,GACvB9zB,KAAK,QAAS,oBACdA,KAAK,IAAK0rB,EAAQ8K,EAAI,GAAKL,GAC3Bn2B,KAAK,IAAKyhB,GAAevF,EAAgB,GAAGtU,GAAG+H,EAAI6mB,EAAI,GAAKL,GAC5Dn2B,KAAK,QAASm2B,GACdn2B,KAAK,SAAUm2B,GACft1B,MAAM,OAAQ,QACdA,MAAM,SAAUof,IAChBpf,MAAM,gBAAiB,OACvBA,MAAM,iBAAkB,OACxBA,MAAM,SAAU,aAChBA,MAAM,UAAW,GACjBgQ,GAAG,YAAa,IAAMwlB,EAAwB,CAACnuB,MAAO4rB,KACtDjjB,GAAG,aAAc,IAAM0lB,EAAyB,CAACruB,MAAO4rB,KACxDjjB,GAAG,QAAS,KAAOZ,GAAGtQ,MAAMyrB,sBAOnC,IAAIqL,EAAa,GACjB,IAAK,IAAIxiB,EAAI,EAAGA,EAAI2H,GAAIM,EAAgB,GAAG/a,OAAS,EAAG8S,IAQrDwiB,EAAWj0B,KAAK,CAAC0F,MAAO+L,IAI1B,IACIme,GAAoB,GAAK3S,GAAa,EAAW8B,GA9QnC,IA+QFiS,EAAgB,EAAI,IAAe,EAGnDiD,EAAWz5B,QAAQ,CAACuP,EAAGynB,KAErBgC,EAAqBz3B,OAAO,QACzByB,KAAK,IAAKksB,EAAiB6F,EAAa,GACxC/xB,KAAK,IAAKiyB,EAtRG,IAsRIuB,EATN,GASiDQ,EAAK,GAChE5B,EAAmB4B,GACpBh0B,KAAK,QAAS+xB,EAAa,GAC3B/xB,KAAK,SAAUoyB,GAEfvxB,MAAM,OAAQ,WAGjBm1B,EAAqBz3B,OAAO,YACzByB,KAAK,SACJ,GAAG0rB,EAAQjM,GAAa,cACtBgC,GAAevF,EAAgB,GAAG3P,EAAErE,OAAOyH,eAC3C+b,EAAQjM,GAAa,eACrBgC,GAAevF,EAAgB,GAAG3P,EAAErE,OAAOyH,EAAI8P,GAAa,eAC5DiM,EAAQjM,GAAa,cACrBgC,GAAevF,EAAgB,GAAG3P,EAAErE,OAAOyH,EAAI8P,MAClD5e,MAAM,OAAQ,WACdA,MAAM,UAAW,GAGpBslB,EAAS3jB,KAAK,CACZiY,OAAQ,CAAC/K,EAAGgc,EAAQjM,GAAa,GAC/B9P,EAAG8R,GAAevF,EAAgB,GAAG3P,EAAErE,OAAOyH,EAAI8P,GAAa,GACjEjhB,OAAQ,CAACkR,EAAGwc,EAAiB,EAC3Bvc,EAAGsiB,EA9SS,IA8SFuB,EAjCA,GAiC2CQ,EAAK,GACxD5B,GAAoB4B,EAAK,KAC7B9rB,OAAQ,EACRuC,MAAO,EACPud,QAAS,EACT9oB,KAAM,oBAAoBqN,EAAErE,MAC5Bka,MAAO,UACP2R,MAAO,qBAIT5N,EAAS3jB,KAAK,CACZiY,OAAQ,CAAC/K,EAAGwc,EAAiB6F,EAAa,EAC1CpiB,EAAGsiB,EA3TW,IA2TJuB,EA9CE,GA8CyCQ,EAAK,GACxD5B,GAAoB4B,EAAK,KAC3Bx1B,OAAQ,CAACkR,EAAGyc,EACZxc,EAAG8R,GAAevF,GAAehb,GAAGyO,EAAI8P,GAAa,GACrDvX,OAAQ,EACRhJ,KAAM,oBAAoBqN,EAAErE,eAG5Bka,MAAO,UACPzH,OAAQpO,EAAEoO,OACVlQ,MAAO,EACPud,QAAS,EACT+L,MAAO,8BAKX,IAAInC,EAAUzF,EAAiBzM,GAC3BqO,EAAUtM,GAAevF,GAAehb,GAAGyO,EAAI8P,GAAa,EAE5DuO,EAAcgI,EAAqBz3B,OAAO,KAC3CyB,KAAK,QAAS,eACdA,KAAK,YAAa,aAAa4xB,MAAY7D,MAE9CC,EAAYzvB,OAAO,QAChByB,KAAK,KAAM0f,IACX1f,KAAK,KAAM0f,IACX1f,KAAK,QAA4B,EAAnB0f,IACd1f,KAAK,SAA6B,EAAnB0f,IACf1f,KAAK,KAAM,GACXA,KAAK,KAAM,GACXa,MAAM,OAAQ,QACdA,MAAM,SAAUof,IAEnB+N,EAAYzvB,OAAO,QAChByB,KAAK,MAAO0f,GAAmB,IAC/B1f,KAAK,KAAK,IACVA,KAAK,QAAS,GAAK0f,GAAmB,IACtC1f,KAAK,SAnBe,GAoBpBa,MAAM,OAAQof,IAEjB+N,EAAYzvB,OAAO,QAChByB,KAAK,KAAK,IACVA,KAAK,MAAO0f,GAAmB,IAC/B1f,KAAK,QAzBe,GA0BpBA,KAAK,SAAU,GAAK0f,GAAmB,IACvC7e,MAAM,OAAQof,IAMjB+N,EAAYzvB,OAAO,UAChByB,KAAK,KAAM,GACXA,KAAK,MAAOyf,GAAa,EAAI,GAAMmB,IACnC5gB,KAAK,IAAwB,IAAnB4gB,IACV/f,MAAM,SAAUof,IAChBpf,MAAM,SAAU,aAChBA,MAAM,OAAQwgB,GAAiBnB,GAAiBvF,OAC7C6X,EAAchtB,EAAE6U,KAAM,MACzBxJ,GAAG,YAAa,KACf3G,GAAepB,IAAK,CAACqM,MAAM,EAAM9V,KAAM,SAAS2U,GAASxO,EAAE6U,UAE5DxJ,GAAG,aAAc,KAChB3G,GAAepB,IAAK,CAACqM,MAAM,EAAO9V,KAAM,SAAS2U,GAASxO,EAAE6U,UAE7DxJ,GAAG,QAAS,KAAQZ,GAAGtQ,MAAMyrB,oBAGhC4C,EAAYzvB,OAAO,QAChByB,KAAK,IAAKimB,EAAQ,CACjBxL,OAAQ,CAAE/K,EAAG,EAAGC,EAAG,GACnBnR,OAAQ,CAAEkR,EAAG,EAAGC,GAAI8P,GAAa,EAAI,GAAMmB,OAE5C5gB,KAAK,KAAM,aACXA,KAAK,eAAgB,KACrBA,KAAK,SAAU,WACfkuB,QAGH/H,EAAS3jB,KAAK,CACZiY,OAAQyG,GAAc,CAACxR,EAAGyc,EAAiB,EAAIzM,GAAmBD,GAChE9P,EAAG8R,GAAevF,GAAehb,GAAGyO,IACtCnR,OAAQ4iB,GAAa,CAAC1R,EAAG+R,GAAevF,GAAehb,GAAGwO,EAAI,EAC5DC,EAAG8R,GAAevF,GAAehb,GAAGyO,IACtCzQ,KAAM,gBACNuL,MAAO,IACP2X,MAAO,YAIT,IACIsU,GAAehC,EAAc,EAAIjV,GAAa,EAAIoM,EADnC,IAEC,EAChB8K,EAAaxK,EAAoC,EAAnBzM,GAC9B2S,EAAWqE,EAAaC,EACxB7E,EAAiB4E,EAAa,EAAIC,EAClCrE,EAAe7Q,GAAevF,GAAehb,GAAGyO,EAAI,EAAIiR,GAAmB,EAG3EgW,EAAa,CACf1a,cAAeA,EACf6U,MAJiE,GAAtD5E,GAAkBD,EAAiB6F,EAAa,IAAU,EAKrEH,QAASA,EACT7D,QAASA,EACT8D,QAASpQ,GAAevF,GAAehb,GAAGwO,EAC1C4c,QAASyB,EACT+D,eAAgBA,EAChBpe,UAAWxS,EACXgrB,eAAgBA,EAChBC,eAAgBA,EAChB4F,WAAYA,EACZC,YA3agB,IA4ahBC,KAAMA,EACNC,QAASA,EACTC,UAjKc,EAkKdC,iBAAkBA,EAClBC,SAAUA,EACVE,aA3BiB,GA4BjBD,aAAcA,EACdtE,YAAaA,EACbwE,aAAcA,GAGZqE,EAAgB5K,EAAkB1tB,OAAO,KAC1CyB,KAAK,QAAS,kBACdA,KAAK,YAAa,aAAaqyB,MAAatE,MAC5CltB,MAAM,gBAAiB,OACvBA,MAAM,SAAU,WAChBgQ,GAAG,QAAS,IAAM8gB,GAAeiF,IAEpCC,EAAct4B,OAAO,QAClByB,KAAK,IAAK,GACVA,KAAK,KAAM0f,IACX1f,KAAK,QA3CW,IA4ChBA,KAAK,SAA6B,EAAnB0f,IACf1f,KAAK,SAAUigB,IACfjgB,KAAK,KAAM,GACXA,KAAK,KAAM,GACXA,KAAK,OAAQ,WAEhB62B,EAAct4B,OAAO,QAClByB,KAAK,IAAK,GACVA,KAAK,IAAK,GACVa,MAAM,oBAAqB,UAC3BA,MAAM,YAAa,QACnBA,MAAM,UAAW,IACjBxB,KAAK,WAGS4sB,EAAkB1tB,OAAO,KACvCyB,KAAK,QAAS,eACd6jB,QAAQ,SAAUhC,IAClB7hB,KAAK,YAAa,IAIV,aAHC0rB,EAAQjM,IAAc,EAAI+B,GAAkBX,GAClDkR,GAAc,OACPtR,GAAY1J,IAAMwK,IAAmB,EAAI,MAGnD1gB,MAAM,SAAU,QAChBgQ,GAAG,QAAS,KACXZ,GAAGtQ,MAAMyrB,kBAETjsB,SAASwX,cAAc,oBAAoBkc,eAAe,CACxDC,SAAU,aAILv0B,OAAO,QACfsC,MAAM,oBAAqB,UAC3BA,MAAM,UAAW,IACjBA,MAAM,cAAe,KACrBxB,KAAK,WAEQy3B,OAAO7mB,GAAGhP,OAAO,YAAYJ,MAAM,UAAUkQ,QAAQ,KAAM,KAA3E,IAEIgmB,EAAqB9K,EAAkB1tB,OAAO,KAC/CyB,KAAK,YAAa,IAGV,aAFC0rB,EAAQjM,IAAc,EAAI+B,GAAkBX,GAAWkR,GAAc,OACpEtR,GAAY1J,IAAMwK,IAAmB,EAAI,MAGnDvhB,KAAK,QAAS,wBACd6jB,QAAQ,UAAWhC,IACnBhhB,MAAM,SAAU,QAChBgQ,GAAG,QAAS,KACXZ,GAAGtQ,MAAMyrB,kBAEIjsB,SAASwX,cAAc,sBAIxCogB,EAAmBx4B,OAAO,SACvBc,KAAK,2BAER,IAAI23B,EAAoBD,EAAmBx4B,OAAO,QAC/CsC,MAAM,cAAe,UACrBA,MAAM,oBAAqB,UAC3BA,MAAM,UAAW,OACjBA,MAAM,cAAe,KACrBtC,OAAO,SACPc,KAAK,WAEJ8kB,EAAYvI,GAAIgV,IAA8BzvB,OAChDya,GAAIgV,IAA8B,GAAGjkB,OAAOxL,OAC5Cya,GAAIgV,IAA8B,GAAGjkB,OAAO,GAAGxL,OAEjD61B,EAAkBz4B,OAAO,SACtByB,KAAK,IAAK,GACVA,KAAK,KAAM,SACXa,MAAM,YAAa,OACnBA,MAAM,cAAe,UACrBxB,KAAK,IAAI8kB,MAGZ,IAAI8J,EAAY+H,EAAqBz3B,OAAO,KACzCyB,KAAK,QAAS,cACdkuB,QAEHD,EAAUzd,UAAU,QACjBlR,KAAK6mB,GACLxV,QACApS,OAAO,QACPyB,KAAK,QAASwF,GAAKA,EAAEuuB,OACrB/zB,KAAK,KAAMwF,GAAK,QAAQA,EAAEtG,MAC1Bc,KAAK,IAAKwF,GAAKygB,EAAQ,CAACxL,OAAQjV,EAAEiV,OAAQjc,OAAQgH,EAAEhH,UACpDqC,MAAM,OAAQ,QACdA,MAAM,eAAgB2E,GAAKA,EAAEiF,OAC7B5J,MAAM,SAAU2E,QAAiB7D,IAAZ6D,EAAE4c,MAAsBnC,GAAoBza,EAAE4c,OACnEvhB,MAAM,UAAW2E,GAAKA,EAAEwiB,SAE3BiG,EAAUzd,UAAU,gCACjB0d,QAEHD,EAAUzd,UAAU,oCACjB3P,MAAM,SAAU,aAChBA,MAAM,iBAAkB,OACxBgQ,GAAG,YAAawlB,GAChBxlB,GAAG,aAAc0lB,GACjB1lB,GAAG,QAAS,KAAQZ,GAAGtQ,MAAMyrB,oBAGhC3C,GAA4B,CAC1BlE,aAAc,EACdrI,cAAeA,EACfjN,MAAOA,EACPyZ,OAAQ9G,GAAe,IACvB4G,MAAOyD,EACPxhB,MAAOohB,EAAkBpM,GAAa,EACtC/P,EAAGgc,EACH/b,EAAG8Q,GAAY1J,OAAMwK,GAAyBA,GAC/B,GAAb9B,KAGJgJ,GAA4B,CAC1BlE,aAAc,EACdrI,cAAeA,EACfjN,MAAOujB,EACP9J,OAAQ,CAAC1Z,IAAKonB,EAAc,GAAIvnB,IAAKunB,EAAc,IACnD5N,MAAOyD,EACPxhB,MAAOohB,EAAkB,EAAI,EAC7BjD,sBAAuB,0BACvBC,YAAa,GACb7Y,WAAYkQ,GAAiBvF,OAC7BjL,EAAGgc,EAAQG,EAAkBpM,GAAasS,EAAa,EACvDpiB,EAAG8Q,GAAY1J,OAAMwK,GAAyBA,GAC/B,GAAb9B,KAIJ,IAAIwQ,EAA8Blc,GAAIxV,OAAO,KAC1CyB,KAAK,QAAS,iCACda,MAAM,UAAW,GAGhBuuB,EAAiBa,EAA4B1xB,OAAO,KACrDyB,KAAK,QAAS,mBAGbqvB,EAAQlD,EACRmD,EAAQ7N,GAAevF,GAAehb,GAAGyO,EAAI8P,GAC5B,EAAnBmB,GACE4N,EAAU/M,GAAevF,GAAehb,GAAGyO,EAAI8P,GAC9B,EAAnBmB,GACEoS,EAAUvR,GAAevF,GAAehb,GAAGyO,EAAI8P,GAAa,EAC9DC,GAEO,GAALxe,IACFouB,GAAS,IACTd,GAAW,GACXwE,GAAW,IAGb,IAAIzD,EAAWH,EAAe7wB,OAAO,QAClCyB,KAAK,IAAKqvB,GACVrvB,KAAK,IAAKsvB,GACVtvB,KAAK,QAAS,mBACda,MAAM,oBAAqB,WAC3BA,MAAM,cAAe,UAExB0uB,EAAShxB,OAAO,SACbsC,MAAM,oBAAqB,WAC3BxB,KAAK,uBAERkwB,EAAShxB,OAAO,SACbyB,KAAK,IAAKqvB,GACVrvB,KAAK,KAAM,OACXa,MAAM,oBAAqB,WAC3BxB,KAAK,KAERkwB,EAAShxB,OAAO,SACbsC,MAAM,OAAQ,WACdA,MAAM,oBAAqB,WAC3BxB,KAAK,WAERkwB,EAAShxB,OAAO,SACbsC,MAAM,oBAAqB,WAC3BxB,KAAK,OAERkwB,EAAShxB,OAAO,SACbsC,MAAM,oBAAqB,WAC3BA,MAAM,OAAQ,WACdxB,KAAK,UAERkwB,EAAShxB,OAAO,SACbsC,MAAM,oBAAqB,WAC3BxB,KAAK,KAERkwB,EAAShxB,OAAO,SACbyB,KAAK,IAAKqvB,GACVrvB,KAAK,KAAM,OACXa,MAAM,oBAAqB,WAC3BxB,KAAK,aAERkwB,EAAShxB,OAAO,SACbsC,MAAM,oBAAqB,WAC3BA,MAAM,OAAQ,WACdxB,KAAK,QAERqqB,GAAU,CACRlB,MAAO4G,EACPzF,GAAIwC,EAAiB,EAAIzM,GAAmB,EAC5CkK,GAAI4E,EACJ3E,GAAIsC,EAAiB,EACrBrC,GAAIkJ,EACJjJ,GAAI,GACJC,MAAa,IAAN9oB,EACP+oB,OAAQ,eAIV,IAAIuF,EAAY/N,GAAevF,GAAehb,GAAGyO,EACjD6f,GAAa,EAAI5O,GAAmB,EAEpCoV,EAAqBz3B,OAAO,QACzByB,KAAK,QAAS,mBACdA,KAAK,IAAKmsB,EAAiBzM,IAC3B1f,KAAK,IAAKwvB,GACV3uB,MAAM,cAAe,UACrBA,MAAM,oBAAqB,YAC3BxB,KAAK,QAGR,IAAIszB,GAAoB1C,EAA4B1xB,OAAO,KACxDyB,KAAK,QAAS,sBAEjB2yB,GAAkBp0B,OAAO,QACtByB,KAAK,IAAKqyB,EAAWE,MACrBvyB,KAAK,IAAKsyB,GACVtyB,KAAK,QAAS,mBACda,MAAM,oBAAqB,YAC3BA,MAAM,cAAe,UACrBA,MAAM,cAAe,KACrBxB,KAAK,UACLd,OAAO,SACPyB,KAAK,KAAM,GACXa,MAAM,cAAe,KACrBxB,KAAK,iBAERqqB,GAAU,CACRlB,MAAOmK,GACPhJ,GAAI0I,EAAWE,KAAmB,EAClC3I,GAAI0I,EAAe,EACnBzI,GAAIwI,EAAWE,KACfzI,GAAIiE,EAAUrO,GAAmB,EACjCqK,GAAI,GACJC,OAAO,IAIT,IAAIiN,GAAoBhH,EAA4B1xB,OAAO,KACxDyB,KAAK,QAAS,sBAEjBqvB,EAAQ3D,EAAQ,GAChB4D,EAAQ7N,GAAevF,EAAgB,GAAG,GAAGvM,EAE7C,IAAIunB,GAAcD,GAAkB14B,OAAO,QACxCyB,KAAK,IAAKqvB,GACVrvB,KAAK,IAAKsvB,GACVtvB,KAAK,QAAS,mBACda,MAAM,oBAAqB,WAC3BA,MAAM,cAAe,UAERq2B,GAAY34B,OAAO,SAChCsC,MAAM,oBAAqB,WAC3BA,MAAM,cAAe,KACrBxB,KAAK,eAEEd,OAAO,SACdyB,KAAK,KAAM,GACXa,MAAM,cAAe,KACrBA,MAAM,oBAAqB,WAC3BxB,KAAK,aAER63B,GAAY34B,OAAO,SAChBsC,MAAM,oBAAqB,WAC3Bb,KAAK,IAAKqvB,GACVrvB,KAAK,KAAM,OACXX,KAAK,2BAER63B,GAAY34B,OAAO,SAChBsC,MAAM,oBAAqB,WAC3Bb,KAAK,IAAKqvB,GACVrvB,KAAK,KAAM,OACXX,KAAK,6BAERqqB,GAAU,CACRlB,MAAOyO,GACPtN,GAAI0F,EAAQ,GACZzF,GAAI0F,EAAqB,GAAb7P,GAAmB,GAC/BoK,GAAI6B,EAAQ,GACZ5B,GAAIwF,EAAQ7P,GAAa,EACzBsK,GAAI,GACJC,OAAO,IAITsF,EAAQ7N,GAAevF,EAAgB,GAAG,GAAGvM,EAE7C,IAAIwnB,GAAaF,GAAkB14B,OAAO,QACvCyB,KAAK,IAAKqvB,GACVrvB,KAAK,IAAKsvB,GACVtvB,KAAK,QAAS,mBACda,MAAM,oBAAqB,WAC3BA,MAAM,cAAe,UAExBs2B,GAAW54B,OAAO,SACfsC,MAAM,oBAAqB,WAC3BxB,KAAK,mBAER83B,GAAW54B,OAAO,SACfsC,MAAM,oBAAqB,WAC3Bb,KAAK,IAAKqvB,GACVrvB,KAAK,KAAM,OACXX,KAAK,iBAER83B,GAAW54B,OAAO,SACfsC,MAAM,oBAAqB,WAC3Bb,KAAK,IAAKqvB,GACVrvB,KAAK,KAAM,OACXX,KAAK,eAERqqB,GAAU,CACRlB,MAAOyO,GACPtN,GAAI0F,EAAQ,GACZzF,GAAI0F,EAAQ,GACZzF,GAAI6B,EAAQ,GACZ5B,GAAIwF,EAAQ7P,GAAa,EAAI,EAC7BsK,GAAI,GACJC,OAAO,EACPC,OAAQ,eAKagG,EAA4B1xB,OAAO,KACvDyB,KAAK,QAAS,qBAEAzB,OAAO,QACrByB,KAAK,IAAKyhB,GAAemP,IAA0B1vB,GAAGwO,GACtD1P,KAAK,IAAKyhB,GAAemP,IAA0B1vB,GAAGyO,EAAI,IAC1D3P,KAAK,QAAS,mBACdX,KAAK,IAAI4Q,GAAGiE,OAAO,MAAVjE,CAAiB2L,GAAIgV,IAA0B1vB,GAAGyL,YAgC9DoH,GAAIvD,UAAU,yDACXyE,aACA6C,MAAM,KACN5C,SAAS,KACT0N,KAAK3S,GAAGmY,gBACRvnB,MAAM,UAAW,mHzBjxDtB,IAAuBu2B,EAAaphB,wBAAbohB,QAAaphB,mB0B+7COnR,MAAMwyB,K1B97CxC/5B,IACDA,EAAuB6B,SAASC,cAAc,MAElD9B,EAAqBg6B,KAAOthB,EACrBohB,IAAgB95B,EAAqBg6B,2D0B47C5BzyB,MAAMkvB,8BACElvB,MAAMwyB,uGAJRxyB,MAAMwyB,qBAFNxyB,OAAkBA,MAAMwyB,qBACxBxyB,cAHlBlG,SAKEJ,uCAJUsG,QAA4BA,SAA5BA,QAA4BA,6EACtBA,OAAkBA,MAAMwyB,8BACxBxyB,qFAiHDA,KAAsB2O,mBACjB3O,KAAsB4O,sBACxB5O,KAAsB6O,qBACrB7O,KAAsB8O,sBACtB9O,KAAsB+O,uBACrB/O,KAAsBgP,2BACnBhP,KAAsBiP,mCACzBjP,yBACC4sB,uBACCC,qFATP7sB,KAAsB2O,+BACjB3O,KAAsB4O,kCACxB5O,KAAsB6O,iCACrB7O,KAAsB8O,kCACtB9O,KAAsB+O,mCACrB/O,KAAsBgP,uCACnBhP,KAAsBiP,+JAXSjP,KAAS,GAAGpE,mBAChD,YACHoE,KAAS0yB,oBACV1yB,yBAHEA,yFAAsCA,KAAS,GAAGpE,8BAEnDoE,KAAS0yB,mCACV1yB,sJARoDA,KAAS,GAAGpE,aAC5DoE,KAAS,GAAG8H,iBACT9H,KAAS0yB,oBACV1yB,yBAHEA,yFAA4CA,KAAS,GAAGpE,2BAC5DoE,KAAS,GAAG8H,+BACT9H,KAAS0yB,mCACV1yB,sJAXyCA,KAASA,MAAmBpE,aACrEoE,KAASA,MAAmBiH,iBACzBjH,KAAS0yB,sBACR1yB,KAAS2yB,kBACnB3yB,MAAiBpE,MAAM,GAAKoE,MAAiBub,uBAC5Bvb,KAAS2yB,2BAClB3yB,yBANCA,yFAAsCA,KAASA,MAAmBpE,2BACrEoE,KAASA,MAAmBiH,+BACzBjH,KAAS0yB,oCACR1yB,KAAS2yB,kBACnB3yB,MAAiBpE,MAAM,GAAKoE,MAAiBub,qCAC5Bvb,KAAS2yB,0CAClB3yB,yMA/DrBA,KAAUxF,WA1CRwF,6BAAL1D,sFAkGD0D,KAAavF,MAAmC,SAA3BuF,KAAavF,KAAKsD,OAAyC,GAAtBiC,OAQrDA,KAAavF,MAAmC,SAA3BuF,KAAavF,KAAKsD,OAKvCiC,KAAavF,MAAmC,SAA3BuF,KAAavF,KAAKsD,OAKvCiC,KAAsBsQ,gFAcdtQ,yBACLA,69BA9FSA,KAAUsQ,KAAO,EAAI,6QAwB3BtQ,wBACUA,oLAkBNA,2CADQA,yWArF9BlG,SAGEJ,OAEEA,kEAoCEA,OAGEA,cAGAA,qBAMJA,OAEIA,cAUAA,OAKAA,cAGAA,cAKFA,OAEEA,cAIAA,OACEA,OAEEA,OACAA,OACAA,WAJkBsG,aAa5BtG,yBAKFI,4EAhD+EkG,mBAc7DA,wEA/DLA,eAAL1D,sIAAAA,gCA0CG0D,KAAUxF,gDALGwF,KAAUsQ,KAAO,EAAI,+BAwB3BtQ,iCACUA,kCAkBNA,kBADQA,8Q1BlrC9B,SAAsB4yB,EAAYvxB,GAC9B,IAAK,IAAIhF,EAAI,EAAGA,EAAIu2B,EAAWt2B,OAAQD,GAAK,EACpCu2B,EAAWv2B,IACXu2B,EAAWv2B,GAAGsE,EAAEU,0H0BtUtBwxB,EACAC,MAAoB35B,KAAK,QAAS,SAAU,WAC5C0jB,EAAqB,QACzBjY,GAAwBX,IAAI4Y,OACxBkW,EAA6BlW,EAC7BmW,OAAWl2B,EACXoS,OAAMpS,QAKJue,EAAmBV,GAAeU,iBAClCT,EAAaD,GAAeC,WAE5BE,EAAYH,GAAeG,UAC3BC,EAAcJ,GAAeI,YAC7BC,EAAgBL,GAAeK,cAC/BC,EAAiBN,GAAeM,eAEhCE,EAAkBR,GAAeQ,gBAGjCS,EAAcjB,GAAeiB,YAE7BM,EAAoBvB,GAAeuB,sBAIrCoJ,QAAcxoB,OAAWA,GAC7BiI,GAAgBV,UAAWhJ,IAAUiqB,EAAajqB,QAE9CuhB,OAAiB9f,EACrB6H,GAAoBN,UAAWhJ,IAAUuhB,EAAiBvhB,QAEtDyhB,OAAiBhgB,EACrB+H,GAAoBR,UAAWhJ,IAAUyhB,EAAiBzhB,IAG1DyJ,GAAoBT,UAAWhJ,WAE3B2hB,OAAelgB,EACnBkI,GAAkBX,UAAWhJ,QAAU2hB,EAAe3hB,KAGtD4J,GAA+BZ,UAAUhJ,OAKzCoJ,GAAqBJ,UAAWhJ,WAE5BshB,OAAkB7f,EACtB4H,GAAqBL,UAAWhJ,IAAUshB,EAAkBthB,QAExDswB,OAAc7uB,EAClBoI,GAAiBb,UAAWhJ,IAAUswB,EAActwB,QAEhDwwB,OAAwB/uB,EAC5BqI,GAAuBd,UAAWhJ,QAChCwwB,EAAwBxwB,SAGtByV,OAAYhU,EAChBwI,GAAWjB,UAAWhJ,IAAUyV,EAAYzV,QAExCywB,OAAYhvB,EAChBuI,GAAehB,UAAWhJ,QAAUywB,EAAYzwB,SAE5CmqB,OAA4B1oB,EAChCyI,GAA+BlB,UAAYhJ,IAAUmqB,EAA4BnqB,QAE7EuK,OAAQ9I,EACR6I,OAAS7I,EACToZ,OAAQpZ,EACRm2B,GAAgB1d,UAAW,GAAIlS,OAAQ,EAAG5I,KAAM,MAChDy4B,GAAuB,EACvBC,GAAwB,EACxBC,GAA8B,EAC9BC,GAA+B,EAC/BC,OAAkBx2B,EAClBy2B,GAAiB,EAGjBxc,OAAMja,QAeJivB,GACJnwB,MAAS,EACT43B,SAAY,EACZC,SAAY,EACZC,SAAY,EACZC,SAAY,EACZC,WAAc,EACdC,SAAY,EACZC,SAAY,EACZC,SAAY,EACZC,SAAY,EACZC,WAAc,GACdnsB,OAAU,IAGNosB,GACJC,GAAI3zB,MAAO,eAAgB8f,OAAQ,eAAgBI,OAAQ,gBAC3D0T,GAAI5zB,MAAO,mBAAoB8f,OAAQ,kBAAmBI,OAAQ,iBAClE2T,GAAI7zB,MAAO,mBAAoB8f,OAAQ,kBAAmBI,OAAQ,iBAClE4T,GAAI9zB,MAAO,mBAAoB8f,OAAQ,kBAAmBI,OAAQ,iBAClE6T,GAAI/zB,MAAO,mBAAoB8f,OAAQ,kBAAmBI,OAAQ,iBAClE8T,GAAIh0B,MAAO,mBAAoB8f,OAAQ,kBAAmBI,OAAQ,iBAClE+T,GAAIj0B,MAAO,mBAAoB8f,OAAQ,kBAAmBI,OAAQ,iBAClEgU,GAAIl0B,MAAO,mBAAoB8f,OAAQ,kBAAmBI,OAAQ,iBAClEiU,GAAIn0B,MAAO,mBAAoB8f,OAAQ,kBAAmBI,OAAQ,iBAClEkU,GAAIp0B,MAAO,mBAAoB8f,OAAQ,kBAAmBI,OAAQ,iBAClEmU,IAAKr0B,MAAO,mBAAoB8f,OAAQ,kBAAmBI,OAAQ,iBACnEoU,IAAKt0B,MAAO,gBAAiB8f,OAAQ,gBAAiBI,OAAQ,sBAe5DqU,EAZAC,IACDxC,KAAM,aAActD,MAAO,WAC3BsD,KAAM,aAActD,MAAO,WAC3BsD,KAAM,WAAYtD,MAAO,SACzBsD,KAAM,aAActD,MAAO,WAC3BsD,KAAM,aAActD,MAAO,WAC3BsD,KAAM,eAAgBtD,MAAO,aAC7BsD,KAAM,aAActD,MAAO,WAG1B+F,EAAgBD,EAAa,GAAGxC,KAGhC0C,GAAqB,EACrBC,GAA2B,EAC3BC,GAAuB,EACvBC,EAAiB,WAmDfpO,GAAoCtmB,EAAGtE,EAAGkT,UACtBzS,IAApBw2B,GACJpkB,EAAI9S,kCAAkCuE,EAAE0C,OACrCrH,MAAM,UAAW,IAGhBkrB,GAAqCvmB,EAAGtE,EAAGkT,UAGvBzS,IAApBw2B,GACJpkB,EAAI9S,kCAAkCuE,EAAE0C,OACrCrH,MAAM,UAAW,IAGhBmrB,GAA2BxmB,EAAGtE,EAAGkT,EAAGV,EAAWwI,QACnDjM,GAAGtQ,MAAMyrB,uBACT6O,GAAuB,GAEnB9B,IAAoB3yB,EAAE0C,UAExB6xB,GAAqB,GAErB5B,OAAkBx2B,EAClBoS,EAAI9S,kCAAkCuE,EAAE0C,OACrCrH,MAAM,UAAW,YAMpBk5B,EAAoBv0B,EAAE0C,OACJ1C,EAAEmH,OACDnH,EAAE+U,YAAY7G,GAAWiH,WAKxCkV,EAAWlO,EAAeD,GAAoBxF,EAAgB,GAC9D4T,EAAWnO,EAAeD,GAAoBxF,GAC9CjN,EAAQZ,KAAKQ,IAAIghB,EAAUC,QAGPnuB,IAApBw2B,IAEFpkB,EAAI9S,kCAAkCk3B,GACnCt3B,MAAM,UAAW,GACpBkT,EAAI9S,kCAAkCuE,EAAE0C,OACrCrH,MAAM,UAAW,QAIlBg3B,EAAW5nB,GAAGhP,OAAO,YACrBk5B,GAAWtC,EAASh3B,MAAM,UAAUkQ,QAAQ,KAAM,IAAM,EACxDqpB,GAAYvC,EAASh3B,MAAM,SAASkQ,QAAQ,KAAM,IAClDwkB,EAAgB,IAAM4E,EAAU,IAChCE,EAAYhQ,EAA0BztB,OAAO4L,KAAKooB,GAAgB1U,IAElEoe,EAAO,EACPpe,EAAgB,GAClBoe,GAAQD,EAAY5Z,EAAYzJ,MAAQ,EACxCsjB,EAAO7Z,EAAYzJ,KAAOsjB,EAAO,MAEjCA,GAAQF,EAAW3Z,EAAYE,MAAQ0Z,GAAa,EACpDC,EAAOD,EAAYC,EAAO,WAGtB9E,EAAar2B,SAASs2B,eAAe,cAC3CD,EAAW30B,MAAMkW,IAASwe,OAC1BC,EAAW30B,MAAMmW,KAAUsjB,OAC3B9E,EAAW30B,MAAM60B,SAAW,WAE5ByC,EAAkB3yB,EAAE0C,UAGpB0xB,EAASrC,WAAatoB,SACtB2qB,EAASpC,kBAAoBtb,GAAiB,OAK5Cqe,eAEoB54B,IAApBw2B,MAEF4B,GAAqB,GAErBhmB,EAAI9S,kCAAkCk3B,GACnCt3B,MAAM,UAAW,GACpBs3B,OAAkBx2B,UAIX6uB,EACPzc,EAAI9S,OAAO,mBACRmP,SAAS,iBAIL2nB,OACH7b,EAAgB0U,EAAekH,EAAa1d,WAChDogB,GAAqBte,EAAe4b,EAAa2C,KAAM3C,EAAa4C,MACpEzqB,GAAGhP,OAAO62B,EAAa2C,KAAK3C,EAAa4C,OACtCtqB,SAAS,mBAIL4nB,GACP2C,MAgDEA,QACJ3C,GAAwB,EACxBC,GAA8B,MAE1BnQ,EAAa8I,EAAekH,EAAa1d,WACzC8S,EAAY4K,EAAa5vB,MAC7B6L,EAAI9S,kBAAkB6mB,UAAmBoF,KACtCjsB,OAAO,iBACP4iB,QAAQ,UAAU,GAErBiU,EAAax4B,KAAKgb,WAAWtd,QAAQggB,QAC/B8K,EAAa8I,EAAe5T,EAAKvC,OAAOL,WACxC8S,EAAYlQ,EAAKvC,OAAOvS,MAC5B6L,EAAI9S,kBAAkB6mB,UAAmBoF,KACtCjsB,OAAO,iBACP4iB,QAAQ,UAAU,KAIvB9P,EAAI9S,OAAO,gBACRuP,UAAU,QACVC,SAGoBsD,EAAI9S,OAAO,gBAC/BuP,UAAU,SACVxK,OAAOR,GACCA,EAAEihB,mBAAqByR,GAE/Br3B,MAAM,aAAc,UAGvBu3B,GAAiB,GAGjBrkB,EAAIvD,cAAckR,YACfmC,QAAQ,UAAWhC,GACtB9N,EAAIvD,UAAU,iBAAiBqT,QAAQ,UAAWhC,GAClD9N,EAAIvD,UAAU,kBAAkBqT,QAAQ,UAAWhC,GAGnC9N,EAAI9S,OAAO,eAAeA,OAAO,gBACvCuP,uBAAuBsX,KAAcoF,KAC5CjY,aACA2N,KAAK3S,GAAG+W,cACR9R,SAAS,KACTrU,MAAM,SAAUgf,GAChBhf,MAAM,eAAgBmf,GACtBnf,MAAM,UAAW+e,GAGpB7L,EAAIvD,UAAU,iEACXyE,WAAW,UACXC,SAAS,KACT0N,KAAK3S,GAAGmY,gBACRvnB,MAAM,UAAW,GACjBgQ,GAAG,OAAQrL,EAAGtE,EAAGkT,KAChBL,EAAIvD,UAAU,iEAAiEC,SAC/EsD,EAAIvD,UAAU,yBAAyBC,SACvCsD,EAAI9S,OAAO,qBAAqB4iB,QAAQ,UAAU,KAItD9P,EAAI9S,4BAA4B6mB,GAC7BtX,UAAU,gBACVyT,MAAM2W,EAAIC,EAAIC,KACb7qB,GAAGhP,OAAO65B,EAAGD,IACVh6B,MAAM,iBAAkB,SAG/BkT,EAAI9S,6BAA4B6mB,EAAa,IAC1CtX,UAAU,gBACVyT,MAAM2W,EAAIC,EAAIC,KAEb7qB,GAAGhP,OAAO65B,EAAGD,IACVh6B,MAAM,iBAAkB,OACxBgQ,GAAG,YAAawS,IAChBxS,GAAG,aAAcyS,IACjBzS,GAAG,QAAS0S,UAInBuU,EAAa1d,UAAY,UACzB0d,EAAa5vB,OAAS,SACtB4vB,EAAax4B,KAAO,QAEpB44B,GAA+B,GAG3B6C,IAA4Cv1B,EAAGtE,EAAGkT,SAElD0T,EAAa8I,EAAeprB,EAAE4U,WAC9B8S,EAAY1nB,EAAE0C,MACF6L,EAAI9S,OAAO,eAAeA,OAAO,gBAEvCuP,uBAAuB0nB,KAA+BhL,KAC7DR,QACAzX,aACA2N,KAAK3S,GAAGmY,gBACRlT,SAAS,KACTrU,MAAM,SAAUif,GAChBjf,MAAM,eAAgB,KACtBA,MAAM,UAAW,GAGpBoP,GAAGhP,OAAOmT,EAAElT,IAAID,OAAO,iBACpB4iB,QAAQ,UAAU,OAGjBmX,EAAuBlT,EAAa,EACpCA,IAAeoQ,EAA8B,IAC/C8C,EAAuBlT,EAAa,GAGtC/T,EAAI9S,kBAAkB+5B,UAA6B9N,KAChDjsB,OAAO,iBACP4iB,QAAQ,UAAU,IAGjBoX,IAA6Cz1B,EAAGtE,EAAGkT,SAEnD0T,EAAa8I,EAAeprB,EAAE4U,WAC9B8S,EAAY1nB,EAAE0C,MACF6L,EAAI9S,OAAO,eAAeA,OAAO,gBAEvCuP,uBAAuB0nB,KAA+BhL,KAC7DjY,aACA2N,KAAK3S,GAAG+W,cACR9R,SAAS,KACTrU,MAAM,SAAUgf,GAChBhf,MAAM,eAAgBmf,GACtBnf,MAAM,UAAW+e,GAGpB3P,GAAGhP,OAAOmT,EAAElT,IAAID,OAAO,iBACpB4iB,QAAQ,UAAU,OAGjBmX,EAAuBlT,EAAa,EACpCA,IAAeoQ,EAA8B,IAC/C8C,EAAuBlT,EAAa,GAGtC/T,EAAI9S,kBAAkB+5B,UAA6B9N,KAChDjsB,OAAO,iBACP4iB,QAAQ,UAAU,IAGjBqX,IAAwC11B,EAAGtE,EAAGkT,SAC9C0T,EAAa8I,EAAeprB,EAAE4U,WAC9B8S,EAAY1nB,EAAE0C,MAIlB6L,EAAI9S,kBAAkB6mB,EAAa,UAAUoF,KAC1CzuB,OACA08B,kBAAkBC,MAAM,WA6HvBZ,IAAwBte,EAAe9H,EAAGlT,KAE1CsvB,IACFzc,EAAI9S,OAAO,gBAAgBwP,SAC3BsD,EAAI9S,OAAO,sBAAsBwP,SACjCsD,EAAIvD,UAAU,sBAAsBC,SAIpCsD,EAAI9S,OAAO,eACRuP,UAAU,gBACV3P,MAAM,UAAW,GAEpBmJ,GAAuBlB,KACnBqM,MAAM,EACN3B,YAGJvJ,GAA4BnB,KAAI,IAElCiB,GAAiBjB,KAAI,GACrBivB,GAAuB,EAGvBhkB,EAAIvD,cAAckR,YACfmC,QAAQ,UAAWhC,GACtB9N,EAAIvD,UAAU,iBAAiBqT,QAAQ,UAAWhC,GAClD9N,EAAIvD,UAAU,kBAAkBqT,QAAQ,UAAWhC,OAGnDuW,GAAiB,WAGRnkB,EAAI,EAAGA,EAAI2H,EAAIM,EAAgB,GAAG/a,OAAQ8S,IACjDF,EAAI9S,kBAAkBib,EAAgB,UAAUjI,KAC7CpD,GAAG,YAAawS,IAChBxS,GAAG,aAAcyS,IACjBzS,GAAG,QAAS0S,IAIjBxP,EAAI9S,OAAO,gBACRuP,UAAU,QACVC,SACH0nB,OAAkBx2B,EAGlBoS,EAAI9S,6BAA4Bib,EAAgB,IAC7C1L,UAAU,iBACV3P,MAAM,eAAgB,GAEzBoP,GAAGhP,OAAOmT,EAAElT,IACTD,OAAO,iBACPJ,MAAM,eAAgB,GAGzBkT,EAAIvD,2BAA2B0L,EAAgB,oCACpBA,EAAgB,2BACzBA,oCACSA,KACxBrb,MAAM,cAAe,cAIxBi3B,EAAa1d,UAAY,UACzB0d,EAAa5vB,OAAS,SACtB4vB,EAAax4B,KAAO,aACpB26B,GAAuB,OAGnBhO,EAAoBlY,EAAI9S,OAAO,2BAGnC6I,GAA+BhB,KAAI,GAEnCmjB,EAAkBhX,WAAW,UAC1BC,SAAS,KACT0N,KAAK3S,GAAGmY,gBACRvnB,MAAM,UAAW,GACjBgQ,GAAG,OAAQrL,EAAGtE,EAAGkT,KAAQnE,GAAGhP,OAAOmT,EAAElT,IAAIuP,WAG5CsD,EAAIvD,UAAU,kBAAkBC,SAGhCsD,EAAIvD,UAAU,iEACXyE,WAAW,UACXC,SAAS,KACT0N,KAAK3S,GAAGmY,gBACRvnB,MAAM,UAAW,GACjBgQ,GAAG,OAAQrL,EAAGtE,EAAGkT,KAChBL,EAAIvD,UAAU,iEAAiEC,SAC/EsD,EAAIvD,UAAU,yBAAyBC,gBAIrB9O,IAAlBwoB,EAAW,QACTkR,EAAc1Z,EAAeD,GAAoByI,EAAW,SAC1CxoB,IAAlBwoB,EAAW,GACbpW,EAAI9S,kBAAkBkpB,EAAW,WAAWA,EAAW,MACpDlpB,OAAO,oBACPgjB,MAAMze,EAAGtE,EAAGkT,IAAM0N,GAAWtc,EAAGtE,EAAGkT,EAAGinB,IAEzCtnB,EAAI9S,4BAA4BkpB,EAAW,IACxC3Z,UAAU,oBACVyT,MAAMze,EAAGtE,EAAGkT,IAAM0N,GAAWtc,EAAGtE,EAAGkT,EAAGinB,YAKpCn6B,EAAI,EAAGA,EAAIye,EAAWze,IAC7B0mB,IAAYE,WAAY5mB,EAAG6X,QAAS0I,EAAevgB,GAAG,GAAGwO,EACvDqY,SAAQ,EAAOjQ,MAAM,IAAKkQ,QAAS,IAGvCJ,IAAYE,WAAYnI,EAAY,EAClC5G,QAAS0I,EAAe9B,EAAY,GAAG,GAAGjQ,EAAGsY,QAAS,EACtDD,SAAQ,EAAOjQ,MAAM,IAAKoQ,eAExBnU,EAAI9S,OAAO,gBACRJ,MAAM,aAAc,WAGvBkT,EAAI9S,OAAO,qBACR4iB,QAAQ,UAAU,OAIrBN,IAAoB/d,EAAGtE,EAAGkT,KAC9BnE,GAAGtQ,MAAMyrB,sBACL8B,EAAY1nB,EAAE0C,aAGlB4vB,EAAa1d,UAAY5U,EAAE4U,iBAC3B0d,EAAa5vB,MAAQ1C,EAAE0C,aACvB4vB,EAAax4B,KAAOkG,SACpBsyB,EAAa4C,KAAOx5B,SACpB42B,EAAa2C,KAAOrmB,KAGL,SAAX5O,EAAE5C,MAA8B,SAAX4C,EAAE5C,MAA8B,SAAX4C,EAAE5C,UAC1CtD,aACK4L,EAAI,EAAGA,EAAI1F,EAAE8U,WAAWnZ,OAAQ+J,IACvC5L,EAAKkD,MACH/B,MAAO+E,EAAE8U,WAAWpP,GAAGuP,OAAO9N,OAC9Bb,OAAQtG,EAAE8U,WAAWpP,GAAGyP,OACxBhO,OAAQnH,EAAE8U,WAAWpP,GAAGwP,KAAK/N,aAG7BuP,EAAgB0U,EAAeprB,EAAE4U,WACrC9a,EAAKi4B,WAAa5V,EAAeD,GAAoBxF,GACrD5c,EAAKoS,kBAAoBwK,GAAiB,MAC1C0d,EAAWt6B,OAGT4c,EAAgB0U,EAAeprB,EAAE4U,cAEvB,QAAV5U,EAAE5C,MAA4B,QAAV4C,EAAE5C,aACxBo3B,GAA2B,GACtBhC,KAICxyB,EAAE0C,QAAU+vB,EAEd0C,UAKA5mB,EAAI9S,kBAAkBib,UAAsB+b,KACzCh3B,OAAO,iBACP4iB,QAAQ,UAAU,GAErB9P,EAAI9S,kBAAkBib,EAAgB,UAAU+b,KAC7Ch3B,OAAO,iBACP4iB,QAAQ,UAAU,OAEjBoK,EAAYla,EAAI9S,OAAO,eAAeA,OAAO,gBAEjDgtB,EAAUzd,uBAAuB0L,KAAiB+b,KAC/ChjB,aACA2N,KAAK3S,GAAG+W,cACR9R,SAAS,KACTrU,MAAM,SAAUgf,GAChBhf,MAAM,eAAgBmf,GACtBnf,MAAM,UAAW+e,OAEhB8P,EAAa3b,EAAI9S,OAAO,gBAC5ByuB,EAAWzuB,8BAA8Bg3B,GACtCp3B,MAAM,UAAW,GAGpBkT,EAAI9S,kBAAkBib,UAAsBgR,KACzCjsB,OAAO,iBACP4iB,QAAQ,UAAU,GAErB9P,EAAI9S,kBAAkBib,EAAgB,UAAUgR,KAC7CjsB,OAAO,iBACP4iB,QAAQ,UAAU,GAErBoK,EAAUzd,uBAAuB0L,KAAiBgR,KAC/CR,QACAzX,aACA2N,KAAK3S,GAAGmY,gBACRlT,SAAS,KACTrU,MAAM,SAAUif,GAChBjf,MAAM,eAAgB,KACtBA,MAAM,UAAW,GAEpB6uB,EAAWzuB,8BAA8BisB,GACtCrsB,MAAM,UAAW,GAEpBo3B,EAA6B/K,QA/UZhR,EAAehb,KACtC82B,GAAwB,EACxBC,EAA6B/2B,EAC7Bg3B,EAA8Bhc,MAG1B2b,EAAW5nB,GAAGhP,OAAO,YACrBk5B,GAAWtC,EAASh3B,MAAM,UAAUkQ,QAAQ,KAAM,IAAM,EACxDqpB,GAAYvC,EAASh3B,MAAM,SAASkQ,QAAQ,KAAM,IAClDwkB,EAAgB,IAAM4E,EAAU,IAEhCG,EAAO,EACPpe,EAAgB,GAClBoe,EAAO7Y,EAAevF,EAAgB,GAAG,GAAGxM,EAAI,GAChD4qB,EAAOA,EAAO,EAAI,MAElBA,GAAQF,EAAW3Y,EAAevF,GAAe,GAAGxM,EAAI+P,GAAc,EACtE6a,EAAO7Y,EAAevF,GAAe,GAAGxM,EAAI+P,EAAa6a,EAAO,WAI5D9E,EAAar2B,SAASs2B,eAAe,cAC3CD,EAAW30B,MAAMkW,IAASwe,OAC1BC,EAAW30B,MAAMmW,KAAUsjB,OAC3B9E,EAAW30B,MAAM60B,SAAW,WAGL3hB,EAAI9S,OAAO,gBAC/BuP,UAAU,SACVxK,OAAOR,GACCA,EAAEihB,mBAAqBvK,GAE/Brb,MAAM,aAAc,cAGvBu3B,GAAiB,GAGjBrkB,EAAI9S,OAAO,qBACR4iB,QAAQ,UAAU,GAGrB9P,EAAIvD,cAAckR,YACfmC,QAAQ,UAAU,GACrB9P,EAAIvD,UAAU,iBAAiBqT,QAAQ,UAAU,GACjD9P,EAAIvD,UAAU,kBAAkBqT,QAAQ,UAAU,GAClD9P,EAAI9S,WAAW83B,EAAgB7c,GAAewF,IAC3CmC,QAAQ,UAAU,OAGjB6H,EAAQjK,EAAevF,EAAgB,GAAGhb,GAAGwO,EAE7Ckc,EAAanK,EAAevF,GAAehb,GAAGwO,EAAI+P,EAAa,EAG/D6b,EAAa7wB,EAAQmhB,EAAa7K,EAAoB,EACtDwa,EAAY7P,EAAQjK,EAAe,GAAG,GAAG/R,KAGzC4rB,EAAaC,OACXhT,IAAUxQ,OAAQ,KAAMqK,MAAO,qBAAsB4F,QAAS,MAC/DjQ,OAAQ,MAAOqK,MAAO,qBAAsB4F,QAAS,KACrDjQ,OAAQ,OAAQqK,MAAO,qBAAsB4F,QAAS,IACzDK,GAAmB,yBAA0BE,GAG7CA,IAAUxQ,OAAQ,KAAMqK,MAAO,qBAAsB4F,QADhC,IAAwBuT,EAAYD,GAA5B,IAAO,OAEjCvjB,OAAQ,OAAQqK,MAAO,qBAAsB4F,QAAS,MACzDK,GAAmB,wBAAyBE,YAExCA,IAAUxQ,OAAQ,KAAMqK,MAAO,qBAAsB4F,QAAS,IAC/DjQ,OAAQ,MAAOqK,MAAO,qBAAsB4F,QAAS,KACrDjQ,OAAQ,OAAQqK,MAAO,qBAAsB4F,QAAS,MACzDK,GAAmB,wBAAyBE,GAG5CA,IAAUxQ,OAAQ,KAAMqK,MAAO,qBAAsB4F,QAAS,MAC3DjQ,OAAQ,OAAQqK,MAAO,qBAAsB4F,QAF1B,IAAwBsT,EAAaC,GAA7B,IAAO,OAGrClT,GAAmB,yBAA0BE,GAG/CoH,GAAe,yBACb/D,EAAa7K,EAAoB,EAAI,GACrC,EAAGua,EAAY9wB,EAASiW,EAAY1J,KAEtC4Y,GAAe,wBACblO,EAAe,GAAG,GAAG/R,EAAIqR,EAAoB,EAC7C,EAAGwa,EAAW/wB,EAASiW,EAAY1J,KAErChD,EAAIvD,UAAU,gBACXK,GAAG,QAAS0pB,OAGX7K,EAAa3b,EAAI9S,OAAO,wBAEnBgT,EAAI,EAAGA,EAAI2H,EAAIM,EAAgB,GAAG/a,OAAQ8S,IACjDyb,EAAWnxB,OAAO,QACfyB,KAAK,QAAS,sBACdA,KAAK,2BAA4BiU,GACjCjU,KAAK,IAAKyhB,EAAevF,EAAgB,GAAGjI,GAAGvE,EALtC,GAMT1P,KAAK,IAAKyhB,EAAevF,EAAgB,GAAGjI,GAAGtE,EANtC,GAOT3P,KAAK,QAAU,EAAIyf,EAAa+B,EAAmB,IACnDxhB,KAAK,SAAUyf,EAAa,IAC5Bzf,KAAK,KAAM,IACXa,MAAM,OAAQ,4BACdA,MAAM,UAAW,GAGpBkT,EAAI9S,kBAAkBib,EAAgB,UAAUjI,KAC7CpT,MAAM,iBAAkB,OACxBA,MAAM,SAAU,WAChBgQ,GAAG,YAAakqB,IAChBlqB,GAAG,aAAcoqB,IACjBpqB,GAAG,QAASqqB,IAEjBxL,EAAWxB,QAGXwB,EAAWzuB,8BAA8BC,GACtCL,MAAM,UAAW,IAoKhB26B,CAAgBtf,EAAe1W,EAAE0C,OA0DrB,SAAX1C,EAAE5C,MAAmC,WAAhB4C,EAAE4U,WAA4B2d,EAgCnC,SAAXvyB,EAAE5C,MAAmC,WAAhB4C,EAAE4U,YAA2B2d,GAC1DyC,GAAqBte,EAAe9H,EAAGlT,MAjkBHsE,EAAG4O,EAAGlT,EAAGgb,KAC/C6b,GAAuB,EAEvBhkB,EAAIvD,cAAckR,YACfmC,QAAQ,UAAU,GACrB9P,EAAIvD,UAAU,iBAAiBqT,QAAQ,UAAU,GACjD9P,EAAIvD,UAAU,kBAAkBqT,QAAQ,UAAU,GAGlD9P,EAAI9S,OAAO,qBACR4iB,QAAQ,UAAU,GAGrB9P,EAAI9S,6BAA4Bib,EAAgB,IAC7C1L,UAAU,iBACV3P,MAAM,eAAgB,GAEzBoP,GAAGhP,OAAOmT,EAAElT,IACTD,OAAO,iBACPJ,MAAM,eAAgB,OAOzBu3B,GAAiB,GAGjBtuB,GAA+BhB,KAAI,GAGnCiL,EAAIvD,2BAA2B0L,EAAgB,oCACpBA,EAAgB,2BACzBA,oCACSA,KACxBrb,MAAM,cAAe,OAIxBoP,GAAGhP,OAAO,YACP4P,GAAG,QAAS0pB,IAwfbkB,CAA+Bj2B,EAAG4O,EAAG8Y,EAAWhR,GAE5B,aAAhB1W,EAAE4U,UACJ2V,GAAU7T,EAAe1W,EAAG0nB,EAAWziB,EAAOD,EAC5CshB,EAAkCC,EAClCC,GAGqB,aAAhBxmB,EAAE4U,UACT8V,GAAUhU,EAAe1W,EAAG0nB,EAAWziB,EAAOD,EAC5CshB,EAAkCC,EAClCC,GAGqB,aAAhBxmB,EAAE4U,UACTgW,GAAUlU,EAAe1W,EAAG0nB,EAAWziB,EAAOD,EAC5CshB,EAAkCC,EAClCC,GAGqB,aAAhBxmB,EAAE4U,UACTmW,GAAUrU,EAAe1W,EAAG0nB,EAAWziB,EAAOD,EAC5CshB,EAAkCC,EAClCC,GAGqB,WAAhBxmB,EAAE4U,WACTwb,GAAY1Z,EAAe1W,EAAG0nB,EAAWziB,EAAOD,KAShD6Y,IAAwB7d,EAAGtE,EAAGkT,QAE9B2jB,aAGAjQ,EAAa8I,EAAeprB,EAAE4U,WAC9B8S,EAAY1nB,EAAE0C,SACF6L,EAAI9S,OAAO,eAAeA,OAAO,gBAEvCuP,uBAAuBsX,KAAcoF,KAC5CR,QACAzX,aACA2N,KAAK3S,GAAGmY,gBACRlT,SAAS,KACTrU,MAAM,SAAUif,GAChBjf,MAAM,eAAgB,KACtBA,MAAM,UAAW,GAGpBoP,GAAGhP,OAAOmT,EAAElT,IAAID,OAAO,iBACpB4iB,QAAQ,UAAU,GAGO,IAAxBre,EAAE8U,WAAWnZ,YACX6b,EAAOxX,EAAE8U,WAAW,GACpBwN,EAAa8I,EAAe5T,EAAKvC,OAAOL,WACxC8S,EAAYlQ,EAAKvC,OAAOvS,MAC5B6L,EAAI9S,kBAAkB6mB,UAAmBoF,KACtCjsB,OAAO,iBACP4iB,QAAQ,UAAU,QAErB9P,EAAI9S,6BAA4B6mB,EAAa,IAC1CtX,UAAU,gBACVA,UAAU,iBACVqT,QAAQ,UAAU,GAIH,WAAhBre,EAAE4U,WACJnK,GAAGhP,OAAOmT,EAAElT,IACTD,OAAO,gBACPJ,MAAM,UAAW,IACjBA,MAAM,kBAAmB,cAc1ByiB,IAAyB9d,EAAGtE,EAAGkT,SAI/B2jB,IAGAC,GACFxyB,EAAE4U,YAAc0d,EAAa1d,WAC7B5U,EAAE0C,QAAU4vB,EAAa5vB,YACrB4f,EAAa8I,EAAeprB,EAAE4U,WAC9B8S,EAAY1nB,EAAE0C,SACF6L,EAAI9S,OAAO,eAAeA,OAAO,gBAEvCuP,uBAAuBsX,KAAcoF,KAC5CjY,aACA2N,KAAK3S,GAAG+W,cACR9R,SAAS,KACTrU,MAAM,SAAUgf,GAChBhf,MAAM,eAAgBmf,GACtBnf,MAAM,UAAW+e,GAEpB3P,GAAGhP,OAAOmT,EAAElT,IAAID,OAAO,iBAAiB4iB,QAAQ,UAAU,GAE9B,IAAxBre,EAAE8U,WAAWnZ,YACX6b,EAAOxX,EAAE8U,WAAW,GACpBwN,EAAa8I,EAAe5T,EAAKvC,OAAOL,WACxC8S,EAAYlQ,EAAKvC,OAAOvS,MAC5B6L,EAAI9S,kBAAkB6mB,UAAmBoF,KACtCjsB,OAAO,iBACP4iB,QAAQ,UAAU,QAErB9P,EAAI9S,6BAA4B6mB,EAAa,IAC1CtX,UAAU,gBACVA,UAAU,iBACVqT,QAAQ,SAAUre,GAAKA,EAAE4U,YAAc0d,EAAa1d,WACnD5U,EAAE0C,QAAU4vB,EAAa5vB,OAIX,WAAhB1C,EAAE4U,WACJnK,GAAGhP,OAAOmT,EAAElT,IACTD,OAAO,gBACPJ,MAAM,OAAQ,SACdA,MAAM,UAAW,IACjBA,MAAM,kBAAmB,UAiBlCwB,YAEEw1B,EAAW5nB,GAAGhP,OAAOy2B,GAClBz2B,OAAO,YACV8S,EAAM8jB,EAASt5B,OAAO,KACnByB,KAAK,QAAS,YACdA,KAAK,yBAA0BygB,EAAYzJ,YAC9C3N,GAASP,IAAIiL,GAEbtJ,EAAQqsB,OAAOe,EAASh3B,MAAM,SAASkQ,QAAQ,KAAM,KACnD0P,EAAYzJ,KAAOyJ,EAAYE,MACjCnW,EAASssB,OAAOe,EAASh3B,MAAM,UAAUkQ,QAAQ,KAAM,KACrD0P,EAAY1J,IAAM0J,EAAYC,WAE5B0C,EAAWrP,EAAIxV,OAAO,KACvByB,KAAK,QAAS,aAEA+T,EAAIxV,OAAO,KACzByB,KAAK,QAAS,cAEF63B,EAASh3B,MAAM,UAAUkQ,QAAQ,KAAM,IPtoB1B,IAAC2qB,EOqpB7B3nB,EAAIxV,OAAO,QACRA,OAAO,UACPyB,KAAK,KAAM,UACXA,KAAK,UAAW,cAChBA,KAAK,OAAQ,GACbA,KAAK,OAAQ,GACbA,KAAK,cAAe,GACpBA,KAAK,eAAgB,GACrBA,KAAK,SAAU,QACfzB,OAAO,QACPsC,MAAM,eAAgB,KACtBA,MAAM,OAAQ,QACdA,MAAM,SAAU,QAChBb,KAAK,IAAK,kBAGb+T,EAAIxV,OAAO,QACRA,OAAO,UACPyB,KAAK,KAAM,cACXA,KAAK,UAAW,cAChBA,KAAK,OAAQ,GACbA,KAAK,OAAQ,GACbA,KAAK,cAAe,GACpBA,KAAK,eAAgB,GACrBA,KAAK,SAAU,QACfzB,OAAO,QACPsC,MAAM,OAAQ,QACdA,MAAM,SAAU,QAChBA,MAAM,eAAgB,GACtBb,KAAK,IAAK,sBAEb+K,QAAQ4wB,KAAK,iBACb5gB,QPrrB6B2gB,EOqrBE,sCPprB1BvgB,GAAGygB,gBAAgBF,IOqrBxB9f,QAAYhB,kBAAsCkf,EAAiB/e,GACnEhQ,QAAQ8wB,QAAQ,iBAChBzyB,GAASN,IAAI8S,OAET6X,EAAU7X,EAAIA,EAAIza,OAAS,GAC/Bya,EAAIxT,OAAOwT,EAAIza,OAAS,EAAG,GAC3Bya,EAAI6X,QAAUA,EAGdxM,KAGA9D,GAAQ1Y,EAAOD,EAAQ4Y,EAAUC,GAC/BC,GAAuBC,YAgFrBuY,kBAEJ5B,EAAiBv6B,EAAMkD,OAAOmT,KAG9B4F,QAAYhB,GAAasf,EAAgBnf,OAGrC0Y,EAAU7X,EAAIA,EAAIza,OAAS,GAC/Bya,EAAIxT,OAAOwT,EAAIza,OAAS,EAAG,GAC3Bya,EAAI6X,QAAUA,EACdrqB,GAASN,IAAI8S,GJnkCc,EAACjN,EAAOkN,KAErC,IAAIwD,EAAa1Q,EAAMlE,MAEnBgE,EAAcoN,EAAW,GAAGlP,OAAOxL,OACnC4gB,EAAe5iB,SAASC,cAAc,UACtC4iB,EAAgBD,EAAalM,WAAW,MAC5CkM,EAAatX,MAAQgE,EACrBsT,EAAavX,OAASiE,EAGtB,IAAIwT,EAAcD,EAAcjM,aAAa,EAAG,EAAGtH,EAAaA,GAC5DyT,EAAmBD,EAAY3iB,KAEnC,IAAK,IAAI4B,EAAI,EAAGA,EAAIghB,EAAiB/gB,OAAQD,GAAG,EAAG,CACjD,IAAIihB,EAAY9T,KAAKC,MAAMpN,EAAI,GAC3ByJ,EAAM0D,KAAKC,MAAM6T,EAAY1T,GAC7Bc,EAAS4S,EAAY1T,EAGnBstB,EAAMlgB,EAAW,GAAGlP,OAAOhC,GAAK4E,GACpC2S,EAAiBhhB,GAAW,IAAN66B,EACtB7Z,EAAiBhhB,GAAW,IAAN66B,EAgB1B,IAAIzZ,EAAcnjB,SAASC,cAAc,UACzCkjB,EAAY7X,MAAqB,EAAb4U,EACpBiD,EAAY9X,OAAsB,EAAb6U,EACrB,IAAIkD,EAAqBD,EAAYzM,WAAW,MAIhDmM,EAAcQ,aAAaP,EAAa,EAAG,GAC3CM,EAAmBzM,UAAUiM,EAAc,EAAG,EAAGtT,EAAaA,EAC1D,EAAG,EAAgB,EAAb4Q,EAA6B,EAAbA,GAE1B,IAAIoD,EAAeH,EAAYI,YAE/B/T,EAAMsH,IAAMwM,EAGZV,EAAatR,SACb6R,EAAY7R,UIihCVurB,CAFsB/rB,GAAGhP,OAAOy2B,GAC7Bz2B,OAAO,iBAAiBxC,OACMmd,EAAI,IAGrCqL,KACAF,6DA9gCYplB,IAARoS,MACG4jB,EAAcpzB,IAAImd,IACrB3W,QAAQlJ,MAAM,kCAIZ6f,GAAsBkW,KAItBvyB,OACE8f,QAAS,EAAG,EAAG,EAAG,EAAG,IACrBI,QAAS,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAEhCJ,QACE9f,OAAQ,EAAG,EAAG,EAAG,EAAG,IACpBkgB,QAAS,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAEhCA,QACElgB,OAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC7B8f,QAAS,EAAG,EAAG,EAAG,EAAG,MAKvByS,GAA4BlW,GAEX1kB,QAAQ4K,QACrBqH,EAAQ0S,EAAeD,GAAoB9Z,GAC/CmM,EAAI9S,2BAA2B2G,GAC5B4I,UAAU,eACVyT,MAAMze,EAAGtE,EAAGkT,IAAM0N,GAAWtc,EAAGtE,EAAGkT,EAAGnF,MAI3C8E,EAAIvD,cAAconB,YACf/T,QAAQ,UAAU,GAGrB9P,EAAIvD,cAAckR,YACfmC,QAAQ,UAAWhC,GAExB+V,EAA6BlW,EAC7BjY,GAAwBX,IAAI4Y,+CAnM9BrX,GAAelG,OAAO8P,GAAK,iBAskC3B4N,GAAgBA,GAChBhY,GAAkBf,IAAI+Y,GAEjBkW,IAEHhkB,EAAIvD,cAAckR,YACfmC,QAAQ,UAAWhC,GAEtB9N,EAAIvD,UAAU,iBAAiBqT,QAAQ,UAAWhC,GAClD9N,EAAIvD,UAAU,kBAAkBqT,QAAQ,UAAWhC,IAIrD9N,EAAIvD,UAAU,yBACXqT,QAAQ,UAAWhC,GAEtB9N,EAAIvD,UAAU,gBACXqT,QAAQ,SAAUhC,kBAIjBoa,EAAehsB,GAAGhP,OAAO+B,EAAExE,QAAQwB,KAAK,qBAExCi8B,IAAiBnC,OACnBA,EAAgBmC,GAGhBrgB,QAAYhB,kBAAsCkf,EAAiB/e,OAG/D0Y,EAAU7X,EAAIA,EAAIza,OAAS,GAC/Bya,EAAIxT,OAAOwT,EAAIza,OAAS,EAAG,GAC3Bya,EAAI6X,QAAUA,EACdrqB,GAASN,IAAI8S,GAGbqL,KACAF,eAOqB,OAAnBmT,EACFvkB,EAAUR,MAAO,EACjBQ,EAAUY,SAAWujB,EACrB3vB,GAAWrB,IAAI6M,WAIU,WAAlBmkB,GAEPgC,IADiBj5B,QAASmT,IAAKkkB,UAO/BvkB,EAAUR,MAAO,EACjBQ,EAAUY,SAAWujB,EACrB3vB,GAAWrB,IAAI6M,GAGK,WAAlBmkB,OACFA,EAAgB,WAKSn6B,QAG3Bm6B,EAAgBn6B,EAAMkD,OAAO0T,uBA0BQ5W,GACjCA,EAAMkD,OAAOxD,OACf84B,OAAkBx2B,EAClBoS,EAAI9S,kCAAkC84B,GACnCl5B,MAAM,UAAW,OACpBk5B,GAAqB,cAIcp6B,GACjCA,EAAMkD,OAAOxD,OACfs7B,UACAX,GAA2B,cAIcr6B,GACvCA,EAAMkD,OAAOxD,OACfs7B,UACAX,GAA2B,cAIWr6B,OACxC+wB,EAAsBvb,MAAO,KAC7BnL,GAAuBlB,IAAI4nB,eAuTDhP,E1B74B9B,SAAsBzgB,GAClB,MAAMi7B,EAAkBj7B,EAAO0V,cAAc,aAAe1V,EAAOpB,QAAQ,GAC3E,OAAOq8B,GAAmBA,EAAgB76B,8D0BuzBjCq2B;;;;;;;;;;;;;;;;OC92Cb,SAASyE,GAAkBC,GACvB,MAAM,IAAIh6B,MAAM,IAAIg6B;;;;;;;;;;;;;;;;OCiCjB,SAASpxB,GAAOqxB,EAAMC,GACzB,IAAKD,EACD,MAAM,IAAIj6B,MAAqB,iBAARk6B,EAAmBA,EAAMA,KAMjD,SAASC,GAAcn/B,GAC1B4N,GAAY,MAAL5N,EAAW,IAAM,iEAqBrB,SAASq2B,GAAQ1V,EAAK9S,EAAS,GAAIuxB,GAAiB,GAIvD,GAHc,MAAVvxB,IACAA,EAAS,IAETzD,MAAMi1B,QAAQ1e,IAAQ2e,GAAa3e,KAASye,EAC5C,IAAK,IAAIt7B,EAAI,EAAGA,EAAI6c,EAAI5c,SAAUD,EAC9BuyB,GAAQ1V,EAAI7c,GAAI+J,EAAQuxB,QAI5BvxB,EAAOzI,KAAKub,GAEhB,OAAO9S,EAaJ,SAAS0xB,GAAclhB,GAC1B,GAAqB,IAAjBA,EAAMta,OAEN,OAAO,EAEX,IAAI7C,EAAOmd,EAAM,GACjB,IAAK,IAAIva,EAAI,EAAGA,EAAIua,EAAMta,OAAQD,IAC9B5C,GAAQmd,EAAMva,GAElB,OAAO5C,EAKJ,SAASs+B,GAAYC,EAAIC,GAC5B,GAAID,IAAOC,EACP,OAAO,EAEX,GAAU,MAAND,GAAoB,MAANC,EACd,OAAO,EAEX,GAAID,EAAG17B,SAAW27B,EAAG37B,OACjB,OAAO,EAEX,IAAK,IAAID,EAAI,EAAGA,EAAI27B,EAAG17B,OAAQD,IAC3B,GAAI27B,EAAG37B,KAAO47B,EAAG57B,GACb,OAAO,EAGf,OAAO,EAEJ,SAAS67B,GAAM3/B,GAClB,OAAOA,EAAI,GAAM,EA2Cd,SAAS4/B,GAAS5/B,EAAGkB,GACxB,OAAIA,GAAQlB,EAAE+D,OACH/D,EAEJA,EAAI,IAAI6/B,OAAO3+B,EAAOlB,EAAE+D,QA+K5B,SAASu7B,GAAat/B,GACzB,OAAOA,aAAa8/B,cAAgB9/B,aAAa+/B,YAC7C//B,aAAaggC,YAAchgC,aAAaigC,kBAEzC,SAASC,GAAgBC,GAC5B,GAAc,YAAVA,GAAiC,UAAVA,EACvB,OAAO,EAEN,GAAc,cAAVA,EACL,OAAO,EAEN,GAAc,SAAVA,EACL,OAAO,EAGP,MAAM,IAAIn7B,MAAM,iBAAiBm7B,GAkBlC,SAASC,GAASt9B,GACrB,MAAwB,iBAAVA,GAAsBA,aAAiBu9B,OAQlD,SAASC,GAAWC,GACvB,OAAIn2B,MAAMi1B,QAAQkB,GACPD,GAAWC,EAAO,IAEzBA,aAAkBT,aACX,UAEFS,aAAkBR,YACpBQ,aAAkBP,YAClBO,aAAkBN,kBACd,QAZa,iBAcNM,EACP,UAEFH,GAASG,GACP,SAtBR,SAAmBz9B,GACtB,MAAwB,kBAAVA,EAuBL09B,CAAUD,GACR,OAEJ,UAEJ,SAASE,GAAWx/B,GACvB,SAAUA,GAAKA,EAAEy/B,aAAez/B,EAAEgF,MAAQhF,EAAEyQ,OAUzC,SAASivB,GAAetiB,GAC3B,MAAMuiB,EAAOviB,EAAMta,OACnB,GAAI68B,EAAO,EACP,MAAO,GAIX,MAAMC,EAAU,IAAIz2B,MAAMw2B,EAAO,GACjCC,EAAQD,EAAO,GAAKviB,EAAMuiB,EAAO,GACjC,IAAK,IAAI98B,EAAI88B,EAAO,EAAG98B,GAAK,IAAKA,EAC7B+8B,EAAQ/8B,GAAK+8B,EAAQ/8B,EAAI,GAAKua,EAAMva,EAAI,GAE5C,OAAO+8B,EAqBJ,SAASC,GAAcziB,EAAOre,EAAG+gC,GAAY,GAChD,GAAqB,IAAjB1iB,EAAMta,OAEN,OAAO/D,EAAE,GAEb,MAAMkB,EAAOmd,EAAMtN,OAAO,CAACkZ,EAAKlpB,IAAMkpB,EAAMlpB,IAAMggC,EAAY,EAAI,GAClE,GAAa,IAAT7/B,EAEA,MAAO,GAEX,GAAIA,IAASlB,EAAE+D,OACX,MAAM,IAAIiB,MAAM,IAAIqZ,oCAAwCre,EAAE+D,SAASg9B,EAAY,wBAA0B,OAEjH,OAhCJ,SAASC,EAAkBrmB,EAAQ0D,EAAOre,EAAG+gC,GAAY,GACrD,MAAM/2B,EAAM,IAAII,MAChB,GAAqB,IAAjBiU,EAAMta,OAAc,CACpB,MAAMqE,EAAIiW,EAAM,IAAM0iB,EAAY,EAAI,GACtC,IAAK,IAAIj9B,EAAI,EAAGA,EAAIsE,EAAGtE,IACnBkG,EAAIlG,GAAK9D,EAAE2a,EAAS7W,OAGvB,CACD,MAAMsE,EAAIiW,EAAM,GACVpU,EAAOoU,EAAMrY,MAAM,GACnBi7B,EAAMh3B,EAAK8G,OAAO,CAACkZ,EAAKlpB,IAAMkpB,EAAMlpB,IAAMggC,EAAY,EAAI,GAChE,IAAK,IAAIj9B,EAAI,EAAGA,EAAIsE,EAAGtE,IACnBkG,EAAIlG,GAAKk9B,EAAkBrmB,EAAS7W,EAAIm9B,EAAKh3B,EAAMjK,EAAG+gC,GAG9D,OAAO/2B,EAgBAg3B,CAAkB,EAAG3iB,EAAOre,EAAG+gC,GASnC,SAASG,GAAoBhgC,EAAMi/B,GACtC,GAAa,MAATA,GAA2B,YAAVA,GAAiC,cAAVA,EACxC,OAAO,IAAIL,aAAa5+B,GAEvB,GAAc,UAAVi/B,EACL,OAAO,IAAIJ,WAAW7+B,GAErB,GAAc,SAAVi/B,EACL,OAAO,IAAIH,WAAW9+B,GAGtB,MAAM,IAAI8D,MAAM,qBAAqBm7B,GAuBtC,SAASgB,GAAmC9iB,GAC/CA,EAAMze,QAAQwhC,IACVxzB,GAAO8rB,OAAO2H,UAAUD,IAAYA,GAAW,EAAG,IAC9C,0EAAU/iB,SAoDf,SAASijB,GAAUC,GAOtB,OAAOA,GAAUA,EAAOv4B,MAA+B,mBAAhBu4B,EAAOv4B;;;;;;;;;;;;;;;;OCtoB3C,MAAMw4B,GAET72B,YAAYwd,GACRvd,KAAKud,OAASA,EACdvd,KAAK62B,MAAQ,GACb72B,KAAK82B,aAAe,GACpB92B,KAAK+2B,SAAW,GAEhB/2B,KAAKg3B,eAAiBA,GACtBh3B,KAAKi3B,mBAETl3B,YAAYm3B,EAAcC,GACD,MAAjBn3B,KAAKm3B,WACCC,KAAMC,QAAQ,YAAcD,KAAMC,QAAQ,SAC5Ct0B,QAAQu0B,KAAK,YAAYt3B,KAAKk3B,oEACOA,OAG7Cl3B,KAAKk3B,aAAeA,EACpBl3B,KAAKm3B,SAAWA,EAEpBp3B,aAAaw3B,EAAUC,EAAcC,GAIjC,GAHAz3B,KAAK82B,aAAaS,GAAY,CAAEC,aAAAA,EAAcC,QAAAA,GAGf,MAA3Bz3B,KAAK+2B,SAASQ,GAAmB,CACjC,MAAMG,EAAY13B,KAAK+2B,SAASQ,GAC1BH,KAAMC,QAAQ,YAAcD,KAAMC,QAAQ,SAC5Ct0B,QAAQu0B,KAAK,qCAAqCC,MAAaG,MAEnE13B,KAAKc,IAAIy2B,EAAUG,IAG3B33B,eAAew3B,GACX,OAAIA,KAAYv3B,KAAK62B,QAGrB72B,KAAK62B,MAAMU,SAAkBv3B,KAAK23B,aAAaJ,IAFpCv3B,KAAK62B,MAAMU,GAK1Bx3B,IAAIw3B,GACA,GAAIA,KAAYv3B,KAAK62B,MACjB,OAAO72B,KAAK62B,MAAMU,GAEtB,MAAMG,EAAY13B,KAAK23B,aAAaJ,GACpC,GAAIb,GAAUgB,GACV,MAAM,IAAIt9B,MAAM,QAAQm9B,uEAI5B,OADAv3B,KAAK62B,MAAMU,GAAYG,EAChB13B,KAAK62B,MAAMU,GAEtBx3B,UAAUw3B,GACN,OAAOv3B,KAAK43B,IAAIL,GAEpBx3B,QAAQw3B,GACJ,OAAOv3B,KAAK43B,IAAIL,GAEpBx3B,WACI,OAAOC,KAAK62B,MAGhBgB,eACI,OAAO73B,KAAK62B,MAEhB92B,IAAIw3B,EAAUr/B,GACV,GAAmC,MAA/B8H,KAAK82B,aAAaS,GAClB,MAAM,IAAIn9B,MAAM,mBAAmBm9B,oCAEvCv3B,KAAK62B,MAAMU,GAAYr/B,EACoB,MAAvC8H,KAAK82B,aAAaS,GAAUE,SAC5Bz3B,KAAK82B,aAAaS,GAAUE,QAAQv/B,GAG5C6H,aAAaw3B,GACT,GAAmC,MAA/Bv3B,KAAK82B,aAAaS,GAClB,MAAM,IAAIn9B,MAAM,yBAAyBm9B,qCAE7C,OAAOv3B,KAAK82B,aAAaS,GAAUC,eAEvCz3B,SAAS82B,GACL72B,KAAK62B,MAAQjiC,OAAOka,OAAO,GAAI+nB,GAEnC92B,QACIC,KAAK62B,MAAQ,GACb72B,KAAK+2B,SAAW,GAChB/2B,KAAKi3B,mBAETl3B,mBACI,QAA2B,IAAhBC,KAAKud,aACoB,IAAzBvd,KAAKud,OAAOua,eACoB,IAAhC93B,KAAKud,OAAOua,SAASC,OAC5B,OAEJ,MAAMC,EAAYh4B,KAAKg3B,eAAeh3B,KAAKud,OAAOua,SAASC,QAC3D,GAvG0B,cAuGOC,EAAW,CACtBA,EAAmC,UAAEC,MAAM,KACnDjjC,QAAQkjC,IACd,MAAOv/B,EAAKT,GAASggC,EAASD,MAAM,KACpCj4B,KAAK+2B,SAASp+B,GAgB9B,SAAoB4+B,EAAUr/B,GAE1B,GAAc,UADdA,EAAQA,EAAMigC,gBACoB,UAAVjgC,EACpB,MAAiB,SAAVA,EAEN,GAAI,KAAIA,IAAYA,EACrB,OAAQA,EAEZ,MAAM,IAAIkC,MAAM,oCAAoClC,cAAkBq/B,MAxBrCa,CAAWz/B,EAAKT,OAK9C,SAAS8+B,GAAeqB,GAC3B,MAAMC,EAAS,GAKf,OAJAD,EAAYtvB,QAAQ,8BAA+B,CAACtF,KAAMwM,KAM9D,SAAqBqoB,EAAQphC,EAAMgB,GAC/BogC,EAAOC,mBAAmBrhC,IAASqhC,mBAAmBrgC,GAAS,IAN3DsgC,CAAYF,EAAQroB,EAAE,GAAIA,EAAE,IACrBA,EAAEwoB,KAAK,OAEXH,EAuBJ,SAASlB,KACZ,OAAOsB,GAEJ,IC9IHC,GD8IOD,GAAM,KC5IV,SAASE,KACZ,GAAuB,MAAnBD,GAAyB,CAEzB,IAAIE,EACJ,GAAwB,2BACpBA,EAAKrjC,YAEJ,GAAwB,2BACzBqjC,EAAKtb,YAEJ,GAAyB,4BAC1Bsb,EAAKC,YAEJ,CAAA,GAAsB,yBAIvB,MAAM,IAAI1+B,MAAM,kCAHhBy+B,EAAKE,KAKTJ,GAAkBE,EAEtB,OAAOF,GAiBJ,SAASK,GAAUrgC,EAAK2F,GAC3B,MAAM26B,EAfV,WACI,MAAMJ,EAAKD,KAIX,OAHqB,MAAjBC,EAAGK,aACHL,EAAGK,WAAa,IAAIl6B,KAEjB65B,EAAGK,WAUQC,GAClB,GAAIF,EAAU38B,IAAI3D,GACd,OAAOsgC,EAAUrB,IAAIj/B,GAEpB,CACD,MAAMygC,EAAY96B,IAElB,OADA26B,EAAUn4B,IAAInI,EAAKygC,GACZH,EAAUrB,IAAIj/B;;;;;;;;;;;;;;;;;ACnDtB,SAAS2+B,MAAQhD,GACd8C,KAAMC,QAAQ,YAAcD,KAAMC,QAAQ,SAC5Ct0B,QAAQu0B,QAAQhD;;;;;;;;;;;;;;;;OCAxB,MAAM+E,GAAiBL,GAAU,iBAAkB,IAAM,IAAIh6B,KACvDs6B,GAAeN,GAAU,eAAgB,IAAM,IAAIh6B,KAOlD,SAASu6B,GAAUnF,EAAYoF,GAClC,MAAM7gC,EAoGV,SAAiBy7B,EAAYoF,GACzB,MAAO,GAAGA,KAAepF;;;;;;;;;;;;;;;;OArGbqF,CAAQrF,EAAYoF,GAChC,OAAOH,GAAezB,IAAIj/B,GAMvB,SAAS+gC,GAAYtF,GACxB,OAAOkF,GAAa1B,IAAIxD,GAErB,SAASuF,GAAqBH,GACjC,MAAMI,EAAKP,GAAeQ,UACpB52B,EAAS,GACf,OAAa,CACT,MAAM62B,KAAEA,EAAI5hC,MAAEA,GAAU0hC,EAAGG,OAC3B,GAAID,EACA,MAEJ,MAAOnhC,EAAKqhC,GAAU9hC,GACf+hC,GAAYthC,EAAIs/B,MAAM,KACzBgC,IAAYT,GACZv2B,EAAOzI,KAAKw/B,GAGpB,OAAO/2B,EClBJ,SAASi3B,GAAa9kC,EAAGmgC,GAC5B,GAAc,WAAVA,EACA,MAAM,IAAIn7B,MAAM,6CAQpB,GANIoF,MAAMi1B,QAAQr/B,KACdA,EAAI+kC,GAAa/kC,IAEjBgiC,KAAMC,QAAQ,ULoXf,SAAkC+C,EAAM7E,GAC3C,IAAK,IAAIr8B,EAAI,EAAGA,EAAIkhC,EAAKjhC,OAAQD,IAAK,CAClC,MAAMmhC,EAAMD,EAAKlhC,GACjB,GAAIohC,MAAMD,KAASE,SAASF,GACxB,MAAMjgC,MAAM,oBAAoBm7B,6BAAiC8E,OKvXrEG,CAA8BplC,EAAGmgC,GAbzC,SAA4BngC,EAAGmgC,GAC3B,OAAQngC,aAAa8/B,cAA0B,YAAVK,GAChCngC,aAAa+/B,YAAwB,UAAVI,GAC3BngC,aAAaggC,YAAwB,SAAVG,EAY5BkF,CAAmBrlC,EAAGmgC,GACtB,OAAOngC,EAEX,GAAa,MAATmgC,GAA2B,YAAVA,GAAiC,cAAVA,EACxC,OAAO,IAAIL,aAAa9/B,GAEvB,GAAc,UAAVmgC,EACL,OAAO,IAAIJ,WAAW//B,GAErB,GAAc,SAAVmgC,EAAkB,CACvB,MAAMmF,EAAO,IAAItF,WAAWhgC,EAAE+D,QAC9B,IAAK,IAAID,EAAI,EAAGA,EAAIwhC,EAAKvhC,SAAUD,EACN,IAArBmN,KAAKmB,MAAMpS,EAAE8D,MACbwhC,EAAKxhC,GAAK,GAGlB,OAAOwhC,EAGP,MAAM,IAAItgC,MAAM,qBAAqBm7B,GActC,SAAS9/B,KACZ,OAAO2hC,KAAMD,SAAS1hC,MAyCnB,SAASklC,GAAaC,EAAOC,EAAW,SAE3C,OADAA,EAAWA,GAAY,QAChBzD,KAAMD,SAAS2D,OAAOF,EAAOC;;;;;;;;;;;;;;;;OCvGjC,MAAME,GACTh7B,YAAYi7B,EAAcC,GACtBj7B,KAAKg7B,aAAeA,EACpBh7B,KAAKi7B,OAASA,EACA,MAAVA,IACAj7B,KAAKi7B,OAAS,IAAIC,IAG1Bn7B,cAAcq0B,EAAY+G,EAAQ9kC,GAC9B,IAAIgd,EACJ,MAAM+nB,EAAsB,KACxB/nB,EAAUhd,KAEd,IAAIglC,EACJ,MAAM16B,EAAQ26B,KACd,GAAIt7B,KAAKg7B,aAAaO,iBAClBF,EAAQr7B,KAAKg7B,aAAarH,KAAKyH,OAE9B,CACDA,IACA,IAAK,MAAMz2B,KAAU0O,EACjB1O,EAAO62B,WAEXH,EAAQ1/B,QAAQC,QAAQ,CAAE6/B,SAAUH,KAAa36B,IAErD,GAAIy2B,KAAMC,QAAQ,gCACd,IAAK,IAAIn+B,EAAI,EAAGA,EAAIma,EAAQla,OAAQD,IAAK,CACrC,MAAMyL,EAAS0O,EAAQna,GAGvByL,EAAOrN,OAAO8G,KAAKs9B,IACfC,GAA0BD,EAAY/2B,EAAO4wB,MAAOnB,KAahE,MATsB,CAClBA,WAAAA,EACA/gB,QAAAA,EACA8nB,OAAAA,EACAS,OAAQP,EAAMj9B,KAAKy9B,GAAUA,EAAOJ,UACpCK,UAAWT,EAAMj9B,KAAKy9B,GAAwC,MAA9BA,EAAOE,oBACnCF,EAAOE,sBACP,KAIZh8B,iBAAiBi8B,GACb,MAAM5H,WAAEA,EAAU/gB,QAAEA,EAAOuoB,OAAEA,EAAMT,OAAEA,EAAMW,UAAEA,GAAcE,EAC3D3oB,EAAQre,QAAQiO,IACZtH,QAAQsgC,IAAI,CAACh5B,EAAO3L,OAAQskC,EAAQE,IAAY19B,KAAK89B,IACjDl8B,KAAKi7B,OAAOkB,iBAAiB/H,EAAYnxB,EAAQi5B,EAAe,GAAIA,EAAe,GAAIf,EAAQe,EAAe,SAKvH,SAASP,GAA0BvB,EAAM7E,EAAOnB,GACnD,GAAc,YAAVmB,EAEA,OAAO,EAEX,IAAK,IAAIr8B,EAAI,EAAGA,EAAIkhC,EAAKjhC,OAAQD,IAAK,CAClC,MAAMmhC,EAAMD,EAAKlhC,GACjB,GAAIohC,MAAMD,KAASE,SAASF,GAGxB,OADAt3B,QAAQu0B,KAAK,SAAS+C,uBAAyBjG,OACxC,EAGf,OAAO,EAEJ,MAAM8G,GACTn7B,iBAAiB7I,EAAM+L,EAAQm3B,EAAMwB,EAAQT,EAAQW,GACjD,MAAMnI,EAAyB,iBAAXiI,EAAsBQ,GAAiBR,EAAH,KAAe,GACnEA,EAAc,MACZS,EAAaD,GAAcllC,EAAM,IACjC8+B,EAAO/yB,EAAO+yB,KACd1/B,EAAO2M,EAAO3M,KACdmd,EAAQ2oB,GAAcn5B,EAAOwQ,MAAM3K,WAAY,IACrD,IAAIwzB,EAAyB,GAC7B,IAAK,MAAMplC,KAAQikC,EAAQ,CACvB,MAAM1iC,EAAQ0iC,EAAOjkC,GACrB,GAAa,MAATuB,EAAe,CAGf,MAAMqb,EAAarb,EAAMgb,OAASxQ,EAAOwQ,MACnC8oB,EAAYzoB,EAAW3a,OAC7BmjC,GACI,GAAGplC,MAASqlC,MAAcA,EAAY,EAAIzoB,EAAa,OAGnE/Q,QAAQgI,IAAI,KAAKsxB,QAAiB1I,QAAWqC,MAASviB,QAAYnd,QAAWgmC,QAA6BR,IAAa,mBAAoB,YAAa,aAAc,gBAAiB,eAAgB;;;;;;;;;;;;;;;;OCrFxM,SAASU,GAAepC,EAAM3mB,EAAO8hB,EAAOkH,GAC/C,MAAMxG,EAAUF,GAAetiB,GACzBipB,EAaV,SAAiCtC,EAAM3mB,EAAO8hB,EAAOU,GACjD,MAAMhqB,EAAI0oB,GAAclhB,GAClBkpB,EAAU1G,EAAQA,EAAQ98B,OAAS,GACnCujC,EAAY,IAAIl9B,MAAMm9B,GAASt+B,KAAK,GACpC23B,EAAOviB,EAAMta,OACbyjC,EAA2B,cAAVrH,EAAwBsH,GAAoBzC,GAAQA,EAC3E,GAAIpE,EAAO,EACP,IAAK,IAAIrzB,EAAM,EAAGA,EAAMsJ,EAAI0wB,EAASh6B,IAAO,CACxC,MAAMoN,EAASpN,EAAMg6B,EACrB,IAAK,IAAIz5B,EAAI,EAAGA,EAAIy5B,EAASz5B,IACzBw5B,EAAUx5B,GAAKmD,KAAKQ,IAAI61B,EAAUx5B,GAAI45B,GAAYF,EAAe7sB,EAAS7M,GAAI,EAAGqyB,GAAOp8B,QAIpG,OAAOujC,EA3BWK,CAAwB3C,EAAM3mB,EAAO8hB,EAAOU,GACxDD,EAAOviB,EAAMta,OACb6jC,EA+CV,SAASC,EAAkB7C,EAAM3mB,EAAO8hB,EAAOU,EAASyG,EAAWQ,GAAS,GACxE,MAAMC,EAA8B,cAAV5H,EAAwB,EAAI,EAChDj/B,EAAOmd,EAAM,GACbuiB,EAAOviB,EAAMta,OACnB,GAAa,IAAT68B,EAAY,CACZ,GAAc,cAAVT,EAAuB,CAEvB,MAAO,CAACuH,GADaD,GAAoBzC,GACR,GAAI,EAAG7E,IAE5C,MAAc,SAAVA,EACO,CAAC6H,GAAgBhD,EAAK,KAE1B,CAACA,EAAK,GAAGtxB,YAEpB,GAAa,IAATktB,EAAY,CACZ,GAAI1/B,EAvEkB,GAuEY,CAC9B,MAAM+mC,EAtEiB,EAsE4BF,EACnD,IAAIG,EAAY99B,MAAMC,KAAK26B,EAAKh/B,MAAM,EAAGiiC,IACrCE,EAAW/9B,MAAMC,KAAK26B,EAAKh/B,OAAO9E,EAxEf,GAwEoD6mC,EAAmB7mC,EAAO6mC,IAKrG,MAJc,cAAV5H,IACA+H,EAAYT,GAAoBS,GAChCC,EAAWV,GAAoBU,IAE5B,CACH,IACID,EAAUv/B,IAAI,CAAC2J,EAAGxO,IAAM4jC,GAAYp1B,EAAGg1B,EAAUxjC,GAAIq8B,IAChDkD,KAAK,MACV,UACA8E,EACKx/B,IAAI,CAAC2J,EAAGxO,IAAM4jC,GAAYp1B,EAAGg1B,EAAUpmC,EAnF7B,EAmFiE4C,GAAIq8B,IAC/EkD,KAAK,MACV,KAKZ,MAAO,CACH,KAH0B,cAAVlD,EAAwBsH,GAAoBzC,GAC5D56B,MAAMC,KAAK26B,IAGKr8B,IAAI,CAAC2J,EAAGxO,IAAM4jC,GAAYp1B,EAAGg1B,EAAUxjC,GAAIq8B,IAClDkD,KAAK,MACV,KAIZ,MAAM+E,EAAW/pB,EAAMrY,MAAM,GACvBqiC,EAAaxH,EAAQ76B,MAAM,GAC3B2I,EAASkyB,EAAQ,GAAKkH,EACtBO,EAAQ,GACd,GAAIpnC,EAxGsB,GAwGQ,CAC9B,IAAK,IAAI4C,EAAI,EAAGA,EAvGW,EAuGqBA,IAAK,CACjD,MAAMyH,EAAQzH,EAAI6K,EACZ45B,EAAMh9B,EAAQoD,EACpB25B,EAAMljC,QAAQyiC,EAAkB7C,EAAKh/B,MAAMuF,EAAOg9B,GAAMH,EAAUjI,EAAOkI,EAAYf,GAAW,IAEpGgB,EAAMljC,KAAK,OACX,IAAK,IAAItB,EAAI5C,EA7Gc,EA6GqB4C,EAAI5C,EAAM4C,IAAK,CAC3D,MAAMyH,EAAQzH,EAAI6K,EACZ45B,EAAMh9B,EAAQoD,EACpB25B,EAAMljC,QAAQyiC,EAAkB7C,EAAKh/B,MAAMuF,EAAOg9B,GAAMH,EAAUjI,EAAOkI,EAAYf,EAAWxjC,IAAM5C,EAAO,UAIjH,IAAK,IAAI4C,EAAI,EAAGA,EAAI5C,EAAM4C,IAAK,CAC3B,MAAMyH,EAAQzH,EAAI6K,EACZ45B,EAAMh9B,EAAQoD,EACpB25B,EAAMljC,QAAQyiC,EAAkB7C,EAAKh/B,MAAMuF,EAAOg9B,GAAMH,EAAUjI,EAAOkI,EAAYf,EAAWxjC,IAAM5C,EAAO,IAGrH,MAAMqvB,EAAe,IAATqQ,EAAa,IAAM,GAC/B0H,EAAM,GAAK,IAAMA,EAAM,GAAK/X,EAC5B,IAAK,IAAIzsB,EAAI,EAAGA,EAAIwkC,EAAMvkC,OAAS,EAAGD,IAClCwkC,EAAMxkC,GAAK,IAAMwkC,EAAMxkC,GAAKysB,EAEhC,IAAIiY,EAAa,MACjB,IAAK,IAAI1kC,EAAI,EAAGA,EAAI88B,EAAM98B,IACtB0kC,GAAc,KAIlB,OAFAF,EAAMA,EAAMvkC,OAAS,GACjB,IAAMukC,EAAMA,EAAMvkC,OAAS,GAAK,KAAO+jC,EAAS,GAAKU,GAClDF,EA9HWT,CAAkB7C,EAAM3mB,EAAO8hB,EAAOU,EAASyG,GAC3DgB,EAAQ,CAAC,UAQf,OAPIjB,IACAiB,EAAMljC,KAAK,YAAY+6B,GACvBmI,EAAMljC,KAAK,WAAWw7B,GACtB0H,EAAMljC,KAAK,aAAaiZ,MACxBiqB,EAAMljC,KAAK,cAEfkjC,EAAMljC,KAAKwiC,EAAUj/B,IAAI6B,GAAK,OAASA,GAAG64B,KAAK,OACxCiF,EAAMjF,KAAK,MAkBtB,SAASqE,GAAYtoB,EAAKqpB,EAAKtI,GAC3B,IAAIuI,EAcJ,OAZIA,EADAt+B,MAAMi1B,QAAQjgB,GACFupB,WAAWvpB,EAAI,GAAGwpB,QAnCR,IAmCb,MACFD,WAAWvpB,EAAI,GAAGwpB,QApCH,IAoClB,IAECxI,GAAShhB,GACL,IAAIA,KAEE,SAAV+gB,EACI6H,GAAgB5oB,GAGhBupB,WAAWvpB,EAAIwpB,QA7CF,IA6CkCl1B,WAErDksB,GAAS8I,EAAQD,GAE5B,SAAST,GAAgB74B,GACrB,OAAa,IAANA,EAAU,QAAU,OAmF/B,SAASs4B,GAAoBzC,GACzB,MAAM6D,EAAgB,GACtB,IAAK,IAAI/kC,EAAI,EAAGA,EAAIkhC,EAAKjhC,OAAQD,GAAK,EAClC+kC,EAAczjC,KAAK,CAAC4/B,EAAKlhC,GAAIkhC,EAAKlhC,EAAI,KAE1C,OAAO+kC;;;;;;;;;;;;;;;;OCpIJ,MAAMC,GACTn+B,YAAY0T,EAAO8hB,EAAOI,GAItB,GAHA31B,KAAKu1B,MAAQA,EACbv1B,KAAKyT,MAAQA,EAAMrY,QACnB4E,KAAK1J,KAAO6nC,GAAmB1qB,GACjB,MAAVkiB,EAAgB,CAChB,MAAM1pB,EAAI0pB,EAAOx8B,OACjBilC,GAAYnyB,IAAMjM,KAAK1J,KAAM,IAAM,qBAAqB2V,qDAC1BjM,KAAK1J,UAEvC,GAAc,cAAVi/B,EACA,MAAM,IAAIn7B,MAAM,8JAIpB4F,KAAK21B,OAASA,GR+Vf,SAA2BJ,EAAOj/B,GACrC,IAAIq/B,EAAS,KACb,GAAa,MAATJ,GAA2B,YAAVA,EACjBI,EAAS,IAAIT,aAAa5+B,QAEzB,GAAc,UAAVi/B,EACLI,EAAS,IAAIR,WAAW7+B,QAEvB,GAAc,SAAVi/B,EACLI,EAAS,IAAIP,WAAW9+B,OAEvB,CAAA,GAAc,WAAVi/B,EAIL,MAAM,IAAIn7B,MAAM,qBAAqBm7B,GAHrCI,EAAS,IAAIn2B,MAAMlJ,GAKvB,OAAOq/B,EQhXqB0I,CAAuB9I,EAAOv1B,KAAK1J,MAC3D0J,KAAKi2B,QAAUF,GAAetiB,GAUlC1T,IAAI7H,KAAUomC,GACU,IAAhBA,EAAKnlC,SACLmlC,EAAO,CAAC,IAEZF,GAAYE,EAAKnlC,SAAW6G,KAAKg2B,KAAM,IAAM,uCAAuCsI,EAAKnlC,gCAClE6G,KAAKg2B,SAC5B,MAAM91B,EAAQF,KAAKu+B,WAAWD,GAC9Bt+B,KAAK21B,OAAOz1B,GAAShI,EASzB6H,OAAOu+B,GACiB,IAAhBA,EAAKnlC,SACLmlC,EAAO,CAAC,IAEZ,IAAIplC,EAAI,EACR,IAAK,MAAMs1B,KAAO8P,EAAM,CACpB,GAAI9P,EAAM,GAAKA,GAAOxuB,KAAKyT,MAAMva,GAAI,CACjC,MAAMo7B,EAAM,qCAAqCgK,qBAC3Bt+B,KAAKyT,MAC3B,MAAM,IAAIrZ,MAAMk6B,GAEpBp7B,IAEJ,IAAIgH,EAAQo+B,EAAKA,EAAKnlC,OAAS,GAC/B,IAAK,IAAID,EAAI,EAAGA,EAAIolC,EAAKnlC,OAAS,IAAKD,EACnCgH,GAASF,KAAKi2B,QAAQ/8B,GAAKolC,EAAKplC,GAEpC,OAAO8G,KAAK21B,OAAOz1B,GAEvBH,WAAWu+B,GACP,GAAkB,IAAdt+B,KAAKg2B,KACL,OAAO,EAEN,GAAkB,IAAdh2B,KAAKg2B,KACV,OAAOsI,EAAK,GAEhB,IAAIp+B,EAAQo+B,EAAKA,EAAKnlC,OAAS,GAC/B,IAAK,IAAID,EAAI,EAAGA,EAAIolC,EAAKnlC,OAAS,IAAKD,EACnCgH,GAASF,KAAKi2B,QAAQ/8B,GAAKolC,EAAKplC,GAEpC,OAAOgH,EAEXH,WAAWG,GACP,GAAkB,IAAdF,KAAKg2B,KACL,MAAO,GAEN,GAAkB,IAAdh2B,KAAKg2B,KACV,MAAO,CAAC91B,GAEZ,MAAMo+B,EAAO,IAAI9+B,MAAMQ,KAAKyT,MAAMta,QAClC,IAAK,IAAID,EAAI,EAAGA,EAAIolC,EAAKnlC,OAAS,IAAKD,EACnColC,EAAKplC,GAAKmN,KAAKC,MAAMpG,EAAQF,KAAKi2B,QAAQ/8B,IAC1CgH,GAASo+B,EAAKplC,GAAK8G,KAAKi2B,QAAQ/8B,GAGpC,OADAolC,EAAKA,EAAKnlC,OAAS,GAAK+G,EACjBo+B,EAEXtI,WACI,OAAOh2B,KAAKyT,MAAMta,OAOtB4G,WACI,OAAOy+B,KAAYC,WAAWz+B,KAAK21B,OAAQ31B,KAAKyT,MAAOzT,KAAKu1B,QAIpE,IAAIiJ,GAAY,KAEZE,GAAY,KA4CT,MAAMC,GACT5+B,YAAY0T,EAAO8hB,EAAOqJ,EAAQC,GAE9B7+B,KAAK8+B,MAAO,EACZ9+B,KAAK++B,oBAAqB,EAC1B/+B,KAAKyT,MAAQA,EAAMrY,QACnB4E,KAAKu1B,MAAQA,GAAS,UACtBv1B,KAAK1J,KAAO6nC,GAAmB1qB,GAC/BzT,KAAKi2B,QAAUF,GAAetiB,GAC9BzT,KAAK4+B,OAASA,EACd5+B,KAAK6+B,GAAKA,EACV7+B,KAAKg/B,SAAYh/B,KAAKg2B,KAAO,EAAIh2B,KAAKg2B,KAAKltB,WAAa,SAE5DktB,WACI,OAAOh2B,KAAKyT,MAAMta,OAOtB4G,eACI,MAAMq6B,QAAap6B,KAAK1I,OACxB,OAAOonC,GAAUO,OAAOj/B,KAAKyT,MAAOzT,KAAKu1B,MAAO6E,GAMpDr6B,aACI,OAAO2+B,GAAUO,OAAOj/B,KAAKyT,MAAOzT,KAAKu1B,MAAOv1B,KAAKw7B,YAQzDz7B,cACI,MAAMq6B,QAAap6B,KAAK1I,OACxB,OAAO4+B,GAAcl2B,KAAKyT,MAAO2mB,EAAqB,cAAfp6B,KAAKu1B,OAQhDx1B,YACI,OAAOm2B,GAAcl2B,KAAKyT,MAAOzT,KAAKw7B,WAA2B,cAAfx7B,KAAKu1B,OAQ3Dx1B,aACIC,KAAKk/B,kBACL,MAAM5nC,EAAOknC,KAAYW,KAAKn/B,KAAK4+B,QACnC,GAAmB,WAAf5+B,KAAKu1B,MAAoB,CACzB,MAAMqF,QAActjC,EACpB,IACI,OAAOsjC,EAAM78B,IAAI1I,GAAK+pC,GAAkB/pC,IAE5C,MAAOgqC,GACH,MAAM,IAAIjlC,MAAM,kGAIxB,OAAO9C,EA0BXyI,UAAUlI,GAEN,OADAmI,KAAKk/B,kBACEV,KAAYc,UAAUt/B,KAAK4+B,OAAQ/mC,GAQ9CkI,WACIC,KAAKk/B,kBACL,MAAM5nC,EAAOknC,KAAYe,SAASv/B,KAAK4+B,QACvC,GAAmB,WAAf5+B,KAAKu1B,MACL,IACI,OAAOj+B,EAAKyG,IAAI1I,GAAK+pC,GAAkB/pC,IAE3C,MAAOgqC,GACH,MAAM,IAAIjlC,MAAM,iGAIxB,OAAO9C,EAGXyI,cACIC,KAAKk/B,kBACL,MAAM5nC,QAAaknC,KAAYW,KAAKn/B,KAAK4+B,QACzC,MAAmB,WAAf5+B,KAAKu1B,MACEj+B,EAGA,IAAI89B,WAAW99B,EAAK2nC,QAQnCl/B,UACQC,KAAKw/B,aAGThB,KAAYiB,cAAcz/B,MAC1BA,KAAK++B,oBAAqB,GAE9BS,iBACI,OAAOx/B,KAAK++B,mBAEhBh/B,kBACI,GAAIC,KAAKw/B,WACL,MAAM,IAAIplC,MAAM,uBAWxB2F,MAAM08B,GAAU,GACZ,OAAOiC,GAAUgB,MAAM1/B,KAAMy8B,GAMjC18B,QAEI,OADAC,KAAKk/B,kBACER,GAAU7Y,MAAM7lB,MAO3BD,SAAS08B,GAAU,GAEf,OAAOD,GADMx8B,KAAKw7B,WACUx7B,KAAKyT,MAAOzT,KAAKu1B,MAAOkH,GAExD18B,KAAKw1B,GAED,OADAv1B,KAAKk/B,kBACER,GAAUiB,KAAK3/B,KAAMu1B,GAEhCx1B,SAAS6/B,GAAY,EAAM1oC,EAAMq+B,GAE7B,OADAv1B,KAAKk/B,kBACEV,KAAYqB,aAAa7/B,KAAM4/B,EAAW1oC,EAAMq+B,IAG/D3gC,OAAOkrC,eAAenB,GAAQoB,OAAOC,YAAa,CAC9C9nC,MAAQqG,KAMKA,GAA6B,MAAjBA,EAASjH,MAAqC,MAArBiH,EAASi9B,UACvB,MAA5Bj9B,EAAS2gC,kBAOVlG,GAAU,SAAU,IAChB2F,IAUR,MAAMsB,WAAiBtB,GAC1B5+B,YAAYmgC,EAAcN,EAAW1oC,EAAMipC,GACvCC,MAAMF,EAAazsB,MAAOysB,EAAa3K,MAAO2K,EAAatB,OAAQuB,GACnEngC,KAAK4/B,UAAYA,EACjB5/B,KAAK9I,KAAOA,EAUhB6I,OAAOsgC,GACH,GAAIA,EAAS9K,QAAUv1B,KAAKu1B,MACxB,MAAM,IAAIn7B,MAAM,2BAA2BimC,EAAS9K,8BAC7Bv1B,KAAKu1B,qBAEhC,IAAK+K,GAAiBD,EAAS5sB,MAAOzT,KAAKyT,OACvC,MAAM,IAAIrZ,MAAM,2BAA2BimC,EAAS5sB,8BAC7BzT,KAAKyT,qBAEhC+qB,KAAYiB,cAAcz/B,MAC1BA,KAAK4+B,OAASyB,EAASzB,OACvBJ,KAAY+B,OAAOvgC,KAAM,MAE7BD,UACIy+B,KAAYgC,gBAAgBxgC,MAC5BA,KAAK++B,oBAAqB;;;;;;;;;;;;;;;;;ACnZ3B,IAAI0B,GAYPC,GAOAC,GAOAC,GAOAC,GDqXJjsC,OAAOkrC,eAAeG,GAAUF,OAAOC,YAAa,CAChD9nC,MAAQqG,GACGA,aAAoBogC,IAA6B,MAAnBpgC,EAASuQ,QAC1CvQ,EAASuQ,kBAAkBgyB,WCxZvC,SAAWL,GACPA,EAAS,GAAI,KACbA,EAAS,GAAI,KACbA,EAAS,GAAI,KACbA,EAAS,GAAI,KACbA,EAAS,GAAI,KACbA,EAAS,GAAI,KACbA,EAAS,GAAI,KAPjB,CAQGA,KAASA,GAAO,KAInB,SAAWC,GACPA,EAA2B,QAAI,UAC/BA,EAAyB,MAAI,QAC7BA,EAAwB,KAAI,QAC5BA,EAA6B,UAAI,YAJrC,CAKGA,KAAsBA,GAAoB,KAE7C,SAAWC,GACPA,EAA0B,QAAI,UAC9BA,EAAwB,MAAI,QAC5BA,EAAuB,KAAI,OAC3BA,EAA4B,UAAI,YAJpC,CAKGA,KAAqBA,GAAmB,KAE3C,SAAWC,GACPA,EAA6B,QAAI,UACjCA,EAA2B,MAAI,UAC/BA,EAA0B,KAAI,UAC9BA,EAA+B,UAAI,YAJvC,CAKGA,KAAwBA,GAAsB,KAEjD,SAAWC,GACPA,EAA+B,QAAI,YACnCA,EAA6B,MAAI,YACjCA,EAA4B,KAAI,YAChCA,EAAiC,UAAI,YAJzC,CAKGA,KAA0BA,GAAwB,KACrD,MAAME,GAAgB,CAClBC,QAAWJ,GACXK,MAASP,GACThG,KAAQiG,GACRO,UAAaL;;;;;;;;;;;;;;;;;ACzCV,SAASM,GAAe/rC,EAAGC,GAC9B,GAAID,EAAEmgC,QAAUlgC,EAAEkgC,MACd,MAAO,CAACngC,EAAGC,GAEf,MAAMkgC,EDuCH,SAAoB6L,EAAOC,GAC9B,GAAc,WAAVD,GAAgC,WAAVC,EAAoB,CAC1C,GAAc,WAAVD,GAAgC,WAAVC,EACtB,MAAO,SAEX,MAAM,IAAIjnC,MAAM,kBAAkBgnC,UAAcC,KAEpD,OAAON,GAAcK,GAAOC,GC9CdC,CAAWlsC,EAAEmgC,MAAOlgC,EAAEkgC,OACpC,MAAO,CAACngC,EAAEuqC,KAAKpK,GAAQlgC,EAAEsqC,KAAKpK,IAqB3B,SAASgM,GAAsBt+B,GAClC,MAAMu+B,EAAO,GAGb,OAEJ,SAASC,EAAoB5xB,EAAW2xB,EAAME,GAC1C,GAAiB,MAAb7xB,EACA,OAEJ,GAAIA,aAAqB8uB,GAErB,YADA6C,EAAKhnC,KAAKqV,GAGd,GAcgBvP,EAdAuP,GAeTrQ,MAAMi1B,QAAQn0B,IAAuB,iBAARA,EAdhC,OAaR,IAAoBA;;;;;;;;;;;;;;;;OAVhB,MAAMqhC,EAAW9xB,EACjB,IAAK,MAAM+xB,KAAKD,EAAU,CACtB,MAAMntB,EAAMmtB,EAASC,GAChBF,EAAKplC,IAAIkY,KACVktB,EAAKnlC,IAAIiY,GACTitB,EAAoBjtB,EAAKgtB,EAAME,KApBvCD,CAAoBx+B,EAAQu+B,EADf,IAAIxrC,KAEVwrC,ECrBX,SAASK,GAA6BC,GAClC,OAAsC,MAA/BA,EAAiB1N,WAE5B,MAAM2N,GACFhiC,cAEIC,KAAKgiC,oBAAsB,GAC3BhiC,KAAKiiC,eAAiB,EACtBjiC,KAAKkiC,SAAW,EAChBliC,KAAKmiC,WAAa,EAClBniC,KAAKoiC,iBAAmB,EACxBpiC,KAAKqiC,eAAiB,EAItBriC,KAAKsiC,cAAgB,EAGrBtiC,KAAKuiC,YAAc,EACnBviC,KAAKwiC,WAAa,GAKlBxiC,KAAKyiC,kBAAoB,GACzBziC,KAAK0iC,YAAc,EACnB1iC,KAAK2iC,WAAa,IAAIC,QACtB5iC,KAAK6iC,WAAY,EACjB7iC,KAAK8iC,cAAgB,CACjBC,SAAU,EACVC,WAAY,EACZC,UAAW,EACXC,QAAS,GACTjgC,OAAQ,KACRkgC,kBACI,OAAO3jC,MAAMC,KAAK,IAAIzJ,IAAIgK,KAAKkjC,QAAQnlC,IAAI6jC,GAAKA,EAAE1qC,UAI9D6I,UACI,IAAK,MAAMqjC,KAAgBpjC,KAAKgiC,oBAC5BhiC,KAAKgiC,oBAAoBoB,GAAcC,WAI5C,MAAMC,GACTvjC,YAAY24B,GACR14B,KAAK04B,IAAMA,EACX14B,KAAKujC,SAAW,GAChBvjC,KAAKwjC,gBAAkB,GACvBxjC,KAAKyjC,qBAAuB,EAC5BzjC,KAAK0jC,MAAQ,IAAI3B,GAErBhiC,cACI,GAA+B,MAA3BC,KAAK2jC,mBACL,OAAO3jC,KAAK2jC,mBAAmBvlC,KAAK,QAExC,GAA4B,MAAxB4B,KAAK4jC,gBACL,OAEJ,MAAMC,EAAiB7jC,KAAK8jC,oBAC5B,IAAK,IAAI5qC,EAAI,EAAGA,EAAI2qC,EAAe1qC,OAAQD,IAAK,CAC5C,MAAMsgC,EAAcqK,EAAe3qC,GAEnC,SADsB8G,KAAK+jC,kBAAkBvK,GAAawK,QAGtD,kBADMhkC,KAAKikC,WAAWzK,GAI9B,MAAM,IAAIp/B,MAAM,0EAGpB6/B,cACI,GAA+B,MAA3Bj6B,KAAK2jC,mBACL,MAAM,IAAIvpC,MAAM,YAAY4F,KAAKw5B,kIAIrC,GAA4B,MAAxBx5B,KAAK4jC,gBAAyB,CAC9B,MAAM1sC,KAAEA,EAAIgtC,UAAEA,GAAclkC,KAAKmkC,kCACjC,GAAID,EACA,MAAM,IAAI9pC,MAAM,iCAAiClD,wHAIrD8I,KAAKikC,WAAW/sC,GAEpB,OAAO8I,KAAK4jC,gBAEhB7jC,eACI,OAAOnL,OAAO4L,KAAKR,KAAKwjC,iBAE5BzjC,YAAYy5B,GACR,KAAMA,KAAex5B,KAAKujC,UAAW,CAGjC,KAAI/J,KAAex5B,KAAKwjC,iBAQpB,OAAO,KAR8B,CACrC,MAAMU,UAAEA,GAAclkC,KAAK+jC,kBAAkBvK,GAC7C,GAAI0K,EAEA,OAAO,MAOnB,OAAOlkC,KAAKujC,SAAS/J,GAEzBz5B,mBAAmBy5B,GACf,OAAMA,KAAex5B,KAAKwjC,gBAGnBxjC,KAAKwjC,gBAAgBhK,GAAa4K,QAF9B,KAIfrkC,gBAAgBy5B,EAAa4K,EAASC,EAAW,GAC7C,OAAI7K,KAAex5B,KAAKwjC,iBACpBc,GAAY9K,EAAH,uEAEF,IAEXx5B,KAAKwjC,gBAAgBhK,GAAe,CAAE4K,QAAAA,EAASC,SAAAA,IACxC,GAEXtkC,iBAAiBy5B,GACb,GAAyC,MAArCx5B,KAAKwjC,gBAAgBhK,GACrB,MAAM,IAAIp/B,MAAM,iBAAiBo/B,4BAGrC,GADAx5B,KAAKw5B,YAAcA,EACe,MAA9Bx5B,KAAKujC,SAAS/J,GAAsB,CACpCx5B,KAAK4jC,gBAAkB,KACvB,MAAMI,QAAEA,EAAOE,UAAEA,GAAclkC,KAAK+jC,kBAAkBvK,GAEtD,KADe0K,QAAkBF,EAAUA,GAEvC,OAAO,EAOf,OAJAhkC,KAAK4jC,gBAAkB5jC,KAAKujC,SAAS/J,GACrCx5B,KAAKukC,yBAELvkC,KAAKwkC,SAAW,IAAIzJ,GAAS/6B,KAAK4jC,kBAC3B,EAEX7jC,yBACoB45B,GAAqB35B,KAAKw5B,aAClCxkC,QAAQ8O,IACY,MAApBA,EAAO2gC,WACP3gC,EAAO2gC,UAAUzkC,KAAK4jC,mBAIlC7jC,yBAAyBy5B,GACLG,GAAqBH,GAC7BxkC,QAAQ8O,IACc,MAAtBA,EAAO4gC,aACP5gC,EAAO4gC,YAAY1kC,KAAKujC,SAAS/J,MAU7Cz5B,kBAAkBy5B,GACd,MAAMmL,EAAuB3kC,KAAKwjC,gBAAgBhK,GAClD,GAA4B,MAAxBmL,EACA,MAAM,IAAIvqC,MAAM,6BAA6Bo/B,6BAEjD,IACI,MAAMS,EAAU0K,EAAqBP,UAMrC,IAAInK,GAAaA,aZxJtB,MACHl6B,SAAS6+B,GACL,OAAOzK,GAAkB,YAE7Bp0B,OAAO6+B,GACH,OAAOzK,GAAkB,UAE7Bp0B,iBACI,OAAO,EAEXA,KAAK1J,GACD,OAAO89B,GAAkB,QAE7Bp0B,KAAK6+B,GACD,OAAOzK,GAAkB,QAE7Bp0B,SAAS6+B,GACL,OAAOzK,GAAkB,YAE7Bp0B,UAAU6+B,EAAQ/mC,GACd,OAAOs8B,GAAkB,aAE7Bp0B,aACI,OAAOo0B,GAAkB,cAE7Bp0B,YAAY6+B,EAAQgG,GAChB,OAAOzQ,GAAkB,eAE7Bp0B,MAAM41B,EAAQliB,EAAO8hB,GACjB,OAAOpB,GAAkB,SAE7Bp0B,KAAK6+B,EAAQjJ,EAAQliB,EAAO8hB,EAAOsP,GAC/B,OAAO1Q,GAAkB,QAE7Bp0B,SACI,OAAOo0B,GAAkB,UAG7Bp0B,iBACI,OAAOo0B,GAAkB,kBAG7Bp0B,UACI,OAAiC,KAA1BC,KAAK8kC,iBAhFW,KACA,KAiF3B/kC,UACI,OAAOo0B,GAAkB,cY2GO,mBAAjB8F,EAAQ77B,KA2Bf,OADA4B,KAAKujC,SAAS/J,GAAeS,EACtB,CAAE+J,SAAS,EAAME,WAAW,GA3BC,CACpC,MAAMa,IAAc/kC,KAAKyjC,qBACnBO,EAAU/J,EACX77B,KAAKwlC,KAEFmB,EAAY/kC,KAAKyjC,wBAGrBzjC,KAAKujC,SAAS/J,GAAeoK,EAC7B5jC,KAAK2jC,mBAAqB,MACnB,IAENqB,MAAM92B,IAEH62B,EAAY/kC,KAAKyjC,uBAGrBzjC,KAAK2jC,mBAAqB,KAC1BW,GAAS,6BAA6B9K,YACtC8K,GAASp2B,EAAIkF,OAASlF,EAAI+2B,WAJf,IAQf,OADAjlC,KAAK2jC,mBAAqBK,EACnB,CAAEA,QAAAA,EAASE,WAAW,IAOrC,MAAOh2B,GAGH,OAFAo2B,GAAS,6BAA6B9K,YACtC8K,GAASp2B,EAAIkF,OAASlF,EAAI+2B,SACnB,CAAEjB,SAAS,EAAOE,WAAW,IAG5CnkC,cAAcy5B,GACV,KAAMA,KAAex5B,KAAKwjC,iBACtB,MAAM,IAAIppC,MAASo/B,EAAH,kCAEhBx5B,KAAKw5B,cAAgBA,GAA0C,MAA3Bx5B,KAAK2jC,oBAGzC3jC,KAAKyjC,uBAELjK,KAAex5B,KAAKujC,WACpBvjC,KAAKklC,yBAAyB1L,GAC9Bx5B,KAAKujC,SAAS/J,GAAa6J,iBACpBrjC,KAAKujC,SAAS/J,WAElBx5B,KAAKwjC,gBAAgBhK,GAExBx5B,KAAKw5B,cAAgBA,IACrBx5B,KAAK2jC,mBAAqB,KAC1B3jC,KAAKw5B,YAAc,KACnBx5B,KAAK4jC,gBAAkB,MAG/B7jC,oBACI,GAAiD,IAA7CnL,OAAO4L,KAAKR,KAAKwjC,iBAAiBrqC,OAClC,MAAM,IAAIiB,MAAM,iCAEpB,OAAOxF,OAAO4L,KAAKR,KAAKwjC,iBAAiB1uB,KAAK,CAAC1f,EAAGC,IAEvC2K,KAAKwjC,gBAAgBnuC,GAAGgvC,SAC3BrkC,KAAKwjC,gBAAgBpuC,GAAGivC,UAGpCtkC,kCACI,MAAM8jC,EAAiB7jC,KAAK8jC,oBAC5B,IAAK,IAAI5qC,EAAI,EAAGA,EAAI2qC,EAAe1qC,OAAQD,IAAK,CAC5C,MAAMsgC,EAAcqK,EAAe3qC,IAC7B8qC,QAAEA,EAAOE,UAAEA,GAAclkC,KAAK+jC,kBAAkBvK,GACtD,GAAI0K,GAAaF,EACb,MAAO,CAAE9sC,KAAMsiC,EAAa0K,UAAAA,GAGpC,MAAM,IAAI9pC,MAAM,0EAGpB2F,SAASk6B,EAAS2E,GACd,MAAMuG,EAAOnlC,KAAK0jC,MAAMf,WAAW/K,IAAIgH,GACjCwG,EAAaD,EAAKlL,QAClBtE,EAAS31B,KAAKu/B,SAASX,GACvBiG,EAAWO,EAAWP,SAASjG,GAGrCwG,EAAWC,YAAYzG,GAAQ,GAC/BuG,EAAKlL,QAAUA,EACfA,EAAQqL,KAAK1G,EAAQjJ,EAAQwP,EAAK1xB,MAAO0xB,EAAK5P,MAAOsP,GACjD7kC,KAAKulC,0BAGLvlC,KAAK0jC,MAAMjB,kBAAkBziC,KAAK0jC,MAAMjB,kBAAkBtpC,OAAS,KAG3E4G,KAAKylC,EAAU9wC,GACX,IAsBIuO,EAtBA/L,EAAO,KACX,GAAU,MAANxC,EAAY,CAEZ,GAAwB,mBAAb8wC,EACP,MAAM,IAAIprC,MAAM,uCAEpB1F,EAAK8wC,MAEJ,CAED,GAAwB,iBAAbA,KAA2BA,aAAoB/P,QACtD,MAAM,IAAIr7B,MAAM,kFAGpB,GAAkB,mBAAP1F,EACP,MAAM,IAAI0F,MAAM,kFAGpBlD,EAAOsuC,EAKX,OAAOxlC,KAAKylC,UAAU,IAAMzlC,KAAK0lC,WAAWxuC,GAAO,IAAM8I,KAAK2lC,SAAS1iC,GAAS,KAC5EA,EAASvO,IACLuO,aAAkBtH,SAClBoH,QAAQlJ,MAAM,2CAEXoJ,IAGflD,UAAUY,EAAOg9B,EAAKtnC,GAClBsK,IACA,IACI,MAAMilC,EAAMvvC,IAEZ,OADAsnC,IACOiI,EAEX,MAAOC,GAEH,MADAlI,IACMkI,GAGd9lC,eACI,OAAOujC,GAAOwC,eAElB/lC,iBACI,OAAOujC,GAAOyC,iBAQlBhmC,MAAM2H,GACF,MAAMC,EAAIq+B,GAAOC,UCnSD,WDmSqB,CAAEv+B,EAAAA,IACjCyzB,EAAS,CAAEzzB,EAAAA,GAajB,OADA1H,KAAKkmC,YAAYlmC,KAAK0jC,MAAMyC,YAAYjvC,KAAMikC,EAAQ,CAACxzB,GAXzCy+B,KACV1+B,EAAG,KACC,MACM2+B,EAAa,CAAE3+B,EAAG0+B,GAClBE,EAAQ,CAAE/Q,MAFF,WAGd,OAAOyQ,GAAOC,UCvVV,ODuV0BI,EAE9BC,MAGM,GAC0D,IACjE3+B,EAeX5H,UAAUq0B,EAAY+G,EAAQmL,GACF,MAApBtmC,KAAKw5B,aAMLx5B,KAAKi6B,QAGT,KAD6D,MAA3CV,GAAUnF,EAAYp0B,KAAKw5B,cAEzC,MAAM,IAAIp/B,MAAM,WAAWg6B,kCAA2Cp0B,KAAKw5B,gBAE/E,OAAOx5B,KAAKumC,cAAc,CAAEnS,WAAAA,EAAY+G,OAAAA,EAAQmL,MAAAA,IAEpDvmC,yBACI,OAAOC,KAAK04B,IAAIrB,QAAQ,WAE5Bt3B,sBAAsBq0B,EAAYoS,EAAkBC,GAChD,MAAMC,EAAkB1mC,KAAKi6B,QAAQ0M,aAErC,IAAIC,EAAmB,EACvBH,EAASzxC,QAAQmwC,IAGbyB,GAAoC,cAAfzB,EAAK5P,MAAwB,EAAI,IAO1D,MAAMsR,EAAW7mC,KAAK0jC,MAAMjB,kBAAkBziC,KAAK0jC,MAAMjB,kBAAkBtpC,OAAS,GAC9E2tC,EAAgBJ,EAAkBF,EAAmBI,EAAmBC,EAC9E,GAAIC,EAAgB,EAChB,MAAM,IAAI1sC,MAAM,YAAY4F,KAAKw5B,6CACzBsN,8BAA0C1S,MAQ1Dr0B,cAAcgnC,GACV,IAAI1zB,EACA2zB,EAAQ,GACZ,MAAMC,EAAWjnC,KAAKinC,WAChBC,EAAoBlnC,KAAK0jC,MAAMxB,SAC/BiF,EAAqBnnC,KAAK0jC,MAAMvB,WAItC,IAAIiF,EASAC,EAZArnC,KAAKulC,0BACLvlC,KAAK0jC,MAAMjB,kBAAkBjoC,KAAK,GAGd,MAApBwF,KAAKw5B,aAMLx5B,KAAKi6B,QAGT,MAAMqN,EAAoBzF,GAA6BkF,GACnDA,EAAa3S,WACa,MAA1Bp0B,KAAK0jC,MAAMyC,YAAsBnmC,KAAK0jC,MAAMyC,YAAYjvC,KAAO,GAInE,GAAI2qC,GAA6BkF,GAAe,CAC5C,MAAM3S,WAAEA,EAAU+G,OAAEA,EAAMmL,MAAEA,GAAUS,EACd,MAApB/mC,KAAKw5B,aAMLx5B,KAAKi6B,QAET,MAAMn2B,EAASy1B,GAAUnF,EAAYp0B,KAAKw5B,aAC1C4E,GAAsB,MAAVt6B,EAAgB,IAAM,kCAAkCswB,mBAA4Bp0B,KAAKw5B,gBACrG4N,EAAa,KACT,MAAMZ,EAAmBxmC,KAAKi6B,QAAQ0M,aACtCU,EAAMvjC,EAAOsjC,WAAW,CAAEjM,OAAAA,EAAQmL,MAAAA,EAAOrM,QAASj6B,KAAKi6B,UACvD,MAAMwM,EAAWjnC,MAAMi1B,QAAQ4S,GAAOA,EAAM,CAACA,GACzCrnC,KAAKulC,0BACLvlC,KAAKunC,sBAAsBnT,EAAYoS,EAAkBC,GAE7D,MAAMe,EAAaf,EAAS1oC,IAAK0pC,IAI7B,GAAoB,MAAhBA,EAAQzR,KACR,OAAOyR,EAEX,MAAM7I,OAAEA,EAAMnrB,MAAEA,EAAK8hB,MAAEA,GAAUkS,EACjC,OAAOznC,KAAK0nC,qBAAqB9I,EAAQnrB,EAAO8hB,KAMpD,GAAI0R,EAAU,CACV,MAAMU,EAAgB3nC,KAAK4nC,sBAAsBxT,EAAY+G,EAAQqM,GACrER,EAAQhnC,KAAK6nC,2BAA2BF,GAE5C,OAAOH,OAGV,CACD,MAAMM,YAAEA,GAAgBf,EAElBgB,EAAYC,IAITf,IAGLD,EAAQgB,EAAQjqC,IAAIkqC,GAAUjoC,KAAKkoC,KAAKloC,KAAK6lB,MAAMoiB,OAEvDb,EAAa,KACT,MAAMZ,EAAmBxmC,KAAKi6B,QAAQ0M,aACtCU,EAAMrnC,KAAKmoC,KAAK,IAAML,EAAY9nC,KAAKi6B,QAAS8N,IAChD,MAAMK,EAAQ5oC,MAAMi1B,QAAQ4S,GAAOA,EAAM,CAACA,GAK1C,OAJIrnC,KAAKulC,0BAELvlC,KAAKunC,sBAAsBD,EAAmBd,EAAkB4B,GAE7DA,GAMf,MAAMjN,OAAEA,EAAMmL,MAAEA,GAAUS,EACpBsB,EAAgBxG,GAA6BkF,GAC/C,KACAA,EAAasB,cACjB,IAAIrM,EA+BJ,OA9BAh8B,KAAKylC,UAEL,IAAMzlC,KAAK0jC,MAAMnB,cAAe,IAAMviC,KAAK0jC,MAAMnB,cAAe,KACvDviC,KAAK04B,IAAIrB,QAAQ,UAAar3B,KAAK0jC,MAAMb,WAI1C7G,EAAgBh8B,KAAKwkC,SAAS8D,cAAchB,EAAmBnM,EAAQ,IAAMiM,KACzEpnC,KAAK04B,IAAIrB,QAAQ,UACjBr3B,KAAKwkC,SAASrI,iBAAiBH,GAEnC3oB,EAAU2oB,EAAc3oB,SAPxBA,EAAU+zB,MAUdH,GACAjnC,KAAKkmC,YAAYoB,EAAmBnM,EAAQ9nB,EAASg1B,EAAerB,EAAOV,GAE3EtmC,KAAK0jC,MAAMb,WACX7iC,KAAK0jC,MAAMZ,cAAcI,QAAQ1oC,KAAK,CAClCtD,KAAMowC,EACNiB,WAAYvoC,KAAK0jC,MAAMxB,SAAWgF,EAClCsB,mBAAoBxoC,KAAK0jC,MAAMxB,SAC/BuG,aAAczoC,KAAK0jC,MAAMvB,WAAagF,EACtCuB,qBAAsB1oC,KAAK0jC,MAAMvB,WACjCwG,YAAa/zC,OAAO4L,KAAK26B,GAAQp9B,IAAIpF,GAAsB,MAAfwiC,EAAOxiC,GAAewiC,EAAOxiC,GAAK8a,MAAQ,MACtFm1B,aAAcv1B,EAAQtV,IAAI8qC,GAAQA,EAAKp1B,OACvCq1B,aAAc9M,EAAcJ,OAC5BE,UAAWE,EAAcF,YAGzBt8B,MAAMi1B,QAAQ4S,GAAOh0B,EAAUA,EAAQ,GAOnDtT,2BAA2BioC,GAEvB,OADcA,EAAQjqC,IAAIkqC,GAAUjoC,KAAKkoC,KAAKloC,KAAK6lB,MAAMoiB,KAU7DloC,sBAAsBq0B,EAAY+G,EAAQ9nB,GACtC,MAAM01B,EAAarP,GAAYtF,GAC/B,GAAkB,MAAd2U,EAAoB,CACpB,MAAMC,EAAeD,EAAWC,cAAgB,GAC1CC,EAAgBF,EAAWE,eAAiB,GAGlD,IAAIC,EACAH,EAAWI,eACX/K,GAAY5+B,MAAMi1B,QAAQ0G,GAAS,IAAM,0DACzC+N,EAAqBt0C,OAAO4L,KAAK26B,GAAQp9B,IAAKpF,GAAQwiC,EAAOxiC,KAG7DuwC,EAAqBF,EAAajrC,IAAKqrC,GAAcjO,EAAOiO,IAEhE,MAAMC,EAAsBh2B,EAAQrV,OAAO,CAAC0S,EAAGxX,IAAM+vC,EAAc/vC,IACnE,OAAOgwC,EAAmBtjB,OAAOyjB,GAQrC,MAAO,GAOXtpC,WAAW41B,EAAQliB,EAAO8hB,EAAO0E,GAC7B,GAAc,MAAVtE,EACA,MAAM,IAAIv7B,MAAM,iDAEpBm7B,EAAQA,GAAS,UACjB0E,EAAUA,GAAWj6B,KAAKi6B,QAC1B,IAAIqP,EAAc3T,EACJ,WAAVJ,GAAsBgU,GAAc5T,EAAO,MAC3C2T,EAAc3T,EAAO53B,IAAIP,GN5f9B,SAAsBiG,EAAGo3B,EAAW,SAEvC,OADAA,EAAWA,GAAY,QAChBzD,KAAMD,SAASqS,OAAO/lC,EAAGo3B,GM0fM4O,CAAkBjsC,KAEpD,MAAMohC,EAAS3E,EAAQyP,MAAMJ,EAAa71B,EAAO8hB,GAC3CtlB,EAAI,IAAI0uB,GAAOlrB,EAAO8hB,EAAOqJ,EAAQ5+B,KAAK8lC,gBAGhD,GAFA9lC,KAAK2pC,YAAY15B,EAAGgqB,GAEN,WAAV1E,EAAoB,CACpB,MAAM4P,EAAOnlC,KAAK0jC,MAAMf,WAAW/K,IAAIgH,GACjCmE,EX1JX,SAA8BhtB,GACjC,GAAW,MAAPA,EACA,OAAO,EAEX,IAAI6kB,EAAQ,EAEZ,OADA7kB,EAAI/gB,QAAQ0S,GAAKkzB,GAASlzB,EAAEvO,QACrByhC,EWoJkBgP,CAAqBN,GACtCtpC,KAAK0jC,MAAMxB,UAAYa,EAAWoC,EAAKvK,MACvCuK,EAAKvK,MAAQmI,EAEjB,OAAO9yB,EAOXlQ,qBAAqB6+B,EAAQnrB,EAAO8hB,EAAO0E,GAEvC,MAAMhqB,EAAI,IAAI0uB,GAAOlrB,EADrB8hB,EAAQA,GAAS,UACkBqJ,EAAQ5+B,KAAK8lC,gBAEhD,OADA9lC,KAAK2pC,YAAY15B,EAAGgqB,GACbhqB,EAEXlQ,aAAamgC,EAAcN,GAAY,EAAM1oC,EAAMq+B,GAC/Cr+B,EAAOA,GAAQ8I,KAAK+lC,iBAAiBj9B,WACxB,MAATysB,GAAiBA,IAAU2K,EAAa3K,QACxC2K,EAAeA,EAAaP,KAAKpK,IAErC,MAAMhxB,EAAI,IAAI07B,GAASC,EAAcN,EAAW1oC,EAAM8I,KAAK8lC,gBAC3D,GAA8C,MAA1C9lC,KAAK0jC,MAAM1B,oBAAoBz9B,EAAErN,MACjC,MAAM,IAAIkD,MAAM,sBAAsBmK,EAAErN,+BAI5C,OAFA8I,KAAK0jC,MAAM1B,oBAAoBz9B,EAAErN,MAAQqN,EACzCvE,KAAKugC,OAAOh8B,EAAGvE,KAAKi6B,SACb11B,EAEXxE,YAAY3K,EAAG6kC,GACXj6B,KAAK0jC,MAAMvB,aACK,WAAZ/sC,EAAEmgC,OACFv1B,KAAK0jC,MAAMtB,mBAIf,IAAIxH,EAAQ,EACI,cAAZxlC,EAAEmgC,OAAqC,WAAZngC,EAAEmgC,QAC7BqF,EAAQxlC,EAAEkB,KAAOuzC,GAAqBz0C,EAAEmgC,QAE5Cv1B,KAAK0jC,MAAMxB,UAAYtH,EAClB56B,KAAK0jC,MAAMf,WAAWrmC,IAAIlH,EAAEwpC,UAC7B5+B,KAAK0jC,MAAMrB,iBACXriC,KAAK0jC,MAAMf,WAAW7hC,IAAI1L,EAAEwpC,OAAQ,CAChC3E,QAASA,GAAWj6B,KAAKi6B,QACzB1E,MAAOngC,EAAEmgC,MACT9hB,MAAOre,EAAEqe,MACTmnB,MAAAA,KAGFxlC,aAAa6qC,IACfjgC,KAAK8pC,MAAM10C,GAQnB2K,OAAO3K,EAAG6kC,GACNj6B,KAAK2pC,YAAYv0C,EAAG6kC,GACpBj6B,KAAKi6B,QAAQsG,OAAOnrC,EAAEwpC,QAE1B7+B,aAAa6+B,EAAQ3E,GACbj6B,KAAK0jC,MAAMf,WAAWrmC,IAAIsiC,IAC1B5+B,KAAK0jC,MAAMf,WAAW/K,IAAIgH,GAAQ3E,UAAYA,IAC9Cj6B,KAAK0jC,MAAMf,WAAWvsC,OAAOwoC,GAC7B5+B,KAAK0jC,MAAMrB,kBAGnBtiC,cAAc3K,GACV,IAAK4K,KAAK0jC,MAAMf,WAAWrmC,IAAIlH,EAAEwpC,QAC7B,OAEJ,MAAMuG,EAAOnlC,KAAK0jC,MAAMf,WAAW/K,IAAIxiC,EAAEwpC,QAQzC,GAPA5+B,KAAK0jC,MAAMvB,aACK,WAAZ/sC,EAAEmgC,QACFv1B,KAAK0jC,MAAMtB,mBACXpiC,KAAK0jC,MAAMxB,UAAYiD,EAAKvK,OAIhB,cAAZxlC,EAAEmgC,OAAqC,WAAZngC,EAAEmgC,MAAoB,CACjD,MAAMqF,EAAQxlC,EAAEkB,KAAOuzC,GAAqBz0C,EAAEmgC,OAC9Cv1B,KAAK0jC,MAAMxB,UAAYtH,EAGvBuK,EAAKlL,QAAQoL,YAAYjwC,EAAEwpC,SAC3B5+B,KAAK+pC,aAAa30C,EAAEwpC,OAAQuG,EAAKlL,SAMzCl6B,mBACI,IAAK,MAAMiqC,KAAWhqC,KAAK0jC,MAAM1B,oBAAqB,CAClD,MAAMz9B,EAAIvE,KAAK0jC,MAAM1B,oBAAoBgI,GACzChqC,KAAKwgC,gBAAgBj8B,IAG7BxE,gBAAgBwE,GACZvE,KAAKy/B,cAAcl7B,GAC2B,MAA1CvE,KAAK0jC,MAAM1B,oBAAoBz9B,EAAErN,cAC1B8I,KAAK0jC,MAAM1B,oBAAoBz9B,EAAErN,MAGhD6I,SACI,MAAMolC,EAAOnlC,KAAKi6B,QAAQgQ,SAY1B,OAXA9E,EAAKhD,WAAaniC,KAAK0jC,MAAMvB,WAC7BgD,EAAK9C,eAAiBriC,KAAK0jC,MAAMrB,eACjC8C,EAAKjD,SAAWliC,KAAK0jC,MAAMxB,SACvBliC,KAAK0jC,MAAMtB,iBAAmB,IAC9B+C,EAAK+E,YAAa,EACE,MAAhB/E,EAAKgF,UACLhF,EAAKgF,QAAU,IAEnBhF,EAAKgF,QAAQ3vC,KAAK,0EAGf2qC,EAEXplC,cAAcqqC,GACVpqC,KAAK0jC,MAAMb,WAAY,EACvB,MAAMwH,EAAarqC,KAAK0jC,MAAMxB,SACxBoI,EAAkBtqC,KAAK0jC,MAAMvB,WACnCniC,KAAK0jC,MAAMZ,cAAcI,QAAU,GACnCljC,KAAK0jC,MAAMZ,cAAc7/B,aAAemnC,IACxCpqC,KAAK0jC,MAAMb,WAAY,EACvB7iC,KAAK0jC,MAAMZ,cAAcG,UAAY58B,KAAKQ,OAAO7G,KAAK0jC,MAAMZ,cAAcI,QAAQnlC,IAAIP,GAAKA,EAAEgrC,qBAC7FxoC,KAAK0jC,MAAMZ,cAAcC,SAAW/iC,KAAK0jC,MAAMxB,SAAWmI,EAC1DrqC,KAAK0jC,MAAMZ,cAAcE,WACrBhjC,KAAK0jC,MAAMvB,WAAamI,EAC5B,IAAK,MAAMxmC,KAAU9D,KAAK0jC,MAAMZ,cAAcI,QAC1Cp/B,EAAOglC,mBAAqBhlC,EAAOglC,aACnChlC,EAAOg4B,gBAAkBh4B,EAAOg4B,UAEpC,OAAO97B,KAAK0jC,MAAMZ,cAEtB/iC,WACI,OAAOC,KAAK0jC,MAAMpB,cAAgB,GAAgC,IAA3BtiC,KAAK0jC,MAAMnB,YAEtDxiC,YAAYq0B,EAAY+G,EAAQ9nB,EAASk3B,EAAevD,EAAOV,GAC3D,MAAMkE,EAAW,CAAE3L,GAAI7+B,KAAK0jC,MAAMzB,iBAAkB7N,WAAAA,EAAY+G,OAAAA,EAAQ9nB,QAAAA,EAAS2zB,MAAAA,GAC3E+B,EAAarP,GAAYtF,GACb,MAAd2U,IACAwB,EAAgBxB,EAAW0B,UAEV,MAAjBF,IACAC,EAASxvB,SAAY0vB,IAGjBA,EAAMA,EAAI3sC,IAAI,CAACqoC,EAAIltC,KACf,GAAU,MAANktC,EAAY,CACZ,MAAMzhC,EAAS0O,EAAQna,GACjBkhC,EAAOuQ,GAAyBhmC,EAAOrO,KAAMqO,EAAO4wB,OAC1D,OAAOv1B,KAAKy+B,WAAWrE,EAAMz1B,EAAO8O,MAAO9O,EAAO4wB,OAEtD,OAAO6Q,IAIJmE,EAAcG,EAAIvxC,OAAS,EAAIuxC,EAAMA,EAAI,GAAI1D,EAAOV,KAGnEtmC,KAAK0jC,MAAMkH,WAAWpwC,KAAKgwC,GAE/BzqC,KAAKkD,GAED,OADAA,EAAO67B,MAAO,EACP77B,EAEXlD,YACqC,IAA7BC,KAAK0jC,MAAMpB,gBACXtiC,KAAK0jC,MAAMkH,WAAa,IAE5B5qC,KAAK0jC,MAAMpB,gBAEfviC,UACIC,KAAK0jC,MAAMpB,gBAMfviC,WAAW7I,GACP,MAAM2zC,EAAY,CACdf,MAAO,GACP5yC,KAAM,gBACN2nC,GAAI7+B,KAAK0jC,MAAMhB,eAEfxrC,IACA2zC,EAAU3zC,KAAOA,GAErB8I,KAAK0jC,MAAMlB,WAAWhoC,KAAKqwC,GAC3B7qC,KAAK0jC,MAAMyC,YAAc0E,EAM7B9qC,SAASkD,GACL,MAAM6nC,EAAyBvJ,GAAsBt+B,GAC/C8nC,EAA4B,IAAI/0C,IAAI80C,EAAuB/sC,IAAIkS,GAAKA,EAAE4uB,KAE5E,IAAK,IAAI3lC,EAAI,EAAGA,EAAI8G,KAAK0jC,MAAMyC,YAAY2D,MAAM3wC,OAAQD,IAAK,CAC1D,MAAM+uC,EAASjoC,KAAK0jC,MAAMyC,YAAY2D,MAAM5wC,GACvC+uC,EAAOnJ,MAASiM,EAA0BzuC,IAAI2rC,EAAOpJ,KACtDoJ,EAAO5E,UAGf,MAAM2H,EAAWhrC,KAAK0jC,MAAMlB,WAAWpmC,MACvC4D,KAAK0jC,MAAMyC,YAA+C,IAAjCnmC,KAAK0jC,MAAMlB,WAAWrpC,OAC3C,KACA6G,KAAK0jC,MAAMlB,WAAWxiC,KAAK0jC,MAAMlB,WAAWrpC,OAAS,GAEzD2xC,EAAuB91C,QAAQizC,IAGtBA,EAAOnJ,MAAQmJ,EAAOgD,UAAYD,EAASnM,IAC5C7+B,KAAK8pC,MAAM7B,KAUvBloC,UAAU1J,EAAGgN,EAAI+iC,EAAI8E,GAAmB,GAEpC,GADA9M,GAAY/6B,EAAGlK,OAAS,EAAG,IAAM,6CACvB,MAANitC,GAA2B,YAAbA,EAAG7Q,MACjB,MAAM,IAAIn7B,MAAM,0CAA0CgsC,EAAG7Q,UAEjE,MAAM5tB,EAAI3H,KAAKylC,UAAU,IAAMzlC,KAAKmrC,YAAa,IAAMnrC,KAAKorC,UAAW,IAAMprC,KAAKmoC,KAAK,UAAW9xC,IAClG+nC,GAAYz2B,aAAag3B,GAAQ,IAAM,kDAEvC,MAAM0M,EEn0BP,SAA8BC,EAAMjoC,EAAIsE,GAG3C,MAAM4jC,EAAe,GACfC,EAAa,GACnB,IAAK,IAAItyC,EAAI,EAAGA,EAAImK,EAAGlK,OAAQD,IAC3BqyC,EAAaloC,EAAGnK,GAAG2lC,KAAM,EAE7B,IAAK,IAAI3lC,EAAI,EAAGA,EAAIoyC,EAAKnyC,OAAQD,IAAK,CAClC,MAAMzC,EAAO60C,EAAKpyC,GACZuyC,EAAah1C,EAAK0kC,OACxB,IAAK,MAAMiO,KAAaqC,EAAY,CAChC,MAAMhzC,EAAQgzC,EAAWrC,GACzB,IAAIsC,GAAgB,EACpB,IAAK,IAAIxoC,EAAI,EAAGA,EAAIG,EAAGlK,OAAQ+J,IAC3B,GAAIqoC,EAAa9yC,EAAMomC,IAAK,CACxBpoC,EAAK4c,QAAQre,QAAQ2P,GAAU4mC,EAAa5mC,EAAOk6B,KAAM,GACzD6M,GAAgB,EAChBF,EAAW/0C,EAAKooC,KAAM,EACtB,MAGR,GAAI6M,EACA,OAKZ,MAAMC,EAAiB,GACvBA,EAAehkC,EAAEk3B,KAAM,EACvB,MAAM+M,EAAW,GACjB,IAAK,IAAI1yC,EAAIoyC,EAAKnyC,OAAS,EAAGD,GAAK,EAAGA,IAAK,CACvC,MAAMzC,EAAO60C,EAAKpyC,GACZuyC,EAAah1C,EAAK0kC,OAExB,IAAK,IAAIj4B,EAAI,EAAGA,EAAIzM,EAAK4c,QAAQla,OAAQ+J,IACrC,GAAIyoC,EAAel1C,EAAK4c,QAAQnQ,GAAG27B,IAAK,CACpC,IAAK,MAAMuK,KAAaqC,EACpBE,EAAeF,EAAWrC,GAAWvK,KAAM,EAC3C+M,EAASn1C,EAAKooC,KAAM,EAExB,OAKZ,MAAMwM,EAAe,GACrB,IAAK,IAAInyC,EAAI,EAAGA,EAAIoyC,EAAKnyC,OAAQD,IAAK,CAClC,MAAMzC,EAAO60C,EAAKpyC,GAClB,GAAIsyC,EAAW/0C,EAAKooC,KAAO+M,EAASn1C,EAAKooC,IAAK,CAE1C,MAAMgN,EAAe,GACrB,IAAK,MAAMzC,KAAa3yC,EAAK0kC,OAAQ,CACjC,MAAM2Q,EAAYr1C,EAAK0kC,OAAOiO,GAC1BmC,EAAaO,EAAUjN,MACvBgN,EAAazC,GAAa0C,GAIlC,MAAMC,EAAan3C,OAAOka,OAAO,GAAIrY,GACrCs1C,EAAW5Q,OAAS0Q,EACpBE,EAAW14B,QAAU5c,EAAK4c,QAC1Bg4B,EAAa7wC,KAAKuxC,IAG1B,OAAOV,EFkwBkBW,CAAqBhsC,KAAK0jC,MAAMkH,WAAYvnC,EAAIsE,GACrE,IAAKujC,GAA4C,IAAxBG,EAAalyC,QAAgBkK,EAAGlK,OAAS,EAC9D,MAAM,IAAIiB,MAAM,uIAIpB,OAAO4F,KAAKmoC,KAAK,WAAY,KACzB,MAAM8D,EAAyB,GAC/BA,EAAuBtkC,EAAEk3B,IAAa,MAANuH,EAwH5C,SAAc3yB,GACV,MAAMkiB,EXpaH,SAA4Br/B,EAAMi/B,GACrC,MAAM7yB,EAAQ4zB,GAAoBhgC,EAAMi/B,GACxC,IAAK,IAAIr8B,EAAI,EAAGA,EAAIwJ,EAAMvJ,OAAQD,IAC9BwJ,EAAMxJ,GAAK,EAEf,OAAOwJ,EW+ZQwpC,CAAmBvX,GAAclhB,GAAQ,WACxD,OAAOuyB,GAAOvH,WAAW9I,EAAQliB,EAAO,WA1Hc04B,CAAKxkC,EAAE8L,OAAS2yB,EEjwBnE,SAAgCgG,EAA8Bf,EAAclD,EAAM5rC,GAErF,IAAK,IAAIrD,EAAImyC,EAAalyC,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAC/C,MAAMzC,EAAO40C,EAAanyC,GACpBwxC,EAAM,GAYZ,GAXAj0C,EAAK4c,QAAQre,QAAQuI,IACjB,MAAM8uC,EAAaD,EAA6B7uC,EAAEshC,IAChC,MAAdwN,EACA3B,EAAIlwC,KAAK6xC,GAKT3B,EAAIlwC,KAAK,QAGI,MAAjB/D,EAAKukB,SACL,MAAM,IAAI5gB,MACN,4DAAO3D,EAAK29B,eAGpB,MAAMkY,EAAiB71C,EAAKukB,SAAS0vB,GACrC,IAAK,MAAMtB,KAAa3yC,EAAK0kC,OAAQ,CACjC,KAAMiO,KAAakD,GACf,MAAM,IAAIlyC,MAAM,iCAAiCgvC,iCACfx0C,OAAO4L,KAAK8rC,OAGlD,MAAMC,EAAKpE,EAAK,IAAMmE,EAAelD,MACrC,GAAiB,YAAbmD,EAAGhX,MACH,MAAM,IAAIn7B,MAAM,4BAA4B3D,EAAK29B,qCAC1CgV,yCAAiDmD,EAAGhX,UAE/D,MAAM7tB,EAAIjR,EAAK0kC,OAAOiO,GACtB,IAAK9I,GAAiBiM,EAAG94B,MAAO/L,EAAE+L,OAC9B,MAAM,IAAIrZ,MAAM,4BAA4B3D,EAAK29B,sCACzCgV,iBAAyBmD,EAAG94B,wDACL/L,EAAE+L,UAErC,GAA0C,MAAtC24B,EAA6B1kC,EAAEm3B,IAC/BuN,EAA6B1kC,EAAEm3B,IAAM0N,MAEpC,CACD,MAAMC,EAAcJ,EAA6B1kC,EAAEm3B,IACnDuN,EAA6B1kC,EAAEm3B,IAAMtiC,EAAIiwC,EAAaD,GACtDC,EAAYnJ;;;;;;;;;;;;;;;;OFstBhBoJ,CAAuBR,EAAwBZ,EAE/Ch1C,GAAK2J,KAAKmoC,KAAK9xC,GAEfkG,IACA,MAAMmwC,EAAQrpC,EAAGtF,IAAI2J,GAAKukC,EAAuBvkC,EAAEm3B,KAWnD,OAViC,IAA7B7+B,KAAK0jC,MAAMpB,gBAGXtiC,KAAK0jC,MAAMkH,WAAW51C,QAAQyB,IAC1B,IAAK,MAAMwxC,KAAUxxC,EAAKuwC,MACtBiB,EAAO5E,YAGfrjC,KAAK0jC,MAAMkH,WAAa,MAErB,CAAE1yC,MAAOyP,EAAG+kC,MAAAA,KAG3B3sC,WAAW1J,GAEP,OADA+nC,GAAYuO,GAAgBt2C,GAAI,IAAM,qDAC/B,IAAI8kC,KAGP,IAAIyK,EAFJxH,GAAYjD,EAAOyR,MAAM38B,GAAKA,aAAa0uB,IAAS,IAAM,oEAG1D,MAAMkO,EAAW,GACjB1R,EAAOnmC,QAAQ,CAACyD,EAAOS,KACnB2zC,EAAS3zC,GAAKT,IAyBlB,OAAOuH,KAAKumC,cAAc,CACtBuB,YAxBgB,CAACp3B,EAAGo8B,KACpBlH,EAAMvvC,KAAS8kC,EAAQ2R,GACvB1O,GAAYwH,EAAI1tC,iBAAiBymC,GAAQ,IAAM,8FAE/CP,GAAYuO,GAAgB/G,EAAI6E,UAAW,IAAM,oGAE1C7E,EAAI1tC,OAmBXmwC,cAjBkB,CAACjC,EAAIY,KACvB,MAAM+F,EAAUnH,EAAI6E,SAASrE,EAAIY,GAC3B0F,EAAQltC,MAAMi1B,QAAQsY,GAAWA,EAAU,CAACA,GAClD3O,GAAYsO,EAAMvzC,SAAWgiC,EAAOhiC,OAAQ,IAAM,uKAGlDilC,GAAYsO,EAAME,MAAM38B,GAAKA,aAAa0uB,IAAS,IAAM,wIAGzD,MAAMqO,EAAU,GAIhB,OAHAN,EAAM13C,QAAQ,CAACi4C,EAAM/zC,KACjB8zC,EAAQ9zC,GAAK,IAAM+zC,IAEhBD,GAKP7R,OAAQ0R,KAIpB9sC,SAAS6+B,GAGL,OADa5+B,KAAK0jC,MAAMf,WAAW/K,IAAIgH,GAC3B3E,QAAQsF,SAASX,GAEjC7+B,KAAK6+B,GAGD,OADa5+B,KAAK0jC,MAAMf,WAAW/K,IAAIgH,GAC3B3E,QAAQkF,KAAKP,GAE7B7+B,UAAU6+B,EAAQ/mC,GAGd,OADamI,KAAK0jC,MAAMf,WAAW/K,IAAIgH,GAC3B3E,QAAQqF,UAAUV,EAAQ/mC,GAE1CkI,WAAWqqC,GACP,MAAMzpC,EAAQlL,KACRy3C,QAAmBltC,KAAKi6B,QAAQtG,KAAKyW,GAE3C,OADA8C,EAAWC,OAAS13C,KAAQkL,EACrBusC,EAQXntC,MAAMkD,GAKF,OAJ8B,MAA1BjD,KAAK0jC,MAAMyC,cACXljC,EAAOgoC,QAAUjrC,KAAK0jC,MAAMyC,YAAYtH,GACxC7+B,KAAK0jC,MAAMyC,YAAY2D,MAAMtvC,KAAKyI,IAE/BA,EAEX++B,0BACI,OAAOhiC,KAAK0jC,MAAM1B,oBAMtBjiC,QAEIC,KAAKyjC,uBACLzjC,KAAK0jC,MAAML,UACXrjC,KAAK04B,IAAI0U,QACTptC,KAAK0jC,MAAQ,IAAI3B,GACjB,IAAK,MAAMvI,KAAex5B,KAAKujC,SAC3BvjC,KAAKklC,yBAAyB1L,GAC9Bx5B,KAAKujC,SAAS/J,GAAa6J,iBACpBrjC,KAAKujC,SAAS/J,GAEzBx5B,KAAKw5B,YAAc,KACnBx5B,KAAK4jC,gBAAkB,KACvB5jC,KAAK2jC,mBAAqB,MAS3B,SAAS0J,KACZ,MAAMxU,EAAKD,KACX,GAAoB,MAAhBC,EAAGyU,UAAmB,CACtB,MAAMC,EAAc,IAAI3W,GAAYiC,GACpCA,EAAGyU,UAAY,IAAIhK,GAAOiK,GAM9B,OVv0BG,SAA8BA,GACjC7U,GAAM6U;;;;;;;;;;;;;;;;OUk0BNC,CAAqB3U,EAAGyU,UAAU5U,KHr1BlC8F,GGw1BiB,IAAM3F,EAAGyU,UACnBzU,EAAGyU,UAhBdhK,GAAOwC,aAAe,EACtBxC,GAAOyC,eAAiB,EAiBjB,MAAMC,GAASqH,KAOf,SAAS9wC,GAAInH,EAAGC,GAEnB,MAAM8lC,EAAS,CAAE/lC,EAAAA,EAAGC,EAAAA,GACpB,OAAO2wC,GAAOC,UCn/BC,MDm/Bc9K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AGn+BjC,MAAMzC,GAAMtB;;;;;;;;;;;;;;;;;ACCL,SAASqW,GAAWj5B,EAAK+gB,GAC5B,IAAImY,EAAYl5B,EAChB,GAAIkgB,GAAalgB,GACb,MAAiB,WAAV+gB,EAAqB,GAAK,CAAC/gB,EAAIrb,QAE1C,IAAKqG,MAAMi1B,QAAQjgB,GACf,MAAO,GAEX,MAAMf,EAAQ,GACd,KAAOjU,MAAMi1B,QAAQiZ,IACjBhZ,GAAagZ,IAAwB,WAAVnY,GAC3B9hB,EAAMjZ,KAAKkzC,EAAUv0C,QACrBu0C,EAAYA,EAAU,GAM1B,OAJIluC,MAAMi1B,QAAQjgB,IACd4iB,KAAMC,QAAQ,uCAKtB,SAASsW,EAA2Bn5B,EAAKf,EAAOvN,GAE5C,GADAA,EAAUA,GAAW,IACf1G,MAAMi1B,QAAQjgB,KAAUkgB,GAAalgB,GAGvC,YAFAxR,GAAwB,IAAjByQ,EAAMta,OAAc,IAAM,eAAe+M,EAAQuyB,KAAK,+DACjBhlB,EAAM,eAGtDzQ,GAAOyQ,EAAMta,OAAS,EAAG,IAAM,eAAe+M,EAAQuyB,KAAK,oDACjCjkB,EAAIrb,mBAC9B6J,GAAOwR,EAAIrb,SAAWsa,EAAM,GAAI,IAAM,eAAevN,EAAQuyB,KAAK,sBAAsBhlB,EAAM,wBACrEe,EAAIrb,mBAC7B,MAAMy0C,EAAWn6B,EAAMrY,MAAM,GAC7B,IAAK,IAAIlC,EAAI,EAAGA,EAAIsb,EAAIrb,SAAUD,EAC9By0C,EAA2Bn5B,EAAItb,GAAI00C,EAAU1nC,EAAQ0f,OAAO1sB,IAjB5Dy0C,CAA2Bn5B,EAAKf,EAAO,IAEpCA,EAkBX,SAASo6B,GAAYC,EAAeC,EAAaC,EAASC,GACtD,GAAsB,sBAAlBH,EAAJ,CAGA,GAAqB,MAAjBA,EACA,MAAM,IAAI1zC,MAAM,kCAEpB,GAAsB,YAAlB0zC,GAA+BA,IAAkBC,GAC/B,YAAlBD,GAA+C,WAAhBC,EAC/B,MAAM,IAAI3zC,MAAM,aAAa4zC,iBAAuBC,cAC1CH,qBAAiCC,aAG5C,SAASG,GAAgBxmC,EAAGsmC,EAASC,EAAcE,EAAe,WACrE,GAAIzmC,aAAai3B,GAEb,OADAkP,GAAYM,EAAczmC,EAAE6tB,MAAOyY,EAASC,GACrCvmC,EAEX,IAAI0mC,EAAgB1Y,GAAWhuB,GAQ/B,GALsB,WAAlB0mC,GACA,CAAC,OAAQ,QAAS,WAAWjuC,QAAQguC,IAAiB,IACtDC,EAAgBD,GAEpBN,GAAYM,EAAcC,EAAeJ,EAASC,GACxC,MAALvmC,IACCgtB,GAAahtB,KAAOlI,MAAMi1B,QAAQ/sB,IAAmB,iBAANA,GAChC,kBAANA,GAAgC,iBAANA,EAAiB,CACtD,MAAM9M,EAAY,MAAL8M,EAAY,OAASA,EAAEouB,YAAY5+B,KAChD,MAAM,IAAIkD,MAAM,aAAa4zC,iBAAuBC,+CACdrzC,MAE1C,MAAMyzC,EAAgBZ,GAAW/lC,EAAG0mC,GAC/B1Z,GAAahtB,IAAOlI,MAAMi1B,QAAQ/sB,KACnCA,EAAI,CAACA,IAET,MACMiuB,EAA2B,WAAlByY,EACXlU,GAAaxyB,EAAG0mC,GAChB3iB,GAAQ/jB,EAAG,IAHQ,GAIvB,OAAOs+B,GAAOvH,WAAW9I,EAAQ0Y,EAAeD,GAE7C,SAASE,GAAqBzuB,EAAKmuB,EAASC,EAAcE,EAAe,WAC5E,IAAK3uC,MAAMi1B,QAAQ5U,GACf,MAAM,IAAIzlB,MAAM,YAAY4zC,eAAqBC,gDAIrD,OADgBpuB,EACD9hB,IAAI,CAACkS,EAAG/W,IAAMg1C,GAAgBj+B,EAAG,GAAG+9B,KAAW90C,KAAM+0C,EAAcE;;;;;;;;;;;;;;;;UDjFlFI,aAAa,QAAS,KAAM,EAAOC,IAC/BA,GACAzrC,QAAQu0B,KAAK,oJAMjBiX,aAAa,aAAc,IEsBD,oBAAX/4C,QAA6C,MAAnBA,OAAO2B,UAEd,oBAAtBs3C,sBFtBZF,aAAa,UAAW,IAA0B,oBAAZzV,cACT,IAArBA,QAAQ4V,eACkB,IAA1B5V,QAAQ4V,SAASj4C,SAEzB83C,aAAa,YAAa,IAA2B,oBAAdI,WAA0C,MAAbA,WAC7C,MAAvBA,UAAUC,WAAqB,SAASC,KAAKF,UAAUC,YACvD,aAAaC,KAAKF,UAAUG,YAK5BP,aAAa,OAAQ,KAAM,MAK3BA,aAAa,qCAAsC,IAAM7V,GAAIrB,QAAQ,aAErEkX,aAAa,+BAAgC,KAAM,MAEnDA,aAAa,UAAW,KAAM,MAE9BA,aAAa,+BAAgC,KAAM,MAEnDA,aAAa,sBAAuB,KAAM,MAE1CA,aAAa,sBAAuB,KAAM,GGpCvC,SAASQ,GAAG14C,GACf,MAAMmK,EAAO5L,OAAO4L,KAAKnK,GACzB,GAAoB,IAAhBmK,EAAKrH,OACL,MAAM,IAAIiB,MAAM,yGAEToG,EAAKrH,OAAR,UAER,IAAI61C,EAASxuC,EAAK,GAClB,MAAM9L,EAAK2B,EAAE24C,GAETA,EAAOC,SAAS,OAChBD,EAASA,EAAOE,UAAU,EAAGF,EAAO71C,OAAS,IAGjD61C,GApB2B,OAsB3B,MAAMtpB,EAAK,IAAI7W,KACXm3B,GAAON,WAAWsJ,GAClB,IACI,MAAM/rC,EAASvO,KAAMma,GAKrB,OAJI6nB,GAAUzzB,IACVF,QAAQlJ,MAAM,2CAElBmsC,GAAOL,SAAS1iC,GACTA,EAEX,MAAO4iC,GAEH,MADAG,GAAOL,SAAS,MACVE,IAKd,OAFAjxC,OAAOkrC,eAAepa,EAAI,OAAQ,CAAExtB,MAAO82C,EAAQG,cAAc,IAE1DzpB;;;;;;;;;;;;;;;;OCRJ,MAAM0pB,GAAUL,GAAG,CAAEM,SAR5B,SAAkBC,EAAMC,GACpB,MAAMC,EAAQtB,GAAgBoB,EAAM,OAAQ,WACtCG,EAAQvB,GAAgBqB,EAAM,OAAQ,YlBkGzC,SAA2BG,EAAQC,EAAQC,EAAqB,IACnE5sC,GAAO4xB,GAAY8a,EAAQC,GAAS,IAAMC,EAAqB,WAAWF,SAAcC,gBkBlGxFE,CAAuBL,EAAM/7B,MAAOg8B,EAAMh8B,MAAO,yBAAyB+7B,EAAM/7B,aAAag8B,EAAMh8B,8CAEnG,MAAM0nB,EAAS,CAAEmU,KAAME,EAAOD,KAAME,GACpC,OAAOzJ,GAAOC,UNrBK,UMqBc9K;;;;;;;;;;;;;;;;OC5B9B,SAASsD,GAAW9I,EAAQliB,EAAO46B,EAAe9Y,GAIrD,GAHa,MAATA,IACAA,EAAQG,GAAWC,IAET,cAAVJ,EACA,MAAM,IAAIn7B,MAAM,oFAGpB,IAAKs6B,GAAaiB,KAAYn2B,MAAMi1B,QAAQkB,IACtB,iBAAXA,GAAyC,kBAAXA,GACnB,iBAAXA,EACP,MAAM,IAAIv7B,MAAM,4HAGpB,GAAa,MAATqZ,EAAe,CACf8iB,GAAmC9iB,GACnC,MAAMq8B,EAAenb,GAAclhB,GAC7Bs8B,EAAepb,GAAc0Z,GACnCrrC,GAAO8sC,IAAiBC,EAAc,IAAM,iCAAiCt8B,8BACtEq8B,oBAA+BC,KACtC,IAAK,IAAI72C,EAAI,EAAGA,EAAIm1C,EAAcl1C,SAAUD,EAAG,CAC3C,MAAM82C,EAAW3B,EAAcn1C,GACzB+2C,EAAoB/2C,IAAMm1C,EAAcl1C,OAAS,GACnD62C,IAAarb,GAAclhB,EAAMrY,MAAMlC,IAE3C8J,GAAOqrC,EAAcn1C,KAAOua,EAAMva,KAAO+2C,EAAmB,IACxD,gDAAI5B,yCACM56B,SAUtB,OAPKihB,GAAaiB,IAAYn2B,MAAMi1B,QAAQkB,KACxCA,EAAS,CAACA,IAEdliB,EAAQA,GAAS46B,EACjB1Y,EAAmB,WAAVJ,EACL2E,GAAavE,EAAQJ,GACrB9J,GAAQkK,EAAQ,IAAI,GACjBqQ,GAAOvH,WAAW9I,EAAQliB,EAAO8hB;;;;;;;;;;;;;;;;OCVrC,SAAS0S,GAAOtS,EAAQliB,EAAO8hB,GAElC,OAAOkJ,GAAW9I,EAAQliB,EADJg6B,GAAW9X,EAAQJ,GACOA;;;;;;;;;;;;;;;;OC5B7C,MAAM2a,GAAuB,CAChClP,QAAW,EACXmP,QAAW,EACXlP,MAAS,EACTmP,OAAU,EACVC,MAAS,EACT3V,KAAQ,EACRwG,UAAa;;;;;;;;;;;;;;;;OCoOjB,MAAMoP,GAAkC,oBAAXC,SACR,oBAATC,MAAwC,oBAATC,MACnB,oBAATC,MAUR,SAASC,GAAiBC,GAC7B,OAAIN,GACOC,OAAOM,WAAWD,GAEtB,IAAIJ,KAAK,CAACI,IAAMt6C,KAkJpB,SAASw6C,GAA6BC,GACzC,GAAIA,EAAeC,yBAAyBC,YACxC,MAAM,IAAI72C,MAAM,uDAEpB,MAAO,CACH82C,UAAW,IAAIv7C,KACfw7C,kBAAmB,OACnBC,mBAAoD,MAAhCL,EAAeC,cAC/B,EACAL,GAAiBU,KAAKC,UAAUP,EAAeC,gBACnDO,iBAAgD,MAA9BR,EAAeS,YAC7B,EACAb,GAAiBU,KAAKC,UAAUP,EAAeS,cACnDC,gBAA8C,MAA7BV,EAAeW,WAC5B,EACAX,EAAeW,WAAWb,YAwE/B,SAASc,KAIZ,MAAMC,EAnEV,WACI,MAAMC,EAAmB34C,IACrB,IAAI2E,EAAI3E,GAAK,GACT8B,EAAI,EACR,KAA4B,IAAhB,QAAJ6C,IACJ7C,GAAK,QACL6C,IAAM,EAIV,OAFAA,IAAK,QACL7C,GAAK,UACE6C,EAAI7C,GAET42C,EAAe,IAAIE,YAAY,MACrCF,EAAa,GAAK,EAClB,IAAK,IAAI14C,EAAI,EAAGA,EAAI,KAAMA,IACtB04C,EAAa14C,GAAK24C,EAAgB34C,GAEtC,IAAK,IAAIA,EAAI,KAAMA,EAAI,KAAMA,IACzB04C,EAAa14C,GAAK,WAAeA,EAAI,MAAS,IAElD,OAAO04C,EA+CcG,GACfC,EAxCV,WACI,MAAMA,EAAgB,IAAIF,YAAY,IACtCE,EAAc,GAAK,EACnBA,EAAc,IAAM,WACpBA,EAAc,IAAM,WACpBA,EAAc,IAAM,WACpB,IAAK,IAAI94C,EAAI,EAAGA,EAAI,GAAIA,IACpB84C,EAAc94C,GAAKA,GAAK,GAE5B,IAAK,IAAIA,EAAI,GAAIA,EAAI,GAAIA,IACrB84C,EAAc94C,GAAK,YAAeA,EAAI,IAAO,IAEjD,OAAO84C,EA4BeC,GAChBC,EArBV,WACI,MAAMA,EAAc,IAAIJ,YAAY,IACpC,IAAK,IAAI54C,EAAI,EAAGA,EAAI,GAAIA,IACpBg5C,EAAYh5C,GAAK,KAGrB,OADAg5C,EAAY,GAAKA,EAAY,IAAM,EAC5BA,EAeaC,GACpB,OAAQC,IACJ,MAAMnT,EAAS,IAAIgS,YAAY,EAAImB,EAAej5C,QAC5Ck5C,EAAmB,IAAIP,YAAY7S,GACzC,IAAK,IAAI/+B,EAAQ,EAAGA,EAAQkyC,EAAej5C,OAAQ+G,IAAS,CACxD,MAAMoyC,EAAcF,EAAelyC,GAC7BqyC,EAAcX,EAAaM,EAAYI,GAAe,KAAqB,KAAdA,IAC/DN,EAAcM,GAAe,IACjCD,EAAiBnyC,GAASqyC,EAE9B,OAAO,IAAIrd,aAAa+J;;;;;;;;;;;;;;;;OCxfzB,MAAMuT,GACTzyC,cACIC,KAAKyyC,YAAc,GACnBzyC,KAAK0yC,YAAc,GAEvB3yC,qBAII,OAHiC,MAA7ByyC,GAAiBj0C,WACjBi0C,GAAiBj0C,SAAW,IAAIi0C,IAE7BA,GAAiBj0C,SAQ5BwB,0BAA0B4yC,GACtBH,GAAiBI,cAAcH,YAAYj4C,KAAKm4C,GAQpD5yC,0BAA0B8yC,GACtBL,GAAiBI,cAAcF,YAAYl4C,KAAKq4C,GAUpD9yC,uBAAuBiO,GACnB,OAAOwkC,GAAiBM,YAAY9kC,EAAK,QAU7CjO,uBAAuBiO,EAAK+kC,GACxB,OAAOP,GAAiBM,YAAY9kC,EAAK,OAAQ+kC,GAErDhzC,mBAAmBiO,EAAKglC,EAAaD,GACjC,MAAME,EAAgB,GAUtB,OATgC,SAAhBD,EACZR,GAAiBI,cAAcF,YAC/BF,GAAiBI,cAAcH,aAC3Bz9C,QAAQk+C,IACZ,MAAMt7C,EAAUs7C,EAAOllC,EAAK+kC,GACZ,OAAZn7C,GACAq7C,EAAcz4C,KAAK5C,KAGpBq7C;;;;;;;;;;;;;;;;OCrCf,SAASE,KACL,IAAK/b,KAAMC,QAAQ,cAIf,MAAM,IAAIj9B,MAAM,2FAIpB,MAAMg5C,EAA8B,oBAAX59C,OAAyBujC,KAAOvjC,OACnD4uC,EAAUgP,EAAUC,WAAaD,EAAUE,cAC7CF,EAAUG,iBAAmBH,EAAUI,aACvCJ,EAAUK,cACd,GAAe,MAAXrP,EACA,MAAM,IAAIhqC,MAAM,6DAEpB,OAAOgqC,EAEX,SAASsP,GAAcC,GACnB,MAAMC,EAAKD,EAAY1wC,OACvB2wC,EAAGC,kBApCkB,eAoCkB,CAAEC,QAAS,cAClDF,EAAGC,kBAjCiB,mBAiCkB,CAAEC,QAAS,cAO9C,MAAMC,GACTh0C,YAAYi0C,GAER,GADAh0C,KAAKqzC,UAAYF,KACA,MAAba,IAAsBA,EACtB,MAAM,IAAI55C,MAAM,kEAEpB4F,KAAKg0C,UAAYA,EAErBj0C,WAAWgxC,GAEP,GAAIA,EAAeC,yBAAyBC,YACxC,MAAM,IAAI72C,MAAM,4FAGpB,OAAO4F,KAAKi0C,eAAej0C,KAAKg0C,UAAWjD,GAE/ChxC,aACI,OAAOC,KAAKi0C,eAAej0C,KAAKg0C,WAgBpCj0C,eAAei0C,EAAWjD,GACtB,OAAO,IAAIp1C,QAAQ,CAACC,EAAS8a,KACzB,MAAMi9B,EAAc3zC,KAAKqzC,UAAUa,KApFzB,eACG,GAoFbP,EAAYQ,gBAAkB,IAAMT,GAAcC,GAClDA,EAAYS,UAAY,KACpB,MAAMR,EAAKD,EAAY1wC,OACvB,GAAsB,MAAlB8tC,EAAwB,CAExB,MAAMsD,EAAUT,EAAGU,YArFd,eAqF4C,YAE3CC,EADaF,EAAQG,YAtFtB,gBAuFyB5c,IAAI53B,KAAKg0C,WACvCO,EAAWH,UAAY,KACnB,GAAyB,MAArBG,EAAWtxC,OAEX,OADA2wC,EAAGa,QACI/9B,EAAO,IAAItc,MAAM,gCAAgC4F,KAAKg0C,6BAI7Dp4C,EAAQ24C,EAAWtxC,OAAO8tC,iBAGlCwD,EAAWh9B,QAAU1d,IACjB+5C,EAAGa,QACI/9B,EAAO69B,EAAW16C,QAE7Bw6C,EAAQK,WAAa,IAAMd,EAAGa,YAE7B,CAED,MAAME,EAAqB7D,GAA6BC,GAElD6D,EAAShB,EAAGU,YAxGd,mBAwG2C,aAC/C,IAAIO,EAAYD,EAAOJ,YAzGnB,oBA0GJ,MAAMM,EAAiBD,EAAUE,IAAI,CAAEf,UAAWh0C,KAAKg0C,UAAWW,mBAAAA,IAClE,IAAIN,EACJS,EAAeV,UAAY,KAEvBC,EAAUT,EAAGU,YAlHZ,eAkH0C,aAC3C,MACMU,EADaX,EAAQG,YAnH1B,gBAoHkCO,IAAI,CACnCf,UAAWh0C,KAAKg0C,UAChBjD,eAAAA,EACA4D,mBAAAA,IAEJK,EAAgBZ,UAAY,IAAMx4C,EAAQ,CAAE+4C,mBAAAA,IAC5CK,EAAgBz9B,QAAU1d,IAGtBg7C,EAAYD,EAAOJ,YAzHvB,oBA0HI,MAAMS,EAAoBJ,EAAUz+C,OAAO4J,KAAKg0C,WAChDiB,EAAkBb,UAAY,KAC1BR,EAAGa,QACI/9B,EAAOs+B,EAAgBn7C,QAElCo7C,EAAkB19B,QAAU1d,IACxB+5C,EAAGa,QACI/9B,EAAOs+B,EAAgBn7C,UAI1Ci7C,EAAev9B,QAAU1d,IACrB+5C,EAAGa,QACI/9B,EAAOo+B,EAAej7C,QAEjC+6C,EAAOF,WAAa,KACD,MAAXL,EACAT,EAAGa,QAGHJ,EAAQK,WAAa,IAAMd,EAAGa,WAK9Cd,EAAYp8B,QAAU1d,GAAS6c,EAAOi9B,EAAY95C,UAI9Dk6C,GAAiBmB,WAAa,eACvB,MAAMC,GAAmBnnC,IAC5B,OAAKopB,KAAMC,QAAQ,gBAIV73B,MAAMi1B,QAAQzmB,IAAQA,EAAIonC,WAAWrB,GAAiBmB,aA2BlClB,EA1BGhmC,EAAI5S,MAAM24C,GAAiBmB,WAAW/7C,QA2B/D,IAAI46C,GAAiBC,IA/BjB,KA8BR,IAA0BA,GAnBjCxB,GAAiB6C,mBAAmBF,IACpC3C,GAAiB8C,mBAAmBH,IA0B7B,MAAMI,GACTx1C,cACIC,KAAKqzC,UAAYF,KAErBpzC,mBACI,OAAO,IAAIpE,QAAQ,CAACC,EAAS8a,KACzB,MAAMi9B,EAAc3zC,KAAKqzC,UAAUa,KA/MzB,eACG,GA+MbP,EAAYQ,gBAAkB,IAAMT,GAAcC,GAClDA,EAAYS,UAAY,KACpB,MAAMR,EAAKD,EAAY1wC,OACjB4e,EAAK+xB,EAAGU,YA1MN,mBA0MmC,YAUrCkB,EATQ3zB,EAAG2yB,YA3MT,oBAoNwBiB,SAChCD,EAAkBpB,UAAY,KAC1B,MAAM/M,EAAM,GACZ,IAAK,MAAMwB,KAAQ2M,EAAkBvyC,OACjCokC,EAAIwB,EAAKmL,WAAanL,EAAK8L,mBAE/B/4C,EAAQyrC,IAEZmO,EAAkBj+B,QAAU1d,IACxB+5C,EAAGa,QACI/9B,EAAO8+B,EAAkB37C,QAEpCgoB,EAAG6yB,WAAa,IAAMd,EAAGa,SAE7Bd,EAAYp8B,QAAU1d,GAAS6c,EAAOi9B,EAAY95C,SAG1DkG,kBAAkB21C,GA1CtB,IAA0B/8C,EA4ClB,OADA+8C,GA3CkB/8C,EA2CM+8C,GA1CjBN,WAAWrB,GAAiBmB,YACnCv8C,EAAIyC,MAAM24C,GAAiBmB,WAAW/7C,QACtCR,EAyCO,IAAIgD,QAAQ,CAACC,EAAS8a,KACzB,MAAMi9B,EAAc3zC,KAAKqzC,UAAUa,KAjPzB,eACG,GAiPbP,EAAYQ,gBAAkB,IAAMT,GAAcC,GAClDA,EAAYS,UAAY,KACpB,MAAMR,EAAKD,EAAY1wC,OACjB2xC,EAAShB,EAAGU,YA5OV,mBA4OuC,aACzCO,EAAYD,EAAOJ,YA7OjB,oBA8OFmB,EAAiBd,EAAUjd,IAAI8d,GACrC,IAAIrB,EACJsB,EAAevB,UAAY,KACvB,GAA6B,MAAzBuB,EAAe1yC,OAEf,OADA2wC,EAAGa,QACI/9B,EAAO,IAAItc,MAAM,gCAAgCs7C,qBAGvD,CAED,MAAMT,EAAoBJ,EAAUz+C,OAAOs/C,GACrCE,EAAkB,KAEpBvB,EAAUT,EAAGU,YA/PhB,eA+P8C,aAC3C,MACMuB,EADaxB,EAAQG,YAhQ9B,gBAiQyCp+C,OAAOs/C,GAC7CG,EAAmBzB,UAAY,IAAMx4C,EAAQ+5C,EAAe1yC,OAAO0xC,oBACnEkB,EAAmBt+B,QAAU1d,GAAS6c,EAAOi/B,EAAe97C,QAIhEo7C,EAAkBb,UAAYwB,EAC9BX,EAAkB19B,QAAU1d,IACxB+7C,IACAhC,EAAGa,QACI/9B,EAAOi/B,EAAe97C,UAIzC87C,EAAep+B,QAAU1d,IACrB+5C,EAAGa,QACI/9B,EAAOi/B,EAAe97C,QAEjC+6C,EAAOF,WAAa,KACD,MAAXL,EACAT,EAAGa,QAGHJ,EAAQK,WAAa,IAAMd,EAAGa,UAI1Cd,EAAYp8B,QAAU1d,GAAS6c,EAAOi9B,EAAY95C;;;;;;;;;;;;;;;;OChS9D,MACMi8C,GAAc,sBACdC,GAAc,OACdC,GAAwB,iBACxBC,GAAsB,eACtBC,GAAqB,cACrBC,GAAwB,iBA2B9B,SAASC,GAAaV,GAClB,MAAO,CACHvQ,KAAM,CAAC2Q,GAAaJ,EAAMK,IAAatd,KAnCxB,KAoCf4d,SAAU,CAACP,GAAaJ,EAAMM,IAAuBvd,KApCtC,KAqCf+Y,YAAa,CAACsE,GAAaJ,EAAMO,IAAqBxd,KArCvC,KAsCfiZ,WAAY,CAACoE,GAAaJ,EAAMQ,IAAoBzd,KAtCrC,KAuCf6d,cAAe,CAACR,GAAaJ,EAAMS,IAAuB1d,KAvC3C,MA0CvB,SAAS8d,GAAY/1C,GACjB,IAAK,MAAM7H,KAAO/D,OAAO+gC,OAAOn1B,GAC5BhL,OAAOghD,aAAaC,WAAW99C,GAUvC,SAAS+9C,GAAoB/9C,GACzB,MAAMg+C,EAAQh+C,EAAIs/B,MAvDC,KAwDnB,GAAI0e,EAAMx9C,OAAS,EACf,MAAM,IAAIiB,MAAM,uBAAuBzB,GAE3C,OAAOg+C,EAAMv7C,MAAM,EAAGu7C,EAAMx9C,OAAS,GAAGs/B,KA3DrB,KAuEhB,MAAMme,GACT72C,YAAYi0C,GACR,IAAK5c,KAAMC,QAAQ,eAAmC,oBAAX7hC,aACR,IAAxBA,OAAOghD,aAKd,MAAM,IAAIp8C,MAAM,2DAGpB,GADA4F,KAAK62C,GAAKrhD,OAAOghD,aACA,MAAbxC,IAAsBA,EACtB,MAAM,IAAI55C,MAAM,sEAEpB4F,KAAKg0C,UAAYA,EACjBh0C,KAAKQ,KAAO41C,GAAap2C,KAAKg0C,WAWlCj0C,WAAWgxC,GACP,GAAIA,EAAeC,yBAAyBC,YACxC,MAAM,IAAI72C,MAAM,4FAGf,CACD,MAAMi8C,EAAWhF,KAAKC,UAAUP,EAAeC,eACzCQ,EAAcH,KAAKC,UAAUP,EAAeS,aAC5CmD,EAAqB7D,GAA6BC,GACxD,IACI/wC,KAAK62C,GAAGC,QAAQ92C,KAAKQ,KAAK2kC,KAAMkM,KAAKC,UAAUqD,IAC/C30C,KAAK62C,GAAGC,QAAQ92C,KAAKQ,KAAK61C,SAAUA,GACpCr2C,KAAK62C,GAAGC,QAAQ92C,KAAKQ,KAAKgxC,YAAaA,GACvCxxC,KAAK62C,GAAGC,QAAQ92C,KAAKQ,KAAKkxC,WHoJnC,SAAmCzS,GACtC,GAAIqR,GACA,OAAOC,OAAO9wC,KAAKw/B,GAAQn2B,SAAS,UAExC,MAAMiuC,EAAM,IAAI3hB,WAAW6J,GAC3B,IAAIx7B,EAAI,GACR,IAAK,IAAIvK,EAAI,EAAG0G,EAAIm3C,EAAI59C,OAAQD,EAAI0G,EAAG1G,IACnCuK,GAAKgyB,OAAOuhB,aAAaD,EAAI79C,IAEjC,OAAOw3C,KAAKjtC,GG7JsCwzC,CAA0BlG,EAAeW,aAI/E,MAAMwF,EAAW,CACbhrC,OAAQ6kC,EAAe7kC,OACvBirC,YAAapG,EAAeoG,YAC5BC,YAAarG,EAAeqG,YAC5BC,UAAuC,MAA5BtG,EAAesG,UACtBtG,EAAesG,eACf19C,EACJ29C,oBAA2D,MAAtCvG,EAAeuG,oBAChCvG,EAAeuG,yBACf39C,EACJ49C,iBAAqD,MAAnCxG,EAAewG,iBAC7BxG,EAAewG,sBACf59C,EACJ69C,eAAiD,MAAjCzG,EAAeyG,eAC3BzG,EAAeyG,oBACf79C,GAGR,OADAqG,KAAK62C,GAAGC,QAAQ92C,KAAKQ,KAAK81C,cAAejF,KAAKC,UAAU4F,IACjD,CAAEvC,mBAAAA,GAEb,MAAOzmC,GAGH,MADAqoC,GAAYv2C,KAAKQ,MACX,IAAIpG,MAAM,yBAAyB4F,KAAKg0C,kHAEpBW,EAAmBvD,wCACrBuD,EAAmBpD,qCACpBoD,EAAmBlD,sBAYtD1xC,aACI,MAAMolC,EAAOkM,KAAKoG,MAAMz3C,KAAK62C,GAAGa,QAAQ13C,KAAKQ,KAAK2kC,OAClD,GAAY,MAARA,EACA,MAAM,IAAI/qC,MAAM,kDAAkD4F,KAAKg0C,cAE3E,GAA+B,SAA3B7O,EAAKgM,kBACL,MAAM,IAAI/2C,MAAM,6EAGpB,MAAMitC,EAAM,GAENgP,EAAWhF,KAAKoG,MAAMz3C,KAAK62C,GAAGa,QAAQ13C,KAAKQ,KAAK61C,WACtD,GAAgB,MAAZA,EACA,MAAM,IAAIj8C,MAAM,4CAA4C4F,KAAKg0C,0BAGrE3M,EAAI2J,cAAgBqF,EAEpB,MAAM7E,EAAcH,KAAKoG,MAAMz3C,KAAK62C,GAAGa,QAAQ13C,KAAKQ,KAAKgxC,cACzD,GAAmB,MAAfA,EACA,MAAM,IAAIp3C,MAAM,gDAAgD4F,KAAKg0C,2BAGzE3M,EAAImK,YAAcA,EAElB,MAAMmG,EAAiB33C,KAAK62C,GAAGa,QAAQ13C,KAAKQ,KAAK81C,eACjD,GAAsB,MAAlBqB,EAAwB,CACxB,MAAMT,EAAW7F,KAAKoG,MAAME,GAC5BtQ,EAAIn7B,OAASgrC,EAAShrC,OACtBm7B,EAAI8P,YAAcD,EAASC,YAC3B9P,EAAI+P,YAAcF,EAASE,YACD,MAAtBF,EAASG,YACThQ,EAAIgQ,UAAYH,EAASG,WAEO,MAAhCH,EAASI,sBACTjQ,EAAIiQ,oBAAsBJ,EAASI,qBAEN,MAA7BJ,EAASK,mBACTlQ,EAAIkQ,iBAAmBL,EAASK,kBAEL,MAA3BL,EAASM,iBACTnQ,EAAImQ,eAAiBN,EAASM,gBAItC,MAAMI,EAAmB53C,KAAK62C,GAAGa,QAAQ13C,KAAKQ,KAAKkxC,YACnD,GAAwB,MAApBkG,EACA,MAAM,IAAIx9C,MACN,wDAAI4F,KAAKg0C,2BAGjB,OADA3M,EAAIqK,WHwEL,SAAmCd,GACtC,GAAIN,GAAe,CACf,MAAMyG,EAAMxG,OAAO9wC,KAAKmxC,EAAK,UAC7B,OAAOmG,EAAI9X,OAAO7jC,MAAM27C,EAAIc,WAAYd,EAAIc,WAAad,EAAIlG,YAEjE,MAAMptC,EAAIgtC,KAAKG,GACT3R,EAAS,IAAI7J,WAAW3xB,EAAEtK,QAChC,IAAK,IAAID,EAAI,EAAGA,EAAIuK,EAAEtK,SAAUD,EAC5B+lC,EAAOn+B,IAAI,CAAC2C,EAAEq0C,WAAW5+C,IAAKA,GAElC,OAAO+lC,EAAOA,OGlFO8Y,CAA0BH,GACpCvQ,GAGfuP,GAAoB1B,WAAa,kBAC1B,MAAM8C,GAAsBhqC,IAC/B,OAAKopB,KAAMC,QAAQ,gBAIV73B,MAAMi1B,QAAQzmB,IAAQA,EAAIonC,WAAWwB,GAAoB1B,aAkClClB,EAjCGhmC,EAAI5S,MAAMw7C,GAAoB1B,WAAW/7C,QAkCrE,IAAIy9C,GAAoB5C,IAtCpB,KAqCR,IAA6BA,GA1BpCxB,GAAiB6C,mBAAmB2C,IACpCxF,GAAiB8C,mBAAmB0C,IA4B7B,MAAMC,GACTl4C,cACIiD,GAAOo0B,KAAMC,QAAQ,cAAe,IAAM,4CAC1Cr0B,GAAyB,oBAAXxN,aACqB,IAAxBA,OAAOghD,aAA8B,IAAM,2DACtDx2C,KAAK62C,GAAKrhD,OAAOghD,aAErBz2C,mBACI,MAAMsnC,EAAM,GACN6Q,EAASpC,GAnQA,IAoQTqC,EApQS,IAoQiBpC,GAChC,IAAK,IAAI78C,EAAI,EAAGA,EAAI8G,KAAK62C,GAAG19C,SAAUD,EAAG,CACrC,MAAMP,EAAMqH,KAAK62C,GAAGl+C,IAAIO,GACxB,GAAIP,EAAIy8C,WAAW8C,IAAWv/C,EAAIs2C,SAASkJ,GAAS,CAEhD9Q,EADkBqP,GAAoB/9C,IACrB04C,KAAKoG,MAAMz3C,KAAK62C,GAAGa,QAAQ/+C,KAGpD,OAAO0uC,EAEXtnC,kBAAkB21C,GAjNtB,IAA0B/8C,EAmNlB,MAAM6H,EAAO41C,GADbV,GAlNkB/8C,EAkNM+8C,GAjNjBN,WAAWwB,GAAoB1B,YACtCv8C,EAAIyC,MAAMw7C,GAAoB1B,WAAW/7C,QACzCR,GAiNA,GAAkC,MAA9BqH,KAAK62C,GAAGa,QAAQl3C,EAAK2kC,MACrB,MAAM,IAAI/qC,MAAM,8BAA8Bs7C,MAElD,MAAMvQ,EAAOkM,KAAKoG,MAAMz3C,KAAK62C,GAAGa,QAAQl3C,EAAK2kC,OAE7C,OADAoR,GAAY/1C,GACL2kC;;;;;;;;;;;;;;;;OC9QR,MAAMiT,GACTr4C,cACIC,KAAKq4C,SAAW,GAEpBt4C,qBAII,OAH0C,MAAtCq4C,GAA0B75C,WAC1B65C,GAA0B75C,SAAW,IAAI65C,IAEtCA,GAA0B75C,SAQrCwB,uBAAuBu4C,EAAQC,GAC3Bv1C,GAAiB,MAAVs1C,EAAgB,IAAM,yCACzBA,EAAOrJ,SAnBO,SAoBdqJ,EAASA,EAAOl9C,MAAM,EAAGk9C,EAAOn4C,QApBlB,SAsBlB6C,GAAOs1C,EAAOn/C,OAAS,EAAG,IAAM,uCAChC,MAAMoqC,EAAW6U,GAA0BxF,cAC3C5vC,GAAoC,MAA7BugC,EAAS8U,SAASC,GAAiB,IAAM,2DAA2DA,OAC3G/U,EAAS8U,SAASC,GAAUC,EAEhCx4C,kBAAkBu4C,GACd,MAAMC,EAAUv4C,KAAK4yC,cAAcyF,SAASC,GAC5C,GAAe,MAAXC,EACA,MAAM,IAAIn+C,MAAM,yCAAyCk+C,MAE7D,OAAOC,EAEXx4C,oBACI,OAAOnL,OAAO4L,KAAKR,KAAK4yC,cAAcyF;;;;;;;;;;;;;;;;OC1CvC,MAAMG,GACTz4C,MAAM21C,EAAMp3C,GACR,OAAOm6C,MAAM/C,EAAMp3C,GAEvByB,MACI,OAAOrK,YAAYD,MAEvBsK,OAAO1I,EAAMwjC,GACT,GAAiB,UAAbA,GAAqC,SAAbA,EACxB,MAAM,IAAIzgC,MAAM,kDAAkDygC,GAKtE,OAHwB,MAApB76B,KAAK04C,cACL14C,KAAK04C,YAAc,IAAIC,aAEpB34C,KAAK04C,YAAYlP,OAAOnyC,GAEnC0I,OAAO66B,EAAOC,GACV,OAAO,IAAI+d,YAAY/d,GAAUC,OAAOF,IAGhD,GAAIxD,KAAMQ,IAAI,cAAe,CACzBR,KAAMyhB,YAAY,UAAW,IAAIL,IAEjC,IACIJ,GAA0BU,gBAAgBlC,GAAoB1B,WAAY,IAAI+C,IAElF,MAAO/pC,IAGP,IACIkqC,GAA0BU,gBAAgB/E,GAAiBmB,WAAY,IAAIK,IAE/E,MAAOrnC;;;;;;;;;;;;;;;;OCnCJ,MAAM6qC,GAEI,IAAMC,QAAQ,cAE/B,IAAIC,GAYG,MAAMC,GACTn5C,cAEIC,KAAKm5C,KAAOH,QAAQ,QAGpBh5C,KAAK04C,YAAc,IAAI14C,KAAKm5C,KAAKR,YAErC54C,MAAM21C,EAAM0D,GACR,OAA0B,MAAtBhiB,KAAM7Z,OAAOk7B,MACNrhB,KAAM7Z,OAAOk7B,MAAM/C,EAAM0D,IAEjB,MAAfH,KACAA,GAAcF,MAEXE,GAAYvD,EAAM0D,IAE7Br5C,MACI,MAAM4zB,EAAOmF,QAAQugB,SACrB,OAAiB,IAAV1lB,EAAK,GAAYA,EAAK,GAAK,IAEtC5zB,OAAO1I,EAAMwjC,GACT,GAAiB,UAAbA,GAAqC,SAAbA,EACxB,MAAM,IAAIzgC,MAAM,sDAAsDygC,GAE1E,OAAO76B,KAAK04C,YAAYlP,OAAOnyC,GAEnC0I,OAAO66B,EAAOC,GACV,OAAqB,IAAjBD,EAAMzhC,OACC,GAEJ,IAAI6G,KAAKm5C,KAAKP,YAAY/d,GAAUC,OAAOF,IAGtDxD,KAAMQ,IAAI,aAAeR,KAAMQ,IAAI,eACnCR,KAAMyhB,YAAY,OAAQ,IAAIK;;;;;;;;;;;;;;;;QCtB3B,MAAMvZ,GAAOoP,GAAG,CAAEuK;;;;;;;;;;;;;;;;;AAdzB,SAAe5xC,EAAG6tB,GACd,MAAMgkB,EAAKrL,GAAgBxmC,EAAG,IAAK,QAEnC,I7BkYG,SAAsB6tB,GACzB,MAAiB,SAAVA,GAA8B,cAAVA,GAAmC,YAAVA,GACtC,UAAVA,GAA+B,WAAVA,E6BpYpBikB,CAAkBjkB,GACnB,MAAM,IAAIn7B,MAAM,mCAAmCm7B,GAEvD,GAAc,WAAVA,GAAmC,WAAbgkB,EAAGhkB,OACf,WAAVA,GAAmC,WAAbgkB,EAAGhkB,MACzB,MAAM,IAAIn7B,MAAM,yCAEpB,MAAM+gC,EAAS,CAAEzzB,EAAG6xC,GACdjT,EAAQ,CAAE/Q,MAAAA,GAChB,OAAOyQ,GAAOC,UjBtBE,OiBsBc9K,EAAQmL;;;;;;;;;;;;;;;;OCJnC,MAAMzgB,GAAQkpB,GAAG,CAAE0K,OAP1B,SAAgB/xC,GACZ,MACMyzB,EAAS,CAAEzzB,EADNwmC,GAAgBxmC,EAAG,IAAK,QAAS,sBAI5C,OAAOs+B,GAAOC,UlB6BM,WkB7Bc9K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBtCkS;;;;;;;;;;;;;;;;;ACMO,SAASqM,GAAwBC,EAAUC,EAAYC,EAAeC,IAgBzE,SAAuBH,GACnB32C,GAAmB,MAAZ22C,GAAoBn6C,MAAMi1B,QAAQklB,IAAaA,EAASxgD,OAAS,EAAG,IAAM,uCAhBrF4gD,CAAcJ,GAkBd,SAAuBE,EAAeC,GAClC92C,GAAO62C,GAAiB,GAAKA,GAAiB,EAAG,IAAM,oEAC9BA,GACzB72C,GAAO82C,GAAe,GAAKA,GAAe,EAAG,IAAM,kEAC5BA,GACvB92C,GAAO82C,GAAeD,EAAe,IACjC,yEAAqBA,qBAClBC,GAtBXE,CAFAH,EAAiC,MAAjBA,EAAwB,EAAIA,EAC5CC,EAA6B,MAAfA,EAAsB,EAAIA,GAExC,IAAIG,EAAkB,EAuBtB,OAAOt+C,QAAQsgC,IAAI0d,EAAS57C,IAtBHm8C,IACrBA,EAAQ97C,KAAKlG,IACT,MAAMiiD,EAAWN,KACXI,EAAkBN,EAASxgD,QAAU2gD,EAAcD,GAGzD,OADAD,EAAWO,GACJjiD,IAEJgiD;;;;;;;;;;;;;;;;OCuBRrnC,eAAeunC,GAAYC,EAAUC,EAAiB,GAAIC,EAAaC,GAQ1E,OADoBC,GADEC,GApCnB7nC,eAAwC8nC,EAAW5H,GACnC,MAAfA,IACAA,EAAc,IAElB,MAAM6H,EAAqC,MAAzB7H,EAAY6H,UAAoBxjB,KAAMD,SAASshB,MAC7D1F,EAAY6H,UAEVC,EAAWF,EAAU58C,IAAI+8C,GAAYF,EAAUE,EAAU/H,EAAYyH,YAAa,CAAEO,UAAU,KAM9FC,GAHsC,MAA1BjI,EAAY6G,iBACpBj+C,QAAQsgC,IAAI4e,SACZnB,GAAwBmB,EAAU9H,EAAY6G,WAJ7B,EACF,KAIQ77C,IAAIk9C,GAAYA,EAASC,eAM1D,OAH0C,MAA1BnI,EAAY6G,iBAClBj+C,QAAQsgC,IAAI+e,SACZtB,GAAwBsB,EAAgBjI,EAAY6G,WAJlC,GACF,GAqBUuB,CAAyBT,EAAW,CAAEF,YAAAA,IAEnEJ,CAAYC,EAAUC,EAAgBC,GA0B1C,SAASE,GAAqBW,GACjC,OAAOvoC,MAAOwnC,EAAUC,EAAiB,GAAIC,KAGzC,MAAMc,EAAyBhB,EAASt8C,IAAI,KAAM,GAC5Cu9C,EAAsB,GACtBC,EAA8B,MAAfhB,EAAsBA,EAAYx8C,IAAI,KAAM,GAAS,GACpEy9C,EAAyB,GAmC/B,GAlCAnB,EAASrlD,QAAQ,CAACymD,EAAqBC,KACnC,IAAIC,EAAc,EAClBF,EAAoBhnC,QAAQzf,QAAQ4mD,IAChC,MAAMC,EAAY,iBAAkBD,EAChCA,EAAaE,aAAavmB,MAC1BqmB,EAAarmB,MACXwmB,EAAe7L,GAAqB2L,GACtC1d,GAAmByd,EAAanoC,OAC9BuoC,EAA8B,KAChCX,EAAuBK,IAAc,EACE,MAAnCJ,EAAoBI,KACpBJ,EAAoBI,GAAc,IAEtCJ,EAAoBI,GAAYlhD,KAAK,CACjCyhD,cAAeL,EACfD,YAAAA,EACAO,UAAWH,KAGA,MAAfxB,EACAA,EAAYvlD,QAAQ,CAACmnD,EAAYC,KACzBD,IAAeP,EAAa1kD,OAC5B8kD,IACAT,EAAaa,IAAe,KAKpCJ,IAEJR,EAAuBhhD,KAAKohD,EAAa1kD,MACzCykD,GAAeI,OAGlBR,EAAa3O,MAAMyP,GAASA,GAAQ,CACrC,MAAMC,EAAkB/B,EAAYv8C,OAAO,CAAC0S,EAAGxX,KAAOqiD,EAAariD,IACnE,MAAM,IAAIkB,MAAM,kDACTkiD,EAAgB7jB,KAAK,MADZ,6CAGT+iB,EAAuB/iB,KAAK,MAA/B,KAIR,MAAM8jB,EAAsBlB,EAAuBl1C,OAAO,CAACq2C,EAAaC,EAAavjD,KAC7EujD,GACAD,EAAYhiD,KAAKtB,GAEdsjD,GACR,IACG9B,EAAY,GAClB6B,EAAoBvnD,QAAQkE,IACxBmhD,EAASnhD,GAAGwjD,MAAM1nD,QAAQ2nD,IACtB,MAAMC,EAAWtC,GACXA,EAAerL,SAAS,KAAa,GAAN,KAAY0N,EACjDjC,EAAUlgD,KAAKoiD,OAGvB,MAAMC,QAAgBzB,EAAqBV,GACrCoC,EAAmB,GACzB,IAAIC,EAAoB,EA0BxB,OAzBAR,EAAoBvnD,QAAQkE,IACxB,MAAM8jD,EAAa3C,EAASnhD,GAAGwjD,MAAMvjD,OACrC,IAAI8jD,EAAa,EACjB,IAAK,IAAI/jD,EAAI,EAAGA,EAAI8jD,EAAY9jD,IAC5B+jD,GAAcJ,EAAQE,EAAoB7jD,GAAG23C,WAGjD,MAAMqM,EAAc,IAAIjM,YAAYgM,GAC9BE,EAAkB,IAAI/nB,WAAW8nB,GACvC,IAAIE,EAAoB,EACxB,IAAK,IAAIlkD,EAAI,EAAGA,EAAI8jD,EAAY9jD,IAAK,CACjC,MAAM+lC,EAAS,IAAI7J,WAAWynB,EAAQE,EAAoB7jD,IAC1DikD,EAAgBr8C,IAAIm+B,EAAQme,GAC5BA,GAAqBne,EAAO4R,WAETyK,EAAoBpiD,GAC5BlE,QAAQ4mD,IACnB,MACMyB,EXnFf,SAAuBpe,EAAQqe,GAElC,MAAMjW,EAAM,GACZ,IAAIkW,EACAxtC,EAAS,EACb,IAAK,MAAMytC,KAAQF,EAAO,CACtB,MAAMpmD,EAAOsmD,EAAKtmD,KACZq+B,EAAQioB,EAAKjoB,MACb9hB,EAAQ+pC,EAAK/pC,MACbnd,EAAOq+B,GAAclhB,GAC3B,IAAIkiB,EACJ,GAAI,iBAAkB6nB,EAAM,CACxB,MAAM1B,EAAe0B,EAAK1B,aAC1B,GAA2B,UAAvBA,EAAavmB,OAA4C,WAAvBumB,EAAavmB,OAC/C,KAAM,QAASumB,MAAgB,UAAWA,GACtC,MAAM,IAAI1hD,MAAM,UAAUojD,EAAKtmD,0BAA0B4kD,EAAavmB,gEAIzE,CAAA,GAA2B,YAAvBumB,EAAavmB,MAOlB,MAAM,IAAIn7B,MAAM,UAAUojD,EAAKtmD,uCACL4kD,EAAavmB,+EAPvC,GAAc,YAAVA,EACA,MAAM,IAAIn7B,MAAM,UAAUojD,EAAKtmD,0BAA0B4kD,EAAavmB,yDACfA,MAS/D,MAAMkoB,EAAyBvN,GAAqB4L,EAAavmB,OAC3DmoB,EAAaze,EAAO7jC,MAAM2U,EAAQA,EAASzZ,EAAOmnD,GAClDrL,EAAyC,UAAvB0J,EAAavmB,MACjC,IAAIH,WAAWsoB,GACf,IAAIC,YAAYD,GACpB,GAAc,YAAVnoB,EACA,GAA2B,UAAvBumB,EAAavmB,OAA4C,WAAvBumB,EAAavmB,MAAoB,CACnEI,EAAS,IAAIT,aAAakd,EAAej5C,QACzC,IAAK,IAAID,EAAI,EAAGA,EAAIk5C,EAAej5C,OAAQD,IAAK,CAC5C,MAAMqL,EAAI6tC,EAAel5C,GACzBy8B,EAAOz8B,GAAKqL,EAAIu3C,EAAa5kC,MAAQ4kC,EAAa90C,SAGrD,CAAA,GAA2B,YAAvB80C,EAAavmB,MAOlB,MAAM,IAAIn7B,MAAM,iCAAiC0hD,EAAavmB,uCANxC57B,IAAlB4jD,IACAA,EAAgB5L,MAEpBhc,EAAS4nB,EAAcnL,OAO1B,CAAA,GAAc,UAAV7c,EAYL,MAAM,IAAIn7B,MAAM,gCAAgClD,OAAUq+B,KAX1D,GAA2B,UAAvBumB,EAAavmB,OAA4C,WAAvBumB,EAAavmB,MAC/C,MAAM,IAAIn7B,MAAM,iCAAiC0hD,EAAavmB,gCAGlEI,EAAS,IAAIR,WAAWid,EAAej5C,QACvC,IAAK,IAAID,EAAI,EAAGA,EAAIk5C,EAAej5C,OAAQD,IAAK,CAC5C,MAAMqL,EAAI6tC,EAAel5C,GACzBy8B,EAAOz8B,GAAKmN,KAAKmB,MAAMjD,EAAIu3C,EAAa5kC,MAAQ4kC,EAAa90C,MAMrE+I,GAAUzZ,EAAOmnD,OAEhB,GAAc,WAAVloB,EAAoB,CACzB,MAAMj/B,EAAOq+B,GAAc6oB,EAAK/pC,OAChCkiB,EAAS,GACT,IAAK,IAAIz8B,EAAI,EAAGA,EAAI5C,EAAM4C,IAAK,CAC3B,MAAM23C,EAAa,IAAIiB,YAAY7S,EAAO7jC,MAAM2U,EAAQA,EAzJxC,IAyJ2E,GAC3FA,GA1JgB,EA2JhB,MAAM6qB,EAAQ,IAAIxF,WAAW6J,EAAO7jC,MAAM2U,EAAQA,EAAS8gC,IAC3Dlb,EAAOn7B,KAAKogC,GACZ7qB,GAAU8gC,OAGb,CACD,MAAM+M,EAAc1N,GAAqB3a,GACnCmoB,EAAaze,EAAO7jC,MAAM2U,EAAQA,EAASzZ,EAAOsnD,GACxD,GAAc,YAAVroB,EACAI,EAAS,IAAIT,aAAawoB,QAEzB,GAAc,UAAVnoB,EACLI,EAAS,IAAIR,WAAWuoB,QAEvB,GAAc,SAAVnoB,EACLI,EAAS,IAAIP,WAAWsoB,OAEvB,CAAA,GAAc,cAAVnoB,EAeL,MAAM,IAAIn7B,MAAM,gCAAgClD,OAAUq+B,KAf9B,CAC5BI,EAAS,IAAIT,aAAawoB,GAC1B,MAAMpO,EAAO,IAAIpa,aAAaS,EAAOx8B,OAAS,GACxCwN,EAAQ,IAAIuuB,aAAaS,EAAOx8B,OAAS,GAC/C,IAAK,IAAID,EAAI,EAAGA,EAAIo2C,EAAKn2C,OAAQD,IAC7Bo2C,EAAKp2C,GAAKy8B,EAAW,EAAJz8B,GACjByN,EAAMzN,GAAKy8B,EAAW,EAAJz8B,EAAQ,GAE9B,MAAM2kD,EAAa5V,GAAOqH,EAAM77B,EAAO,WACjCqqC,EAAc7V,GAAOthC,EAAO8M,EAAO,WACzC4zB,EAAInwC,GAAQk4C,GAAQyO,EAAYC,GAChCD,EAAWxa,UACXya,EAAYza,WAKhBtzB,GAAUzZ,EAAOsnD,EAEP,cAAVroB,IACA8R,EAAInwC,GAAQ+wC,GAAOtS,EAAQliB,EAAO8hB,IAG1C,OAAO8R,EWlC6B0W,CADLb,EAAY9hD,MAAMwgD,EAAaD,YAAaC,EAAaD,YAAcC,EAAaM,WACrD,CAACN,EAAaK,gBAChE,IAAK,MAAM/kD,KAAQmmD,EACfP,EAAiB5lD,GAAQmmD,EAAgBnmD,KAGjD6lD,GAAqBC,IAElBF;;;;;;;;;;;;;;;;OzBpCXpe,GuB1Hc,CACdO,OGYG,SAAgBxrB,EAAO8hB,EAAQ,UAAWI,GAG7C,OAFAJ,EAAQA,GAAS,UACjByoB,GAAwCvqC,GACjC,IAAIyqB,GAAazqB,EAAO8hB,EAAOI,IHdtCgK,KAAAA,GACA9Z,MAAAA,GACA6Z,MING,SAAeh4B,EAAG+0B,GAAU,GAC/B15B,QAAQgI,IAAIrD,EAAEoB,SAAS2zB,MCepB,MAAMwhB,GAASlP,GAAG,CAAEmP,QAR3B,SAAiB9oD,EAAGC,EAAG8oD,GAAa,EAAOC,GAAa,GACpD,IAAIC,EAAKnQ,GAAgB94C,EAAG,IAAK,UAC7BkpD,EAAKpQ,GAAgB74C,EAAG,IAAK,WAChCgpD,EAAIC,GAAMnd,GAAekd,EAAIC,GAC9B,MAAMnjB,EAAS,CAAE/lC,EAAGipD,EAAIhpD,EAAGipD,GACrBhY,EAAQ,CAAE6X,WAAAA,EAAYC,WAAAA,GAC5B,OAAOpY,GAAOC,UxBzBS,cwByBc9K,EAAQmL;;;;;;;;;;;;;;;;OCe1C,MAAM5yB,GAAYq7B,GAAG,CAAEwP,WAlB9B,SAAoB72C,EAAG82C,GACnB,MAAMjF,EAAKrL,GAAgBxmC,EAAG,IAAK,aAUnC,GATY,MAAR82C,IACAA,EAAOjF,EAAG9lC,MAAM1V,IAAI,CAAC0F,EAAGvK,IAAMA,GAAGulD,WAErCrgB,GAAYmb,EAAGvjB,OAASwoB,EAAKrlD,OAAQ,IAAM,qCAAqCogD,EAAGvjB,kCAClDwoB,MACjCA,EAAKxpD,QAAQ0pD,IACTtgB,GAAYsgB,GAAQ,GAAKA,EAAOnF,EAAGvjB,KAAM,IAAM,gDAA+CujB,EAAGvjB,KAAO,GACpG,YAAYwoB,KAEhBjF,EAAGvjB,MAAQ,EACX,OAAOujB,EAAG1zB,QAEd,MAAMsV,EAAS,CAAEzzB,EAAG6xC,GACdjT,EAAQ,CAAEkY,KAAAA,GAChB,OAAOxY,GAAOC,UzBqGO,YyBrGc9K,EAAQmL;;;;;;;;;;;;;;;;OCFxC,SAASqY,GAA2BjP,EAAQC,GAC/C,MAAM1sC,EAAS,GACTrD,EAAIyG,KAAKQ,IAAI6oC,EAAOv2C,OAAQw2C,EAAOx2C,QACzC,IAAK,IAAID,EAAI,EAAGA,EAAI0G,EAAG1G,IAAK,CACxB,IAAI9D,EAAIs6C,EAAOA,EAAOv2C,OAASD,EAAI,GAC1B,MAAL9D,IACAA,EAAI,GAER,IAAIC,EAAIs6C,EAAOA,EAAOx2C,OAASD,EAAI,GAInC,GAHS,MAAL7D,IACAA,EAAI,GAEE,IAAND,EACA6N,EAAO27C,QAAQvpD,QAEd,GAAU,IAANA,EACL4N,EAAO27C,QAAQxpD,OAEd,CAAA,GAAIA,IAAMC,EAAG,CAGd,MAAM+E,MADF,wDAAGs1C,SAAcC,MAIrB1sC,EAAO27C,QAAQxpD,IAGvB,OAAO6N;;;;;;;;;;;;;;;;OCvCJ,SAASqT,GAASqf,EAAQliB,EAAO8hB,GAEpC,GADAhB,GAAcoB,GACD,MAATliB,GAAkC,IAAjBA,EAAMta,OACvB,MAAM,IAAIiB,MAAM,mDAEpB,MAAMi0C,EAAgBZ,GAAW9X,EAAQJ,GACzC,GAA6B,IAAzB8Y,EAAcl1C,QAAyC,IAAzBk1C,EAAcl1C,OAC5C,MAAM,IAAIiB,MAAM,oEAEpB,GAA6B,IAAzBi0C,EAAcl1C,QAAyB,MAATsa,EAC9B,MAAM,IAAIrZ,MAAM,2EAGpB,OAAOqkC,GAAW9I,EAAQliB,EAAO46B,EAAe9Y;;;;;;;;;;;;;;;;OC9BpD,IAAIspB,GAsPGhsC,eAAeisC,GAASC,EAAKnxC,GAChC,IAAIoxC,EAAO9Q,GAAgB6Q,EAAK,MAAO,YACvC,KAAMA,aAAepgB,IAAS,CAE1B,MAAMsgB,EAAoBD,EAC1BA,EAAOrf,GAAKsf,EAAmB,SAC/BA,EAAkB5b,UAEtB,GAAkB,IAAd2b,EAAKhpB,MAA4B,IAAdgpB,EAAKhpB,KACxB,MAAM,IAAI57B,MAAM,wDAAwD4kD,EAAKhpB,SAEjF,MAAOxzB,EAAQC,GAASu8C,EAAKvrC,MAAMrY,MAAM,EAAG,GACtC8jD,EAAsB,IAAdF,EAAKhpB,KAAa,EAAIgpB,EAAKvrC,MAAM,GAC/C,GAAIyrC,EAAQ,GAAe,IAAVA,EACb,MAAM,IAAI9kD,MAAM,0DACS8kD,GAE7B,GAAmB,YAAfF,EAAKzpB,OAAsC,UAAfypB,EAAKzpB,MACjC,MAAM,IAAIn7B,MAAM,kCAAkC4kD,EAAKzpB,+CAG3D,MAAMj+B,QAAa0nD,EAAK1nD,OAClB6nD,EAA4B,YAAfH,EAAKzpB,MAAsB,IAAM,EAC9CqF,EAAQ,IAAIvF,kBAAkB5yB,EAAQD,EAAS,GACrD,IAAK,IAAItJ,EAAI,EAAGA,EAAIsJ,EAASC,IAASvJ,EAAG,CACrC,MAAMkmD,EAAO,CAAC,EAAG,EAAG,EAAG,KACvB,IAAK,IAAI5hD,EAAI,EAAGA,EAAI0hD,EAAO1hD,IAAK,CAC5B,MAAMtF,EAAQZ,EAAK4B,EAAIgmD,EAAQ1hD,GAC/B,GAAmB,YAAfwhD,EAAKzpB,OACL,GAAIr9B,EAAQ,GAAKA,EAAQ,EACrB,MAAM,IAAIkC,MACN,mFAAiClC,WAGxC,GAAmB,UAAf8mD,EAAKzpB,QACNr9B,EAAQ,GAAKA,EAAQ,KACrB,MAAM,IAAIkC,MACN,mFAAmClC,MAGjC,IAAVgnD,GACAE,EAAK,GAAKlnD,EAAQinD,EAClBC,EAAK,GAAKlnD,EAAQinD,EAClBC,EAAK,GAAKlnD,EAAQinD,GAGlBC,EAAK5hD,GAAKtF,EAAQinD,EAG1B,MAAMj8C,EAAQ,EAAJhK,EACV0hC,EAAM13B,EAAI,GAAKmD,KAAKmB,MAAM43C,EAAK,IAC/BxkB,EAAM13B,EAAI,GAAKmD,KAAKmB,MAAM43C,EAAK,IAC/BxkB,EAAM13B,EAAI,GAAKmD,KAAKmB,MAAM43C,EAAK,IAC/BxkB,EAAM13B,EAAI,GAAKmD,KAAKmB,MAAM43C,EAAK,IAEnC,GAAc,MAAVxxC,EAAgB,CAChBA,EAAOnL,MAAQA,EACfmL,EAAOpL,OAASA,EAChB,MAAM3F,EAAM+Q,EAAOC,WAAW,MACxB4H,EAAY,IAAI4pC,UAAUzkB,EAAOn4B,EAAOD,GAC9C3F,EAAI2d,aAAa/E,EAAW,EAAG,GAKnC,OAHIupC,IAASD,GACTC,EAAK3b,UAEFzI,EAEJ,MAAM0kB,GAAavQ,GAAG,CAAEwQ,YAxR/B,SAAqBC,EAAQC,EAAc,GAEvC,GAAIA,EAAc,EACd,MAAM,IAAIrlD,MAAM,kEAEpB,GAAc,MAAVolD,EACA,MAAM,IAAIplD,MAAM,4DAEpB,IAAIslD,GAAc,EACdC,GAAc,EACdC,GAAU,EACVC,GAAU,EACVC,GAAe,EACfC,GAAgB,EACpB,GAAIP,EAAOloD,gBAAgB89B,WACvBsqB,GAAc,OAEb,GAA2B,+BAAeF,aAAkBH,UAC7DM,GAAc,OAEb,GAAkC,sCACnCH,aAAkBQ,iBAClBJ,GAAU,OAET,GAAkC,sCACnCJ,aAAkBS,iBAClBJ,GAAU,OAGT,GAAyB,MAArBL,EAAO3xC,WACZiyC,GAAe,MAEd,CAAA,KAA6B,iCAAeN,aAAkBU,aAI/D,MAAM,IAAI9lD,MAAM,qPAIDolD,EAAO1pB,YAAY5+B,MAPlC6oD,GAAgB,EASpB,GAAIH,EAAS,CACT,MAAMO,EAAgC,EACtC,GAAIP,GACAJ,EAAOY,WACHD,EACJ,MAAM,IAAI/lD,MAAM,yGAOxB,GAAc,MADCm/B,G5BuDO,a4BvDeyM,GAAOxM,aACxB,CAChB,MAAM2B,EAAS,CAAEqkB,OAAAA,GACXlZ,EAAQ,CAAEmZ,YAAAA,GAChB,OAAOzZ,GAAOC,U5BmDI,a4BnDkB9K,EAAQmL,GAEhD,MAAO7jC,EAAOD,GAAUo9C,EACpB,CACIJ,EAAOa,WACPb,EAAOc,aAEX,CAACd,EAAO/8C,MAAO+8C,EAAOh9C,QAC1B,IAAI43B,EA+BAzE,EA9BJ,GAAImqB,EACA1lB,EAEIolB,EAAO3xC,WAAW,MAAME,aAAa,EAAG,EAAGtL,EAAOD,GAAQlL,UAE7D,GAAIqoD,GAAeD,EACpBtlB,EAAOolB,EAAOloD,UAEb,GAAIuoD,GAAWD,GAAWG,EAAe,CAC1C,GAA2B,MAAvBlB,GACA,GAAwB,oBAAb1nD,SAA0B,CACjC,GAA+B,oBAApBopD,iBACsC,oBAAtCC,kCAKP,MAAM,IAAIpmD,MAAM,wGAHhBykD,GAAsB,IAAI0B,gBAAgB,EAAG,GAAG1yC,WAAW,WAQ/DgxC,GAAsB1nD,SAASC,cAAc,UAAUyW,WAAW,MAG1EgxC,GAAoBjxC,OAAOnL,MAAQA,EACnCo8C,GAAoBjxC,OAAOpL,OAASA,EACpCq8C,GAAoB/wC,UAAU0xC,EAAQ,EAAG,EAAG/8C,EAAOD,GACnD43B,EAAOykB,GAAoB9wC,aAAa,EAAG,EAAGtL,EAAOD,GAAQlL,KAGjE,GAAoB,IAAhBmoD,EACA9pB,EAAS,IAAIR,WAAWiF,OAEvB,CACD,MAAMqmB,EAAYh+C,EAAQD,EAC1BmzB,EAAS,IAAIR,WAAWsrB,EAAYhB,GACpC,IAAK,IAAIvmD,EAAI,EAAGA,EAAIunD,EAAWvnD,IAC3B,IAAK,IAAIwnD,EAAU,EAAGA,EAAUjB,IAAeiB,EAC3C/qB,EAAOz8B,EAAIumD,EAAciB,GAAWtmB,EAAS,EAAJlhC,EAAQwnD,GAK7D,OAAOpqC,GAASqf,EADC,CAACnzB,EAAQC,EAAOg9C,GACC;;;;;;;;;;;;;;;;OCK/B,SAAStX,GAAK3C,EAAU9wC,GAC3B,OAAOsxC,GAAOmC,KAAK3C,EAAU9wC;;;;;;;;;;;;;;;;OC3H1B,MAAM6H,GAAMwyC,GAAG,CAAE4R,KAPxB,SAAcvrD,EAAGC,GACb,IAAIgpD,EAAKnQ,GAAgB94C,EAAG,IAAK,OAC7BkpD,EAAKpQ,GAAgB74C,EAAG,IAAK,QAChCgpD,EAAIC,GAAMnd,GAAekd,EAAIC,GAC9B,MAAMnjB,EAAS,CAAE/lC,EAAGipD,EAAIhpD,EAAGipD,GAC3B,OAAOtY,GAAOC,U9B9CC,M8B8Cc9K;;;;;;;;;;;;;;;;OCK1B,MAAMylB,GAAW7R,GAAG,CAAE8R,UAP7B,SAAmBzrD,EAAGC,GAClB,IAAIgpD,EAAKnQ,GAAgB94C,EAAG,IAAK,YAC7BkpD,EAAKpQ,GAAgB74C,EAAG,IAAK,aAChCgpD,EAAIC,GAAMnd,GAAekd,EAAIC,GAC9B,MAAMnjB,EAAS,CAAE/lC,EAAGipD,EAAIhpD,EAAGipD,GAC3B,OAAOtY,GAAOC,U/BUM,W+BVc9K;;;;;;;;;;;;;;;;OCM/B,MAAM2lB,GAAM/R,GAAG,CAAEgS,KAZxB,SAAc3rD,EAAGC,GACb,IAAIgpD,EAAKnQ,GAAgB94C,EAAG,IAAK,OAC7BkpD,EAAKpQ,GAAgB74C,EAAG,IAAK,OAEjC,IADCgpD,EAAIC,GAAMnd,GAAekd,EAAIC,GACb,UAAbD,EAAG9oB,OAAkC,UAAb+oB,EAAG/oB,MAC3B,OAAOqrB,GAASvC,EAAIC,GAExB,MAAMnjB,EAAS,CAAE/lC,EAAGipD,EAAIhpD,EAAGipD,GAG3B,OAAOtY,GAAOC,UhCPK,UgCOc9K,EAFnB;;;;;;;;;;;;;;;;OCDX,MAAM6lB,GAAMjS,GAAG,CAAEkS,KAPxB,SAAc7rD,EAAGC,GACb,IAAIgpD,EAAKnQ,GAAgB94C,EAAG,IAAK,OAC7BkpD,EAAKpQ,GAAgB74C,EAAG,IAAK,QAChCgpD,EAAIC,GAAMnd,GAAekd,EAAIC,GAC9B,MAAMnjB,EAAS,CAAE/lC,EAAGipD,EAAIhpD,EAAGipD,GAC3B,OAAOtY,GAAOC,UjCgDM,WiChDc9K;;;;;;;;;;;;;;;;OCoU/B,SAAS+lB,GAAkBC,GAC9B,MAAOC,EAAMC,EAAMC,GAxJvB,SAAyBH,GACrB,MAAqB,iBAAVA,EACA,CAACA,EAAOA,EAAOA,GAEL,IAAjBA,EAAMhoD,OACC,CAACgoD,EAAM,GAAIA,EAAM,GAAI,GAEzBA,EAiJoBI,CAAgBJ,GAC3C,OAAgB,IAATC,GAAuB,IAATC,GAAuB,IAATC,EAEhC,SAASE,GAA+BvrB,EAASwrB,GACpD,OAAOP,GAAkBjrB,IAAYirB,GAAkBO,GAmCpD,SAASC,GAA0BC,EAAQ9jB,EAAK+jB,GACnD,GAAuB,MAAnBA,EAAyB,CACzB,GAAmB,iBAAR/jB,EACP,MAAMzjC,MAAM,YAAYunD,wDACDC,iBAA+B/jB,MAErD,GAAmB,iBAARA,EACZO,GAAYyjB,GAAWhkB,GAAM,IAAM,YAAY8jB,wDACxBC,iBAA+B/jB,UAErD,CAAA,GAAmB,iBAARA,EASZ,MAAMzjC,MAAM,YAAYunD,iCAAsC9jB,KAR9DA,EAAI7oC,QAAQ4H,IACRA,EAAE5H,QAAQuP,IACN65B,GAAYyjB,GAAWt9C,GAAI,IAAM,YAAYo9C,wDACtBC,iBAA+Br9C;;;;;;;;;;;;;;;;OCzXnE,MAAMu9C,GAAU/S,GAAG,CAAEgT,SAN5B,SAAkBr6C,EAAG+L,GACjB,MACM0nB,EAAS,CAAEzzB,EADNwmC,GAAgBxmC,EAAG,IAAK,UAAW,sBAExC4+B,EAAQ,CAAE7yB,MAAAA,GAChB,OAAOuyB,GAAOC,UnCmEK,UmCnEc9K,EAAQmL;;;;;;;;;;;;;;;;OCiBtC,MAAM0b,GAAUjT,GAAG,CAAEkT,SAvB5B,SAAkBv6C,EAAGw6C,EAAYjsB,EAAS4H,EAAK+jB,GAC3C,MAAMrI,EAAKrL,GAAgBxmC,EAAG,IAAK,UAAW,WAE9C02B,GAAY+jB,GAAyClsB,EADnC,GACwD,IACtE,wEAAeA,uBACnB,IAAImsB,EAAM7I,EACN8I,GAAe,EACH,IAAZ9I,EAAGvjB,OACHqsB,GAAe,EACfD,EAAMN,GAAQvI,EAAI,CAAC,EAAGA,EAAG9lC,MAAM,GAAI8lC,EAAG9lC,MAAM,GAAI8lC,EAAG9lC,MAAM,MAE7D2qB,GAAyB,IAAbgkB,EAAIpsB,KAAY,IAAM,mDAAmDosB,EAAIpsB,SACzFssB,GAAoC,UAAWzkB,EAAK+jB,GACpD,MAAMzmB,EAAS,CAAEzzB,EAAG06C,GACd9b,EAAQ,CAAE4b,WAAAA,EAAYjsB,QAAAA,EAAS4H,IAAAA,EAAK+jB,gBAAAA,GAE1C,IAAIhc,EAAMI,GAAOC,UpC9CE,UoC8CiB9K,EAAQmL,GAE5C,OADAV,EAAMjG,GAAKiG,EAAK2T,EAAGhkB,OACf8sB,EACOP,GAAQlc,EAAK,CAACA,EAAInyB,MAAM,GAAImyB,EAAInyB,MAAM,GAAImyB,EAAInyB,MAAM,KAExDmyB;;;;;;;;;;;;;;;;OCeJ,MAAMhgB,GAASmpB,GAAG,CAAEwT,QAlB3B,SAAiBva,EAAS0W,EAAO,GAC7B17C,GAAOglC,EAAQ7uC,QAAU,EAAG,IAAM,sCAClC,MAAMqpD,EAAWlU,GAAqBtG,EAAS,UAAW,SAAU,qBASpE,GAR0B,cAAtBwa,EAAS,GAAGjtB,OACZitB,EAASxtD,QAAQizC,IACb,GAAqB,cAAjBA,EAAO1S,MACP,MAAM,IAAIn7B,MAAM,4EACT6tC,EAAO1S,aAIF,IAApBitB,EAASrpD,OACT,OAAO0sB,GAAM28B,EAAS,IAE1B,MAAMrnB,EAASqnB,EACTxqD,EAAO,CAAE0mD,KAAAA,GACf,OAAO1Y,GAAOC,UrClDI,SqCkDc9K,EAAQnjC;;;;;;;;;;;;;;;;OCzCrC,MAAMyqD,GAAU1T,GAAG,CAAE2T,SAL5B,SAAkBh7C,GACd,MACMyzB,EAAS,CAAEzzB,EADNwmC,GAAgBxmC,EAAG,IAAK,UAAW,YAE9C,OAAOs+B,GAAOC,UtCkGK,UsClGc9K;;;;;;;;;;;;;;;;OC4B9B,MAAM//B,GAAQ2zC,GAAG,CAAE4T,OAT1B,SAAgBj7C,EAAGk7C,EAAOtsD,GACtB,MAAMijD,EAAKrL,GAAgBxmC,EAAG,IAAK,QAAS,qBAC5C,GAAgB,IAAZ6xC,EAAGvjB,KACH,MAAM,IAAI57B,MAAM,kCAEpB,MAAM+gC,EAAS,CAAEzzB,EAAG6xC,GACdjT,EAAQ,CAAEsc,MAAAA,EAAOtsD,KAAAA,GACvB,OAAO0vC,GAAOC,UvCoEG,QuCpEc9K,EAAQmL,MCsBpC,MAAMuc,GAAY9T,GAAG,CAAE+T;;;;;;;;;;;;;;;;;AAlC9B,SAAoBp7C,EAAGq7C,EAAMC,EAAUjzC,EAAQmH,EAAO+rC,GAC3B,MAAnBA,IACAA,EAAkB,MAEtB,MAAM1J,EAAKrL,GAAgBxmC,EAAG,IAAK,aAC7Bw7C,EAAQhV,GAAgB6U,EAAM,OAAQ,aACtCI,EAAYjV,GAAgB8U,EAAU,WAAY,aACxD,IAAII,EAIAC,EAHS,MAATnsC,IACAksC,EAASlV,GAAgBh3B,EAAO,QAAS,cAG/B,MAAVnH,IACAszC,EAAUnV,GAAgBn+B,EAAQ,SAAU,cAEhDquB,GAAY8kB,EAAMltB,OAASmtB,EAAUntB,KAAM,IAAM,gFAEjDoI,GAAuB,MAAXilB,GAAmBH,EAAMltB,OAASqtB,EAAQrtB,KAAM,IAAM,8EAElEoI,GAAsB,MAAVglB,GAAkBF,EAAMltB,OAASotB,EAAOptB,KAAM,IAAM,6EAEhE,MACMmF,EAAS,CACXzzB,ECvED,SAAeA,GAClB,IAAI06C,EAaJ,OAXIA,EADW,IAAX16C,EAAEsuB,MAAyB,IAAXtuB,EAAEsuB,KACZ8rB,GAAQp6C,EAAG,CAAC,EAAG,EAAG,EAAGA,EAAEpR,OAEb,IAAXoR,EAAEsuB,KACD8rB,GAAQp6C,EAAG,CAAC,EAAG,EAAGA,EAAE+L,MAAM,GAAI/L,EAAE+L,MAAM,KAE5B,IAAX/L,EAAEsuB,KACD8rB,GAAQp6C,EAAG,CAAC,EAAGA,EAAE+L,MAAM,GAAI/L,EAAE+L,MAAM,GAAI/L,EAAE+L,MAAM,KAG/C/L,EAEH06C,EDuDKkB,CAAM/J,GAGdriC,MAAOksC,EACPrzC,OAAQszC,EACRN,KAAMG,EACNF,SAAUG,GAER7c,EAAQ,CAAE2c,gBAAAA,GAEVrd,EAAMI,GAAOC,UxCjBO,iBwCiBmB9K,EAAQmL,GACrD,OAAOwb,GAAQlc,EAAK2T,EAAG9lC;;;;;;;;;;;;;;;;OE9BpB,MAAM8vC,GAAWxU,GAAG,CAAEyU,UAb7B,SAAmB97C,EAAG+M,EAASne,GAC3B,MAAMijD,EAAKrL,GAAgBxmC,EAAG,IAAK,YAC7B+7C,EAAWvV,GAAgBz5B,EAAS,UAAW,YACrD2pB,GAAyB,UAAbmb,EAAGhkB,MAAmB,IAAM,yDACJgkB,EAAGhkB,OACvC6I,GAAY9nC,GAAQ,EAAG,IAAM,sCAAsCA,MACnE8nC,GAAYqlB,EAASntD,OAASijD,EAAGjjD,MAA0B,IAAlBmtD,EAASntD,KAAY,IAC1D,gGAAkCijD,EAAG9lC,yBAClCgwC,EAAShwC,MAAZ,KACJ,MAAM0nB,EAAS,CAAEzzB,EAAG6xC,EAAI9kC,QAASgvC,GAC3Bnd,EAAQ,CAAEhwC,KAAAA,GAChB,OAAO0vC,GAAOC,U1C7BM,W0C6Bc9K,EAAQmL;;;;;;;;;;;;;;;;OCsBvC,MAAMod,GAAc3U,GAAG,CAAE4U,aAnChC,SAAsBj8C,EAAG+L,GACrB,IAAIhb,EAAQy1C,GAAgBxmC,EAAG,cAAe,KAC9C,MAAMk8C,EAASnrD,EAAMgb,MACrB,GAAIA,EAAMowC,KAAKrmD,KAAOA,EAAI,IAAMA,EAAI,GAAM,GACtC,MAAM,IAAIpD,MAAM,2CAA2CqZ,OAE/D,GAAIA,EAAMta,OAASV,EAAMu9B,KACrB,MAAM,IAAI57B,MAAM,+BAA+BqZ,EAAMta,uBAAuBV,EAAMu9B,SAEtF,GAAIviB,EAAMta,OAASV,EAAMu9B,KAAM,CAC3B,MAAM8tB,EAAWrrD,EAAMgb,MAAMrY,QAC7B,KAAO0oD,EAAS3qD,OAASsa,EAAMta,QAC3B2qD,EAASlF,QAAQ,GAErBnmD,EAAQqpD,GAAQrpD,EAAOqrD,GAE3B,MAAMhwC,EAAarb,EAAMgb,MACnBswC,EAAOvkD,MAAMC,KAAKgU,GACxB,IAAK,IAAIva,EAAIua,EAAMta,OAAS,EAAGD,GAAK,EAAGA,IACnC,GAAI4a,EAAW5a,KAAOua,EAAMva,GACxB6qD,EAAK7qD,GAAK,OAET,GAAuB,IAAnBT,EAAMgb,MAAMva,GACjB,MAAM,IAAIkB,MAAM,mBAAmBwpD,8BAAmCnwC,OAI9E,GAAoB,IADPswC,EAAKhmD,IAAI,CAACkO,EAAG/S,IAAM+S,EAAI,EAAI/S,GAAK,GAAG8E,OAAO9E,GAAKA,GAAK,GACxDC,OACL,OAAO0sB,GAAMptB,GAGjB,MAAM0iC,EAAS,CAAEzzB,EAAGjP,GACd6tC,EAAQ,CAAEyd,KAAAA,GAChB,OAAO/d,GAAOC,U3CqFE,O2CrFc9K,EAAQmL;;;;;;;;;;;;;;;;OC1BnC,MAAM0d,GAAcjV,GAAG,CAAEkV,aARhC,SAAsBv8C,EAAGw8C,EAAcC,GACnC,MAAM5K,EAAKrL,GAAgBxmC,EAAG,IAAK,eACnC02B,GAAa8lB,GAAgBC,EAAe,IAAM,uBAAuBD,yCACvCC,OAClC,MAAMhpB,EAAS,CAAEzzB,EAAG6xC,GACdjT,EAAQ,CAAE4d,aAAAA,EAAcC,aAAAA,GAC9B,OAAOne,GAAOC,U5ChBS,c4CgBc9K,EAAQmL;;;;;;;;;;;;;;;;OCyC1C,MAAM8d,GAASrV,GAAG,CAAEsV,QA3B3B,SAAiB38C,EAAG1J,EAAQi4B,EAAS4H,EAAKymB,EAAa,OAAQ7C,EAAY,CAAC,EAAG,GAAIG,GAC/E,MAAMrI,EAAKrL,GAAgBxmC,EAAG,IAAK,SAAU,WACvC68C,EAAUrW,GAAgBlwC,EAAQ,SAAU,SAAU,WAC5D,IAAIokD,EAAM7I,EACN8I,GAAe,EACH,IAAZ9I,EAAGvjB,OACHqsB,GAAe,EACfD,EAAMN,GAAQvI,EAAI,CAAC,EAAGA,EAAG9lC,MAAM,GAAI8lC,EAAG9lC,MAAM,GAAI8lC,EAAG9lC,MAAM,MAE7D2qB,GAAyB,IAAbgkB,EAAIpsB,KAAY,IAAM,uDAAuDosB,EAAIpsB,SAC7FoI,GAA6B,IAAjBmmB,EAAQvuB,KAAY,IAAM,wDAC/BuuB,EAAQvuB,KAAX,KACJssB,GAAoC,SAAUzkB,EAAK+jB,GACnD,MAAM4C,EAAyB,SAAfF,EAAwBlC,EAAI3uC,MAAM,GAAK2uC,EAAI3uC,MAAM,GACjE2qB,GAAYomB,IAAYD,EAAQ9wC,MAAM,GAAI,IAAM,oCAAoC+wC,wCACtDD,EAAQ9wC,MAAM,OAC5C2qB,GAAY+jB,GAAyClsB,EAASwrB,GAAY,IACtE,uEAAexrB,oBAA0BwrB,MAC7C,MAAMtmB,EAAS,CAAEzzB,EAAG06C,EAAKpkD,OAAQumD,GAC3Bje,EAAQ,CAAErQ,QAAAA,EAAS4H,IAAAA,EAAKymB,WAAAA,EAAY7C,UAAAA,EAAWG,gBAAAA,GAE/Chc,EAAMI,GAAOC,U7C/CD,S6C+CmB9K,EAAQmL,GAC7C,OAAI+b,EACOP,GAAQlc,EAAK,CAACA,EAAInyB,MAAM,GAAImyB,EAAInyB,MAAM,GAAImyB,EAAInyB,MAAM,KAExDmyB;;;;;;;;;;;;;;;;OCcJ,MAAM6e,GAAkB1V,GAAG,CAAE2V,iBA1BpC,SAA0Bh9C,EAAG1J,EAAQi4B,EAAS4H,EAAKymB,EAAa,OAAQ7C,EAAY,CAAC,EAAG,GAAIG,GACxF,MAAMrI,EAAKrL,GAAgBxmC,EAAG,IAAK,kBAAmB,WAChD68C,EAAUrW,GAAgBlwC,EAAQ,SAAU,kBAAmB,WACrE,IAAIokD,EAAM7I,EACN8I,GAAe,EACH,IAAZ9I,EAAGvjB,OACHqsB,GAAe,EACfD,EAAMN,GAAQvI,EAAI,CAAC,EAAGA,EAAG9lC,MAAM,GAAI8lC,EAAG9lC,MAAM,GAAI8lC,EAAG9lC,MAAM,MAE7D2qB,GAAyB,IAAbgkB,EAAIpsB,KAAY,IACxB,gEAAQosB,EAAIpsB,SAChBoI,GAA6B,IAAjBmmB,EAAQvuB,KAAY,IAAM,iEAC/BuuB,EAAQvuB,KAAX,KACJoI,GAAYgkB,EAAI3uC,MAAM,KAAO8wC,EAAQ9wC,MAAM,GAAI,IAC3C,uDAAI2uC,EAAI3uC,MAAM,qDACJ8wC,EAAQ9wC,MAAM,OAC5B6uC,GAAoC,kBAAmBzkB,EAAK+jB,GAC5D,MAAMzmB,EAAS,CAAEzzB,EAAG06C,EAAKpkD,OAAQumD,GAC3Bje,EAAQ,CAAErQ,QAAAA,EAAS4H,IAAAA,EAAKymB,WAAAA,EAAY7C,UAAAA,EAAWG,gBAAAA,GAE/Chc,EAAMI,GAAOC,U9C9Cc,wB8C8CmB9K,EAAQmL,GAC5D,OAAI+b,EACOP,GAAQlc,EAAK,CAACA,EAAInyB,MAAM,GAAImyB,EAAInyB,MAAM,GAAImyB,EAAInyB,MAAM,KAExDmyB;;;;;;;;;;;;;;;;OC7BJ,MAAM+e,GAAQ5V,GAAG,CAAE6V,OAlB1B,SAAgBC,EAAWzvD,EAAGC,GAC1B,MAAMgpD,EAAKnQ,GAAgB94C,EAAG,IAAK,SAC7BkpD,EAAKpQ,GAAgB74C,EAAG,IAAK,SAC7ByvD,EAAa5W,GAAgB2W,EAAW,YAAa,QAAS,QAI9DE,EAAiBpG,GAA2BA,GAA2BmG,EAAWrxC,MAAO4qC,EAAG5qC,OAAQ6qC,EAAG7qC,OAIvG0nB,EAAS,CACX0pB,UAJ0BnB,GAAYoB,EAAYC,GAKlD90C,EAJkByzC,GAAYrF,EAAI0G,GAKlC/pD,EAJkB0oD,GAAYpF,EAAIyG,IAMtC,OAAO/e,GAAOC,U/CkEI,S+ClEc9K;;;;;;;;;;;;;;;;OCxB7B,MAAM6pB,GAAMjW,GAAG,CAAEkW,KALxB,SAAcv9C,GACV,MACMyzB,EAAS,CAAEzzB,EADNwmC,GAAgBxmC,EAAG,IAAK,QAEnC,OAAOs+B,GAAOC,UhDoBC,MgDpBc9K;;;;;;;;;;;;;;;;OCS1B,MAAM+pB,GAAanW,GAAG,CAAEoW,YAP/B,SAAqBz9C,EAAGg3C,EAAO,GAC3B,MAAMnF,EAAKrL,GAAgBxmC,EAAG,IAAK,aAAc,qBACjD02B,GAAYsgB,GAAQnF,EAAGvjB,KAAM,IAAM,sCACnC,MAAMmF,EAAS,CAAE1iC,MAAO8gD,GAClBjT,EAAQ,CAAE8e,IAAK1G,GACrB,OAAO1Y,GAAOC,UjDcQ,aiDdc9K,EAAQmL;;;;;;;;;;;;;;;;OCYzC,MAAM+e,GAAOtW,GAAG,CAAEuW,MARzB,SAAe59C,EAAGq8C,GACd,MAAMxK,EAAKrL,GAAgBxmC,EAAG,IAAK,OAAQ,qBAC3C02B,GAAYmb,EAAGvjB,OAAS+tB,EAAK5qD,OAAQ,IAAM,qCAAqCogD,EAAGvjB,kCAClD+tB,MACjC,MAAM5oB,EAAS,CAAEzzB,EAAG6xC,GACdjT,EAAQ,CAAEyd,KAAAA,GAChB,OAAO/d,GAAOC,UlDsGE,OkDtGc9K,EAAQmL;;;;;;;;;;;;;;;;OCpB1C,SAASjoC,GAAKoV,EAAOvb,EAAOq9B,GACxB,MAAM+Q,EAAQ,CAAE7yB,MAAAA,EAAOvb,MAAAA,EAAOq9B,MAAAA,GAC9B,OAAOyQ,GAAOC,UnDyBE,OmDzBc,GAAIK;;;;;;;;;;;;;;;;OCW/B,MAAMif,GAAUxW,GAAG,CAAEyW,SAR5B,SAAkBpwD,EAAGC,GACjB,IAAIgpD,EAAKnQ,GAAgB94C,EAAG,IAAK,UAAW,qBACxCkpD,EAAKpQ,GAAgB74C,EAAG,IAAK,UAAW,sBAC3CgpD,EAAIC,GAAMnd,GAAekd,EAAIC,GAC9BK,GAA2BN,EAAG5qC,MAAO6qC,EAAG7qC,OACxC,MAAM0nB,EAAS,CAAE/lC,EAAGipD,EAAIhpD,EAAGipD,GAC3B,OAAOtY,GAAOC,UpDuBK,UoDvBc9K;;;;;;;;;;;;;;;;OCE9B,MAAMsqB,GAAY1W,GAAG,CAAE2W,WAR9B,SAAoBtwD,EAAGC,GACnB,IAAIgpD,EAAKnQ,GAAgB94C,EAAG,IAAK,YAAa,qBAC1CkpD,EAAKpQ,GAAgB74C,EAAG,IAAK,YAAa,sBAC7CgpD,EAAIC,GAAMnd,GAAekd,EAAIC,GAC9BK,GAA2BN,EAAG5qC,MAAO6qC,EAAG7qC,OACxC,MAAM0nB,EAAS,CAAE/lC,EAAGipD,EAAIhpD,EAAGipD,GAC3B,OAAOtY,GAAOC,UrDiCO,YqDjCc9K;;;;;;;;;;;;;;;;OCLhC,MAAMwqB,GAAM5W,GAAG,CAAE6W,KALxB,SAAcl+C,GACV,MACMyzB,EAAS,CAAEzzB,EADNwmC,GAAgBxmC,EAAG,IAAK,QAEnC,OAAOs+B,GAAOC,UtDgEC,MsDhEc9K;;;;;;;;;;;;;;;;OCmB1B,MAAMt0B,GAAMkoC,GAAG,CAAE8W,KANxB,SAAcn+C,EAAGg3C,EAAO,KAAMoH,GAAW,GACrC,MACM3qB,EAAS,CAAEzzB,EADNwmC,GAAgBxmC,EAAG,IAAK,QAE7B4+B,EAAQ,CAAEyf,iBAAkBrH,EAAMoH,SAAAA,GACxC,OAAO9f,GAAOC,UvDiCC,MuDjCc9K,EAAQmL;;;;;;;;;;;;;;;;OCFlC,MAAM0f,GAAMjX,GAAG,CAAEkX,KAPxB,SAAc7wD,EAAGC,GACb,IAAIgpD,EAAKnQ,GAAgB94C,EAAG,IAAK,OAC7BkpD,EAAKpQ,GAAgB74C,EAAG,IAAK,QAChCgpD,EAAIC,GAAMnd,GAAekd,EAAIC,GAC9B,MAAMnjB,EAAS,CAAE/lC,EAAGipD,EAAIhpD,EAAGipD,GAC3B,OAAOtY,GAAOC,UxDsGC,MwDtGc9K;;;;;;;;;;;;;;;;OCW1B,MAAM+qB,GAAMnX,GAAG,CAAEoX,KATxB,SAAcz+C,EAAGg3C,EAAO,KAAMoH,GAAW,GACrC,IAAIvM,EAAKrL,GAAgBxmC,EAAG,IAAK,OAChB,SAAb6xC,EAAGhkB,QACHgkB,EAAK5Z,GAAK4Z,EAAI,UAElB,MAAMpe,EAAS,CAAEzzB,EAAG6xC,GACdjT,EAAQ,CAAEoY,KAAAA,EAAMoH,SAAAA,GACtB,OAAO9f,GAAOC,UzD8EC,MyD9Ec9K,EAAQmL;;;;;;;;;;;;;;;;OCYlC,MAAM8f,GAAUrX,GAAG,CAAEsX,SAtB5B,SAAkB3+C,EAAGw6C,EAAYjsB,EAAS4H,EAAK+jB,GAC3C,MAAMrI,EAAKrL,GAAgBxmC,EAAG,IAAK,WAEnC,IAAI06C,EAAM7I,EACN8I,GAAe,EACH,IAAZ9I,EAAGvjB,OACHqsB,GAAe,EACfD,EAAMN,GAAQvI,EAAI,CAAC,EAAGA,EAAG9lC,MAAM,GAAI8lC,EAAG9lC,MAAM,GAAI8lC,EAAG9lC,MAAM,MAE7D2qB,GAAyB,IAAbgkB,EAAIpsB,KAAY,IAAM,uDAAuDosB,EAAIpsB,SAC7FoI,GAAY+jB,GAAyClsB,EARnC,GAQwD,IACtE,wEAAeA,uBACnBqsB,GAAoC,UAAWzkB,EAAK+jB,GACpD,MAAMzmB,EAAS,CAAEzzB,EAAG06C,GACd9b,EAAQ,CAAE4b,WAAAA,EAAYjsB,QAAAA,EAAS4H,IAAAA,EAAK+jB,gBAAAA,GAEpChc,EAAMI,GAAOC,U1DwBA,U0DxBmB9K,EAAQmL,GAC9C,OAAI+b,EACOP,GAAQlc,EAAK,CAACA,EAAInyB,MAAM,GAAImyB,EAAInyB,MAAM,GAAImyB,EAAInyB,MAAM,KAExDmyB;;;;;;;;;;;;;;;;OCpCJ,SAAS0gB,GAAM7yC,EAAO8hB,EAAQ,WACjC,GAAc,cAAVA,EAAuB,CACvB,MAAM+Z,EAAOgX,GAAM7yC,EAAO,WACpB87B,EAAO+W,GAAM7yC,EAAO,WAC1B,OAAO27B,GAAQE,EAAMC,GAEzB,MAAM5Z,EAASW,GAAoB3B,GAAclhB,GAAQ8hB,GACzD,OAAOyQ,GAAOvH,WAAW9I,EAAQliB,EAAO8hB;;;;;;;;;;;;;;;;OCerC,MAAMsI,GAAMkR,GAAG,CAAEwX,KATxB,SAAc7+C,EAAG8+C,EAAUC,EAAgB,GACvC,MAAMlN,EAAKrL,GAAgBxmC,EAAG,IAAK,OACnC,GAAgB,IAAZ6xC,EAAGvjB,KACH,MAAM,IAAI57B,MAAM,sDAEpB,MAAMksC,EAAQ,CAAEkgB,SAAAA,EAAUC,cAAAA,GACpBtrB,EAAS,CAAEzzB,EAAG6xC,GACpB,OAAOvT,GAAOC,U5DwDG,Q4DxDc9K,EAAQmL;;;;;;;;;;;;;;;;OCfpC,SAASr/B,GAAMtG,EAAOC,EAAM8lD,EAAO,EAAGnxB,EAAQ,WACjD,GAAa,IAATmxB,EACA,MAAM,IAAItsD,MAAM,8BAEpB,MAAMksC,EAAQ,CAAE3lC,MAAAA,EAAOC,KAAAA,EAAM8lD,KAAAA,EAAMnxB,MAAAA,GACnC,OAAOyQ,GAAOC,U7DuEG,Q6DvEc,GAAiBK;;;;;;;;;;;;;;;;OCJ7C,MAAMjuB,GAAO02B,GAAG,CAAE4X,MALzB,SAAej/C,GACX,MACMyzB,EAAS,CAAEzzB,EADNwmC,GAAgBxmC,EAAG,IAAK,SAEnC,OAAOs+B,GAAOC,U9DgFE,O8DhFc9K;;;;;;;;;;;;;;;;OCE3B,MAAM3zB,GAAQunC,GAAG,CAAE6X,OAL1B,SAAgBl/C,GACZ,MACMyzB,EAAS,CAAEzzB,EADNwmC,GAAgBxmC,EAAG,IAAK,UAEnC,OAAOs+B,GAAOC,U/DwFG,Q+DxFc9K;;;;;;;;;;;;;;;;OCH5B,SAAS0rB,GAAO3uD,EAAOq9B,GAC1B,IAAMb,GAAax8B,IAAoB,WAAVq9B,GAAuB/1B,MAAMi1B,QAAQv8B,KACpD,cAAVq9B,EACA,MAAM,IAAIn7B,MAAM,kFAGpB,GAAc,WAAVm7B,GAAsBb,GAAax8B,MACjCA,aAAiBk9B,YACnB,MAAM,IAAIh7B,MAAM,6EAKpB,OAAOqkC,GAAWvmC,EAFJ,GACQ,GACyBq9B,GC0C5C,MAAMuxB,GAAkB/X,GAAG,CAAEgY,iBArCpC,SAA0Br/C,EAAGs/C,EAAiBC,EAAiBhxB,EAAS4H,EAAK/4B,EAAW,CAAC,EAAG,GAAIw/C,EAAa,QACzG,MAAM/K,EAAKrL,GAAgBxmC,EAAG,IAAK,mBAC7Bw/C,EAAmBhZ,GAAgB8Y,EAAiB,kBAAmB,mBACvEG,EAAmBjZ,GAAgB+Y,EAAiB,kBAAmB,mBAC7E,IAAI7E,EAAM7I,EACN8I,GAAe,EAKnB,GAJgB,IAAZ9I,EAAGvjB,OACHqsB,GAAe,EACfD,EAAMN,GAAQvI,EAAI,CAAC,EAAGA,EAAG9lC,MAAM,GAAI8lC,EAAG9lC,MAAM,GAAI8lC,EAAG9lC,MAAM,MAE1C,SAAf6wC,EACA,MAAM,IAAIlqD,MAAM,sFAGpBgkC,GAAyB,IAAbgkB,EAAIpsB,KAAY,IACxB,gEAAQosB,EAAIpsB,SAChBoI,GAAsC,IAA1B8oB,EAAiBlxB,KAAY,IACrC,2EAAYkxB,EAAiBlxB,SACjCoI,GAAsC,IAA1B+oB,EAAiBnxB,KAAY,IACrC,2EAAYkxB,EAAiBlxB,SACjCoI,GAA0C,IAA9B+oB,EAAiB1zC,MAAM,GAAU,IACzC,yFAAuB0zC,EAAiB1zC,MAAM,OAClD2qB,GAA0C,IAA9B+oB,EAAiB1zC,MAAM,GAAU,IACzC,yFAA6B0zC,EAAiB1zC,MAAM,OACxD,MAAM2zC,EAAaF,EAAiBzzC,MAAM,GACpC4zC,EAAoBH,EAAiBzzC,MAAM,GACjD2qB,GAAY+oB,EAAiB1zC,MAAM,KAAO2zC,EAAaC,EAAmB,IACtE,6EAAWD,EAAaC,cACbF,EAAiB1zC,MAAM,OACtC,MAAM6zC,EAAY7C,GAAgBrC,EAAK8E,EAAkBjxB,EAAS4H,EAAKymB,EAAYx/C,GAE7E8gC,EAAMwe,GAAOkD,EAAWH,EADN,EACyC,QAAS7C,GAC1E,OAAIjC,EACOP,GAAQlc,EAAK,CAACA,EAAInyB,MAAM,GAAImyB,EAAInyB,MAAM,GAAImyB,EAAInyB,MAAM,KAExDmyB;;;;;;;;;;;;;;;;OCzDJ,MAAM2hB,GAAUxY,GAAG,CAAEyY,SAL5B,SAAkB9/C,EAAGk7C,EAAOtsD,GACxB,MAAMijD,EAAKrL,GAAgBxmC,EAAG,IAAK,WAEnC,OADA02B,GAAwB,IAAZmb,EAAGvjB,KAAY,IAAM,mDAAmDujB,EAAGvjB,eAChF56B,GAAMm+C,EAAIqJ,EAAOtsD;;;;;;;;;;;;;;;;OC2BrB,MAAMmxD,GAAU1Y,GAAG,CAAE2Y,SAb5B,SAAkBl8C,EAAQ45C,GAAM,GAC5B,MAAMuC,EAAUzZ,GAAgB1iC,EAAQ,SAAU,UAAW,WAI7D,IAHa,IAAT45C,IACAA,EAAMuC,EAAQ3xB,KAAO,GAErBovB,IAAQuC,EAAQ3xB,KAAO,EACvB,MAAM57B,MACF,4EAAmButD,EAAQ3xB,oBAAoBovB,KAEvD,MAAMjqB,EAAS,CAAE3vB,OAAQm8C,GACnBrhB,EAAQ,CAAE8e,IAAAA,GAChB,OAAOpf,GAAOC,UnEuFK,UmEvFc9K,EAAQmL;;;;;;;;;;;;;;;;OCStC,MAAMrO,GAAQ8W,GAAG,CAAE6Y,OAN1B,SAAgBlgD,EAAGmgD,EAAiBnJ,EAAO,GACvC,MACMvjB,EAAS,CAAEzzB,EADNwmC,GAAgBxmC,EAAG,IAAK,UAE7B1P,EAAO,CAAE6vD,gBAAAA,EAAiBnJ,KAAAA,GAChC,OAAO1Y,GAAOC,UpE+EI,SoE/Ec9K,EAAQnjC;;;;;;;;;;;;;;;;OCbrC,MAAMob,GAAQ27B,GAAG,CAAE+Y,OAV1B,SAAgB9f,EAAS0W,EAAO,GAC5B,MAAM8D,EAAWlU,GAAqBtG,EAAS,UAAW,QAAS,qBACnE5J,GAAYokB,EAASrpD,QAAU,EAAG,IAAM,wCACpCqpD,EAASrpD,OAAS,GAClBilC,GAAYsgB,GAAQ8D,EAAS,GAAGxsB,KAAM,IAAM,sCAEhD,MAAMmF,EAASqnB,EACTlc,EAAQ,CAAEoY,KAAAA,GAChB,OAAO1Y,GAAOC,UrE+DE,OqE/Dc9K,EAAQmL;;;;;;;;;;;;;;;;OCTnC,SAASyhB,GAASpyB,EAAQJ,GAC7BhB,GAAcoB,GACd,MAAM0Y,EAAgBZ,GAAW9X,EAAQJ,GACzC,GAA6B,IAAzB8Y,EAAcl1C,OACd,MAAM,IAAIiB,MAAM,sDAGpB,OAAOqkC,GAAW9I,EADJ,KACmB0Y,EAAe9Y;;;;;;;;;;;;;;;;OCA7C,SAASyyB,GAASryB,EAAQliB,EAAO8hB,GAEpC,GADAhB,GAAcoB,GACD,MAATliB,GAAkC,IAAjBA,EAAMta,OACvB,MAAM,IAAIiB,MAAM,iDAEpB,MAAMi0C,EAAgBZ,GAAW9X,EAAQJ,GACzC,GAA6B,IAAzB8Y,EAAcl1C,QAAyC,IAAzBk1C,EAAcl1C,OAC5C,MAAM,IAAIiB,MAAM,kEAEpB,GAA6B,IAAzBi0C,EAAcl1C,QAAyB,MAATsa,EAC9B,MAAM,IAAIrZ,MAAM,gFAGpB,OAAOqkC,GAAW9I,EAAQliB,EAAO46B,EAAe9Y;;;;;;;;;;;;;;;;OCb7C,SAAS0yB,GAAStyB,EAAQliB,EAAO8hB,GAEpC,GADAhB,GAAcoB,GACD,MAATliB,GAAkC,IAAjBA,EAAMta,OACvB,MAAM,IAAIiB,MAAM,kDAEpB,MAAMi0C,EAAgBZ,GAAW9X,EAAQJ,GACzC,GAA6B,IAAzB8Y,EAAcl1C,QAAyC,IAAzBk1C,EAAcl1C,OAC5C,MAAM,IAAIiB,MAAM,sEAEpB,GAA6B,IAAzBi0C,EAAcl1C,QAAyB,MAATsa,EAC9B,MAAM,IAAIrZ,MAAM,2EAGpB,OAAOqkC,GAAW9I,EAAQliB,EAAO46B,EAAe9Y;;;;;;;;;;;;;;;;OCb7C,MAAM2yB,GAAUnZ,GAAG,CAAEoZ,SAP5B,SAAkBzgD,EAAGg3C,EAAO,GACxB,MAAMnF,EAAKrL,GAAgBxmC,EAAG,IAAK,UAAW,qBAC9C02B,GAAYsgB,IAASnF,EAAG9lC,MAAMta,QAAUulD,EAAOnF,EAAG9lC,MAAMta,OAAQ,IAAM,UAAUulD,iBAAoBnF,EAAG9lC,MAAMta,WAAWogD,EAAG9lC,MAAMta,WACjI,MAAMgiC,EAAS,CAAEjjC,MAAOqhD,GAClBjT,EAAQ,CAAEoY,KAAAA,GAChB,OAAO1Y,GAAOC,UzEuHI,SyEvHc9K,EAAQmL;;;;;;;;;;;;;;;;OCwBrC,MAAM8hB,GAAgBrZ,GAAG,CAAEsZ,eApBlC,SAAwB1hD,EAAO2hD,EAAOC,EAAQC,EAAUC,EAAS,WAAYC,EAAqB,GAC9F,MAAMC,EAASza,GAAgBvnC,EAAO,QAAS,iBACzCiiD,EAAS1a,GAAgBoa,EAAO,QAAS,gBAAiB,WAC1DO,EAAU3a,GAAgBqa,EAAQ,SAAU,gBAAiB,SAC7DO,EAAWF,EAAOn1C,MAAM,GAC9B2qB,GAA4B,IAAhBuqB,EAAO3yB,KAAY,IAC3B,6DAAgB2yB,EAAO3yB,SAC3BoI,GAA4B,IAAhBwqB,EAAO5yB,MAAkC,IAApB4yB,EAAOn1C,MAAM,GAAU,IAAM,oDAAoDq1C,sBAC7FF,EAAOn1C,UAC5B2qB,GAA6B,IAAjByqB,EAAQ7yB,MAAc6yB,EAAQp1C,MAAM,KAAOq1C,EAAU,IAAM,qDAAqDA,oBACvGF,EAAOn1C,UAC5B2qB,GAAgC,IAApBoqB,EAASrvD,OAAc,IAC/B,wEAAUqvD,EAASrvD,WACvBilC,GAAYoqB,EAAS,IAAM,GAAKA,EAAS,IAAM,EAAG,IAAM,2CAA2CA,GACnGpqB,GAAuB,aAAXqqB,GAAoC,YAAXA,EAAsB,IAAM,+CAA+CA,GAChH,MAAMttB,EAAS,CAAEx0B,MAAOgiD,EAAQL,MAAOM,EAAQL,OAAQM,GACjDviB,EAAQ,CAAEmiB,OAAAA,EAAQC,mBAAAA,EAAoBF,SAAAA,GAE5C,OADYxiB,GAAOC,U1EtBM,gB0EsBmB9K,EAAQmL;;;;;;;;;;;;;;;;OCzBjD,MAAMyiB,GAAgBha,GAAG,CAAEia,eARlC,SAAwBriD,GACpB,MAAMgiD,EAASza,GAAgBvnC,EAAO,QAAS,gBAAiB,WAChEy3B,GAA4B,IAAhBuqB,EAAO3yB,KAAY,IAC3B,6DAAgB2yB,EAAO3yB,SAC3B,MAAMmF,EAAS,CAAEx0B,MAAOgiD,GAExB,OADY3iB,GAAOC,U3E2BM,gB2E3BmB9K,EAAQ;;;;;;;;;;;;;;;;OCQjD,MAAM8tB,GAAiBla,GAAG,CAAEma,gBAbnC,SAAyBviD,GACrB,MAAMgiD,EAASza,GAAgBvnC,EAAO,QAAS,kBACzCwiD,EAAcR,EAAO3yB,KAAO,EAC5BozB,EAAWT,EAAOl1C,MAAM01C,GAC9B/qB,GAAYuqB,EAAO3yB,MAAQ,EAAG,IAC1B,yEAAgB2yB,EAAO3yB,SAC3BoI,GAAyB,IAAbgrB,EAAgB,IACxB,+FAAkCA,MACtC,MAAMrF,EAAO,IAAIvkD,MAAMmpD,EAAO3yB,MAG9B,OAFA+tB,EAAK1lD,KAAK,EAAG,EAAG8qD,GAChBpF,EAAKoF,GAAe,EACb9D,GAAKsD,EAAQ5E;;;;;;;;;;;;;;;;OCOjB,MAAMsF,GAAmBta,GAAG,CAAEua,kBATrC,SAA2B3iD,EAAO4iD,EAASC,EAAY,EAAGC,EAAS,IAC/D,MAAMd,EAASza,GAAgBvnC,EAAO,QAAS,mBAAoB,WACnEy3B,GAA4B,IAAhBuqB,EAAO3yB,KAAY,IAC3B,gEAAgB2yB,EAAO3yB,SAC3B,MAAMmF,EAAS,CAAEx0B,MAAOgiD,GAClBriB,EAAQ,CAAEijB,QAAAA,EAASC,UAAAA,EAAWC,OAAAA,GAEpC,OADYzjB,GAAOC,U7E4HS,mB6E5HmB9K,EAAQmL;;;;;;;;;;;;;;;;OC1B3D,SAASojB,GAAsBpB,EAAOqB,EAAQC,EAAeC,EAAcC,EAAgBC,GACnE,MAAhBF,IACAA,EAAe,IAEG,MAAlBC,IACAA,EAAiBh7B,OAAOk7B,mBAER,MAAhBD,IACAA,EAAe,GAEnB,MAAMjB,EAAWR,EAAM70C,MAAM,GAS7B,OARAm2C,EAAgBvjD,KAAKW,IAAI4iD,EAAed,GACxC1qB,GAAY,GAAKyrB,GAAgBA,GAAgB,EAAG,IAAM,4CAA4CA,MACtGzrB,GAA2B,IAAfkqB,EAAMtyB,KAAY,IAAM,+CAA+CsyB,EAAMtyB,SACzFoI,GAA+B,IAAnBkqB,EAAM70C,MAAM,GAAU,IAAM,oDAAoD60C,EAAM70C,MAAM,IACxG2qB,GAA4B,IAAhBurB,EAAO3zB,KAAY,IAAM,8BACrCoI,GAAYurB,EAAOl2C,MAAM,KAAOq1C,EAAU,IAAM,sDAAsDA,cACvFa,EAAOl2C,MAAM,IAC5B2qB,GAAY,GAAK2rB,GAAgBA,GAAgB,EAAG,IAAM,4CAA4CA,MAC/F,CAAEH,cAAAA,EAAeC,aAAAA,EAAcC,eAAAA,EAAgBC,aAAAA;;;;;;;;;;;;;;;;OCanD,MAAME,GAAoBlb,GAAG,CAAEmb,mBAVtC,SAA4B5B,EAAOqB,EAAQC,EAAeC,EAAe,GAAKC,EAAiBh7B,OAAOk7B,mBAClG,MAAMpB,EAAS1a,GAAgBoa,EAAO,QAAS,oBAAqB,WAC9D6B,EAAUjc,GAAgByb,EAAQ,SAAU,oBAAqB,WACjExuB,EAASuuB,GAAsBd,EAAQuB,EAASP,EAAeC,EAAcC,GAI7ExjB,EAAQ,CAAEsjB,cAHhBA,EAAgBzuB,EAAOyuB,cAGQC,aAF/BA,EAAe1uB,EAAO0uB,aAEuBC,eAD7CA,EAAiB3uB,EAAO2uB,gBAExB,OAAO9jB,GAAOC,U/EuDiB,sB+EvDc,CAAEqiB,MAAOM,EAAQe,OAAQQ,GAAW7jB;;;;;;;;;;;;;;;;OClB9E,SAAS8jB,GAAar0C,EAAK9e,EAASozD,GACvC,MAAMnqD,EAmBH,SAAsB6V,EAAKvf,EAAQ6zD,GACtC,OAYJ,SAAuBt0C,EAAKvf,EAAQ6zD,GAChC,IAAIr7C,EAAO,EACP2J,EAAQ5C,EAAI5c,OACZmxD,EAAS,EACTjO,GAAQ,EACZ,KAAOrtC,EAAO2J,GAAO,CACjB2xC,EAASt7C,GAAS2J,EAAQ3J,IAAU,GACpC,MAAMu7C,EAAgBF,EAAW7zD,EAAQuf,EAAIu0C,IACzCC,EAAgB,EAChBv7C,EAAOs7C,EAAS,GAGhB3xC,EAAQ2xC,EAGRjO,GAASkO,GAGjB,OAAOlO,EAAQrtC,GAAQA,EAAO;;;;;;;;;;;;;;;;OA9BvBw7C,CAAcz0C,EAAKvf,EAAQ6zD,GAAcI,IApBlCC,CAAa30C,EAAK9e,EAASozD,GACnCM,EAAiBzqD,EAAQ,IAAMA,EAAQ,GAAKA,EAClD6V,EAAI3V,OAAOuqD,EAAgB,EAAG1zD,GA2BlC,SAASwzD,GAAkBr1D,EAAGC,GAC1B,OAAOD,EAAIC,EAAI,EAAID,EAAIC,GAAK,EAAI,ECjCpC,SAASu1D,GAAuBtC,EAAOqB,EAAQC,EAAeC,EAAcC,EAAgBC,EAAcc,GAAqB,EAAOC,GAAqB,EAAOC,GAAqB,GAGnL,MAAMC,EAAa,GACnB,IAAK,IAAI9xD,EAAI,EAAGA,EAAIywD,EAAOxwD,OAAQD,IAC3BywD,EAAOzwD,GAAK4wD,GACZkB,EAAWxwD,KAAK,CAAEywD,MAAOtB,EAAOzwD,GAAIgyD,SAAUhyD,EAAGiyD,mBAAoB,IAG7EH,EAAWl2C,KAAKs2C,IAGhB,MAAMl0C,EAAQ6yC,EAAe,GAAM,GAAMA,EAAgB,EACnDsB,EAAkB,GAClBC,EAAiB,GACvB,KAAOD,EAAgBlyD,OAASywD,GAAiBoB,EAAW7xD,OAAS,GAAG,CACpE,MAAMoyD,EAAYP,EAAW5uD,OACrB6uD,MAAOO,EAAaN,SAAEA,EAAQC,mBAAEA,GAAuBI,EAC/D,GAAIC,EAAgB1B,EAChB,MAQJ,IAAI2B,GAAkB,EACtB,IAAK,IAAIvoD,EAAImoD,EAAgBlyD,OAAS,EAAG+J,GAAKioD,IAAsBjoD,EAAG,CACnE,MAAMwoD,EAAMC,GAAsBrD,EAAO4C,EAAUG,EAAgBnoD,IACnE,GAAIwoD,GAAO7B,EAAc,CACrB4B,GAAkB,EAClB,MAIJ,GAFAF,EAAUN,MACNM,EAAUN,MAAQW,GAAe/B,EAAc3yC,EAAOw0C,GACtDH,EAAUN,OAASnB,EACnB,MAURyB,EAAUJ,mBAAqBE,EAAgBlyD,OAC1CsyD,IAGGF,EAAUN,QAAUO,GACpBH,EAAgB7wD,KAAK0wD,GACrBI,EAAe9wD,KAAK+wD,EAAUN,QAEzBM,EAAUN,MAAQnB,GAGvBM,GAAaY,EAAYO,EAAWH,KAKhD,MAAMS,EAAeR,EAAgBlyD,OAC/B2yD,EAAalC,EAAgBiC,EAC/Bf,GAAsBgB,EAAa,IACnCT,EAAgB7wD,QAAQ,IAAIgF,MAAMssD,GAAYztD,KAAK,IACnDitD,EAAe9wD,QAAQ,IAAIgF,MAAMssD,GAAYztD,KAAK,KAEtD,MAAM4E,EAAS,CAAEooD,gBAAAA,GAOjB,OANIR,IACA5nD,EAAuB,eAAIqoD,GAE3BP,IACA9nD,EAAqB,aAAI4oD,GAEtB5oD,EAEX,SAAS0oD,GAAsBrD,EAAOpvD,EAAGgK,GACrC,MAAM6oD,EAASzD,EAAM0D,SAAa,EAAJ9yD,EAAW,EAAJA,EAAQ,GACvC+yD,EAAS3D,EAAM0D,SAAa,EAAJ9oD,EAAW,EAAJA,EAAQ,GACvCgpD,EAAQ7lD,KAAKW,IAAI+kD,EAAO,GAAIA,EAAO,IACnCI,EAAQ9lD,KAAKW,IAAI+kD,EAAO,GAAIA,EAAO,IACnCK,EAAQ/lD,KAAKQ,IAAIklD,EAAO,GAAIA,EAAO,IACnCM,EAAQhmD,KAAKQ,IAAIklD,EAAO,GAAIA,EAAO,IACnCO,EAAQjmD,KAAKW,IAAIilD,EAAO,GAAIA,EAAO,IACnCM,EAAQlmD,KAAKW,IAAIilD,EAAO,GAAIA,EAAO,IACnCO,EAAQnmD,KAAKQ,IAAIolD,EAAO,GAAIA,EAAO,IACnCQ,EAAQpmD,KAAKQ,IAAIolD,EAAO,GAAIA,EAAO,IACnCS,GAASN,EAAQF,IAAUG,EAAQF,GACnCQ,GAASH,EAAQF,IAAUG,EAAQF,GACzC,GAAIG,GAAS,GAAKC,GAAS,EACvB,OAAO,EAEX,MAAMC,EAAmBvmD,KAAKQ,IAAIqlD,EAAOI,GACnCO,EAAmBxmD,KAAKQ,IAAIslD,EAAOI,GACnCO,EAAmBzmD,KAAKW,IAAIolD,EAAOI,GACnCO,EAAmB1mD,KAAKW,IAAIqlD,EAAOI,GACnCO,EAAmB3mD,KAAKQ,IAAIimD,EAAmBF,EAAkB,GACnEvmD,KAAKQ,IAAIkmD,EAAmBF,EAAkB,GAClD,OAAOG,GAAoBN,EAAQC,EAAQK,GAM/C,SAASpB,GAAe/B,EAAc3yC,EAAOw0C,GACzC,MAAM/4C,EAAStM,KAAK2+C,IAAI9tC,EAAQw0C,EAAMA,GACtC,OAAOA,GAAO7B,EAAel3C,EAAS,EAE1C,SAASy4C,GAAoB6B,EAAIC,GAK7B,OAAQD,EAAGhC,MAAQiC,EAAGjC,OAChBgC,EAAGhC,QAAUiC,EAAGjC,OAAWiC,EAAGhC,SAAW+B,EAAG/B;;;;;;;;;;;;;;;;OCjF/C,MAAMiC,GAtBbt6C,eAAuCy1C,EAAOqB,EAAQC,EAAeC,EAAe,GAAKC,EAAiBh7B,OAAOk7B,mBAC7G,MAAMpB,EAAS1a,GAAgBoa,EAAO,QAAS,0BACzC6B,EAAUjc,GAAgByb,EAAQ,SAAU,0BAC5CxuB,EAASuuB,GAAsBd,EAAQuB,EAASP,EAAeC,EAAcC,GACnFF,EAAgBzuB,EAAOyuB,cACvBC,EAAe1uB,EAAO0uB,aACtBC,EAAiB3uB,EAAO2uB,eACxB,MAAMsD,QAAuBzxD,QAAQsgC,IAAI,CAAC2sB,EAAOtxD,OAAQ6yD,EAAQ7yD,SAC3D+1D,EAAYD,EAAe,GAC3BE,EAAaF,EAAe,IAI5B/B,gBAAEA,GDpCL,SAAiC/C,EAAOqB,EAAQC,EAAeC,EAAcC,GAChF,OAAOc,GAAuBtC,EAAOqB,EAAQC,EAAeC,EAAcC,EAAgB,GCmC9DyD,CAAwBF,EAAWC,EAAY1D,EAAeC,EAAcC,GAOxG,OANIlB,IAAWN,GACXM,EAAOvlB,UAEP8mB,IAAYR,GACZQ,EAAQ9mB,UAEL0kB,GAASsD,EAAiB;;;;;;;;;;;;;;;;OCI9B,MAAMmC,GAA6Bze,GAAG,CAAE0e,4BAd/C,SAAqCnF,EAAOqB,EAAQC,EAAeC,EAAe,GAAKC,EAAiBh7B,OAAOk7B,kBAAmBD,EAAe,GAC7I,MAAMnB,EAAS1a,GAAgBoa,EAAO,QAAS,qBACzC6B,EAAUjc,GAAgByb,EAAQ,SAAU,qBAC5CrxB,EAASoxB,GAAsBd,EAAQuB,EAASP,EAAeC,EAAcC,EAAgBC,GAK7F5uB,EAAS,CAAEmtB,MAAOM,EAAQe,OAAQQ,GAClC7jB,EAAQ,CAAEsjB,cALhBA,EAAgBtxB,EAAOsxB,cAKQC,aAJ/BA,EAAevxB,EAAOuxB,aAIuBC,eAH7CA,EAAiBxxB,EAAOwxB,eAGqCC,aAF7DA,EAAezxB,EAAOyxB,cAIhB9mD,EAAS+iC,GAAOC,UnF2CS,sBmF3CsB9K,EAAQmL,GAC7D,MAAO,CAAE+kB,gBAAiBpoD,EAAO,GAAIqoD,eAAgBroD,EAAO;;;;;;;;;;;;;;;;OCazD,MAAMyqD,GA1Bb76C,eAAgDy1C,EAAOqB,EAAQC,EAAeC,EAAe,GAAKC,EAAiBh7B,OAAOk7B,kBAAmBD,EAAe,GACxJ,MAAMnB,EAAS1a,GAAgBoa,EAAO,QAAS,0BACzC6B,EAAUjc,GAAgByb,EAAQ,SAAU,0BAC5CrxB,EAASoxB,GAAsBd,EAAQuB,EAASP,EAAeC,EAAcC,EAAgBC,GACnGH,EAAgBtxB,EAAOsxB,cACvBC,EAAevxB,EAAOuxB,aACtBC,EAAiBxxB,EAAOwxB,eACxBC,EAAezxB,EAAOyxB,aACtB,MAAMqD,QAAuBzxD,QAAQsgC,IAAI,CAAC2sB,EAAOtxD,OAAQ6yD,EAAQ7yD,SAC3D+1D,EAAYD,EAAe,GAC3BE,EAAaF,EAAe,IAI5B/B,gBAAEA,EAAeC,eAAEA,GHvCtB,SAAiChD,EAAOqB,EAAQC,EAAeC,EAAcC,EAAgBC,GAChG,OAAOa,GAAuBtC,EAAOqB,EAAQC,EAAeC,EAAcC,EAAgBC,GAAc,GGsC5D4D,CAAwBN,EAAWC,EAAY1D,EAAeC,EAAcC,EAAgBC,GAOxI,OANInB,IAAWN,GACXM,EAAOvlB,UAEP8mB,IAAYR,GACZQ,EAAQ9mB,UAEL,CACHgoB,gBAAiBtD,GAASsD,EAAiB,SAC3CC,eAAgBvD,GAASuD;;;;;;;;;;;;;;;;OCV1B,MAAMsC,GAA0B7e,GAAG,CAAE8e,yBAlB5C,SAAkCvF,EAAOqB,EAAQC,EAAeC,EAAe,GAAKC,EAAiBh7B,OAAOk7B,kBAAmBc,GAAqB,GAChJ,MAAMlC,EAAS1a,GAAgBoa,EAAO,QAAS,qBACzC6B,EAAUjc,GAAgByb,EAAQ,SAAU,qBAC5CrxB,EAASoxB,GAAsBd,EAAQuB,EAASP,EAAeC,EAAcC,EAAgB,MAI7F3uB,EAAS,CAAEmtB,MAAOM,EAAQe,OAAQQ,GAClC7jB,EAAQ,CACVsjB,cALmBtxB,EAAOsxB,cAM1BC,aALkBvxB,EAAOuxB,aAMzBC,eALoBxxB,EAAOwxB,eAM3BgB,mBAAAA,GAGE7nD,EAAS+iC,GAAOC,UrF4CS,sBqF5CsB9K,EAAQmL,GAC7D,MAAO,CAAE+kB,gBAAiBpoD,EAAO,GAAI4oD,aAAc5oD,EAAO;;;;;;;;;;;;;;;;OCOvD,MAAM6qD,GAvBbj7C,eAA6Cy1C,EAAOqB,EAAQC,EAAeC,EAAe,GAAKC,EAAiBh7B,OAAOk7B,kBAAmBc,GAAqB,GAC3J,MAAMlC,EAAS1a,GAAgBoa,EAAO,QAAS,0BACzC6B,EAAUjc,GAAgByb,EAAQ,SAAU,0BAC5CrxB,EAASoxB,GAAsBd,EAAQuB,EAASP,EAAeC,EAAcC,EAAgB,MAC7FiE,EAAiBz1B,EAAOsxB,cACxBoE,EAAgB11B,EAAOuxB,aACvBoE,EAAkB31B,EAAOwxB,gBACxBuD,EAAWC,SAAoB3xD,QAAQsgC,IAAI,CAAC2sB,EAAOtxD,OAAQ6yD,EAAQ7yD,UAIpE+zD,gBAAEA,EAAeQ,aAAEA,GLnCtB,SAAiCvD,EAAOqB,EAAQC,EAAeC,EAAcC,EAAgBgB,GAChG,OAAOF,GAAuBtC,EAAOqB,EAAQC,EAAeC,EAAcC,EAAgB,GAAsB,EAAgCgB,GAA6C,GKkCnJoD,CAAwBb,EAAWC,EAAYS,EAAgBC,EAAeC,EAAiBnD,GAOzI,OANIlC,IAAWN,GACXM,EAAOvlB,UAEP8mB,IAAYR,GACZQ,EAAQ9mB,UAEL,CACHgoB,gBAAiBtD,GAASsD,EAAiB,SAC3CQ,aAAchF,GAAOgF,EAAc;;;;;;;;;;;;;;;;OCDpC,MAAMsC,GAAiBpf,GAAG,CAAEqf,gBAxBnC,SAAyBC,EAAQ/3D,EAAMg4D,GAAe,EAAOC,GAAmB,GAC5E,MAAMC,EAAUtgB,GAAgBmgB,EAAQ,SAAU,kBAClDjwB,GAA6B,IAAjBowB,EAAQx4B,MAA+B,IAAjBw4B,EAAQx4B,KAAY,IAClD,gEAAQw4B,EAAQx4B,SACpBoI,GAA4B,IAAhB9nC,EAAK6C,OAAc,IAAM,6DAC9B7C,EAAH,KACJ8nC,IAAiC,IAArBmwB,IAA+C,IAAjBD,EAAwB,IAAM,qFAExE,IAAIG,EAAcD,EACdnM,GAAe,EACE,IAAjBmM,EAAQx4B,OACRqsB,GAAe,EACfoM,EAAc3M,GAAQ0M,EAAS,CAAC,EAAGA,EAAQ/6C,MAAM,GAAI+6C,EAAQ/6C,MAAM,GAAI+6C,EAAQ/6C,MAAM,MAGzF,MAAM0nB,EAAS,CAAEkzB,OAAQI,GACnBnoB,EAAQ,CAAEgoB,aAAAA,EAAcC,iBAAAA,EAAkBj4D,KAAAA,GAE1CsvC,EAAMI,GAAOC,UvF+DO,iBuF/DmB9K,EAAQmL,GACrD,OAAI+b,EACOP,GAAQlc,EAAK,CAACA,EAAInyB,MAAM,GAAImyB,EAAInyB,MAAM,GAAImyB,EAAInyB,MAAM,KAExDmyB;;;;;;;;;;;;;;;;OCKJ,MCsLDj/B,GAAQ,CACVoiD,cAAAA,GACAE,eAAAA,GACAyF,sBC1LiC3f,GAAG,CAAE4f,uBAzB1C,SAAgCN,EAAQ/3D,EAAMg4D,GAAe,EAAOC,GAAmB,GACnF,MAAMC,EAAUtgB,GAAgBmgB,EAAQ,SAAU,yBAClDjwB,GAA6B,IAAjBowB,EAAQx4B,MAA+B,IAAjBw4B,EAAQx4B,KAAY,IAClD,uEAAQw4B,EAAQx4B,SACpBoI,GAA4B,IAAhB9nC,EAAK6C,OAAc,IAAM,oEAC9B7C,EAAH,KACJ8nC,GAA8B,YAAlBowB,EAAQj5B,OAAyC,UAAlBi5B,EAAQj5B,MAAmB,IAAM,oDAC5E6I,IAAiC,IAArBmwB,IAA+C,IAAjBD,EAAwB,IAAM,4FAExE,IAAIG,EAAcD,EACdnM,GAAe,EACE,IAAjBmM,EAAQx4B,OACRqsB,GAAe,EACfoM,EAAc3M,GAAQ0M,EAAS,CAAC,EAAGA,EAAQ/6C,MAAM,GAAI+6C,EAAQ/6C,MAAM,GAAI+6C,EAAQ/6C,MAAM,MAGzF,MAAM0nB,EAAS,CAAEkzB,OAAQI,GACnBnoB,EAAQ,CAAEgoB,aAAAA,EAAcC,iBAAAA,EAAkBj4D,KAAAA,GAE1CsvC,EAAMI,GAAOC,U1F2Dc,wB0F3DmB9K,EAAQmL,GAC5D,OAAI+b,EACOP,GAAQlc,EAAK,CAACA,EAAInyB,MAAM,GAAImyB,EAAInyB,MAAM,GAAImyB,EAAInyB,MAAM,KAExDmyB,KD6LPuoB,eAAAA,GACA9E,iBAAAA,GACAjB,cAAAA,GACA6B,kBAAAA,GACAkD,uBAAAA,GACAK,2BAAAA,GACAE,gCAAAA,GACAE,wBAAAA,GACAE,6BAAAA,GACAc,UEnJqB7f,GAAG,CAAE8f;;;;;;;;;;;;;;;;;AA/D9B,SAAoBloD,EAAO8hD,EAAS,SAAUqG,GAAW,EAAOC,EAAc,IAC1E,MAAMpG,EAASza,GAAgBvnC,EAAO,QAAS,aAMzCqoD,EAAqBrG,EAAOl1C,MAAM,GAAKk1C,EAAOl1C,MAAM,GAC1D,IACIxW,EAAGmP,EAAG/W,EAAG45D,EADTC,EAAalO,GAAI+G,GAAS,CAACgH,IAAe,KAU9C,GARA3wB,GAA4B,IAAhBuqB,EAAO3yB,KAAY,IAC3B,yDAAgB2yB,EAAO3yB,SAC3BoI,GAAgC,IAApBuqB,EAAOl1C,MAAM,IAAgC,IAApBk1C,EAAOl1C,MAAM,GAAU,IAExD,0EAAWk1C,EAAOl1C,MAAM,OAC5B2qB,GAA6B,UAAjBuqB,EAAOpzB,OAAsC,YAAjBozB,EAAOpzB,MAAqB,IAChE,sEAAiBozB,EAAOpzB,UAC5B6I,GAAuB,SAAXqqB,GAAgC,WAAXA,EAAqB,IAAM,0CAA0CA,GAC9E,IAApBE,EAAOl1C,MAAM,GAAU,EACtBxW,EAAGmP,EAAG/W,GAAK4iC,GAAM0wB,EAAQ,CAAC,EAAG,EAAG,IAAK,GACtC,MAAMwG,EAAKnO,GAAI/jD,EAhBQ,OAiBjBmyD,EAAKpO,GAAI50C,EAhBU,MAiBnBkyC,EAAK0C,GAAI3rD,EAhBS,MAiBxB45D,EAAY1yD,GAAIA,GAAI4yD,EAAIC,GAAK9Q,QAG7B2Q,EAAYtoD,EAEhB,GAAe,SAAX8hD,EAAmB,CAEnByG,EAOR,SAAcG,EAAWjpD,GACrB,IAGIkpD,EAAYC,EAAaC,EAAWC,EAASC,EAAkBC,EAH/DC,EAAa7H,GAAS,EAAE,IACxB8H,EAAe9H,GAAS,CAAC,IACzB+H,EAAY/H,GAAS,CAAC,IAE1B,IAAK,IAAI7nD,EAAQ,EAAGA,EAAQmvD,EAAU/4D,KAAO,EAAG4J,IAAS,CACrDovD,EAAal0D,GAAMi0D,EAAW,EAAGnvD,EAAQ,GACzCqvD,EAAcn0D,GAAMi0D,EAAWnvD,EAAQ,GACvCwvD,EAAmB5O,GAAIoF,GAAIoJ,GAAalpD,GACxCupD,EAAa7O,GAAIoF,GAAIqJ,GAAcnpD,GACnC,MAAM2pD,EAAgB7J,GAAIlF,GAAIsO,EAAYroD,GAAM,EAAGqoD,EAAWh5D,QAC9Dk5D,EAAY1O,GAAIiP,EAAe7J,GAAIoJ,IACnC,MAAMU,EAAc3xD,GAAKkxD,EAAY97C,MAAO67C,EAAWh5D,MACjD25D,EAAa1zD,GAAI0K,GAAM,EAAGsoD,EAAYj5D,MAAO05D,GAC7CE,EAAalP,GAAIuO,KACvBE,EAAU3O,GAAIoF,GAAIgK,GAAahK,GAAIqJ,IACnC,MAAMY,EAAgBnK,GAAIwJ,EAAWC,GAC/BW,EAAgBpK,GAAIwJ,EAAWC,GAC/BY,EAAerP,GAAI0O,EAAkBC,GAC3CG,EAAY9O,GAAIA,GAAIqP,EAAcF,GAAgBC,GAClD,MAAMvL,EAAYU,GAAQuK,EAAWD,GACrCA,EAAelL,GAAME,EAAWiL,EAAWD,GAC3CD,EAAajL,GAAME,EAAWkD,GAAS,CAAC7nD,IAAS0vD,GAErD,OAAOA,EA/BUU,CADM/M,GAAS5jB,GAAKn4B,GAAMynD,GAAY,SAAUhnB,GAAO,IAAK,KAC3C+mB,GAElC,MAAMuB,EAAezB,EACjBrJ,GAAUwJ,EAAWC,GAAc3J,GAAQ0J,EAAWC,GAE1D,OADevvB,GAAKqhB,GAAIuP,EAAc,KAAM,YFiL5CC,UDpMqBzhB,GAAG,CAAE0hB;;;;;;;;;;;;;;;;;AAf9B,SAAoB9pD,EAAO+pD,EAAYC,EAAgB,UAAWC,EAAW,WAAYpH,EAAY,EAAGqH,GACpG,MAAMlI,EAASza,GAAgBvnC,EAAO,QAAS,YAAa,WACtDmqD,EAAc5iB,GAAgBwiB,EAAY,aAAc,YAAa,WAC3EtyB,GAA4B,IAAhBuqB,EAAO3yB,KAAY,IAC3B,yDAAgB2yB,EAAO3yB,SAC3BoI,GAAiC,IAArB0yB,EAAY96B,OACnB86B,EAAYr9C,MAAM,KAAOk1C,EAAOl1C,MAAM,IACV,IAAzBq9C,EAAYr9C,MAAM,KACG,IAAzBq9C,EAAYr9C,MAAM,GAAU,IAAM,oEACtC2qB,GAA2B,MAAfyyB,GAA8C,IAAvBA,EAAY13D,OAAc,IACzD,4EAAW03D,MACf,MAAM11B,EAAS,CAAEx0B,MAAOgiD,EAAQ+H,WAAYI,GACtCxqB,EAAQ,CAAEqqB,cAAAA,EAAeC,SAAAA,EAAUpH,UAAAA,EAAWqH,YAAAA,GACpD,OAAO7qB,GAAOC,UxF4FO,YwF5Fc9K,EAAQmL;;;;;;;;;;;;;;;;OIhD/C,IAAIyqB,GAAgB,SAASvzD,EAAGnI,GAI5B,OAHA07D,GAAgBn8D,OAAOo8D,gBAClB,CAAEC,UAAW,cAAgBzxD,OAAS,SAAUhC,EAAGnI,GAAKmI,EAAEyzD,UAAY57D,IACvE,SAAUmI,EAAGnI,GAAK,IAAK,IAAIuH,KAAKvH,EAAOT,OAAOs8D,UAAUC,eAAe91D,KAAKhG,EAAGuH,KAAIY,EAAEZ,GAAKvH,EAAEuH,MAC3EY,EAAGnI,IAGrB,SAAS+7D,GAAU5zD,EAAGnI,GACzB,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIg8D,UAAU,uBAAyB57B,OAAOpgC,GAAK,iCAE7D,SAASi8D,IAAOtxD,KAAK81B,YAAct4B,EADnCuzD,GAAcvzD,EAAGnI,GAEjBmI,EAAE0zD,UAAkB,OAAN77D,EAAaT,OAAOC,OAAOQ,IAAMi8D,EAAGJ,UAAY77D,EAAE67D,UAAW,IAAII,GAG5E,IAAIC,GAAW,WAQlB,OAPAA,GAAW38D,OAAOka,QAAU,SAAkBmB,GAC1C,IAAK,IAAIxM,EAAGvK,EAAI,EAAG+S,EAAIulD,UAAUr4D,OAAQD,EAAI+S,EAAG/S,IAE5C,IAAK,IAAI0D,KADT6G,EAAI+tD,UAAUt4D,GACOtE,OAAOs8D,UAAUC,eAAe91D,KAAKoI,EAAG7G,KAAIqT,EAAErT,GAAK6G,EAAE7G,IAE9E,OAAOqT,IAEKnJ,MAAM9G,KAAMwxD,YA8BzB,SAASC,GAAUC,EAASC,EAAYC,EAAGC,GAE9C,OAAO,IAAKD,IAAMA,EAAIj2D,WAAU,SAAUC,EAAS8a,GAC/C,SAASo7C,EAAU55D,GAAS,IAAMwuD,EAAKmL,EAAU93B,KAAK7hC,IAAW,MAAO8C,GAAK0b,EAAO1b,IACpF,SAAS+2D,EAAS75D,GAAS,IAAMwuD,EAAKmL,EAAiB,MAAE35D,IAAW,MAAO8C,GAAK0b,EAAO1b,IACvF,SAAS0rD,EAAKzjD,GAJlB,IAAe/K,EAIa+K,EAAO62B,KAAOl+B,EAAQqH,EAAO/K,QAJ1CA,EAIyD+K,EAAO/K,MAJhDA,aAAiB05D,EAAI15D,EAAQ,IAAI05D,GAAE,SAAUh2D,GAAWA,EAAQ1D,OAITkG,KAAK0zD,EAAWC,GAClGrL,GAAMmL,EAAYA,EAAU/qD,MAAM4qD,EAASC,GAAc,KAAK53B,WAI/D,SAASi4B,GAAYN,EAASriD,GACjC,IAAsGhZ,EAAGsR,EAAGsI,EAAG7D,EAA3GsE,EAAI,CAAEuhD,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPjiD,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOkiD,KAAM,GAAIC,IAAK,IAChG,OAAOhmD,EAAI,CAAE2tB,KAAMs4B,EAAK,GAAIC,MAASD,EAAK,GAAIE,OAAUF,EAAK,IAAwB,mBAAXtyB,SAA0B3zB,EAAE2zB,OAAOyyB,UAAY,WAAa,OAAOxyD,OAAUoM,EACvJ,SAASimD,EAAKpmD,GAAK,OAAO,SAAU1H,GAAK,OACzC,SAAcwqC,GACV,GAAI14C,EAAG,MAAM,IAAIg7D,UAAU,mCAC3B,KAAO3gD,GAAG,IACN,GAAIra,EAAI,EAAGsR,IAAMsI,EAAY,EAAR8+B,EAAG,GAASpnC,EAAU,OAAIonC,EAAG,GAAKpnC,EAAS,SAAOsI,EAAItI,EAAU,SAAMsI,EAAE5U,KAAKsM,GAAI,GAAKA,EAAEoyB,SAAW9pB,EAAIA,EAAE5U,KAAKsM,EAAGonC,EAAG,KAAKjV,KAAM,OAAO7pB,EAE3J,OADItI,EAAI,EAAGsI,IAAG8+B,EAAK,CAAS,EAARA,EAAG,GAAQ9+B,EAAE/X,QACzB62C,EAAG,IACP,KAAK,EAAG,KAAK,EAAG9+B,EAAI8+B,EAAI,MACxB,KAAK,EAAc,OAAXr+B,EAAEuhD,QAAgB,CAAE/5D,MAAO62C,EAAG,GAAIjV,MAAM,GAChD,KAAK,EAAGppB,EAAEuhD,QAAStqD,EAAIonC,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKr+B,EAAE0hD,IAAIh2D,MAAOsU,EAAEyhD,KAAK/1D,MAAO,SACxC,QACI,KAAM6T,EAAIS,EAAEyhD,MAAMliD,EAAIA,EAAE9W,OAAS,GAAK8W,EAAEA,EAAE9W,OAAS,KAAkB,IAAV41C,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEr+B,EAAI,EAAG,SACjG,GAAc,IAAVq+B,EAAG,MAAc9+B,GAAM8+B,EAAG,GAAK9+B,EAAE,IAAM8+B,EAAG,GAAK9+B,EAAE,IAAM,CAAES,EAAEuhD,MAAQljB,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYr+B,EAAEuhD,MAAQhiD,EAAE,GAAI,CAAES,EAAEuhD,MAAQhiD,EAAE,GAAIA,EAAI8+B,EAAI,MAC7D,GAAI9+B,GAAKS,EAAEuhD,MAAQhiD,EAAE,GAAI,CAAES,EAAEuhD,MAAQhiD,EAAE,GAAIS,EAAE0hD,IAAI53D,KAAKu0C,GAAK,MACvD9+B,EAAE,IAAIS,EAAE0hD,IAAIh2D,MAChBsU,EAAEyhD,KAAK/1D,MAAO,SAEtB2yC,EAAK1/B,EAAKhU,KAAKq2D,EAAShhD,GAC1B,MAAO1V,GAAK+zC,EAAK,CAAC,EAAG/zC,GAAI2M,EAAI,UAAetR,EAAI4Z,EAAI,EACtD,GAAY,EAAR8+B,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAE72C,MAAO62C,EAAG,GAAKA,EAAG,QAAK,EAAQjV,MAAM,GArB9B4sB,CAAK,CAACz6C,EAAG1H,MA8EtD,SAASkuD,KACZ,IAAK,IAAIhvD,EAAI,EAAGvK,EAAI,EAAGw5D,EAAKlB,UAAUr4D,OAAQD,EAAIw5D,EAAIx5D,IAAKuK,GAAK+tD,UAAUt4D,GAAGC,OACxE,IAAI8D,EAAIuC,MAAMiE,GAAIm+B,EAAI,EAA3B,IAA8B1oC,EAAI,EAAGA,EAAIw5D,EAAIx5D,IACzC,IAAK,IAAI9D,EAAIo8D,UAAUt4D,GAAIgK,EAAI,EAAGyvD,EAAKv9D,EAAE+D,OAAQ+J,EAAIyvD,EAAIzvD,IAAK0+B,IAC1D3kC,EAAE2kC,GAAKxsC,EAAE8N,GACjB,OAAOjG,ECpKX,IAAI21D,GAA4B,WAC5B,SAASA,EAAWnwD,EAAOD,GACvB,IAAKqwD,GAAcpwD,KAAWowD,GAAcrwD,GACxC,MAAM,IAAIpI,MAAM,wFAA0Fi3C,KAAKC,UAAU,CAAE7uC,MAAOA,EAAOD,OAAQA,KAErJxC,KAAK8yD,OAASrwD,EACdzC,KAAK+yD,QAAUvwD,EAenB,OAbA5N,OAAOkrC,eAAe8yB,EAAW1B,UAAW,QAAS,CACjDt5B,IAAK,WAAc,OAAO53B,KAAK8yD,QAC/BE,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAe8yB,EAAW1B,UAAW,SAAU,CAClDt5B,IAAK,WAAc,OAAO53B,KAAK+yD,SAC/BC,YAAY,EACZ7jB,cAAc,IAElByjB,EAAW1B,UAAUzS,QAAU,WAC3B,OAAO,IAAImU,EAAW,EAAI5yD,KAAKyC,MAAO,EAAIzC,KAAKwC,SAE5CowD,KCnBJ,SAASK,GAAShrB,EAAQmd,GAC7B,OAAOnd,aAAkBirB,IAAajrB,EAAOx0B,MAAMta,SAAWisD,EAQ3D,SAAS+N,GAAWlrB,GACvB,OAAOgrB,GAAShrB,EAAQ,GAErB,SAASmrB,GAAWnrB,GACvB,OAAOgrB,GAAShrB,EAAQ,GAKrB,SAASorB,GAAOh5B,GACnB,OAAOA,EAAM,GAAM,EAEhB,SAAS7yB,GAAM6yB,EAAKi5B,QACV,IAATA,IAAmBA,EAAO,GAC9B,IAAIj9D,EAAIgQ,KAAK6J,IAAI,GAAIojD,GACrB,OAAOjtD,KAAKC,MAAM+zB,EAAMhkC,GAAKA,EAE1B,SAASk9D,GAAajzD,GACzB,OAAOA,GAAOA,EAAImC,OAASnC,EAAIkC,OAO5B,SAASgxD,GAAeC,GAC3B,OAAOA,EAAIttD,QAAO,SAAU+/C,EAAKwN,GAAM,OAAOxN,EAAI3pD,IAAIm3D,KAAQ,IAAIC,GAAM,EAAG,IACtE7S,IAAI,IAAI6S,GAAMF,EAAIt6D,OAAQs6D,EAAIt6D,SAEhC,SAAS8N,GAAMozB,EAAK15B,EAAO+lD,GAC9B,OAAOlnD,MAAM66B,GAAKh8B,KAAK,GAAGN,KAAI,SAAU2S,EAAGxX,GAAK,OAAOyH,EAASzH,EAAIwtD,KAEjE,SAASmM,GAAcx4B,GAC1B,QAASA,GAAOA,IAAQz2B,EAAAA,GAAYy2B,KAASz2B,EAAAA,IAAa02B,MAAMD,IAAgB,IAARA,EAErE,SAASu5B,GAAmBv5B,GAC/B,OAAOw4B,GAAcx4B,IAAQ,GAAKA,GAAOA,GAAO,EChDpD,IAAIs5B,GAAuB,WACvB,SAASA,EAAMjsD,EAAGC,GACd3H,KAAK6zD,GAAKnsD,EACV1H,KAAK8zD,GAAKnsD,EAiCd,OA/BA/S,OAAOkrC,eAAe6zB,EAAMzC,UAAW,IAAK,CACxCt5B,IAAK,WAAc,OAAO53B,KAAK6zD,IAC/Bb,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAe6zB,EAAMzC,UAAW,IAAK,CACxCt5B,IAAK,WAAc,OAAO53B,KAAK8zD,IAC/Bd,YAAY,EACZ7jB,cAAc,IAElBwkB,EAAMzC,UAAU30D,IAAM,SAAUm3D,GAC5B,OAAO,IAAIC,EAAM3zD,KAAK0H,EAAIgsD,EAAGhsD,EAAG1H,KAAK2H,EAAI+rD,EAAG/rD,IAEhDgsD,EAAMzC,UAAUlL,IAAM,SAAU0N,GAC5B,OAAO,IAAIC,EAAM3zD,KAAK0H,EAAIgsD,EAAGhsD,EAAG1H,KAAK2H,EAAI+rD,EAAG/rD,IAEhDgsD,EAAMzC,UAAUlQ,IAAM,SAAU0S,GAC5B,OAAO,IAAIC,EAAM3zD,KAAK0H,EAAIgsD,EAAGhsD,EAAG1H,KAAK2H,EAAI+rD,EAAG/rD,IAEhDgsD,EAAMzC,UAAUpQ,IAAM,SAAU4S,GAC5B,OAAO,IAAIC,EAAM3zD,KAAK0H,EAAIgsD,EAAGhsD,EAAG1H,KAAK2H,EAAI+rD,EAAG/rD,IAEhDgsD,EAAMzC,UAAUhqD,IAAM,WAClB,OAAO,IAAIysD,EAAMttD,KAAKa,IAAIlH,KAAK0H,GAAIrB,KAAKa,IAAIlH,KAAK2H,KAErDgsD,EAAMzC,UAAU6C,UAAY,WACxB,OAAO1tD,KAAK2tD,KAAK3tD,KAAK6J,IAAIlQ,KAAK0H,EAAG,GAAKrB,KAAK6J,IAAIlQ,KAAK2H,EAAG,KAE5DgsD,EAAMzC,UAAU5qD,MAAQ,WACpB,OAAO,IAAIqtD,EAAMttD,KAAKC,MAAMtG,KAAK0H,GAAIrB,KAAKC,MAAMtG,KAAK2H,KAElDgsD,KClCPM,GAAqB,WACrB,SAASA,EAAIC,EAAMC,QACiB,IAA5BA,IAAsCA,GAA0B,GACpE,IAAIC,EAAOF,GAAQ,GACfG,EAAS,CAACD,EAAIplD,KAAMolD,EAAIrlD,IAAKqlD,EAAIz7C,MAAOy7C,EAAI17C,QAAQk0B,MAAMimB,IAC1DyB,EAAS,CAACF,EAAI1sD,EAAG0sD,EAAIzsD,EAAGysD,EAAI3xD,MAAO2xD,EAAI5xD,QAAQoqC,MAAMimB,IACzD,IAAKyB,IAAWD,EACZ,MAAM,IAAIj6D,MAAM,2EAA6Ei3C,KAAKC,UAAU8iB,IAEhH,IAAI/0B,EAAKi1B,EACH,CAACF,EAAI1sD,EAAG0sD,EAAIzsD,EAAGysD,EAAI3xD,MAAO2xD,EAAI5xD,QAC9B,CAAC4xD,EAAIplD,KAAMolD,EAAIrlD,IAAKqlD,EAAIz7C,MAAQy7C,EAAIplD,KAAMolD,EAAI17C,OAAS07C,EAAIrlD,KAAMrH,EAAI23B,EAAG,GAAI13B,EAAI03B,EAAG,GAAI58B,EAAQ48B,EAAG,GAAI78B,EAAS68B,EAAG,GACxH40B,EAAIM,iBAAiB,CAAE7sD,EAAGA,EAAGC,EAAGA,EAAGlF,MAAOA,EAAOD,OAAQA,GAAU,kBAAmB2xD,GACtFn0D,KAAK6zD,GAAKnsD,EACV1H,KAAK8zD,GAAKnsD,EACV3H,KAAK8yD,OAASrwD,EACdzC,KAAK+yD,QAAUvwD,EA8KnB,OA5KAyxD,EAAIK,OAAS,SAAUE,GACnB,QAASA,GAAQ,CAACA,EAAK9sD,EAAG8sD,EAAK7sD,EAAG6sD,EAAK/xD,MAAO+xD,EAAKhyD,QAAQoqC,MAAMimB,KAErEoB,EAAIM,iBAAmB,SAAUH,EAAKK,EAAQN,GAE1C,QADgC,IAA5BA,IAAsCA,GAA0B,IAC/DF,EAAIK,OAAOF,GACZ,MAAM,IAAIh6D,MAAMq6D,EAAS,mBAAqBpjB,KAAKC,UAAU8iB,GAAO,yDAExE,IAAKD,IAA4BC,EAAI3xD,MAAQ,GAAK2xD,EAAI5xD,OAAS,GAC3D,MAAM,IAAIpI,MAAMq6D,EAAS,aAAeL,EAAI3xD,MAAQ,iBAAmB2xD,EAAI5xD,OAAS,+BAG5F5N,OAAOkrC,eAAem0B,EAAI/C,UAAW,IAAK,CACtCt5B,IAAK,WAAc,OAAO53B,KAAK6zD,IAC/Bb,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAem0B,EAAI/C,UAAW,IAAK,CACtCt5B,IAAK,WAAc,OAAO53B,KAAK8zD,IAC/Bd,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAem0B,EAAI/C,UAAW,QAAS,CAC1Ct5B,IAAK,WAAc,OAAO53B,KAAK8yD,QAC/BE,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAem0B,EAAI/C,UAAW,SAAU,CAC3Ct5B,IAAK,WAAc,OAAO53B,KAAK+yD,SAC/BC,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAem0B,EAAI/C,UAAW,OAAQ,CACzCt5B,IAAK,WAAc,OAAO53B,KAAK0H,GAC/BsrD,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAem0B,EAAI/C,UAAW,MAAO,CACxCt5B,IAAK,WAAc,OAAO53B,KAAK2H,GAC/BqrD,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAem0B,EAAI/C,UAAW,QAAS,CAC1Ct5B,IAAK,WAAc,OAAO53B,KAAK0H,EAAI1H,KAAKyC,OACxCuwD,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAem0B,EAAI/C,UAAW,SAAU,CAC3Ct5B,IAAK,WAAc,OAAO53B,KAAK2H,EAAI3H,KAAKwC,QACxCwwD,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAem0B,EAAI/C,UAAW,OAAQ,CACzCt5B,IAAK,WAAc,OAAO53B,KAAKyC,MAAQzC,KAAKwC,QAC5CwwD,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAem0B,EAAI/C,UAAW,UAAW,CAC5Ct5B,IAAK,WAAc,OAAO,IAAI+7B,GAAM3zD,KAAKgP,KAAMhP,KAAK+O,MACpDikD,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAem0B,EAAI/C,UAAW,WAAY,CAC7Ct5B,IAAK,WAAc,OAAO,IAAI+7B,GAAM3zD,KAAK2Y,MAAO3Y,KAAK+O,MACrDikD,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAem0B,EAAI/C,UAAW,aAAc,CAC/Ct5B,IAAK,WAAc,OAAO,IAAI+7B,GAAM3zD,KAAKgP,KAAMhP,KAAK0Y,SACpDs6C,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAem0B,EAAI/C,UAAW,cAAe,CAChDt5B,IAAK,WAAc,OAAO,IAAI+7B,GAAM3zD,KAAK2Y,MAAO3Y,KAAK0Y,SACrDs6C,YAAY,EACZ7jB,cAAc,IAElB8kB,EAAI/C,UAAU1pD,MAAQ,WAClB,IAAI63B,EAAK,CAACr/B,KAAK0H,EAAG1H,KAAK2H,EAAG3H,KAAKyC,MAAOzC,KAAKwC,QACtCzE,KAAI,SAAUyW,GAAO,OAAOnO,KAAKmB,MAAMgN,MAC5C,OAAO,IAAIy/C,EAAI,CAAEvsD,EADyC23B,EAAG,GACtC13B,EAD8C03B,EAAG,GAC3C58B,MADuD48B,EAAG,GAC5C78B,OADyD68B,EAAG,MAG3G40B,EAAI/C,UAAU5qD,MAAQ,WAClB,IAAI+4B,EAAK,CAACr/B,KAAK0H,EAAG1H,KAAK2H,EAAG3H,KAAKyC,MAAOzC,KAAKwC,QACtCzE,KAAI,SAAUyW,GAAO,OAAOnO,KAAKC,MAAMkO,MAC5C,OAAO,IAAIy/C,EAAI,CAAEvsD,EADyC23B,EAAG,GACtC13B,EAD8C03B,EAAG,GAC3C58B,MADuD48B,EAAG,GAC5C78B,OADyD68B,EAAG,MAG3G40B,EAAI/C,UAAUwD,SAAW,WACrB,IAAehtD,EAAN1H,KAAa0H,EAAGC,EAAhB3H,KAAuB2H,EAAGlF,EAA1BzC,KAAqCyC,MAAOD,EAA5CxC,KAAwDwC,OAC7DmyD,EAAOtuD,KAAKa,IAAIzE,EAAQD,GAS5B,OARIC,EAAQD,IACRkF,GAAMitD,EAAO,EACblyD,GAASkyD,GAETnyD,EAASC,IACTkF,GAAMgtD,EAAO,EACbnyD,GAAUmyD,GAEP,IAAIV,EAAI,CAAEvsD,EAAGA,EAAGC,EAAGA,EAAGlF,MAAOA,EAAOD,OAAQA,KAEvDyxD,EAAI/C,UAAU0D,QAAU,SAAUnxD,GAC9B,IAAIoxD,EAAStB,GAAa9vD,GAAKA,EAAEhB,MAAQgB,EACrCqxD,EAASvB,GAAa9vD,GAAKA,EAAEjB,OAASiB,EAC1C,OAAO,IAAIwwD,EAAI,CACXvsD,EAAG1H,KAAK0H,EAAImtD,EACZltD,EAAG3H,KAAK2H,EAAImtD,EACZryD,MAAOzC,KAAKyC,MAAQoyD,EACpBryD,OAAQxC,KAAKwC,OAASsyD,KAG9Bb,EAAI/C,UAAUrzB,IAAM,SAAUk3B,EAAMC,GAChC,IAAI31B,EAAK,CACLr/B,KAAK0H,EAAKqtD,EAAO,EACjB/0D,KAAK2H,EAAKqtD,EAAO,EACjBh1D,KAAKyC,MAAQsyD,EACb/0D,KAAKwC,OAASwyD,GAElB,OAAO,IAAIf,EAAI,CAAEvsD,EADV23B,EAAG,GACa13B,EADL03B,EAAG,GACQ58B,MADI48B,EAAG,GACO78B,OADM68B,EAAG,MAGxD40B,EAAI/C,UAAU+D,mBAAqB,SAAUC,EAAUC,GACnD,IAAeztD,EAAN1H,KAAa0H,EAAGC,EAAhB3H,KAAuB2H,EAAGgR,EAA1B3Y,KAAqC2Y,MAAOD,EAA5C1Y,KAAwD0Y,OAC7D08C,EAAW/uD,KAAKQ,IAAIa,EAAG,GACvB2tD,EAAWhvD,KAAKQ,IAAIc,EAAG,GACvB2tD,EAAW38C,EAAQy8C,EACnBG,EAAY78C,EAAS28C,EAGzB,OAAO,IAAKpB,EAAI,CAAEvsD,EAAG0tD,EAAUztD,EAAG0tD,EAAU5yD,MAFzB4D,KAAKW,IAAIsuD,EAAUJ,EAAWE,GAEgB5yD,OAD7C6D,KAAKW,IAAIuuD,EAAWJ,EAAYE,KACuC/uD,SAE/F2tD,EAAI/C,UAAUsE,MAAQ,SAAU7zC,EAAIC,GAChC,IAAenf,EAANzC,KAAiByC,MAAOD,EAAxBxC,KAAoCwC,OAG7C,OAAO,IAAIyxD,EAAI,CAAEvsD,EAFT1H,KAAK0H,EAAIia,EAEMha,EADf3H,KAAK2H,EAAIia,EACYnf,MAAOA,EAAOD,OAAQA,KAEvDyxD,EAAI/C,UAAUuE,aAAe,SAAUn+C,EAAaD,GAChD,IAAI5S,EAAIzE,KAAKyC,MAAQ,EACjBizD,EAAI11D,KAAKwC,OAAS,EAGlBmzD,EAAMlxD,EACNmxD,EAAMF,EACNhuD,EAAI1H,KAAKgP,KACTrH,EAAI3H,KAAK+O,IACT82B,EAAK7lC,KAAK2Y,MACVk9C,EAAK71D,KAAK0Y,OAiBd,OAhBImtB,EAAKxuB,IACLs+C,GAAO9vB,EAAKxuB,EAAa5S,EACzBohC,EAAKxuB,GAELw+C,EAAKv+C,IACLs+C,GAAOC,EAAKv+C,EAAco+C,EAC1BG,EAAKv+C,GAEL5P,EAAI,IACJkuD,EAAM,EAAIluD,EACVA,EAAI,GAEJC,EAAI,IACJiuD,EAAM,EAAIjuD,EACVA,EAAI,GAED,CAAEy+B,GAvBA,EAuBQwvB,IAAKA,EAAKrpB,GAxBlB,EAwB0BopB,IAAKA,EAAKhuD,EAAGA,EAAGkuD,GAAIA,EAAInuD,EAAGA,EAAGm+B,GAAIA,EAAIphC,EAAGA,EAAGixD,EAAGA,IAEtFzB,EAAI/C,UAAU4E,UAAY,SAAUC,GAChC,OAAO,IAAI9B,EAAI,CACXjlD,KAAMhP,KAAKgP,KAAQ+mD,EAAO/mD,KAAOhP,KAAKyC,MACtCsM,IAAK/O,KAAK+O,IAAOgnD,EAAOhnD,IAAM/O,KAAKwC,OACnCmW,MAAO3Y,KAAK2Y,MAASo9C,EAAOp9C,MAAQ3Y,KAAKyC,MACzCiW,OAAQ1Y,KAAK0Y,OAAUq9C,EAAOr9C,OAAS1Y,KAAKwC,SAC7CkyD,WAAWltD,SAEXysD,KC9LP+B,GAA6B,SAAUC,GAEvC,SAASD,EAAYhnD,EAAMD,EAAK4J,EAAOD,EAAQy7C,GAE3C,YADgC,IAA5BA,IAAsCA,GAA0B,GAC7D8B,EAAO56D,KAAK2E,KAAM,CAAEgP,KAAMA,EAAMD,IAAKA,EAAK4J,MAAOA,EAAOD,OAAQA,GAAUy7C,IAA4Bn0D,KAEjH,OALAoxD,GAAU4E,EAAaC,GAKhBD,GACT/B,ICPEiC,GAAiC,WACjC,SAASA,EAAgBjL,EAAOkL,EAAYC,EAAWC,EAAaC,GAChEt2D,KAAKu2D,WAAa,IAAI3D,GAAW0D,EAAU7zD,MAAO6zD,EAAU9zD,QAC5DxC,KAAKw2D,OAASvL,EACdjrD,KAAKy2D,YAAcN,EACnBn2D,KAAK02D,WAAaN,EAClBp2D,KAAKk0D,KAAO,IAAID,GAAIoC,GAAazB,QAAQ50D,KAAKu2D,YA6ClD,OA3CA3hE,OAAOkrC,eAAeo2B,EAAgBhF,UAAW,QAAS,CACtDt5B,IAAK,WAAc,OAAO53B,KAAKw2D,QAC/BxD,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAeo2B,EAAgBhF,UAAW,aAAc,CAC3Dt5B,IAAK,WAAc,OAAO53B,KAAKy2D,aAC/BzD,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAeo2B,EAAgBhF,UAAW,YAAa,CAC1Dt5B,IAAK,WAAc,OAAO53B,KAAK02D,YAC/B1D,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAeo2B,EAAgBhF,UAAW,MAAO,CACpDt5B,IAAK,WAAc,OAAO53B,KAAKk0D,MAC/BlB,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAeo2B,EAAgBhF,UAAW,YAAa,CAC1Dt5B,IAAK,WAAc,OAAO53B,KAAKu2D,YAC/BvD,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAeo2B,EAAgBhF,UAAW,aAAc,CAC3Dt5B,IAAK,WAAc,OAAO53B,KAAKs2D,UAAU7zD,OACzCuwD,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAeo2B,EAAgBhF,UAAW,cAAe,CAC5Dt5B,IAAK,WAAc,OAAO53B,KAAKs2D,UAAU9zD,QACzCwwD,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAeo2B,EAAgBhF,UAAW,cAAe,CAC5Dt5B,IAAK,WAAc,OAAO,IAAIq8B,GAAIj0D,KAAKk0D,MAAMU,QAAQ50D,KAAKs2D,UAAU7X,YACpEuU,YAAY,EACZ7jB,cAAc,IAElB+mB,EAAgBhF,UAAUyF,QAAU,SAAUl0D,EAAOD,GACjD,OAAO,IAAI0zD,EAAgBl2D,KAAKirD,MAAOjrD,KAAKm2D,WAAYn2D,KAAKo2D,UAAWp2D,KAAKq2D,YAAa,CAAE5zD,MAAOA,EAAOD,OAAQA,KAE/G0zD,KCnDPU,GAA+B,SAAUX,GAEzC,SAASW,EAAc3L,EAAOoL,EAAaC,GACvC,OAAOL,EAAO56D,KAAK2E,KAAMirD,EAAOA,EAAO,GAAIoL,EAAaC,IAAct2D,KAM1E,OARAoxD,GAAUwF,EAAeX,GAIzBW,EAAc1F,UAAUyF,QAAU,SAAUl0D,EAAOD,GAC/C,IAAI68B,EAAK42B,EAAO/E,UAAUyF,QAAQt7D,KAAK2E,KAAMyC,EAAOD,GACpD,OAAO,IAAIo0D,EAD0Dv3B,EAAG4rB,MAAqB5rB,EAAGg3B,YAAyBh3B,EAAGi3B,YAGzHM,GACTV,ICZK,SAASxK,GAAImL,EAAMC,EAAMC,QACd,IAAVA,IAAoBA,GAAQ,GAChC,IAEIC,EAFQ3wD,KAAKQ,IAAI,EAAKR,KAAKW,IAAI6vD,EAAKl+C,MAAOm+C,EAAKn+C,OAAStS,KAAKQ,IAAIgwD,EAAK7nD,KAAM8nD,EAAK9nD,OACzE3I,KAAKQ,IAAI,EAAKR,KAAKW,IAAI6vD,EAAKn+C,OAAQo+C,EAAKp+C,QAAUrS,KAAKQ,IAAIgwD,EAAK9nD,IAAK+nD,EAAK/nD,MAExF,OAAOgoD,EACDC,GAAgBH,EAAKI,KAAOH,EAAKG,KAAOD,GACxCA,EAAe3wD,KAAKW,IAAI6vD,EAAKI,KAAMH,EAAKG,MCN3C,SAAShN,GAAkB3B,EAAOqB,EAAQE,EAAckN,QAC7C,IAAVA,IAAoBA,GAAQ,GAmBhC,IAlBA,IAAIG,EAAuBvN,EACtB5rD,KAAI,SAAUktD,EAAOC,GAAY,OAAUD,MAAOA,EAAOC,SAAUA,MACnEp2C,MAAK,SAAUm4C,EAAIC,GAAM,OAAOD,EAAGhC,MAAQiC,EAAGjC,SAC9CltD,KAAI,SAAU5H,GAAK,OAAOA,EAAE+0D,YAC7BiM,EAAO,GACPC,EAAU,WACV,IAAIC,EAAOH,EAAqB96D,MAChC+6D,EAAK38D,KAAK68D,GAGV,IAFA,IAAInxD,EAAUgxD,EACV7jD,EAAU,GACLna,EAAI,EAAGA,EAAIgN,EAAQ/M,OAAQD,IAAK,CACrC,IAAIo+D,EAAMpxD,EAAQhN,GACdq+D,EAAUjP,EAAM+O,GAChBG,EAASlP,EAAMgP,GACnBjkD,EAAQ7Y,KAAKkxD,GAAI6L,EAASC,EAAQT,IAEtCG,EAAuBA,EAAqBl5D,QAAO,SAAU0S,EAAGxN,GAAK,OAAOmQ,EAAQnQ,IAAM2mD,MAEvFqN,EAAqB/9D,OAAS,GACjCi+D,IAEJ,OAAOD,ECtBJ,SAASzhD,GAAUhO,EAAG+vD,GACzB,OAAOC,IAAQ,WACX,IAAIz6D,EAAIw6D,EAAQ,GAAIrrD,EAAIqrD,EAAQ,GAAIpiE,EAAIoiE,EAAQ,GAC5CE,EAAQC,GAAQnF,GAAe/qD,EAAE+L,MAAMrY,MAAM,EAAG,GAAI,CAAC,IAAK6B,GAC1D46D,EAAQD,GAAQnF,GAAe/qD,EAAE+L,MAAMrY,MAAM,EAAG,GAAI,CAAC,IAAKgR,GAC1D0rD,EAAQF,GAAQnF,GAAe/qD,EAAE+L,MAAMrY,MAAM,EAAG,GAAI,CAAC,IAAK/F,GAC1D0iE,EAAUC,GAAU,CAACL,EAAOE,EAAOC,GAAQ,GAC/C,OAAOG,GAAOvwD,EAAGqwD,MCHlB,SAAStV,GAAQ/6C,GACpB,OAAO,GAAK,EAAIrB,KAAK2+C,KAAKt9C,ICL9B,ICGI6lC,GDHA2qB,GAAsB,SAAUjC,GAEhC,SAASiC,EAAKxwD,EAAGC,EAAGlF,EAAOD,EAAQ2xD,GAE/B,YADgC,IAA5BA,IAAsCA,GAA0B,GAC7D8B,EAAO56D,KAAK2E,KAAM,CAAE0H,EAAGA,EAAGC,EAAGA,EAAGlF,MAAOA,EAAOD,OAAQA,GAAU2xD,IAA4Bn0D,KAEvG,OALAoxD,GAAU8G,EAAMjC,GAKTiC,GACTjE,IEEEkE,GAA+B,WAC/B,SAASA,EAAcC,EAA+BC,EAAS7C,QAC7C,IAAVA,IAAoBA,EAAQ,IAAI7B,GAAM,EAAG,IAC7C,IAAIlxD,EAAQ41D,EAAQ51D,MAAOD,EAAS61D,EAAQ71D,OAC5CxC,KAAKs4D,SAAW,IAAI1F,GAAWnwD,EAAOD,GACtCxC,KAAKu4D,OAAS/C,EACdx1D,KAAKw4D,WAAaJ,EAA8Br6D,KAAI,SAAU21D,GAAM,OAAOA,EAAG1S,IAAI,IAAI2S,GAAMlxD,EAAOD,IAASjG,IAAIi5D,MAmFpH,OAjFA5gE,OAAOkrC,eAAeq4B,EAAcjH,UAAW,QAAS,CACpDt5B,IAAK,WAAc,OAAO,IAAI+7B,GAAM3zD,KAAKu4D,OAAO7wD,EAAG1H,KAAKu4D,OAAO5wD,IAC/DqrD,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAeq4B,EAAcjH,UAAW,aAAc,CACzDt5B,IAAK,WAAc,OAAO53B,KAAKs4D,SAAS71D,OACxCuwD,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAeq4B,EAAcjH,UAAW,cAAe,CAC1Dt5B,IAAK,WAAc,OAAO53B,KAAKs4D,SAAS91D,QACxCwwD,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAeq4B,EAAcjH,UAAW,YAAa,CACxDt5B,IAAK,WAAc,OAAO53B,KAAKw4D,YAC/BxF,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAeq4B,EAAcjH,UAAW,oBAAqB,CAChEt5B,IAAK,WACD,IAAI6gC,EAAQz4D,KACZ,OAAOA,KAAKw4D,WAAWz6D,KAAI,SAAU21D,GAAM,OAAOA,EAAG1N,IAAIyS,EAAMF,QAAQzX,IAAI,IAAI6S,GAAM8E,EAAMphD,WAAYohD,EAAMnhD,kBAEjH07C,YAAY,EACZ7jB,cAAc,IAElBgpB,EAAcjH,UAAUyF,QAAU,SAAUl0D,EAAOD,GAC/C,OAAO,IAAIxC,KAAK81B,YAAY91B,KAAK04D,kBAAmB,CAAEj2D,MAAOA,EAAOD,OAAQA,KAEhF21D,EAAcjH,UAAUyH,QAAU,SAAUjxD,EAAGC,GAC3C,OAAO,IAAI3H,KAAK81B,YAAY91B,KAAK04D,kBAAmB14D,KAAKs4D,SAAU,IAAI3E,GAAMjsD,EAAGC,KAEpFwwD,EAAcjH,UAAU0H,aAAe,SAAUlF,GAC7C,OAAO1zD,KAAK24D,QAAQjF,EAAGhsD,EAAGgsD,EAAG/rD,IAajCwwD,EAAcjH,UAAU2H,MAAQ,SAAUC,EAAWjhE,GAEjD,QADgB,IAAZA,IAAsBA,EAAU,IAChCihE,EAAW,CACX,IAAI1E,EAAM0E,aAAqBlC,GACzBkC,EAAU1E,IAAI9tD,QACd,IAAI2tD,GAAI6E,GACd,OAAO94D,KAAK24D,QAAQvE,EAAI1sD,EAAG0sD,EAAIzsD,GAAGkxD,MAAM,KAAMhhE,GAElD,IAAIwnC,EAAKzqC,OAAOka,OAAO,GAAI,CAAEiqD,kBAAkB,EAAOC,cAAe,IAAOnhE,GAAUkhE,EAAmB15B,EAAG05B,iBAAkBC,EAAgB35B,EAAG25B,cACjJ,OAAID,EACO/4D,KAAKi5D,YAETj5D,KAAKk5D,aAAaF,IAE7Bb,EAAcjH,UAAU+H,UAAY,WAChC,IAAIE,EAAUn5D,KAAKo5D,2BACfC,EAAgBF,EAAQ,GAAIG,EAAiBH,EAAQ,GAAII,EAAcJ,EAAQ,GAC/EK,EAAc,SAAU9F,GAAM,OAAO6F,EAAYvT,IAAI0N,GAAIK,aACzD0F,GAAkBD,EAAYH,GAAiBG,EAAYF,IAAmB,EAC9EhjE,EAAO+P,KAAKC,MAAMmzD,EA5Ef,KA6EHC,EAAWlG,GAAe2F,GAE1BzxD,EAAIrB,KAAKC,MAAMD,KAAKQ,IAAI,EAAG6yD,EAAShyD,EAjFrC,GAiFiDpR,IAChDqR,EAAItB,KAAKC,MAAMD,KAAKQ,IAAI,EAAG6yD,EAAS/xD,EAjFrC,IAiFiDrR,IACpD,OAAO,IAAI4hE,GAAKxwD,EAAGC,EAAGtB,KAAKW,IAAI1Q,EAAM0J,KAAKqX,WAAa3P,GAAIrB,KAAKW,IAAI1Q,EAAM0J,KAAKsX,YAAc3P,KAEjGwwD,EAAcjH,UAAUgI,aAAe,SAAUl1D,GAC7C,IC7FgByvD,EAChBpwD,EACAE,EACAo2D,EACAC,EACAC,EACAC,EDuFI1F,GC7FYX,ED6FEzzD,KAAK+5D,UC5FvB12D,EAAKowD,EAAI11D,KAAI,SAAU21D,GAAM,OAAOA,EAAGhsD,KACvCnE,EAAKkwD,EAAI11D,KAAI,SAAU21D,GAAM,OAAOA,EAAG/rD,KACvCgyD,EAAOt2D,EAAG8C,QAAO,SAAUa,EAAKU,GAAK,OAAOA,EAAIV,EAAMU,EAAIV,IAAQpD,EAAAA,GAClEg2D,EAAOr2D,EAAG4C,QAAO,SAAUa,EAAKW,GAAK,OAAOA,EAAIX,EAAMW,EAAIX,IAAQpD,EAAAA,GAClEi2D,EAAOx2D,EAAG8C,QAAO,SAAUU,EAAKa,GAAK,OAAOb,EAAMa,EAAIA,EAAIb,IAAQ,GAClEizD,EAAOv2D,EAAG4C,QAAO,SAAUU,EAAKc,GAAK,OAAOd,EAAMc,EAAIA,EAAId,IAAQ,GAC/D,IAAImvD,GAAY2D,EAAMC,EAAMC,EAAMC,IDuFrC,OAAO1F,EAAIv2B,IAAIu2B,EAAI3xD,MAAQuB,EAASowD,EAAI5xD,OAASwB,IAErDm0D,EAAcjH,UAAUkI,yBAA2B,WAC/C,MAAM,IAAIh/D,MAAM,2DAEb+9D,KEjGP6B,GAAgC,SAAU/D,GAE1C,SAAS+D,IACL,OAAkB,OAAX/D,GAAmBA,EAAOnvD,MAAM9G,KAAMwxD,YAAcxxD,KAU/D,OAZAoxD,GAAU4I,EAAgB/D,GAI1B+D,EAAe9I,UAAUkI,yBAA2B,WAChD,IAAI3F,EAAMzzD,KAAK+5D,UACf,MAAO,CACHtG,EAAI,GACJA,EAAI,GACJD,GAAe,CAACC,EAAI,GAAIA,EAAI,OAG7BuG,GACT7B,ICdE8B,GAAiC,SAAUhE,GAE3C,SAASgE,IACL,OAAkB,OAAXhE,GAAmBA,EAAOnvD,MAAM9G,KAAMwxD,YAAcxxD,KA8B/D,OAhCAoxD,GAAU6I,EAAiBhE,GAI3BgE,EAAgB/I,UAAUgJ,cAAgB,WACtC,OAAOl6D,KAAK+5D,UAAU3+D,MAAM,EAAG,KAEnC6+D,EAAgB/I,UAAUiJ,eAAiB,WACvC,OAAOn6D,KAAK+5D,UAAU3+D,MAAM,GAAI,KAEpC6+D,EAAgB/I,UAAUkJ,gBAAkB,WACxC,OAAOp6D,KAAK+5D,UAAU3+D,MAAM,GAAI,KAEpC6+D,EAAgB/I,UAAUmJ,QAAU,WAChC,OAAOr6D,KAAK+5D,UAAU3+D,MAAM,GAAI,KAEpC6+D,EAAgB/I,UAAUoJ,WAAa,WACnC,OAAOt6D,KAAK+5D,UAAU3+D,MAAM,GAAI,KAEpC6+D,EAAgB/I,UAAUqJ,YAAc,WACpC,OAAOv6D,KAAK+5D,UAAU3+D,MAAM,GAAI,KAEpC6+D,EAAgB/I,UAAUsJ,SAAW,WACjC,OAAOx6D,KAAK+5D,UAAU3+D,MAAM,GAAI,KAEpC6+D,EAAgB/I,UAAUkI,yBAA2B,WACjD,MAAO,CACHp5D,KAAKs6D,aACLt6D,KAAKu6D,cACLv6D,KAAKw6D,YACPz8D,IAAIy1D,KAEHyG,GACT9B,ICpCEsC,GAA2B,WAC3B,SAASA,EAAUxI,EAAOyI,GACtB16D,KAAK26D,OAAS1I,EACdjyD,KAAK46D,UAAYF,EAgBrB,OAdA9lE,OAAOkrC,eAAe26B,EAAUvJ,UAAW,QAAS,CAChDt5B,IAAK,WAAc,OAAO53B,KAAK26D,QAC/B3H,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAe26B,EAAUvJ,UAAW,WAAY,CACnDt5B,IAAK,WAAc,OAAO53B,KAAK46D,WAC/B5H,YAAY,EACZ7jB,cAAc,IAElBsrB,EAAUvJ,UAAUpoD,SAAW,SAAU+xD,GAErC,YADqB,IAAjBA,IAA2BA,GAAe,GAClC76D,KAAKiyD,OAAS4I,EAAe,KAAOrzD,GAAMxH,KAAK06D,UAAY,IAAM,KAE1ED,KCjBPK,GAA4B,SAAU7E,GAEtC,SAAS6E,EAAW1G,EAAKnC,GACrB,IAAIwG,EAAQxC,EAAO56D,KAAK2E,KAAMo0D,IAAQp0D,KAEtC,OADAy4D,EAAMkC,OAAS1I,EACRwG,EAaX,OAjBArH,GAAU0J,EAAY7E,GAMtB6E,EAAWC,wBAA0B,SAAU3G,EAAKK,GAEhD,GADAR,GAAIM,iBAAiBH,EAAKK,IACrB5B,GAAcuB,EAAInC,OACnB,MAAM,IAAI73D,MAAMq6D,EAAS,+BAAiCL,EAAInC,MAAQ,qBAG9Er9D,OAAOkrC,eAAeg7B,EAAW5J,UAAW,QAAS,CACjDt5B,IAAK,WAAc,OAAO53B,KAAK26D,QAC/B3H,YAAY,EACZ7jB,cAAc,IAEX2rB,GACT7G,ICtBE+G,GAAwC,WACxC,SAASA,EAAuB/I,EAAOgJ,GACnC,GAAuB,iBAAVhJ,EACT,MAAM,IAAI73D,MAAM,sEAEpB,IAAKoF,MAAMi1B,QAAQwmC,IAAgBA,EAAYpX,MAAK,SAAUqX,GAAQ,QAASA,aAAgBhmC,iBAC3F,MAAM,IAAI96B,MAAM,4FAEpB4F,KAAK26D,OAAS1I,EACdjyD,KAAKm7D,aAAeF,EAwBxB,OAtBArmE,OAAOkrC,eAAek7B,EAAuB9J,UAAW,QAAS,CAC7Dt5B,IAAK,WAAc,OAAO53B,KAAK26D,QAC/B3H,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAek7B,EAAuB9J,UAAW,cAAe,CACnEt5B,IAAK,WAAc,OAAO53B,KAAKm7D,cAC/BnI,YAAY,EACZ7jB,cAAc,IAElB6rB,EAAuB9J,UAAUkK,OAAS,WACtC,MAAO,CACHnJ,MAAOjyD,KAAKiyD,MACZgJ,YAAaj7D,KAAKi7D,YAAYl9D,KAAI,SAAUP,GAAK,OAAOgC,MAAMC,KAAKjC,QAG3Ew9D,EAAuBK,SAAW,SAAUC,GACxC,IAAIL,EAAcK,EAAKL,YAAYl9D,KAAI,SAAUP,GAC7C,OAAO,IAAI03B,aAAa13B,MAE5B,OAAO,IAAIw9D,EAAuBM,EAAKrJ,MAAOgJ,IAE3CD,MC9BuB,SAAU/E,GAExC,SAASsF,EAAanH,EAAKnC,EAAOhH,EAAOkL,GACrC,IAAIsC,EAAQxC,EAAO56D,KAAK2E,KAAMo0D,EAAKnC,IAAUjyD,KAG7C,OAFAy4D,EAAMjC,OAASvL,EACfwN,EAAMhC,YAAcN,EACbsC,EALXrH,GAAUmK,EAActF,GAOxBsF,EAAaC,0BAA4B,SAAUpH,EAAKK,GAEpD,GADAqG,GAAWC,wBAAwB3G,EAAKK,IACnCb,GAAmBQ,EAAInJ,SACpB2I,GAAmBQ,EAAI+B,YAC3B,MAAM,IAAI/7D,MAAMq6D,EAAS,iCAAmCL,EAAInJ,MAAQ,UAAYmJ,EAAI+B,WAAa,oCAG7GvhE,OAAOkrC,eAAey7B,EAAarK,UAAW,QAAS,CACnDt5B,IAAK,WAAc,OAAO53B,KAAKw2D,QAC/BxD,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAey7B,EAAarK,UAAW,aAAc,CACxDt5B,IAAK,WAAc,OAAO53B,KAAKy2D,aAC/BzD,YAAY,EACZ7jB,cAAc,KAGpB2rB,IC5BK,SAASW,GAAoBn7D,GAChC,OAAOA,EAAe,qBAAas2D,GAEhC,SAAS8E,GAAwBC,EAAW7C,GAC/C,IAAI8C,EAAY,CAAE9C,UAAWA,GAC7B,OAAOlkE,OAAOka,OAAO,GAAI6sD,EAAWC,GCNjC,SAASC,KACZ,IAAIpjB,EAAQjjD,OAAc,OAAK,WAC3B,MAAM,IAAI4E,MAAM,iEAKpB,MAAO,CACH0hE,OAAQC,kBACRC,yBAA0BA,yBAC1BnlD,MAAOopC,iBACPZ,UAAWA,UACX4c,MAAOjc,iBACPkc,oBAAqB,WAAc,OAAO/kE,SAASC,cAAc,WACjE+kE,mBAAoB,WAAc,OAAOhlE,SAASC,cAAc,QAChEqhD,MAAOA,EACP2jB,SAZW,WACX,MAAM,IAAIhiE,MAAM,iECLjB,SAASiiE,GAAiBC,GAC7B,IAAIC,EAAiB,GACrB,IAAKD,EACD,IACIA,EAAKtjB,QAAQ,MAEjB,MAAO9qC,GACHquD,EAAiBruD,EAAIpF,WAc7B,MAAO,CACHszD,SAZWE,EACT,SAAUE,GACR,OAAO,IAAI7gE,SAAQ,SAAUiqC,EAAK62B,GAC9BH,EAAGF,SAASI,GAAU,SAAUtuD,EAAK+wB,GACjC,OAAO/wB,EAAMuuD,EAAIvuD,GAAO03B,EAAI3G,UAItC,WACE,MAAM,IAAI7kC,MAAM,qEAAuEmiE,KCjB5F,SAASG,KACZ,IAAIZ,EAASv+C,OAAe,QAAKA,OAA0B,kBACvD1G,EAAQ0G,OAAc,OAAKA,OAAyB,iBAapDk7B,EAAQl7B,OAAc,OAAK,WAC3B,MAAM,IAAInjB,MAAM,gEAEhBuiE,EAAaN,KACjB,OAAO9K,GAAS,CAAEuK,OAAQA,GAClB,aAGEE,yBAA0Bz+C,OAAiC,0BAC7D,aAGE1G,MAAOA,GACT,aAGEwoC,UAAW9hC,OAAkB,WAC/B,aAGE0+C,MAAO1+C,OAAyB,kBAClC,aAGE2+C,oBApCgB,WACtB,GAAIJ,EACA,OAAO,IAAIA,EAEf,MAAM,IAAI1hE,MAAM,+EAiChB+hE,mBA/BqB,WACrB,GAAItlD,EACA,OAAO,IAAIA,EAEf,MAAM,IAAIzc,MAAM,6EA4BhBq+C,MAAOA,GAASkkB,GC3CjB,SAASC,KACZ,MAAyB,iBAAXpnE,QACa,oBAAb2B,UACqB,oBAArB8oD,kBACsB,oBAAtB8b,mBACqB,oBAArB/b,kBACc,oBAAdX,WAC6B,oBAA7B2c,yBCPX,SAASa,KACZ,MAAyB,iBAAXt/C,QACY,mBAAZy7B,SACW,oBAAX77B,QAGY,oBAAZ2b,WAA6BA,QAAQgkC,QdMvD,SAASC,GAAO3lC,GACZmW,GAAcnW,EAElB,SAAS4lC,KAGDJ,MACAG,GAAOlB,MAEPgB,MACAE,GAAOL,MAoBR,IexCIO,GfwCA7lC,GAAM,CACb8lC,OArCJ,WACI,IAAK3vB,GACD,MAAM,IAAInzC,MAAM,yEAEpB,OAAOmzC,IAkCPwvB,OAAQA,GACRC,WAAYA,GACZnB,iBAAkBA,GAClBQ,iBAAkBA,GAClBK,gBAAiBA,GACjBS,YAxBJ,SAAqB/lC,GAIjB,GAHKmW,IACDyvB,MAECzvB,GACD,MAAM,IAAInzC,MAAM,8EAEpB,IAAIilC,EAAKjI,EAAI0kC,OAAQA,OAAgB,IAAPz8B,EAAgBkO,GAAYuuB,OAASz8B,EAAI+9B,EAAKhmC,EAAIvgB,MAAOA,OAAe,IAAPumD,EAAgB7vB,GAAY12B,MAAQumD,EACnI7vB,GAAYuuB,OAASA,EACrBvuB,GAAY12B,MAAQA,EACpB02B,GAAY2uB,oBAAsB9kC,EAAI8kC,gCAAsC,OAAO,IAAIJ,GACvFvuB,GAAY4uB,mBAAqB/kC,EAAI+kC,+BAAqC,OAAO,IAAItlD,GACrF02B,GAAY8R,UAAYjoB,EAAIioB,WAAa9R,GAAY8R,UACrD9R,GAAY0uB,MAAQ7kC,EAAI6kC,OAAS1uB,GAAY0uB,MAC7C1uB,GAAYkL,MAAQrhB,EAAIqhB,OAASlL,GAAYkL,MAC7ClL,GAAY6uB,SAAWhlC,EAAIglC,UAAY7uB,GAAY6uB,UAUnDQ,UAAWA,GACXC,SAAUA,IgBlDP,SAASQ,GAAax9C,GACzB,OAAKuX,GAAIylC,YAA6B,iBAARh9C,EAGvBA,EAFI1oB,SAASs2B,eAAe5N,GCDhC,SAASy9C,GAAoBC,GAChC,IAAIl+B,EAAKjI,GAAI8lC,SAAUpB,EAASz8B,EAAGy8B,OACnC,GAAIyB,aADkEl+B,EAAG28B,yBAErE,OAAOuB,EAEX,IAAI3vD,EAASyvD,GAAaE,GAC1B,KAAM3vD,aAAkBkuD,GACpB,MAAM,IAAI1hE,MAAM,kEAEpB,IAAIyC,EAAM+Q,EAAOC,WAAW,MAC5B,IAAKhR,EACD,MAAM,IAAIzC,MAAM,gDAEpB,OAAOyC,EjBsCXmgE,KelDA,SAAWC,GACPA,EAAyB,SAAI,WAC7BA,EAA0B,UAAI,YAC9BA,EAA4B,YAAI,cAChCA,EAA6B,aAAI,eAJrC,CAKGA,KAAmBA,GAAiB,KACvC,IAAIO,GACA,SAA8B3lE,QACV,IAAZA,IAAsBA,EAAU,IACpC,IAAI4lE,EAAiB5lE,EAAQ4lE,eAAgBC,EAAkB7lE,EAAQ6lE,gBAAiBC,EAAY9lE,EAAQ8lE,UAAWC,EAAW/lE,EAAQ+lE,SAAUC,EAAYhmE,EAAQgmE,UAAW75D,EAAUnM,EAAQmM,QACrMhE,KAAKy9D,eAAiBA,GAAkBR,GAAea,SACvD99D,KAAK09D,gBAAkBA,GAAmB,qBAC1C19D,KAAK29D,UAAYA,GAAa,yBAC9B39D,KAAK49D,SAAWA,GAAY,GAC5B59D,KAAK69D,UAAYA,GAAa,UAC9B79D,KAAKgE,QAAUA,GAAW,GAK9B+5D,GAA+B,WAC/B,SAASA,EAAc1mE,EAAMT,EAAQiB,QACjB,IAAZA,IAAsBA,EAAU,IACpCmI,KAAK3I,KAAuB,iBAATA,EACb,CAACA,GACAA,aAAgB0mE,EAAgB1mE,EAAKA,KAAOA,EACnD2I,KAAKpJ,OAASA,EACdoJ,KAAKnI,QAAU,IAAI2lE,GAAqB3lE,GA4C5C,OA1CAkmE,EAAc7M,UAAU8M,aAAe,SAAUnhE,GAC7C,IAAImH,EAAUhE,KAAKnI,QAAQmM,QAC3B,OAAOhE,KAAK3I,KAAK0G,KAAI,SAAU6B,GAAK,OAAO/C,EAAIohE,YAAYr+D,GAAG6C,SAAU0D,QAAO,SAAU+3D,EAAIC,GAAM,OAAOD,EAAKC,EAAKA,EAAKD,IAAO,GAAM,EAAIl6D,GAE9I+5D,EAAc7M,UAAUkN,cAAgB,WACpC,IAAI/+B,EAAKr/B,KAAKnI,QAAS+lE,EAAWv+B,EAAGu+B,SAAU55D,EAAUq7B,EAAGr7B,QAC5D,OAAOhE,KAAK3I,KAAK8B,OAASykE,EAAY,EAAI55D,GAE9C+5D,EAAc7M,UAAUmN,aAAe,SAAUxhE,EAAKyhE,GAClD,IAAIb,EAAiBz9D,KAAKnI,QAAQ4lE,eAC9Bc,EAAcd,IAAmBR,GAAeuB,cAAgBf,IAAmBR,GAAewB,UAClGC,EAAajB,IAAmBR,GAAe0B,aAAelB,IAAmBR,GAAeuB,aAChGI,EAAiB5+D,KAAKg+D,aAAanhE,GACnCgiE,EAAkB7+D,KAAKo+D,gBACvB12D,EAAK62D,EAAcv+D,KAAKpJ,OAAO8Q,EAAIk3D,EAAiB5+D,KAAKpJ,OAAO8Q,EAChEC,EAAI+2D,EAAa1+D,KAAKpJ,OAAO+Q,EAAIk3D,EAAkB7+D,KAAKpJ,OAAO+Q,EAEnE,GAAI22D,EAAY,CACZ,IAAI77D,EAAQ67D,EAAW77D,MAAOD,EAAS87D,EAAW97D,OAGlD,MAAO,CAAEkF,EAFErB,KAAKQ,IAAIR,KAAKW,IAAIU,EAAGjF,EAAQm8D,GAAiB,GAEvCj3D,EADPtB,KAAKQ,IAAIR,KAAKW,IAAIW,EAAGnF,EAASq8D,GAAkB,IAG/D,MAAO,CAAEn3D,EAAGA,EAAGC,EAAGA,IAEtBo2D,EAAc7M,UAAU4N,KAAO,SAAUvB,GACrC,IAAI3vD,EAASyvD,GAAaE,GACtB1gE,EAAMygE,GAAoB1vD,GAC1ByxB,EAAKr/B,KAAKnI,QAAS6lE,EAAkBr+B,EAAGq+B,gBAAiBC,EAAYt+B,EAAGs+B,UAAWC,EAAWv+B,EAAGu+B,SAAUC,EAAYx+B,EAAGw+B,UAAW75D,EAAUq7B,EAAGr7B,QACtJnH,EAAIkiE,KAAOnB,EAAW,MAAQC,EAC9B,IAAImB,EAAeh/D,KAAKg+D,aAAanhE,GACjCoiE,EAAaj/D,KAAKo+D,gBACtBvhE,EAAIqiE,UAAYxB,EAChB,IAAIyB,EAAYn/D,KAAKq+D,aAAaxhE,EAAK+Q,GACvC/Q,EAAIuiE,SAASD,EAAUz3D,EAAGy3D,EAAUx3D,EAAGq3D,EAAcC,GACrDpiE,EAAIqiE,UAAYvB,EAChB39D,KAAK3I,KAAKrC,SAAQ,SAAUqqE,EAAUnmE,GAClC,IAAIwO,EAAI1D,EAAUm7D,EAAUz3D,EACxBC,EAAI3D,EAAUm7D,EAAUx3D,GAAMzO,EAAI,GAAK0kE,EAC3C/gE,EAAIyiE,SAASD,EAAU33D,EAAGC,OAG3Bo2D,KGvEPwB,GACA,SAAwB1nE,QACJ,IAAZA,IAAsBA,EAAU,IACpC,IAAI2nE,EAAW3nE,EAAQ2nE,SAAUC,EAAY5nE,EAAQ4nE,UAAWxN,EAAQp6D,EAAQo6D,MAAOyN,EAAmB7nE,EAAQ6nE,iBAClH1/D,KAAKw/D,SAAWA,GAAY,qBAC5Bx/D,KAAKy/D,UAAYA,GAAa,EAC9Bz/D,KAAKiyD,MAAQA,EACb,IAAI0N,EAA0B,CAC1BlC,eAAgBR,GAAe0B,YAC/BjB,gBAAiB19D,KAAKw/D,UAE1Bx/D,KAAK0/D,iBAAmB,IAAIlC,GAAqB5oE,OAAOka,OAAO,GAAI6wD,EAAyBD,KAKhGE,GAAyB,WACzB,SAASA,EAAQxL,EAAKv8D,QACF,IAAZA,IAAsBA,EAAU,IACpCmI,KAAKo0D,IAAM,IAAIH,GAAIG,GACnBp0D,KAAKnI,QAAU,IAAI0nE,GAAe1nE,GActC,OAZA+nE,EAAQ1O,UAAU4N,KAAO,SAAUvB,GAC/B,IAAI1gE,EAAMygE,GAAoBC,GAC1Bl+B,EAAKr/B,KAAKnI,QAAS2nE,EAAWngC,EAAGmgC,SAAUC,EAAYpgC,EAAGogC,UAC1DrC,EAAKp9D,KAAKo0D,IAAK1sD,EAAI01D,EAAG11D,EAAGC,EAAIy1D,EAAGz1D,EAAGlF,EAAQ26D,EAAG36D,MAAOD,EAAS46D,EAAG56D,OACrE3F,EAAIgjE,YAAcL,EAClB3iE,EAAI4iE,UAAYA,EAChB5iE,EAAIijE,WAAWp4D,EAAGC,EAAGlF,EAAOD,GAC5B,IAAIyvD,EAAQjyD,KAAKnI,QAAQo6D,MACrBA,GACA,IAAI8L,GAAc,CAAC9L,GAAQ,CAAEvqD,EAAGA,EAAK+3D,EAAY,EAAI93D,EAAGA,GAAK3H,KAAKnI,QAAQ6nE,kBAAkBZ,KAAKvB,IAGlGqC,KCpCJ,SAASG,GAAcC,GAC1B,IAAI3gC,EAAKjI,GAAI8lC,SAAUrmD,EAAQwoB,EAAGxoB,MAAOolD,EAAQ58B,EAAG48B,MACpD,OAAQ+D,aAAiBnpD,GAASmpD,EAAMC,UAChCD,aAAiB/D,GAAS+D,EAAM5f,YAAc,ECFnD,SAAS8f,GAAmBznE,GAC/B,IAAI4mC,EAAKjI,GAAI8lC,SAAUrmD,EAAQwoB,EAAGxoB,MAAOolD,EAAQ58B,EAAG48B,MACpD,OAAIxjE,aAAiBoe,EACV,IAAI+7C,GAAWn6D,EAAM0nE,aAAc1nE,EAAM2nE,eAEhD3nE,aAAiBwjE,EACV,IAAIrJ,GAAWn6D,EAAM4nD,WAAY5nD,EAAM6nD,aAE3C,IAAIsS,GAAWn6D,EAAMgK,MAAOhK,EAAM+J,QCNtC,SAAS69D,GAAahhC,GACzB,IAAI58B,EAAQ48B,EAAG58B,MAAOD,EAAS68B,EAAG78B,OAE9BoL,GAASsuD,EADa9kC,GAAI8lC,SAAShB,uBAIvC,OAFAtuD,EAAOnL,MAAQA,EACfmL,EAAOpL,OAASA,EACToL,EAEJ,SAAS0yD,GAAsBN,EAAOO,GACzC,IAAIlhB,EAAYjoB,GAAI8lC,SAAS7d,UAC7B,KAAM2gB,aAAiB3gB,GAAe0gB,GAAcC,IAChD,MAAM,IAAI5lE,MAAM,8DAEpB,IAAIilC,EAAKkhC,GAAQL,GAAmBF,GAAQv9D,EAAQ48B,EAAG58B,MAAOD,EAAS68B,EAAG78B,OACtEoL,EAASyyD,GAAa,CAAE59D,MAAOA,EAAOD,OAAQA,IAOlD,OANIw9D,aAAiB3gB,EACjBie,GAAoB1vD,GAAQ4M,aAAawlD,EAAO,EAAG,GAGnD1C,GAAoB1vD,GAAQE,UAAUkyD,EAAO,EAAG,EAAGv9D,EAAOD,GAEvDoL,ECrBJ,SAAS4yD,GAAoBC,EAAW7yD,GAC3C,OAAO6jD,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAI0gE,EAAcrhC,EAAI78B,EAAQC,EAAOg9C,EAAakhB,EAClD,OAAO3O,GAAYhyD,MAAM,SAAUo9D,GAC/B,OAAQA,EAAGnL,OACP,KAAK,EAID,OAHAyO,EAAe9yD,GAAUwpB,GAAI8lC,SAAShB,sBACtC78B,EAAKohC,EAAUhtD,MAAMrY,MAAMg4D,GAAWqN,GAAa,EAAI,GAAIj+D,EAAS68B,EAAG,GAAI58B,EAAQ48B,EAAG,GAAIogB,EAAcpgB,EAAG,GAEpG,CAAC,EAAauhC,GADrBD,EAAcjJ,IAAQ,WAAc,OAAO+I,EAAUI,KAAKr+D,EAAQC,EAAOg9C,GAAaqhB,WAChCJ,IAC1D,KAAK,EAGD,OAFAtD,EAAGlL,OACHyO,EAAYt9B,UACL,CAAC,EAAcq9B,UChBnC,SAASK,GAAetoE,GAC3B,IAAI4mC,EAAKjI,GAAI8lC,SAAUrmD,EAAQwoB,EAAGxoB,MAAOilD,EAASz8B,EAAGy8B,OAAQG,EAAQ58B,EAAG48B,MACxE,OAAOxjE,aAAiBoe,GACjBpe,aAAiBqjE,GACjBrjE,aAAiBwjE,ECC5B,IAAI+E,GAA0B,WAC1B,SAASA,EAAS7lC,EAAQ8lC,GACtB,IAAIxI,EAAQz4D,KAMZ,QAL0B,IAAtBihE,IAAgCA,GAAoB,GACxDjhE,KAAKkhE,cAAgB,GACrBlhE,KAAKmhE,UAAY,GACjBnhE,KAAKohE,oBAAqB,EAC1BphE,KAAKqhE,iBAAmB,IACnB7hE,MAAMi1B,QAAQ0G,GACf,MAAM,IAAI/gC,MAAM,4HAA8H+gC,GAElJn7B,KAAKohE,mBAAqBH,EAC1BjhE,KAAKshE,WAAanmC,EAAOhiC,OACzBgiC,EAAOnmC,SAAQ,SAAUyD,EAAO6+D,GAC5B,GAAInE,GAAW16D,GAGX,OAFAggE,EAAMyI,cAAc5J,GAAO7+D,OAC3BggE,EAAM4I,iBAAiB/J,GAAO7+D,EAAMgb,OAGxC,GAAI2/C,GAAW36D,GAAQ,CACnB,IAAI8oE,EAAY9oE,EAAMgb,MAAM,GAC5B,GAAkB,IAAd8tD,EACA,MAAM,IAAInnE,MAAM,yCAA2CmnE,EAAY,6CAI3E,OAFA9I,EAAMyI,cAAc5J,GAAO7+D,OAC3BggE,EAAM4I,iBAAiB/J,GAAO7+D,EAAMgb,MAAMrY,MAAM,IAGpD,IAAIwS,EAASnV,aAAiB2+B,GAAI8lC,SAASpB,OAASrjE,EAAQ6nE,GAAsB7nE,GAClFggE,EAAM0I,UAAU7J,GAAO1pD,EACvB6qD,EAAM4I,iBAAiB/J,GAAO,CAAC1pD,EAAOpL,OAAQoL,EAAOnL,MAAO,MA0GpE,OAvGA7N,OAAOkrC,eAAekhC,EAAS9P,UAAW,eAAgB,CACtDt5B,IAAK,WACD,OAAO53B,KAAKkhE,eAEhBlO,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAekhC,EAAS9P,UAAW,WAAY,CAClDt5B,IAAK,WACD,OAAO53B,KAAKmhE,WAEhBnO,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAekhC,EAAS9P,UAAW,eAAgB,CACtDt5B,IAAK,WACD,OAAO53B,KAAKuhE,UAAY,GAAKvhE,KAAKohE,oBAEtCpO,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAekhC,EAAS9P,UAAW,YAAa,CACnDt5B,IAAK,WACD,OAAO53B,KAAKshE,YAEhBtO,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAekhC,EAAS9P,UAAW,kBAAmB,CACzDt5B,IAAK,WACD,OAAO53B,KAAKqhE,kBAEhBrO,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAekhC,EAAS9P,UAAW,YAAa,CACnDt5B,IAAK,WACD,OAAO53B,KAAKwhE,YAEhBxO,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAekhC,EAAS9P,UAAW,0BAA2B,CACjEt5B,IAAK,WACD,IAAI6gC,EAAQz4D,KACZ,OAAOiH,GAAMjH,KAAKuhE,UAAW,EAAG,GAAGxjE,KAAI,SAAU2S,EAAG+wD,GAAY,OAAOhJ,EAAMiJ,2BAA2BD,OAE5GzO,YAAY,EACZ7jB,cAAc,IAElB6xB,EAAS9P,UAAUyQ,SAAW,SAAUF,GACpC,OAAOzhE,KAAK4hE,SAASH,IAAazhE,KAAK6hE,aAAaJ,IAExDT,EAAS9P,UAAU4Q,mBAAqB,SAAUL,GAC9C,OAAOzhE,KAAKqhE,iBAAiBI,IAEjCT,EAAS9P,UAAU6Q,eAAiB,SAAUN,GAC1C,OAAOzhE,KAAKqhE,iBAAiBI,GAAU,IAE3CT,EAAS9P,UAAU8Q,cAAgB,SAAUP,GACzC,OAAOzhE,KAAKqhE,iBAAiBI,GAAU,IAE3CT,EAAS9P,UAAUwQ,2BAA6B,SAAUD,GACtD,GAA8B,iBAAnBzhE,KAAKiiE,UACZ,MAAM,IAAI7nE,MAAM,yFAIpB,OnC3ED,SAAmCilC,EAAI4iC,GAC1C,IAAIx/D,EAAQ48B,EAAG58B,MAAOD,EAAS68B,EAAG78B,OAC9B0U,EAAQ+qD,EAAY57D,KAAKQ,IAAIrE,EAAQC,GACzC,OAAO,IAAImwD,GAAWvsD,KAAKmB,MAAM/E,EAAQyU,GAAQ7Q,KAAKmB,MAAMhF,EAAS0U,ImCwE1DgrD,CAA0B,CAAEz/D,MAFvBzC,KAAKgiE,cAAcP,GAEkBj/D,OADpCxC,KAAK+hE,eAAeN,IACkCzhE,KAAKiiE,YAW5EjB,EAAS9P,UAAUiR,cAAgB,SAAUF,EAAWG,GACpD,IAAI3J,EAAQz4D,KAGZ,YAFuB,IAAnBoiE,IAA6BA,GAAiB,GAClDpiE,KAAKwhE,WAAaS,EACXvK,IAAQ,WACX,IAAI2K,EAAep7D,GAAMwxD,EAAM8I,UAAW,EAAG,GAAGxjE,KAAI,SAAU0jE,GAC1D,IAAIhpE,EAAQggE,EAAMkJ,SAASF,GAC3B,GAAIhpE,aAAiBy6D,GAAW,CAC5B,IAAIuN,EAAYrN,GAAW36D,GAASA,EAAQA,EAAMysD,aAKlD,OAJAub,ECtHb,SAAqBA,EAAW6B,GAEnC,YADsB,IAAlBA,IAA4BA,GAAgB,GACzC5K,IAAQ,WACX,IAAIr4B,EAAKohC,EAAUhtD,MAAMrY,MAAM,GAAIoH,EAAS68B,EAAG,GAAI58B,EAAQ48B,EAAG,GAC9D,GAAI78B,IAAWC,EACX,OAAOg+D,EAEX,IAAI8B,EAAUl8D,KAAKa,IAAI1E,EAASC,GAC5B+/D,EAAgBn8D,KAAKmB,MAAM+6D,GAAWD,EAAgB,GAAM,IAC5DG,EAAcjgE,EAASC,EAAQ,EAAI,EACnCigE,EAAsB,SAAUF,GAChC,IAAIG,EAAqBlC,EAAUhtD,MAAMrY,QAEzC,OADAunE,EAAmBF,GAAeD,EAC3B5K,GAAQ+K,EAAoB,IAEnCC,EAAsBF,EAAoBF,GAC1CK,EAAyBN,EAAUK,EAAoBnvD,MAAMgvD,GAI7DK,EAAiB,CAHMR,GAAiBO,EACtCH,EAAoBG,GACpB,KAGFpC,EACAmC,GAEC5kE,QAAO,SAAUiS,GAAK,QAASA,KAC/BlS,KAAI,SAAUkS,GAAK,OAAOA,EAAE8yD,aACjC,OAAO/K,GAAU8K,EAAgBL,MD2FTO,CAAYvC,EAAW2B,IACrB3uD,MAAM,KAAOwuD,GAAaxB,EAAUhtD,MAAM,KAAOwuD,IAC3DxB,EAAYwC,GAAS9U,eAAesS,EAAW,CAACwB,EAAWA,KAExDxB,EAAUI,KAAKoB,EAAWA,EAAW,GAEhD,GAAIxpE,aAAiB2+B,GAAI8lC,SAASpB,OAC9B,OAAOoH,GElIpB,SAAuBzqE,EAAOwpE,EAAWkB,QACxB,IAAhBA,IAA0BA,GAAc,GAC5C,IAAI9jC,EAAKjI,GAAI8lC,SAAUrmD,EAAQwoB,EAAGxoB,MAAOilD,EAASz8B,EAAGy8B,OACrD,KAAMrjE,aAAiBoe,GAASpe,aAAiBqjE,GAC7C,MAAM,IAAI1hE,MAAM,4EAEpB,IAAImmE,EAAOL,GAAmBznE,GAC1Bye,EAAQ+qD,EAAY57D,KAAKQ,IAAI05D,EAAK/9D,OAAQ+9D,EAAK99D,OAC/CA,EAAQyU,EAAQqpD,EAAK99D,MACrBD,EAAS0U,EAAQqpD,EAAK/9D,OACtBk+D,EAAeL,GAAa,CAAE59D,MAAOw/D,EAAWz/D,OAAQy/D,IACxDmB,EAAc3qE,aAAiBqjE,EAASrjE,EAAQ6nE,GAAsB7nE,GACtEsX,EAAS1J,KAAKa,IAAIzE,EAAQD,GAAU,EACpC+pC,EAAK42B,GAAe1gE,EAAQD,EAASuN,EAAS,EAC9Cq2B,EAAK+8B,GAAe3gE,EAASC,EAAQsN,EAAS,EAElD,OADAutD,GAAoBoD,GAAc5yD,UAAUs1D,EAAa72B,EAAInG,EAAI3jC,EAAOD,GACjEk+D,EFkHsC2C,CAAc5qE,EAAOwpE,EAAWG,IAEjE,MAAM,IAAIhoE,MAAM,+BAAiCqnE,EAAW,6FAA+FhpE,MAG/J,OADkB6qE,GAASjB,EAAatkE,KAAI,SAAUkS,GAAK,OAAOA,EAAE8yD,cAAeQ,KAAK9K,EAAM8I,UAAWU,EAAWA,EAAW,OAIhIjB,KGjIJ,SAASwC,GAAWroC,GACvB,OAAOs2B,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIyjE,EAAeC,EAAYC,EAC/B,OAAO3R,GAAYhyD,MAAM,SAAUq/B,GAC/B,OAAQA,EAAG4yB,OACP,KAAK,EACD,GAAI92B,aAAkB6lC,GAClB,MAAO,CAAC,EAAc7lC,GAK1B,KAHAsoC,EAAgBjkE,MAAMi1B,QAAQ0G,GACxBA,EACA,CAACA,IACYhiC,OACf,MAAM,IAAIiB,MAAM,4CAoBpB,OAlBAspE,EAAa,SAAUpM,GAAO,OAAO93D,MAAMi1B,QAAQ0G,GAAU,mBAAqBm8B,EAAM,IAAM,KAC9FqM,EAAaF,EAAc1lE,IAAIs/D,KACpBroE,SAAQ,SAAUyD,EAAOS,GAChC,IAAK6nE,GAAetoE,KAAW06D,GAAW16D,KAAW26D,GAAW36D,GAAQ,CACpE,GAAgC,iBAArBgrE,EAAcvqE,GACrB,MAAM,IAAIkB,MAAM,eAAiBspE,EAAWxqE,GAAK,oEAAsEuqE,EAAcvqE,IAEzI,MAAM,IAAIkB,MAAM,eAAiBspE,EAAWxqE,GAAK,+HAErD,GAAIk6D,GAAW36D,GAAQ,CAEnB,IAAI8oE,EAAY9oE,EAAMgb,MAAM,GAC5B,GAAkB,IAAd8tD,EACA,MAAM,IAAInnE,MAAM,eAAiBspE,EAAWxqE,GAAK,+BAAiCqoE,EAAY,iDAKnG,CAAC,EAAa5lE,QAAQsgC,IAAI0nC,EAAW5lE,KAAI,SAAUtF,GAAS,OAAOsoE,GAAetoE,KC5C5EunE,ED4CuGvnE,EC3C7H,IAAIkD,SAAQ,SAAUC,EAAS8a,GAClC,GAAIspD,aAAiB5oC,GAAI8lC,SAASpB,QAAUiE,GAAcC,GACtD,OAAOpkE,IAEX,SAASgoE,EAAO5oE,GACPA,EAAE6oE,gBAEP7oE,EAAE6oE,cAAc9rE,oBAAoB,OAAQ6rE,GAC5C5oE,EAAE6oE,cAAc9rE,oBAAoB,QAAS+rE,GAC7CloE,EAAQZ,IAEZ,SAAS8oE,EAAQ9oE,GACRA,EAAE6oE,gBAEP7oE,EAAE6oE,cAAc9rE,oBAAoB,OAAQ6rE,GAC5C5oE,EAAE6oE,cAAc9rE,oBAAoB,QAAS+rE,GAC7CptD,EAAO1b,IAEXglE,EAAMloE,iBAAiB,OAAQ8rE,GAC/B5D,EAAMloE,iBAAiB,QAASgsE,OApBjC,IAA0B9D,OD6CjB,KAAK,EAGD,OADA3gC,EAAG6yB,OACI,CAAC,EAAc,IAAI8O,GAAS2C,EAAYnkE,MAAMi1B,QAAQ0G,YEpC1E,SAAS4oC,GAAatrE,EAAOurE,GAChC,OAAOvS,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAI87D,EAAQluD,EAAQq2D,EAAUC,EAAgB7kC,EAAIxiC,EAClD,OAAOm1D,GAAYhyD,MAAM,SAAUo9D,GAC/B,OAAQA,EAAGnL,OACP,KAAK,EAGD,OAFA6J,EAAS1kC,GAAI8lC,SAASpB,OACtBluD,EAASnV,EACFA,aAAiBqjE,EAAgB,CAAC,EAAa,GAC/C,CAAC,EAAa0H,GAAW/qE,IACpC,KAAK,EAED,IADAwrE,EAAW7G,EAAGlL,QACDqP,UAAY,EACrB,MAAM,IAAInnE,MAAM,8CAGpB,OADA8pE,EAAiBD,EAAStC,SAAS,cACH7F,GAChCz8B,EAAK6kC,EACE,CAAC,EAAa,IAF2B,CAAC,EAAa,GAGlE,KAAK,EAAG,MAAO,CAAC,EAAa1D,GAAoB0D,IACjD,KAAK,EACD7kC,EAAK+9B,EAAGlL,OACRkL,EAAGnL,MAAQ,EACf,KAAK,EACDrkD,EAASyxB,EACT+9B,EAAGnL,MAAQ,EACf,KAAK,EAMD,OALAp1D,EAAMygE,GAAoB1vD,GAKnB,CAAC,EAJAo2D,EAAWjmE,KAAI,SAAUomE,GAAO,OAAOA,aAAevN,GACxDuN,EAAIxN,QAAQ/oD,EAAOnL,MAAOmL,EAAOpL,QAAQ4xD,IAAI9tD,QAC7C69D,KACDpmE,KAAI,SAAUq2D,GAAO,OAAOA,EAAIa,mBAAmBrnD,EAAOnL,MAAOmL,EAAOpL,WACjDzE,KAAI,SAAUshC,GAClC,IAAI33B,EAAI23B,EAAG33B,EAAGC,EAAI03B,EAAG13B,EAAGlF,EAAQ48B,EAAG58B,MAAOD,EAAS68B,EAAG78B,OAClD4hE,EAAU/D,GAAa,CAAE59D,MAAOA,EAAOD,OAAQA,IAGnD,OAFA86D,GAAoB8G,GACf5pD,aAAa3d,EAAIkR,aAAarG,EAAGC,EAAGlF,EAAOD,GAAS,EAAG,GACrD4hE,aCrC5B,SAASC,GAAmBvmB,EAAakmB,GAC5C,OAAOvS,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,OAAOgyD,GAAYhyD,MAAM,SAAUq/B,GAC/B,IAAK8zB,GAAWrV,KAAiBsV,GAAWtV,GACxC,MAAM,IAAI1jD,MAAM,6DAEpB,GAAIg5D,GAAWtV,IAAgBA,EAAYrqC,MAAM,GAAK,EAClD,MAAM,IAAIrZ,MAAM,oDAEpB,MAAO,CAAC,EAAcs9D,IAAQ,WACtB,IAAIr4B,EAAKye,EAAYrqC,MAAMrY,MAAMg4D,GAAWtV,GAAe,EAAI,GAAIqX,EAAY91B,EAAG,GAAI61B,EAAW71B,EAAG,GAAIogB,EAAcpgB,EAAG,GASzH,OARY2kC,EAAWjmE,KAAI,SAAUomE,GAAO,OAAOA,aAAevN,GAC5DuN,EAAIxN,QAAQzB,EAAUC,GAAWf,IACjC+P,KACDpmE,KAAI,SAAUq2D,GAAO,OAAOA,EAAIa,mBAAmBC,EAAUC,MAC1Cp3D,KAAI,SAAUshC,GAClC,IAAI33B,EAAI23B,EAAG33B,EAAGC,EAAI03B,EAAG13B,EAAGlF,EAAQ48B,EAAG58B,MAAOD,EAAS68B,EAAG78B,OACtD,OAAO8hE,GAAWxmB,EAAY+iB,KAAK1L,EAAWD,EAAUzV,GAAc,CAAC93C,EAAGD,EAAG,GAAI,CAAClF,EAAQC,EAAOg9C,iBC7BlH,SAAS8kB,GAAav2D,EAAK1P,GAC9B,OAAOmzD,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAW4lC,EACX,OAAOosB,GAAYhyD,MAAM,SAAUq/B,GAC/B,OAAQA,EAAG4yB,OACP,KAAK,EAED,MAAO,CAAC,GADRxZ,EAAQrhB,GAAI8lC,SAASzkB,OACMzqC,EAAK1P,IACpC,KAAK,EAED,MADAsnC,EAAMvG,EAAG6yB,QACCsS,OAAS,KACf,MAAM,IAAIpqE,MAAM,qBAAuBwrC,EAAI4+B,OAAS,KAAO5+B,EAAI6+B,WAAa,eAAiB7+B,EAAI53B,KAErG,MAAO,CAAC,EAAc43B,UCbnC,SAAS8+B,GAAUC,GACtB,OAAOlT,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,OAAOgyD,GAAYhyD,MAAM,SAAUq/B,GAC/B,OAAQA,EAAG4yB,OACP,KAAK,EAAG,MAAO,CAAC,EAAasS,GAAaI,IAC1C,KAAK,EAAG,MAAO,CAAC,EAAetlC,EAAG6yB,OAAQoJ,eCPnD,SAASsJ,GAAaD,EAAKE,GAC9B,IAAIC,EAA0BD,EAAmB,yBACjD,IAAKF,EACD,MAAO,CACHI,aAAc,GACdC,YAAaF,GAGrB,GAAY,MAARH,EACA,MAAO,CACHI,aAAc,IACdC,YAAa,IAAMF,GAG3B,IAAIG,EAAWN,EAAIvvB,WAAW,WAAa,UAAYuvB,EAAIvvB,WAAW,YAAc,WAAa,GAE7F8vB,GADJP,EAAMA,EAAI57D,QAAQk8D,EAAU,KACZhtC,MAAM,KAAKj6B,QAAO,SAAUyF,GAAK,OAAOA,KACpD0hE,EAAeR,EAAI11B,SAAS,SAC1Bi2B,EAAMA,EAAM/rE,OAAS,GACrB2rE,EACFC,EAAeE,GAAYN,EAAI11B,SAAS,SAAWi2B,EAAM9pE,MAAM,EAAG8pE,EAAM/rE,OAAS,GAAK+rE,GAAOzsC,KAAK,KAEtG,MAAO,CACHssC,aAFJA,EAAeJ,EAAIvvB,WAAW,KAAO,IAAM2vB,EAAeA,EAGtDC,YAA8B,MAAjBD,EAAuB,IAAMI,EAAeJ,EAAe,IAAMI,GCpB/E,SAASC,GAAcT,EAAKE,GAC/B,OAAOpT,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIq/B,EAAI2lC,EAAaD,EACrB,OAAO/S,GAAYhyD,MAAM,SAAUo9D,GAC/B,OAAQA,EAAGnL,OACP,KAAK,EAED,OADA5yB,EAAKulC,GAAaD,EAAKE,GAAmBG,EAAc3lC,EAAG2lC,YAAaD,EAAe1lC,EAAG0lC,aACnF,CAAC,EAAaL,GAAUM,IACnC,KAAK,EAED,MAAO,CAAC,EAAcK,GADXjI,EAAGlL,OACoC6S,WCTtE,IAAIO,GAA+B,WAC/B,SAASA,EAAcC,GACnBvlE,KAAKulE,MAAQA,EACbvlE,KAAKwlE,aAAU7rE,EACfqG,KAAKylE,eAAiB,GAmK1B,OAjKA7wE,OAAOkrC,eAAewlC,EAAcpU,UAAW,SAAU,CACrDt5B,IAAK,WAAc,OAAO53B,KAAKwlE,SAC/BxS,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAewlC,EAAcpU,UAAW,gBAAiB,CAC5Dt5B,IAAK,WAAc,OAAO53B,KAAKylE,gBAC/BzS,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAewlC,EAAcpU,UAAW,WAAY,CACvDt5B,IAAK,WAAc,QAAS53B,KAAKs4B,QACjC06B,YAAY,EACZ7jB,cAAc,IAElBm2B,EAAcpU,UAAUwU,iBAAmB,SAAUC,GACjD,IAAItmC,EAAKr/B,KAAK4lE,qBAAqBD,GACnC,OADqDtmC,EAAG/+B,IAAe++B,EAAGwmC,UAG9EP,EAAcpU,UAAU4U,sBAAwB,SAAUH,EAAW19B,GACjE,IAAI5I,EAAKr/B,KAAK4lE,qBAAqBD,GAAYrlE,EAAM++B,EAAG/+B,IAAKulE,EAAUxmC,EAAGwmC,QAC1EvlE,EAAIulE,GAASxiC,UACb/iC,EAAIulE,GAAW59B,GAEnBq9B,EAAcpU,UAAU6U,aAAe,WACnC,IAAItN,EAAQz4D,KACZ,OAAOA,KAAKylE,eAAe1nE,KAAI,SAAUshC,GACrC,IAAIsmC,EAAYtmC,EAAGsmC,UACnB,OACIjwB,KAAMiwB,EACN19B,OAAQwwB,EAAMiN,iBAAiBC,QAI3CL,EAAcpU,UAAU8U,mBAAqB,WACzC,OAAOhmE,KAAK+lE,eAAe/nE,QAAO,SAAUmjD,GAAS,OAAOA,EAAMlZ,kBAAkBg+B,OAExFX,EAAcpU,UAAUgV,gBAAkB,WACtC,OAAOlmE,KAAK+lE,eAAe/nE,QAAO,SAAUmjD,GAAS,QAASA,EAAMlZ,kBAAkBg+B,QAE1FX,EAAcpU,UAAUiV,SAAW,WAC/B,IAAI1N,EAAQz4D,KACZA,KAAKkmE,kBAAkBlxE,SAAQ,SAAUqqC,GACrC,IAAIqW,EAAOrW,EAAGqW,KAAMzN,EAAS5I,EAAG4I,OAChCwwB,EAAMqN,sBAAsBpwB,EAAMzN,EAAOk+B,gBAGjDb,EAAcpU,UAAUkV,OAAS,WAC7B,IAAI3N,EAAQz4D,KACZA,KAAKgmE,qBAAqBhxE,SAAQ,SAAUqqC,GACxC,IAAIqW,EAAOrW,EAAGqW,KAAMywB,EAAW9mC,EAAG4I,OAC9BA,EAASo+B,GAAUF,EAAS3qC,YAChC2qC,EAAS9iC,UACTo1B,EAAMqN,sBAAsBpwB,EAAMzN,OAG1Cq9B,EAAcpU,UAAU7tB,QAAU,SAAUijC,QACf,IAArBA,IAA+BA,GAAmB,GACtDtmE,KAAK+lE,eAAe/wE,SAAQ,SAAUmsD,GAClC,GAAImlB,GAAoBnlB,EAAMlZ,OAAOzI,WACjC,MAAM,IAAIplC,MAAM,mDAAqD+mD,EAAMzL,MAE/EyL,EAAMlZ,OAAO5E,aAEjBrjC,KAAKwlE,aAAU7rE,GAEnB2rE,EAAcpU,UAAUqV,gBAAkB,WACtC,OAAO,IAAIrxC,aAAal1B,KAAK+lE,eACxBhoE,KAAI,SAAUshC,GACf,IAAI4I,EAAS5I,EAAG4I,OAChB,OAAOzoC,MAAMC,KAAKwoC,EAAOzM,eAExBr1B,QAAO,SAAUqgE,EAAMzwD,GAAO,OAAOywD,EAAK5gD,OAAO7P,QAE1DuvD,EAAcpU,UAAUuV,KAAO,SAAUC,GACrC,OAAOjV,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,OAAOgyD,GAAYhyD,MAAM,SAAUq/B,GAC/B,OAAQA,EAAG4yB,OACP,KAAK,EACD,OAAIyU,aAAwBxxC,cACxBl1B,KAAK2mE,eAAeD,GACb,CAAC,IAEL,CAAC,EAAa1mE,KAAK4mE,YAAYF,IAC1C,KAAK,EAED,OADArnC,EAAG6yB,OACI,CAAC,WAK5BoT,EAAcpU,UAAU0V,YAAc,SAAUjC,GAC5C,OAAOlT,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAI6mE,EACJ,OAAO7U,GAAYhyD,MAAM,SAAUq/B,GAC/B,OAAQA,EAAG4yB,OACP,KAAK,EACD,GAAI0S,GAAsB,iBAARA,EACd,MAAM,IAAIvqE,MAAM4F,KAAKulE,MAAQ,qCAEjC,MAAO,CAAC,EAAaH,GAAcT,EAAK3kE,KAAK8mE,wBACjD,KAAK,EAGD,OAFAD,EAAYxnC,EAAG6yB,OACflyD,KAAK+mE,kBAAkBF,GAChB,CAAC,WAK5BvB,EAAcpU,UAAU8V,aAAe,SAAUxK,GAC7C,OAAO/K,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIo8D,EAAU/8B,EAAI2lC,EAAaD,EAAoC3qB,EAAaC,EAAU+iB,EAAI6J,EAAIJ,EAClG,OAAO7U,GAAYhyD,MAAM,SAAUknE,GAC/B,OAAQA,EAAGjV,OACP,KAAK,EACD,GAAIuK,GAAgC,iBAAbA,EACnB,MAAM,IAAIpiE,MAAM4F,KAAKulE,MAAQ,4CAOjC,OALAnJ,EAAWhlC,GAAI8lC,SAASd,SACxB/8B,EAAKulC,GAAapI,EAAUx8D,KAAK8mE,uBAAwB9B,EAAc3lC,EAAG2lC,YAAaD,EAAe1lC,EAAG0lC,aAEzG3qB,EAAc+sB,IADS,SAAUC,GAAa,OAAOzrE,QAAQsgC,IAAImrC,EAAUrpE,KAAI,SAAUy+D,GAAY,OAAOJ,EAASI,GAAUp+D,MAAK,SAAU24C,GAAO,OAAOA,EAAI9X,iBAEhKgoC,GAAM7J,EAAK/rB,MAAMoG,MACV,CAAC,EAAa2kB,EAAS4I,IAClC,KAAK,EAED,OADA3qB,EAAW4sB,EAAGngE,MAAMs2D,EAAI,CAAE8J,EAAGhV,OAAQppD,aAC9B,CAAC,EAAasxC,EAAYC,EAAU0qB,IAC/C,KAAK,EAGD,OAFA8B,EAAYK,EAAGhV,OACflyD,KAAK+mE,kBAAkBF,GAChB,CAAC,WAK5BvB,EAAcpU,UAAU6V,kBAAoB,SAAUF,GAClD,IAAIxnC,EAAKr/B,KAAKqnE,2BAA2BR,GAAYS,EAAgBjoC,EAAGioC,cAAehvC,EAAS+G,EAAG/G,OACnGt4B,KAAKylE,eAAiB6B,EACtBtnE,KAAKwlE,QAAUltC,GAEnBgtC,EAAcpU,UAAUyV,eAAiB,SAAUlyD,GAC/C,IAAI4qB,EAAKr/B,KAAKunE,cAAc9yD,GAAU6yD,EAAgBjoC,EAAGioC,cAAehvC,EAAS+G,EAAG/G,OACpFt4B,KAAKylE,eAAiB6B,EACtBtnE,KAAKwlE,QAAUltC,GAEnBgtC,EAAcpU,UAAU0U,qBAAuB,SAAUD,GACrD,IAAK3lE,KAAKs4B,OACN,MAAM,IAAIl+B,MAAM,qDAEpB,IAAI6I,EAAS0iE,EAAU1tC,MAAM,KAAK9xB,QAAO,SAAUy/B,EAAKigC,GACpD,IAAKjgC,EAAI4hC,QAAQrW,eAAe0U,GAC5B,MAAM,IAAIzrE,MAAM,wDAA0DyrE,EAAU,cAAgBF,GAExG,MAAO,CAAErlE,IAAKslC,EAAI4hC,QAAS3B,QAASA,EAAS2B,QAAS5hC,EAAI4hC,QAAQ3B,MACnE,CAAE2B,QAASxnE,KAAKs4B,SACfh4B,EAAM2C,EAAO3C,IAAKulE,EAAU5iE,EAAO4iE,QACvC,KAAKvlE,GAAQulE,GAAavlE,EAAIulE,aAAoB3S,IAC9C,MAAM,IAAI94D,MAAM,8DAAgEurE,GAEpF,MAAO,CAAErlE,IAAKA,EAAKulE,QAASA,IAEzBP,KC3KJ,SAASmC,GAAuB//D,EAAG4wB,EAAQv0B,GAC9C,OAAO2zD,IAAQ,WACX,IAAIrwB,EAAMqgC,GAAmBhgE,EAAG4wB,EAAOqvC,iBAAkBrvC,EAAOsvC,iBAAkB7jE,EAAQ,QAE1F,OADAsjC,EAAMwgC,GAAOxgC,EAAK/O,EAAOjmB,SCF1B,SAASy1D,GAAYpgE,EAAGqgE,EAAkBC,GAE7C,YADqB,IAAjBA,IAA2BA,GAAe,GACvCtQ,IAAQ,WACX,IAAIuQ,EAAOC,GAAQF,EACbH,GAAOM,GAAUzgE,EAAGqgE,EAAiBK,MAAMC,QAAS,CAAC,EAAG,GAAI,QAASN,EAAiBK,MAAM/1D,MAC5Fo1D,GAAuB//D,EAAGqgE,EAAiBK,MAAO,CAAC,EAAG,KACxDE,EAAOb,GAAuBQ,EAAMF,EAAiBQ,MAAO,CAAC,EAAG,IAEhEC,EAAOf,GADDS,GAAQL,GAAOI,EAAMK,IACQP,EAAiBU,MAAO,CAAC,EAAG,IACnE,OAAOP,GAAQL,GAAOI,EAAMJ,GAAOS,EAAME,QAG1C,SAASE,GAAYhhE,EAAGqgE,EAAkBC,EAAcW,GAG3D,YAFqB,IAAjBX,IAA2BA,GAAe,QAC1B,IAAhBW,IAA0BA,GAAc,GACrCjR,IAAQ,WACX,IAAIuQ,EAAOC,GAAQF,EACbH,GAAOM,GAAUzgE,EAAGqgE,EAAiBK,MAAMC,QAASM,EAAc,CAAC,EAAG,GAAK,CAAC,EAAG,GAAI,QAASZ,EAAiBK,MAAM/1D,MACnHo1D,GAAuB//D,EAAGqgE,EAAiBK,MAAOO,EAAc,CAAC,EAAG,GAAK,CAAC,EAAG,KAC/EL,EAAOb,GAAuBQ,EAAMF,EAAiBQ,MAAO,CAAC,EAAG,IAEhEC,EAAOf,GADDS,GAAQL,GAAOI,EAAMK,IACQP,EAAiBU,MAAO,CAAC,EAAG,IAE/DG,EAAOnB,GADDS,GAAQL,GAAOI,EAAMJ,GAAOS,EAAME,KACLT,EAAiBc,MAAO,CAAC,EAAG,IACnE,OAAOX,GAAQL,GAAOI,EAAMJ,GAAOS,EAAMT,GAAOW,EAAMI,SCzBvD,SAASE,GAAUphE,EAAG4wB,EAAQt0B,EAAS+kE,GAG1C,YAFgB,IAAZ/kE,IAAsBA,EAAU,aACnB,IAAb+kE,IAAuBA,GAAW,GAC/BrR,IAAQ,WACX,IAAIrwB,EAAMwgC,GAAOM,GAAUzgE,EAAG4wB,EAAO+vC,QAAS,CAAC,EAAG,GAAIrkE,GAAUs0B,EAAOjmB,MACvE,OAAO02D,EAAWb,GAAQ7gC,GAAOA,KCNlC,SAAS2hC,GAA2BnC,EAAWS,GAClD1yE,OAAO4L,KAAKqmE,GAAW7xE,SAAQ,SAAU0gD,GAChC4xB,EAAczjB,MAAK,SAAUolB,GAAM,OAAOA,EAAGC,eAAiBxzB,MAC/DmxB,EAAUnxB,GAAMrS,aCFrB,SAAS8lC,GAAyBxC,EAAgBW,GACrD,OAAO,SAAU8B,EAAYC,EAAannB,EAAYonB,GAClD,IAAIjB,EAAUkB,GAAY5C,EAAeyC,EAAaC,EAAcnnB,EAAaA,GAAa,CAACA,EAAYA,EAAYknB,EAAYC,IAC/Hh3D,EAAOm3D,GAAY7C,EAAe0C,IAEtC,OADA/B,EAAc9sE,KAAK,CAAEmrE,UAAW2D,EAAe,YAAc,CAAE3D,UAAW2D,EAAe,UAClF,CAAEjB,QAASA,EAASh2D,KAAMA,ICLlC,SAASo3D,GAAuB9C,EAAgBW,GACnD,OAAO,SAAU8B,EAAYC,EAAaC,GACtC,IAAII,EAAaC,GAAYhD,EAAeyC,EAAaC,GAAc,CAACD,EAAYC,IAChFO,EAAUJ,GAAY7C,EAAe0C,IAEzC,OADA/B,EAAc9sE,KAAK,CAAEmrE,UAAW2D,EAAe,YAAc,CAAE3D,UAAW2D,EAAe,UAClF,CACH70D,QAASi1D,EACTr3D,KAAMu3D,ICRlB,IAAIC,GACA,SAA6BlC,EAAkBC,EAAkBv1D,GAC7DrS,KAAK2nE,iBAAmBA,EACxB3nE,KAAK4nE,iBAAmBA,EACxB5nE,KAAKqS,KAAOA,GCFb,SAASy3D,GAAkCnD,EAAgBW,GAC9D,OAAO,SAAU8B,EAAYC,EAAaC,GACtC,IAAI3B,EAAmB4B,GAAY5C,EAAe,EAAQyC,GAAa,CAAC,EAAG,EAAGA,EAAY,IACtFxB,EAAmB2B,GAAY5C,EAAeyC,EAAaC,GAAc,CAAC,EAAG,EAAGD,EAAYC,IAC5Fh3D,EAAOm3D,GAAY7C,EAAe0C,IAEtC,OADA/B,EAAc9sE,KAAK,CAAEmrE,UAAW2D,EAAe,qBAAuB,CAAE3D,UAAW2D,EAAe,qBAAuB,CAAE3D,UAAW2D,EAAe,UAC9I,IAAIO,GAAoBlC,EAAkBC,EAAkBv1D,IAGpE,SAAS03D,GAA+BC,GAC3C,OAAO,SAAU9xB,GACb,IAAIyvB,EAAmBqC,EAAmB9xB,EAAS,oBAAqB,GACpE0vB,EAAmBoC,EAAmB9xB,EAAS,oBAAqB,GACpE7lC,EAAO23D,EAAmB9xB,EAAS,QAAS,GAChD,OAAO,IAAI2xB,GAAoBlC,EAAkBC,EAAkBv1D,ICfpE,SAAS43D,GAA0BpD,EAAWS,GACjD,OAAO,SAAU4B,EAAcgB,EAAWC,GACtC,IAAIliC,EAAS4+B,EAAUqC,GACvB,IAAKjW,GAAShrB,EAAQiiC,GAClB,MAAM,IAAI9vE,MAAM,sBAAwB8uE,EAAe,mBAAqBgB,EAAY,mBAAqBjiC,GAGjH,OADAq/B,EAAc9sE,KAAK,CAAE0uE,aAAcA,EAAcvD,UAAWwE,GAAcjB,IACnEjhC,GCRR,SAASmiC,GAAsB31D,GAClC,IAAI41D,EAAmB51D,EASvB,MAAO,CACHkyD,eATJ,SAAwB2D,GACpB,IAAIlrE,EAAMirE,EAAiBjvE,MAAM,EAAGkvE,GAEpC,OADAD,EAAmBA,EAAiBjvE,MAAMkvE,GACnClrE,GAOPmrE,oBALJ,WACI,OAAOF,ICPR,SAASG,GAAkB7D,EAAgBW,GAC9C,IAAImD,EAAoBtB,GAAyBxC,EAAgBW,GAC7DoD,EAA6BZ,GAAkCnD,EAAgBW,GACnF,SAASqD,EAAyBvB,EAAYC,EAAaC,EAActB,GAOrE,YANqB,IAAjBA,IAA2BA,GAAe,GAMvC,CAAEI,MALGJ,EACNyC,EAAkBrB,EAAYC,EAAa,EAAGC,EAAe,UAC7DoB,EAA2BtB,EAAYC,EAAaC,EAAe,UAGlDf,MAFXmC,EAA2BrB,EAAaA,EAAaC,EAAe,UAE3Cb,MADzBiC,EAA2BrB,EAAaA,EAAaC,EAAe,WASpF,MAAO,CACHqB,yBAA0BA,EAC1BC,yBARJ,SAAkCxB,EAAYC,EAAaC,EAActB,QAChD,IAAjBA,IAA2BA,GAAe,GAC9C,IAAI3oC,EAAKsrC,EAAyBvB,EAAYC,EAAaC,EAActB,GAEzE,MAAO,CAAEI,MAFuF/oC,EAAG+oC,MAE5EG,MAF2FlpC,EAAGkpC,MAEhFE,MAF+FppC,EAAGopC,MAEpFI,MADvC6B,EAA2BrB,EAAaA,EAAaC,EAAe,aChBjF,SAASuB,GAAsBb,GAClC,OAAO,SAAU9xB,GAGb,MAAO,CAAEmwB,QAFK2B,EAAmB9xB,EAAS,WAAY,GAE3B7lC,KADhB23D,EAAmB9xB,EAAS,QAAS,KCDjD,SAAS4yB,GAAkBjE,EAAWS,GACzC,IAAI0C,EAAqBC,GAA0BpD,EAAWS,GAC1DmD,EAAoBI,GAAsBb,GAC1CU,EAA6BX,GAA+BC,GAoBhE,MAAO,CACHW,yBApBJ,SAAkCzyB,EAAQ8vB,GAOtC,YANqB,IAAjBA,IAA2BA,GAAe,GAMvC,CAAEI,MALGJ,EACNyC,EAAkBvyB,EAAS,UAC3BwyB,EAA2BxyB,EAAS,UAGnBqwB,MAFXmC,EAA2BxyB,EAAS,UAEXuwB,MADzBiC,EAA2BxyB,EAAS,YAehD0yB,yBAZJ,SAAkC1yB,EAAQ8vB,GAQtC,YAPqB,IAAjBA,IAA2BA,GAAe,GAOvC,CAAEI,MANGJ,EACNyC,EAAkBvyB,EAAS,UAC3BwyB,EAA2BxyB,EAAS,UAInBqwB,MAHXmC,EAA2BxyB,EAAS,UAGXuwB,MAFzBiC,EAA2BxyB,EAAS,UAEG2wB,MADvC6B,EAA2BxyB,EAAS,aCdxD,IAAI6yB,GAAsC,SAAU9U,GAEhD,SAAS8U,IACL,OAAO9U,EAAO56D,KAAK2E,KAAM,yBAA2BA,KAyCxD,OA3CAoxD,GAAU2Z,EAAsB9U,GAIhC8U,EAAqB7Z,UAAU8Z,aAAe,SAAUvyE,GACpD,IAAI6/B,EAASt4B,KAAKs4B,OAClB,IAAKA,EACD,MAAM,IAAIl+B,MAAM,sDAEpB,OAAOs9D,IAAQ,WACX,IAGIrwB,EAAMqhC,GADOhzD,GAFCjd,EAAM0pE,cAAc,KAAK,GAC7B,CAAC,QAAS,QAAS,UACgBrhB,IAAImqB,GAAU,MAC7B3yC,EAAO4yC,QAAQ,GAKjD,OAJA7jC,EAAMqhC,GAAYrhC,EAAK/O,EAAO6yC,QAC9B9jC,EAAMqhC,GAAYrhC,EAAK/O,EAAO8yC,QAC9B/jC,EAAMqhC,GAAYrhC,EAAK/O,EAAO+yC,QAC9BhkC,EAAMikC,GAAWjkC,EAAK,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,aAI9C0jC,EAAqB7Z,UAAUqa,QAAU,SAAU9yE,GAC/C,OAAOg5D,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIq/B,EACJ,OAAO2yB,GAAYhyD,MAAM,SAAUo9D,GAC/B,OAAQA,EAAGnL,OACP,KAAK,EAED,OADA5yB,EAAKr/B,KAAKgrE,aACH,CAAC,EAAaxH,GAAW/qE,IACpC,KAAK,EAAG,MAAO,CAAC,EAAc4mC,EAAGv4B,MAAM9G,KAAM,CAACo9D,EAAGlL,kBAKjE6Y,EAAqB7Z,UAAU4V,oBAAsB,WACjD,MAAO,gCAEXiE,EAAqB7Z,UAAUmW,2BAA6B,SAAUR,GAClE,OC7CD,SAAoCA,GACvC,IAAIS,EAAgB,GAChBsD,EAA2BE,GAAkBjE,EAAWS,GAAesD,yBACvEtyC,EAAS,CACT4yC,OAAQN,EAAyB,UAAU,GAC3CO,OAAQP,EAAyB,UACjCQ,OAAQR,EAAyB,UACjCS,OAAQT,EAAyB,WAGrC,OADA5B,GAA2BnC,EAAWS,GAC/B,CAAEhvC,OAAQA,EAAQgvC,cAAeA,GDmC7BD,CAA2BR,IAEtCkE,EAAqB7Z,UAAUqW,cAAgB,SAAU9yD,GACrD,OEhDD,SAAuBA,GAC1B,IAAI6yD,EAAgB,GAChBjoC,EAAK+qC,GAAsB31D,GAAUkyD,EAAiBtnC,EAAGsnC,eAAgB4D,EAAsBlrC,EAAGkrC,oBAClGK,EAA2BJ,GAAkB7D,EAAgBW,GAAesD,yBAC5EM,EAASN,EAAyB,EAAG,GAAI,UAAU,GACnDO,EAASP,EAAyB,GAAI,GAAI,UAC1CQ,EAASR,EAAyB,GAAI,IAAK,UAC3CS,EAAST,EAAyB,IAAK,IAAK,UAChD,GAAqC,IAAjCL,IAAsBpxE,OACtB,MAAM,IAAIiB,MAAM,kCAAoCmwE,IAAsBpxE,QAE9E,MAAO,CACHmuE,cAAeA,EACfhvC,OAAQ,CAAE4yC,OAAQA,EAAQC,OAAQA,EAAQC,OAAQA,EAAQC,OAAQA,IFmC3D9D,CAAc9yD,IAElBs2D,GACTzF,IGpDK,SAASkG,GAAoB9jE,EAAG4wB,GACnC,OAAOo/B,IAAQ,WACX,OAAOmQ,GAAO4D,GAAU/jE,EAAG4wB,EAAO7jB,SAAU6jB,EAAOjmB,SCHpD,SAASq5D,GAAmB7E,GAC/B,IAAI8E,EAAsB,GACtBC,EAAgB,GAKpB,OAJAh3E,OAAO4L,KAAKqmE,GAAW7xE,SAAQ,SAAU2D,IAC3BA,EAAIy8C,WAAW,MAAQw2B,EAAgBD,GAC7ChzE,GAAOkuE,EAAUluE,MAElB,CAAEgzE,oBAAqBA,EAAqBC,cAAeA,GCCtE,IAAIC,GAA+B,SAAU5V,GAEzC,SAAS4V,EAActG,EAAOuG,GAC1B,IAAIrT,EAAQxC,EAAO56D,KAAK2E,KAAMulE,IAAUvlE,KAExC,OADAy4D,EAAMsT,sBAAwBD,EACvBrT,EAiDX,OArDArH,GAAUya,EAAe5V,GAMzBrhE,OAAOkrC,eAAe+rC,EAAc3a,UAAW,uBAAwB,CACnEt5B,IAAK,WACD,OAAO53B,KAAK+rE,uBAEhB/Y,YAAY,EACZ7jB,cAAc,IAElB08B,EAAc3a,UAAU8a,OAAS,SAAUvzE,GACvC,IAAIggE,EAAQz4D,KACRs4B,EAASt4B,KAAKs4B,OAClB,IAAKA,EACD,MAAM,IAAIl+B,MAAM4F,KAAKulE,MAAQ,kCAEjC,OAAO7N,IAAQ,WACX,IAAIuU,EAAqBxzE,aAAiBuoE,GACpCvI,EAAMqT,qBAAqBd,aAAavyE,GACxCA,EACN,OAAO+yE,GAAoBS,EAAmBC,KAAKD,EAAmBx4D,MAAM,IAAK,GAAI6kB,EAAO/f,QAGpGszD,EAAc3a,UAAU7tB,QAAU,SAAUijC,QACf,IAArBA,IAA+BA,GAAmB,GACtDtmE,KAAK8rE,qBAAqBzoC,QAAQijC,GAClCrQ,EAAO/E,UAAU7tB,QAAQhoC,KAAK2E,KAAMsmE,IAExCuF,EAAc3a,UAAUib,qBAAuB,SAAU13D,GACrD,IAAI4qB,EAAKr/B,KAAKosE,wBAAwB33D,GAAU6jB,EAAS+G,EAAG/G,OAAQgvC,EAAgBjoC,EAAGioC,cACvFtnE,KAAKwlE,QAAUltC,EACft4B,KAAKylE,eAAiB6B,GAE1BuE,EAAc3a,UAAUkb,wBAA0B,SAAU33D,GACxD,OC7CD,SAAuBA,EAAS20D,EAAYC,GAC/C,IAAI/B,EAAgB,GAChBjoC,EAAK+qC,GAAsB31D,GAAUkyD,EAAiBtnC,EAAGsnC,eAAgB4D,EAAsBlrC,EAAGkrC,oBAElGhyD,EADkBkxD,GAAuB9C,EAAgBW,EACpD+E,CAAgBjD,EAAYC,EAAa,MAClD,GAAqC,IAAjCkB,IAAsBpxE,OACtB,MAAM,IAAIiB,MAAM,kCAAoCmwE,IAAsBpxE,QAE9E,MAAO,CACHmuE,cAAeA,EACfhvC,OAAQ,CAAE/f,GAAIA,IDmCPgvD,CAAc9yD,EAASzU,KAAKssE,0BAA2BtsE,KAAKusE,6BAEvEV,EAAc3a,UAAUmW,2BAA6B,SAAUR,GAC3D,IAAIxnC,EAAKqsC,GAAmB7E,GAAY8E,EAAsBtsC,EAAGssC,oBAAqBC,EAAgBvsC,EAAGusC,cAEzG,OADA5rE,KAAK8rE,qBAAqB/E,kBAAkB4E,GEjD7C,SAAoC9E,GACvC,IAEyB3uB,EAFrBovB,EAAgB,GAChB0C,EAAqBC,GAA0BpD,EAAWS,GAM1DhvC,EAAS,CACT/f,IANqB2/B,EAMD,KAHb,CAAEzjC,QAFKu1D,EAAmB9xB,EAAS,WAAY,GAE3B7lC,KADhB23D,EAAmB9xB,EAAS,QAAS,MAOpD,OADA8wB,GAA2BnC,EAAWS,GAC/B,CAAEhvC,OAAQA,EAAQgvC,cAAeA,GFsC7BD,CAA2BuE,IAEtCC,EAAc3a,UAAUqW,cAAgB,SAAU9yD,GAC9C,IAAI+3D,EAAMxsE,KAAKssE,0BACXG,EAAOzsE,KAAKusE,2BACZG,EAAwBD,EAAOD,EAAOC,EACtCE,EAA0Bl4D,EAAQrZ,MAAM,EAAGqZ,EAAQtb,OAASuzE,GAC5DE,EAAoBn4D,EAAQrZ,MAAMqZ,EAAQtb,OAASuzE,GAEvD,OADA1sE,KAAK8rE,qBAAqBnF,eAAegG,GAClC3sE,KAAKosE,wBAAwBQ,IAEjCf,GACTvG,IG/DSuH,GAAyB,CAAC,SAAU,SAAU,SAAU,SAAU,OAAQ,SAAU,YAC3FC,GAAiC,WACjC,SAASA,EAAgBC,GACrB,IAAItU,EAAQz4D,KACZ,GAA6B,IAAzB+sE,EAAc5zE,OACd,MAAM,IAAIiB,MAAM,8EAAgF2yE,EAAc5zE,QAElH0zE,GAAuB73E,SAAQ,SAAUg4E,EAAY1V,GACjDmB,EAAMuU,GAAcD,EAAczV,MAS1C,OANAwV,EAAgB5b,UAAU+b,cAAgB,WACtC,IAAIxU,EAAQz4D,KACZ,OAAO6sE,GACF9uE,KAAI,SAAUivE,GAAc,OAAUA,WAAYA,EAAYE,YAAazU,EAAMuU,OACjFl4D,MAAK,SAAUq4D,EAAIC,GAAM,OAAOA,EAAGF,YAAcC,EAAGD,gBAEtDJ,KCXPO,GAAmC,SAAUpX,GAE7C,SAASoX,EAAkBvB,GAEvB,YAD6B,IAAzBA,IAAmCA,EAAuB,IAAIf,IAC3D9U,EAAO56D,KAAK2E,KAAM,oBAAqB8rE,IAAyB9rE,KAgE3E,OAnEAoxD,GAAUic,EAAmBpX,GAK7BoX,EAAkBnc,UAAU8Z,aAAe,SAAUvyE,GACjD,IAAIggE,EAAQz4D,KACZ,OAAO03D,IAAQ,WAAc,OAAO4V,GAAW7U,EAAMuT,OAAOvzE,QAEhE40E,EAAkBnc,UAAUqa,QAAU,SAAU9yE,GAC5C,OAAOg5D,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIq/B,EACJ,OAAO2yB,GAAYhyD,MAAM,SAAUo9D,GAC/B,OAAQA,EAAGnL,OACP,KAAK,EAED,OADA5yB,EAAKr/B,KAAKgrE,aACH,CAAC,EAAaxH,GAAW/qE,IACpC,KAAK,EAAG,MAAO,CAAC,EAAc4mC,EAAGv4B,MAAM9G,KAAM,CAACo9D,EAAGlL,kBAKjEmb,EAAkBnc,UAAUqc,mBAAqB,SAAU90E,GACvD,OAAOg5D,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIikE,EAAU58B,EAAKmmC,EAAqBC,EACpChV,EAAQz4D,KACZ,OAAOgyD,GAAYhyD,MAAM,SAAUq/B,GAC/B,OAAQA,EAAG4yB,OACP,KAAK,EAAG,MAAO,CAAC,EAAauR,GAAW/qE,IACxC,KAAK,EAED,OADAwrE,EAAW5kC,EAAG6yB,OACP,CAAC,EAAalyD,KAAKgrE,aAAa/G,IAC3C,KAAK,EAED,OADA58B,EAAMhI,EAAG6yB,OACF,CAAC,EAAav2D,QAAQsgC,IAAIyxC,GAAWrmC,GAAKtpC,KAAI,SAAUkS,GAAK,OAAOwhD,GAAUgH,OAAO,OAAQ,GAAQ,WACpG,IAAInhE,EACJ,OAAO06D,GAAYhyD,MAAM,SAAUq/B,GAC/B,OAAQA,EAAG4yB,OACP,KAAK,EAAG,MAAO,CAAC,EAAahiD,EAAE3Y,QAC/B,KAAK,EAGD,OAFAA,EAAO+nC,EAAG6yB,OACVjiD,EAAEozB,UACK,CAAC,EAAc/rC,eAI9C,KAAK,EAKD,OAJAk2E,EAAsBnuC,EAAG6yB,OACzB7qB,EAAIhE,UACJoqC,EAAqBD,EAChBzvE,KAAI,SAAU4vE,GAAgB,OAAO,IAAIb,GAAgBa,MACvD,CAAC,EAAc1J,EAAS2J,aACrBH,EACAA,EAAmB,YAKjDJ,EAAkBnc,UAAU4V,oBAAsB,WAC9C,MAAO,yBAEXuG,EAAkBnc,UAAUob,wBAA0B,WAClD,OAAO,KAEXe,EAAkBnc,UAAUqb,yBAA2B,WACnD,OAAO,GAEJc,GACTxB,ICvEK,SAASgC,GAA0BlS,EAAWmS,GACjD,IAAIlS,EAAY,CAAEkS,YAAaA,GAC/B,OAAOl5E,OAAOka,OAAO,GAAI6sD,EAAWC,GCAjC,SAASmS,GAAoBxQ,EAAWyQ,EAAiBC,EAAeC,QACrD,IAAlBD,IAA4BA,EAAgB,KACrBzuE,MAAMi1B,QAAQu5C,GAAmBA,EAAkB,CAACA,IAC1Dh5E,SAAQ,SAAUgG,GACnC,IAAIq5B,EAAOr5B,aAAa8xE,GAClB9xE,EACuBA,EDVT,uBAAa8xE,GCUC9xE,EAAE8yE,iBAAcn0E,EAClD,IAAK06B,EACD,MAAM,IAAIj6B,MAAM,mHAEpB,IACI+zE,EADS95C,EAAK44C,gBACYjvE,QAAO,SAAUq2B,GAAQ,OAAOA,EAAK64C,YAAce,KAC7Er3E,EAAS6kE,GAAoBzgE,GAC3BA,EAAE89D,UAAU1E,IAAIga,WACfF,GAAmB,IAAIva,GAAM,EAAG,GACnB,IAAIoK,GAAcoQ,EAAiBpwE,KAAI,SAAUs2B,GAAQ,OAAOA,EAAK24C,WAAa,KAAOxlE,GAAM6sB,EAAK64C,aAAe,OAASt2E,GAClIkoE,KAAKvB,MCnBpB,SAAS8Q,GAAoB/tE,GAChC,OAAOm7D,GAAoBn7D,IACpBA,EAAe,qBAAa63D,IAC5B73D,EAAwB,8BAAa63D,IACrC73D,EAAiB,uBAAas2D,GAElC,SAAS0X,GAAwB3S,EAAW4S,GAC/C,IAAI/Y,EAAQmG,EAAU7C,UAAU1E,IAC5Boa,EAAYD,EAAmB5V,QAAQnD,EAAM9tD,EAAG8tD,EAAM7tD,GACtD6sD,EAAOga,EAAU3V,QACjBvC,EAAYqF,EAAU7C,UAAUxC,UAEhCsF,EAAY,CACZ4S,UAAWA,EACXD,mBAAoBA,EACpBE,YAJc,IAAI7X,GAAc+E,EAAU7C,UAAU7N,MAAOuJ,EAAKI,QAAQ0B,EAAU7X,WAAY6X,IAMlG,OAAO1hE,OAAOka,OAAO,GAAI6sD,EAAWC,GCIjC,SAAS2L,GAAc9yD,EAASi6D,GACnC,IAAIpH,EAAgB,GAChBjoC,EAAK+qC,GAAsB31D,GAAUkyD,EAAiBtnC,EAAGsnC,eAAgB4D,EAAsBlrC,EAAGkrC,oBAClGnN,EAzBR,SAA2BuJ,EAAgBW,GACvC,IAAImD,EAAoBtB,GAAyBxC,EAAgBW,GAC7DoD,EAA6BZ,GAAkCnD,EAAgBW,GAanF,MAAO,CACHmD,kBAAmBA,EACnBC,2BAA4BA,EAC5BiE,4BAfJ,SAAqCvF,EAAYC,EAAaC,GAI1D,MAAO,CAAEsF,gBAHalE,EAA2BtB,EAAYC,EAAaC,EAAe,oBAG9CuF,gBAFrBnE,EAA2BrB,EAAaA,EAAaC,EAAe,oBAEbwF,eADxDrE,EAAkBrB,EAAYC,EAAa,EAAGC,EAAe,qBAalFyF,uBAVJ,SAAgCC,EAAU1F,GAItC,MAAO,CAAEsF,gBAHalE,EAA2BsE,EAAUA,EAAU1F,EAAe,oBAGzCuF,gBAFrBnE,EAA2BsE,EAAUA,EAAU1F,EAAe,oBAEP2F,gBADvDvE,EAA2BsE,EAAUA,EAAU1F,EAAe,uBAa/EkB,CAAkB7D,EAAgBW,GAAgBmD,EAAoBrN,EAAGqN,kBAAmBC,EAA6BtN,EAAGsN,2BAA4BiE,EAA8BvR,EAAGuR,4BAA6BI,EAAyB3R,EAAG2R,uBAIvPG,EAAa,CACbC,QAJqB1E,EAAkB,EAAG,GAAI,EAAG,sBAKjD2E,kBAJ+BT,EAA4B,GAAI,GAAI,gCAKnEU,kBAJ+BV,EAA4B,GAAI,IAAK,iCAMpEW,EAAc,GAClBroE,GAAMynE,EAAe,EAAG,GAAG15E,SAAQ,SAAUsiE,GACzCgY,EAAY,cAAgBhY,GAAOyX,EAAuB,IAAK,0BAA4BzX,MAE/F,IAEIiY,EAAY,CACZC,gBAH4Bb,EAA4B,IAAK,IAAK,6BAIlEc,eAH2B/E,EAA2B,IAAK,IAAK,6BAKpE,GAAqC,IAAjCH,IAAsBpxE,OACtB,MAAM,IAAIiB,MAAM,kCAAoCmwE,IAAsBpxE,QAE9E,MAAO,CACHmuE,cAAeA,EACfhvC,OAAQ,CAAE42C,WAAYA,EAAYI,YAAaA,EAAaC,UAAWA,ICzBxE,SAASlI,GAA2BR,EAAW6H,GAClD,IAAIpH,EAAgB,GAChBjoC,EAzBR,SAA2BwnC,EAAWS,GAClC,IAAI0C,EAAqBC,GAA0BpD,EAAWS,GAC1DmD,EAAoBI,GAAsBb,GAC1CU,EAA6BX,GAA+BC,GAahE,MAAO,CACHS,kBAAmBA,EACnBC,2BAA4BA,EAC5BiE,4BAfJ,SAAqCrF,GAIjC,MAAO,CAAEsF,gBAHalE,EAA2BpB,EAAe,oBAGrBuF,gBAFrBnE,EAA2BpB,EAAe,oBAEawF,eADxDrE,EAAkBnB,EAAe,qBAatDyF,uBAVJ,SAAgCzF,GAI5B,MAAO,CAAEsF,gBAHalE,EAA2BpB,EAAe,oBAGrBuF,gBAFrBnE,EAA2BpB,EAAe,oBAEa2F,gBADvDvE,EAA2BpB,EAAe,uBAY3DwB,CAAkBjE,EAAWS,GAAgBmD,EAAoBprC,EAAGorC,kBAAmBC,EAA6BrrC,EAAGqrC,2BAA4BiE,EAA8BtvC,EAAGsvC,4BAA6BI,EAAyB1vC,EAAG0vC,uBAIlPG,EAAa,CACbC,QAJqB1E,EAAkB,sBAKvC2E,kBAJ+BT,EAA4B,gCAK3DU,kBAJ+BV,EAA4B,iCAM3DW,EAAc,GAClBroE,GAAMynE,EAAe,EAAG,GAAG15E,SAAQ,SAAUsiE,GACzCgY,EAAY,cAAgBhY,GAAOyX,EAAuB,0BAA4BzX,MAE1F,IAEIiY,EAAY,CACZC,gBAH4Bb,EAA4B,6BAIxDc,eAH2B/E,EAA2B,6BAM1D,OADA1B,GAA2BnC,EAAWS,GAC/B,CAAEhvC,OAAQ,CAAE42C,WAAYA,EAAYI,YAAaA,EAAaC,UAAWA,GAAajI,cAAeA,GCvChH,SAASlvD,GAAK1Q,EAAG4wB,EAAQv0B,GACrB,OAAO8jE,GAAOM,GAAUzgE,EAAG4wB,EAAO+vC,QAAStkE,EAAQ,QAASu0B,EAAOjmB,MAEvE,SAASq9D,GAAehoE,EAAG4wB,EAAQq3C,QACP,IAApBA,IAA8BA,GAAkB,GACpD,IAAItoC,EAAMsoC,EAAkBzH,GAAQxgE,GAAKA,EAKzC,OAJA2/B,EAAMogC,GAAuBpgC,EAAK/O,EAAOs2C,gBAAiB,CAAC,EAAG,IAC9DvnC,EAAMogC,GAAuBS,GAAQ7gC,GAAM/O,EAAOu2C,gBAAiB,CAAC,EAAG,IACvExnC,EAAMuoC,GAAWvoC,EAAK,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,QACtCA,EAAMwgC,GAAOxgC,EAAKjvB,GAAK1Q,EAAG4wB,EAAOw2C,eAAgB,CAAC,EAAG,KAUzD,IC5BWe,GD4BPC,GAA8B,SAAU7Z,GAExC,SAAS6Z,EAAapB,GAClB,IAAIjW,EAAQxC,EAAO56D,KAAK2E,KAAM,iBAAmBA,KAEjD,OADAy4D,EAAMsX,eAAiBrB,EAChBjW,EA6CX,OAjDArH,GAAU0e,EAAc7Z,GAMxB6Z,EAAa5e,UAAU8Z,aAAe,SAAUvyE,GAC5C,IAAIggE,EAAQz4D,KACRs4B,EAASt4B,KAAKs4B,OAClB,IAAKA,EACD,MAAM,IAAIl+B,MAAM,8CAEpB,OAAOs9D,IAAQ,WACX,IAEIsY,EAAat6D,GAFCjd,EAAM0pE,cAAc,KAAK,GAC7B,CAAC,QAAS,QAAS,UACgBrhB,IAAImqB,GAAU,MAC3D5jC,EAAM6gC,GAAQ9vD,GAAK43D,EAAY13C,EAAO42C,WAAWC,QAAS,CAAC,EAAG,KAQlE,OAPA9nC,EAAMqoC,GAAeroC,EAAK/O,EAAO42C,WAAWE,mBAAmB,GAC/D/nC,EAAMqoC,GAAeroC,EAAK/O,EAAO42C,WAAWG,mBAC5CpoE,GAAMwxD,EAAMsX,eAAgB,EAAG,GAAG/6E,SAAQ,SAAUsiE,GAChDjwB,EA5BhB,SAAmB3/B,EAAG4wB,GAClB,IAAI+O,EAAMogC,GAAuBS,GAAQxgE,GAAI4wB,EAAOs2C,gBAAiB,CAAC,EAAG,IAIzE,OAHAvnC,EAAMogC,GAAuBS,GAAQ7gC,GAAM/O,EAAOu2C,gBAAiB,CAAC,EAAG,IACvExnC,EAAMogC,GAAuBS,GAAQ7gC,GAAM/O,EAAO22C,gBAAiB,CAAC,EAAG,IACvE5nC,EAAMwgC,GAAOxgC,EAAK3/B,GAwBAuoE,CAAU5oC,EAAK/O,EAAOg3C,YAAY,cAAgBhY,OAE5DjwB,EAAMqoC,GAAeroC,EAAK/O,EAAOi3C,UAAUC,iBAC3CnoC,EAAM6gC,GAAQT,GAAuBpgC,EAAK/O,EAAOi3C,UAAUE,eAAgB,CAAC,EAAG,SAIvFK,EAAa5e,UAAUqa,QAAU,SAAU9yE,GACvC,OAAOg5D,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIq/B,EACJ,OAAO2yB,GAAYhyD,MAAM,SAAUo9D,GAC/B,OAAQA,EAAGnL,OACP,KAAK,EAED,OADA5yB,EAAKr/B,KAAKgrE,aACH,CAAC,EAAaxH,GAAW/qE,IACpC,KAAK,EAAG,MAAO,CAAC,EAAc4mC,EAAGv4B,MAAM9G,KAAM,CAACo9D,EAAGlL,kBAKjE4d,EAAa5e,UAAU4V,oBAAsB,WACzC,MAAO,uBAEXgJ,EAAa5e,UAAUmW,2BAA6B,SAAUR,GAC1D,OAAOQ,GAA2BR,EAAW7mE,KAAK+vE,iBAEtDD,EAAa5e,UAAUqW,cAAgB,SAAU9yD,GAC7C,OAAO8yD,GAAc9yD,EAASzU,KAAK+vE,iBAEhCD,GACTxK,KC9EF,SAAWuK,GACPA,EAAe,OAAI,SACnBA,EAAa,KAAI,OAFrB,CAGGA,KAAWA,GAAS,KCMvB,IAAIK,GAA8B,SAAUja,GAExC,SAASia,EAAapE,QACW,IAAzBA,IAAmCA,EAAuB,IAAIgE,GAAa,IAC/E,IAAIrX,EAAQxC,EAAO56D,KAAK2E,KAAM,iBAAmBA,KAEjD,OADAy4D,EAAMsT,sBAAwBD,EACvBrT,EA4HX,OAjIArH,GAAU8e,EAAcja,GAOxBrhE,OAAOkrC,eAAeowC,EAAahf,UAAW,uBAAwB,CAClEt5B,IAAK,WACD,OAAO53B,KAAK+rE,uBAEhB/Y,YAAY,EACZ7jB,cAAc,IAElB+gC,EAAahf,UAAU8a,OAAS,SAAUvzE,GACtC,IAAIggE,EAAQz4D,KACRs4B,EAASt4B,KAAKs4B,OAClB,IAAKA,EACD,MAAM,IAAIl+B,MAAM4F,KAAKulE,MAAQ,kCAEjC,OAAO7N,IAAQ,WACX,IAAIuU,EAAqBxzE,aAAiBuoE,GACpCvI,EAAMqT,qBAAqBd,aAAavyE,GACxCA,EACF03E,EAAS7E,GAAWW,EAAoB,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,SAASC,KAAKD,EAAmBx4D,MAAM,IAAK,GAGxG,MAAO,CAAE28D,IAFC5E,GAAoB2E,EAAQ73C,EAAO/f,GAAG63D,KAAKC,OAElCC,OADN9E,GAAoB2E,EAAQ73C,EAAO/f,GAAG+3D,aAI3DJ,EAAahf,UAAU8Z,aAAe,SAAUvyE,GAC5C,IAAIggE,EAAQz4D,KACZ,OAAO03D,IAAQ,WACX,IAAIr4B,EAAKo5B,EAAMuT,OAAOvzE,GAAQ23E,EAAM/wC,EAAG+wC,IAAKE,EAASjxC,EAAGixC,OACxD,MAAO,CAAEF,IAAKA,EAAKE,OAAQhD,GAAWgD,QAG9CJ,EAAahf,UAAUqa,QAAU,SAAU9yE,GACvC,OAAOg5D,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIq/B,EACJ,OAAO2yB,GAAYhyD,MAAM,SAAUo9D,GAC/B,OAAQA,EAAGnL,OACP,KAAK,EAED,OADA5yB,EAAKr/B,KAAKgrE,aACH,CAAC,EAAaxH,GAAW/qE,IACpC,KAAK,EAAG,MAAO,CAAC,EAAc4mC,EAAGv4B,MAAM9G,KAAM,CAACo9D,EAAGlL,kBAKjEge,EAAahf,UAAUqf,oBAAsB,SAAU93E,GACnD,OAAOg5D,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIikE,EAAU58B,EAAKmpC,EAAMC,EAASC,EAAqBjD,EACnDhV,EAAQz4D,KACZ,OAAOgyD,GAAYhyD,MAAM,SAAUq/B,GAC/B,OAAQA,EAAG4yB,OACP,KAAK,EAAG,MAAO,CAAC,EAAauR,GAAW/qE,IACxC,KAAK,EAED,OADAwrE,EAAW5kC,EAAG6yB,OACP,CAAC,EAAalyD,KAAKgrE,aAAa/G,IAC3C,KAAK,EAQD,OAPA58B,EAAMhI,EAAG6yB,OACTse,EAAO9C,GAAWrmC,EAAI+oC,KACtBK,EAAU/C,GAAWrmC,EAAIipC,QACzBI,EAAsBF,EAAKzyE,KAAI,SAAU4yE,EAAWz3E,GAAK,OACrDy3E,UAAWA,EACXC,aAAcH,EAAQv3E,OAEnB,CAAC,EAAayC,QAAQsgC,IAAIy0C,EAAoB3yE,KAAI,SAAUshC,GAC3D,IAAIsxC,EAAYtxC,EAAGsxC,UAAWC,EAAevxC,EAAGuxC,aAChD,OAAOnf,GAAUgH,OAAO,OAAQ,GAAQ,WACpC,IAAI2X,EAAKS,EAAUC,EAAQR,EAAQS,EACnC,OAAO/e,GAAYhyD,MAAM,SAAUo9D,GAC/B,OAAQA,EAAGnL,OACP,KAAK,EAAG,MAAO,CAAC,EAAa0e,EAAUr5E,QACvC,KAAK,EAED,OADA84E,EAAOhT,EAAGlL,OAAQ,GACX,CAAC,EAAa0e,EAAat5E,QACtC,KAAK,EAOD,OANAu5E,EAAYzT,EAAGlL,OAAQ,GAEvBoe,GADAQ,EAASD,EAAW,IACFhB,GAAOmB,KAAOnB,GAAOoB,OACvCF,EAAoBD,EAASD,EAAY,EAAIA,EAC7CF,EAAUttC,UACVutC,EAAavtC,UACN,CAAC,EAAc,CAAE+sC,IAAKA,EAAKE,OAAQA,EAAQS,kBAAmBA,gBAKjG,KAAK,EAID,OAHAtD,EAAqBpuC,EAAG6yB,OACxB7qB,EAAI+oC,IAAI/sC,UACRgE,EAAIipC,OAAOjtC,UACJ,CAAC,EAAc4gC,EAAS2J,aACrBH,EACAA,EAAmB,YAKjDyC,EAAahf,UAAU4V,oBAAsB,WACzC,MAAO,oBAEXoJ,EAAahf,UAAU7tB,QAAU,SAAUijC,QACd,IAArBA,IAA+BA,GAAmB,GACtDtmE,KAAK8rE,qBAAqBzoC,QAAQijC,GAClCrQ,EAAO/E,UAAU7tB,QAAQhoC,KAAK2E,KAAMsmE,IAExC4J,EAAahf,UAAUib,qBAAuB,SAAU13D,GACpD,IAAI4qB,EAAKr/B,KAAKosE,wBAAwB33D,GAAU6jB,EAAS+G,EAAG/G,OAAQgvC,EAAgBjoC,EAAGioC,cACvFtnE,KAAKwlE,QAAUltC,EACft4B,KAAKylE,eAAiB6B,GAE1B4I,EAAahf,UAAUkb,wBAA0B,SAAU33D,GACvD,OC7HD,SAAuBA,GAC1B,IAAI6yD,EAAgB,GAChBjoC,EAAK+qC,GAAsB31D,GAAUkyD,EAAiBtnC,EAAGsnC,eAAgB4D,EAAsBlrC,EAAGkrC,oBAClG8B,EAAkB5C,GAAuB9C,EAAgBW,GACzD8I,EAAM/D,EAAgB,IAAK,EAAG,UAC9BiE,EAASjE,EAAgB,IAAK,EAAG,aACrC,GAAqC,IAAjC9B,IAAsBpxE,OACtB,MAAM,IAAIiB,MAAM,kCAAoCmwE,IAAsBpxE,QAE9E,MAAO,CACHmuE,cAAeA,EACfhvC,OAAQ,CAAE/f,GAAI,CAAE63D,IAAKA,EAAKE,OAAQA,KDkH3B/I,CAAc9yD,IAEzBy7D,EAAahf,UAAUmW,2BAA6B,SAAUR,GAC1D,IAAIxnC,EAAKqsC,GAAmB7E,GAAY8E,EAAsBtsC,EAAGssC,oBAAqBC,EAAgBvsC,EAAGusC,cAEzG,OADA5rE,KAAK8rE,qBAAqB/E,kBAAkB4E,GEjI7C,SAAoC9E,GACvC,IAAIS,EAAgB,GAChB0C,EAAqBC,GAA0BpD,EAAWS,GAC9D,SAAS4J,EAAgBh5B,GAGrB,MAAO,CAAEzjC,QAFKu1D,EAAmB9xB,EAAS,WAAY,GAE3B7lC,KADhB23D,EAAmB9xB,EAAS,QAAS,IAGpD,IAAI5f,EAAS,CACT/f,GAAI,CACA63D,IAAKc,EAAgB,UACrBZ,OAAQY,EAAgB,eAIhC,OADAlI,GAA2BnC,EAAWS,GAC/B,CAAEhvC,OAAQA,EAAQgvC,cAAeA,GFmH7BD,CAA2BuE,IAEtCsE,EAAahf,UAAUqW,cAAgB,SAAU9yD,GAC7C,IACIk4D,EAA0Bl4D,EAAQrZ,MAAM,EAAGqZ,EAAQtb,OAD5B,MAEvByzE,EAAoBn4D,EAAQrZ,MAAMqZ,EAAQtb,OAFnB,MAI3B,OADA6G,KAAK8rE,qBAAqBnF,eAAegG,GAClC3sE,KAAKosE,wBAAwBQ,IAEjCsD,GACT5K,IGtIE6L,GAAuC,SAAUlb,GAEjD,SAASkb,IACL,OAAkB,OAAXlb,GAAmBA,EAAOnvD,MAAM9G,KAAMwxD,YAAcxxD,KAoG/D,OAtGAoxD,GAAU+f,EAAuBlb,GAIjCkb,EAAsBjgB,UAAUkgB,YAAc,SAAUzsE,EAAQs9D,EAAWoP,GACvE,IAAIC,EAAkBD,EAAmBtzE,KAAI,SAAUshC,GACnD,IAAI58B,EAAQ48B,EAAG58B,MAAOD,EAAS68B,EAAG78B,OAC9B0U,EAAQ+qD,EAAY57D,KAAKQ,IAAIrE,EAAQC,GACzC,MAAO,CACHA,MAAOA,EAAQyU,EACf1U,OAAQA,EAAS0U,MAGrBqqD,EAAY+P,EAAgBn4E,OAChC,OAAOu+D,IAAQ,WACX,IAAI6Z,EAA0B,SAAUC,EAAOC,GAC3C,OAAOnO,GAAS,CACZ1L,GAAQ,CAAC,IAAK4Z,GACd5Z,GAAQ,CAAC,IAAK6Z,IACf,GAAGvF,KAAK,EAAG,KAAKmE,QAEnBqB,EAAa,SAAUjQ,EAAUkQ,GACjC,IAAItyC,EAAKiyC,EAAgB7P,GAAWh/D,EAAQ48B,EAAG58B,MAAOD,EAAS68B,EAAG78B,OAClE,OAAOmvE,EAAKlvE,EAAOD,GAAU6D,KAAKa,IAAIzE,EAAQD,GAAU,EAAI,GAYhE,OARsBmC,EACjBq8C,IAAI4W,GAAQ,CAAC2J,EAAW,KAAMU,IAC9Bjc,IAAIsd,GAAS9jE,MAAMC,KAAKD,MAAM+hE,IAAY,SAAU7wD,EAAG+wD,GACxD,OAAO8P,EALO,SAAU9P,GAAY,OAAOiQ,EAAWjQ,GAAU,SAAUh9D,EAAGixD,GAAK,OAAOjxD,EAAIixD,KAK9Dkc,CAAYnQ,GAJ7B,SAAUA,GAAY,OAAOiQ,EAAWjQ,GAAU,SAAUh9D,EAAGixD,GAAK,OAAOA,EAAIjxD,KAIvCotE,CAAYpQ,SAEjE3gB,IAAIwiB,GAAS9jE,MAAMC,KAAKD,MAAM+hE,IAAY,SAAU7wD,EAAG+wD,GACxD,OAAO8P,EAAwBD,EAAgB7P,GAAUh/D,MAAO6uE,EAAgB7P,GAAUj/D,iBAKtG2uE,EAAsBjgB,UAAU8Z,aAAe,SAAUvyE,GACrD,IAAIggE,EAAQz4D,KACZ,OAAO03D,IAAQ,WACX,IAAIrwB,EAAMoxB,EAAMuT,OAAOvzE,GACvB,OAAOggE,EAAM2Y,YAAY/pC,EAAK5uC,EAAMwpE,UAAWxpE,EAAM64E,gBAAgBvzE,KAAI,SAAUshC,GAE/E,OAAU78B,OADG68B,EAAG,GACU58B,MADE48B,EAAG,YAK3C8xC,EAAsBjgB,UAAUqa,QAAU,SAAU9yE,GAChD,OAAOg5D,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIq/B,EACJ,OAAO2yB,GAAYhyD,MAAM,SAAUo9D,GAC/B,OAAQA,EAAGnL,OACP,KAAK,EAED,OADA5yB,EAAKr/B,KAAKgrE,aACH,CAAC,EAAaxH,GAAW/qE,IACpC,KAAK,EAAG,MAAO,CAAC,EAAc4mC,EAAGv4B,MAAM9G,KAAM,CAACo9D,EAAGlL,kBAKjEif,EAAsBjgB,UAAU4gB,gBAAkB,SAAUr5E,GACxD,OAAOg5D,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIikE,EAAU8N,EAAiBC,EAC3BvZ,EAAQz4D,KACZ,OAAOgyD,GAAYhyD,MAAM,SAAUq/B,GAC/B,OAAQA,EAAG4yB,OACP,KAAK,EAAG,MAAO,CAAC,EAAauR,GAAW/qE,IACxC,KAAK,EAGD,OAFAwrE,EAAW5kC,EAAG6yB,OACd6f,EAAkBra,IAAQ,WAAc,OAAOgW,GAAWjV,EAAMuS,aAAa/G,OACtE,CAAC,EAAatoE,QAAQsgC,IAAI81C,EAAgBh0E,KAAI,SAAUk0E,EAAgBxQ,GAAY,OAAOhQ,GAAUgH,OAAO,OAAQ,GAAQ,WAC3H,IAAIyZ,EAAgB7yC,EAAI+9B,EAAI+U,EAASC,EACrC,OAAOpgB,GAAYhyD,MAAM,SAAUinE,GAC/B,OAAQA,EAAGhV,OACP,KAAK,EAED,OADAmL,GAAM/9B,EAAK7/B,OAAOC,KACX,CAAC,EAAawyE,EAAe36E,QACxC,KAAK,EAID,OAHA46E,EAAiB9U,EAAGt2D,MAAMu4B,EAAI,CAAC4nC,EAAG/U,SAClCigB,EAAUD,EAAel0E,QAAO,SAAU0S,EAAGxX,GAAK,OAAOm6D,GAAOn6D,MAChEk5E,EAAUF,EAAel0E,QAAO,SAAU0S,EAAGxX,GAAK,OAAQm6D,GAAOn6D,MAC1D,CAAC,EAAc,IAAI+gE,GAAgBz6D,MAAM,IAAInB,KAAK,GAAGN,KAAI,SAAU2S,EAAGxX,GAAK,OAAO,IAAIy6D,GAAMwe,EAAQj5E,GAAIk5E,EAAQl5E,OAAS,CACxHsJ,OAAQyhE,EAASlC,eAAeN,GAChCh/D,MAAOwhE,EAASjC,cAAcP,kBAK9D,KAAK,EAGD,OAFAuQ,EAAoB3yC,EAAG6yB,OACvB6f,EAAgB/8E,SAAQ,SAAUib,GAAK,OAAOA,EAAEozB,aACzC,CAAC,EAAc4gC,EAAS2J,aACrBoE,EACAA,EAAkB,YAKhDb,EAAsBjgB,UAAUqb,yBAA2B,WACvD,OAAO,KAEJ4E,GACTtF,IC5GEwG,GAAmC,SAAUpc,GAE7C,SAASoc,EAAkBvG,GAEvB,YAD6B,IAAzBA,IAAmCA,EAAuB,IAAIf,IAC3D9U,EAAO56D,KAAK2E,KAAM,oBAAqB8rE,IAAyB9rE,KAQ3E,OAXAoxD,GAAUihB,EAAmBpc,GAK7Boc,EAAkBnhB,UAAU4V,oBAAsB,WAC9C,MAAO,0BAEXuL,EAAkBnhB,UAAUob,wBAA0B,WAClD,OAAO,KAEJ+F,GACTlB,ICRF,IAAImB,GAA0C,SAAUrc,GAEpD,SAASqc,IACL,OAAOrc,EAAO56D,KAAK2E,KAAM,6BAA+BA,KAwC5D,OA1CAoxD,GAAUkhB,EAA0Brc,GAIpCqc,EAAyBphB,UAAU8Z,aAAe,SAAUvyE,GACxD,IAAI6/B,EAASt4B,KAAKs4B,OAClB,IAAKA,EACD,MAAM,IAAIl+B,MAAM,0DAEpB,OAAOs9D,IAAQ,WACX,IAGIrwB,EAAMygC,GADOpyD,GAFCjd,EAAM0pE,cAAc,KAAK,GAC7B,CAAC,QAAS,QAAS,UACgBrhB,IAAImqB,GAAU,MAC7B3yC,EAAO4yC,QAAQ,GAIjD,OAHA7jC,EAAMygC,GAAYzgC,EAAK/O,EAAO6yC,QAC9B9jC,EAAMygC,GAAYzgC,EAAK/O,EAAO8yC,QAC9B/jC,EAAMikC,GAAWjkC,EAAK,CAAC,GAAI,IAAK,CAAC,EAAG,GAAI,aAIhDirC,EAAyBphB,UAAUqa,QAAU,SAAU9yE,GACnD,OAAOg5D,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIq/B,EACJ,OAAO2yB,GAAYhyD,MAAM,SAAUo9D,GAC/B,OAAQA,EAAGnL,OACP,KAAK,EAED,OADA5yB,EAAKr/B,KAAKgrE,aACH,CAAC,EAAaxH,GAAW/qE,IACpC,KAAK,EAAG,MAAO,CAAC,EAAc4mC,EAAGv4B,MAAM9G,KAAM,CAACo9D,EAAGlL,kBAKjEogB,EAAyBphB,UAAU4V,oBAAsB,WACrD,MAAO,qCAEXwL,EAAyBphB,UAAUmW,2BAA6B,SAAUR,GACtE,OC5CD,SAAwCA,GAC3C,IAAIS,EAAgB,GAChBqD,EAA2BG,GAAkBjE,EAAWS,GAAeqD,yBACvEryC,EAAS,CACT4yC,OAAQP,EAAyB,UAAU,GAC3CQ,OAAQR,EAAyB,UACjCS,OAAQT,EAAyB,WAGrC,OADA3B,GAA2BnC,EAAWS,GAC/B,CAAEhvC,OAAQA,EAAQgvC,cAAeA,GDmC7BiL,CAA+B1L,IAE1CyL,EAAyBphB,UAAUqW,cAAgB,SAAU9yD,GACzD,OE/CD,SAA2BA,GAC9B,IAAI6yD,EAAgB,GAChBjoC,EAAK+qC,GAAsB31D,GAAUkyD,EAAiBtnC,EAAGsnC,eAAgB4D,EAAsBlrC,EAAGkrC,oBAClGI,EAA2BH,GAAkB7D,EAAgBW,GAAeqD,yBAC5EO,EAASP,EAAyB,EAAG,GAAI,UAAU,GACnDQ,EAASR,EAAyB,GAAI,GAAI,UAC1CS,EAAST,EAAyB,GAAI,IAAK,UAC/C,GAAqC,IAAjCJ,IAAsBpxE,OACtB,MAAM,IAAIiB,MAAM,kCAAoCmwE,IAAsBpxE,QAE9E,MAAO,CACHmuE,cAAeA,EACfhvC,OAAQ,CAAE4yC,OAAQA,EAAQC,OAAQA,EAAQC,OAAQA,IFmC3CoH,CAAkB/9D,IAEtB69D,GACThN,IGjDEmN,GAAuC,SAAUxc,GAEjD,SAASwc,EAAsB3G,GAE3B,YAD6B,IAAzBA,IAAmCA,EAAuB,IAAIwG,IAC3Drc,EAAO56D,KAAK2E,KAAM,wBAAyB8rE,IAAyB9rE,KAQ/E,OAXAoxD,GAAUqhB,EAAuBxc,GAKjCwc,EAAsBvhB,UAAU4V,oBAAsB,WAClD,MAAO,+BAEX2L,EAAsBvhB,UAAUob,wBAA0B,WACtD,OAAO,KAEJmG,GACTtB,KCZmC,SAAUlb,GAE3C,SAASyc,IACL,OAAkB,OAAXzc,GAAmBA,EAAOnvD,MAAM9G,KAAMwxD,YAAcxxD,KAF/DoxD,GAAUshB,EAAiBzc,IAK7Boc,ICRF,SAASvJ,GAAUphE,EAAG4wB,EAAQrC,EAAS8yC,EAAU/kE,QAC7B,IAAZA,IAAsBA,EAAU,QACpC,IAAIq7B,EAAK/G,EAAOlgB,KAAMiwD,EAAUhpC,EAAGgpC,QAASh2D,EAAOgtB,EAAGhtB,KAClDg1B,EAAM8gC,GAAUzgE,EAAG2gE,EAASpyC,EAASjyB,GAGzC,OADAqjC,ECNG,SAAe3/B,EAAG4wB,GACrB,OAAOuvC,GAAO8K,GAAOjrE,EAAG4wB,EAAO7jB,SAAU6jB,EAAO/jB,QDK1C2C,CADNmwB,EAAMwgC,GAAOxgC,EAAKh1B,GACDimB,EAAOphB,OACjB6xD,EAAWb,GAAQ7gC,GAAOA,EAK9B,SAASurC,GAAWlrE,EAAG4wB,GAC1B,OAAOwwC,GAAUphE,EAAG4wB,EAAQ,CAAC,EAAG,IAAI,GAEjC,SAASu6C,GAASnrE,EAAG4wB,GACxB,OAAOwwC,GAAUphE,EAAG4wB,EAAQ,CAAC,EAAG,IAAI,EAAM,SEd9C,SAASkyC,GAAkB7D,EAAgBW,GASvC,SAASmD,EAAkBqI,EAAiBC,EAAY7wB,EAAYonB,GAChE,IAAIjB,EATR,SAA6ByK,EAAiBC,EAAY7wB,GACtD,IAAIztC,EAAUkyD,EAAemM,GACzB5zB,EAAQzqC,EAAQtb,QAAU45E,EAAa7wB,EAAaA,GACxD,GAAYhD,EzFYH,GAAM,EyFXX,MAAM,IAAI9kD,MAAM,+BAAiC8kD,EAAQ,qBAAuBzqC,EAAQtb,OAAS,iBAAmB45E,EAAa,iBAAmB7wB,GAExJ,OAAOwV,IAAQ,WAAc,OAAOsb,GAAazJ,GAAY90D,EAAS,CAACs+D,EAAY7zB,EAAOgD,EAAYA,IAAc,CAAC,EAAG,EAAG,EAAG,OAGhH+wB,CAAoBH,EAAiBC,EAAY7wB,GAC3D7vC,EAAOm3D,GAAY7C,EAAeoM,IAEtC,OADAzL,EAAc9sE,KAAK,CAAEmrE,UAAW2D,EAAe,YAAc,CAAE3D,UAAW2D,EAAe,UAClF,CAAEjB,QAASA,EAASh2D,KAAMA,GAWrC,SAAS6gE,EAAuBJ,EAAiBC,EAAY7wB,EAAYonB,GAGrE,MAAO,CAAElxD,KAFEqyD,EAAkBqI,EAAiBC,EAAY7wB,EAAYonB,EAAe,SAEhEpyD,MAZzB,SAAiCozD,EAAYhB,GACzC,IAAI70D,EAAU+0D,GAAY7C,EAAe2D,IACrC/1D,EAASi1D,GAAY7C,EAAe2D,IAExC,OADAhD,EAAc9sE,KAAK,CAAEmrE,UAAW2D,EAAe,YAAc,CAAE3D,UAAW2D,EAAe,YAClF,CACH70D,QAASA,EACTF,OAAQA,GAKA4+D,CAAwBJ,EAAYzJ,EAAe,WASnE,MAAO,CACH4J,uBAAwBA,EACxBE,2BARJ,SAAoCN,EAAiBC,EAAY7wB,EAAYonB,EAAc+J,GAIvF,YAHe,IAAXA,IAAqBA,GAAS,GAG3B,CAAE9K,MAFG2K,GAAwBG,EAAS,GAAM,GAAKP,EAAiBC,EAAY7wB,EAAYonB,EAAe,UAEzFb,MADXyK,EAAuBJ,EAAiBC,EAAY7wB,EAAYonB,EAAe,aCjCnG,SAASkB,GAAkB3D,EAAWS,GAClC,IAAI0C,EAAqBC,GAA0BpD,EAAWS,GAM9D,SAAS4L,EAAuBh7B,GAI5B,MAAO,CAAE9/B,KAAM,CAAEiwD,QAHH2B,EAAmB9xB,EAAS,gBAAiB,GAGxB7lC,KAFxB23D,EAAmB9xB,EAAS,aAAc,IAEJhhC,MATrD,SAAiCghC,GAG7B,MAAO,CAAEzjC,QAFKu1D,EAAmB9xB,EAAS,iBAAkB,GAEjC3jC,OADdy1D,EAAmB9xB,EAAS,gBAAiB,IAM9Ci7B,CAAwBj7B,IASxC,MAAO,CACHg7B,uBAAwBA,EACxBE,2BARJ,SAAoCl7B,GAChC,MAAO,CACHqwB,MAAO2K,EAAuBh7B,EAAS,UACvCuwB,MAAOyK,EAAuBh7B,EAAS,aAQ5C,SAASmvB,GAA2BR,GACvC,IAAIS,EAAgB,GAChBjoC,EAAKmrC,GAAkB3D,EAAWS,GAAgB4L,EAAyB7zC,EAAG6zC,uBAAwBE,EAA6B/zC,EAAG+zC,2BACtIE,EAAcJ,EAAuB,eACrCK,EAAWH,EAA2B,YACtCI,EAAWJ,EAA2B,YACtCK,EAAWL,EAA2B,YACtCM,EAAcN,EAA2B,eACzCO,EAAWP,EAA2B,YACtCQ,EAAWR,EAA2B,YACtCS,EAAWT,EAA2B,YACtCU,EAAeV,EAA2B,gBAC1CW,EAAYX,EAA2B,aACvCY,EAAYZ,EAA2B,aACvCa,EAAeb,EAA2B,gBAC1Cc,EAAYd,EAA2B,aACvCe,EAAYf,EAA2B,aACvCgB,EAAmBhB,EAA2B,oBAC9C76D,EAAKsuD,EAAc,GAEvB,GADAS,EAAc9sE,KAAK,CAAE0uE,aAAc,KAAMvD,UAAW,Q1FpCjD,SAAoB19B,GACvB,OAAOgrB,GAAShrB,EAAQ,G0FoCnBosC,CAAW97D,GACZ,MAAM,IAAIne,MAAM,yDAA2Dme,GAE/E,IAAI+f,EAAS,CACTg7C,YAAaA,EACbC,SAAUA,EACVC,SAAUA,EACVC,SAAUA,EACVC,YAAaA,EACbC,SAAUA,EACVC,SAAUA,EACVC,SAAUA,EACVC,aAAcA,EACdC,UAAWA,EACXC,UAAWA,EACXC,aAAcA,EACdC,UAAWA,EACXC,UAAWA,EACXC,iBAAkBA,EAClB77D,GAAIA,GAGR,OADAywD,GAA2BnC,EAAWS,GAC/B,CAAEhvC,OAAQA,EAAQgvC,cAAeA,GCjErC,SAASgN,GAAS5sE,EAAG4wB,GACxB,IAAI+O,EJMD,SAAc3/B,EAAG4wB,GACpB,OAAOwwC,GAAUphE,EAAG4wB,EAAQ,CAAC,EAAG,IAAI,GIP1BlgB,CAAK1Q,EAAG4wB,EAAOiwC,OAIzB,OAHAlhC,EAAMurC,GAAWvrC,EAAK/O,EAAOmwC,OAC7BphC,EAAMwgC,GAAOxgC,EAAK3/B,GAClB2/B,EAAM6gC,GAAQ7gC,GAGX,SAASktC,GAAa7sE,EAAG4wB,GAC5B,IAAI+O,EAAMwrC,GAASnrE,EAAG4wB,EAAOiwC,OAC7BlhC,EAAMurC,GAAWvrC,EAAK/O,EAAOmwC,OAC7B,IAAI0H,EAAS7E,GAAW5jE,EAAG,EAAG,EAAG,SAC7B4+C,EAAQkuB,GAASrE,EAAO18D,OACxBghE,EAAQtE,EAAO18D,MAAM,KAAO4zB,EAAI5zB,MAAM,GAE1C,GADoB08D,EAAO18D,MAAM,KAAO4zB,EAAI5zB,MAAM,IAAM08D,EAAO18D,MAAM,KAAO4zB,EAAI5zB,MAAM,GACnE,CACf,IAAIihE,EAAYjiB,GAAeprB,EAAI5zB,OACnCihE,EAAU,GAAK,EACf,IAAIC,EAASH,GAASE,GAElBE,EAAYniB,IADhBprB,EAAM2wB,GAAU,CAAC3wB,EAAKstC,GAAS,IACIlhE,OACnCmhE,EAAU,GAAK,EACf,IAAIC,EAASL,GAASI,GACtBvtC,EAAM2wB,GAAU,CAAC3wB,EAAKwtC,GAAS,GAKnC,OAHA1E,EAASsE,EAAQzc,GAAU,CAACmY,EAAQ7pB,GAAQ,GAAK6pB,EACjD9oC,EAAMwgC,GAAOsI,EAAQ9oC,GACrBA,EAAM6gC,GAAQ7gC,GCpBlB,IAAIytC,GAAoC,SAAU7e,GAE9C,SAAS6e,IACL,OAAO7e,EAAO56D,KAAK2E,KAAM,uBAAyBA,KA2EtD,OA7EAoxD,GAAU0jB,EAAoB7e,GAI9B6e,EAAmB5jB,UAAU8Z,aAAe,SAAUvyE,GAClD,IAAI6/B,EAASt4B,KAAKs4B,OAClB,IAAKA,EACD,MAAM,IAAIl+B,MAAM,oDAEpB,OAAOs9D,IAAQ,WACX,IAGIrwB,EAAMwrC,GADOn9D,GAFCjd,EAAM0pE,cAAc,KAAK,GAAMY,UACnC,CAAC,QAAS,QAAS,UACgBjiB,IAAImqB,GAAU,MAChC3yC,EAAOg7C,aAEtCjsC,EAAMitC,GADNjtC,EAAMuoC,GAAWvoC,EAAK,EAAG,EAAG,SACR/O,EAAOi7C,UAC3BlsC,EAAMitC,GAASjtC,EAAK/O,EAAOk7C,UAC3BnsC,EAAMitC,GAASjtC,EAAK/O,EAAOm7C,UAE3BpsC,EAAMitC,GADNjtC,EAAMktC,GAAaltC,EAAK/O,EAAOo7C,aACXp7C,EAAOq7C,UAC3BtsC,EAAMitC,GAASjtC,EAAK/O,EAAOs7C,UAC3BvsC,EAAMitC,GAASjtC,EAAK/O,EAAOu7C,UAE3BxsC,EAAMitC,GADNjtC,EAAMktC,GAAaltC,EAAK/O,EAAOw7C,cACXx7C,EAAOy7C,WAC3B1sC,EAAMitC,GAASjtC,EAAK/O,EAAO07C,WAE3B3sC,EAAMitC,GADNjtC,EAAMktC,GAAaltC,EAAK/O,EAAO27C,cACX37C,EAAO47C,WAG3B,IAAIa,GADJ1tC,EAAMktC,GADNltC,EAAMitC,GAASjtC,EAAK/O,EAAO67C,WACH77C,EAAO87C,mBACXrxB,KAAK,CAAC,EAAG,IAE7B,OADqB0oB,GAAUsJ,EAAWz8C,EAAO/f,QAIzDu8D,EAAmB5jB,UAAUqa,QAAU,SAAU9yE,GAC7C,OAAOg5D,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIq/B,EACJ,OAAO2yB,GAAYhyD,MAAM,SAAUo9D,GAC/B,OAAQA,EAAGnL,OACP,KAAK,EAED,OADA5yB,EAAKr/B,KAAKgrE,aACH,CAAC,EAAaxH,GAAW/qE,IACpC,KAAK,EAAG,MAAO,CAAC,EAAc4mC,EAAGv4B,MAAM9G,KAAM,CAACo9D,EAAGlL,kBAKjE4iB,EAAmB5jB,UAAU8jB,sBAAwB,SAAUv8E,GAC3D,OAAOg5D,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIikE,EAAUgR,EAAuBC,EACjCzc,EAAQz4D,KACZ,OAAOgyD,GAAYhyD,MAAM,SAAUq/B,GAC/B,OAAQA,EAAG4yB,OACP,KAAK,EAAG,MAAO,CAAC,EAAauR,GAAW/qE,IACxC,KAAK,EAGD,OAFAwrE,EAAW5kC,EAAG6yB,OACd+iB,EAAwBvd,IAAQ,WAAc,OAAOgW,GAAWjV,EAAMuS,aAAa/G,OAC5E,CAAC,EAAatoE,QAAQsgC,IAAIg5C,EAAsBl3E,KAAI,SAAUkS,GAAK,OAAOA,EAAE3Y,YACvF,KAAK,EAGD,OAFA49E,EAA0B71C,EAAG6yB,OAC7B+iB,EAAsBjgF,SAAQ,SAAUib,GAAK,OAAOA,EAAEozB,aAC/C,CAAC,EAAc4gC,EAAS2J,aACrBsH,EACAA,EAAwB,YAKtDJ,EAAmB5jB,UAAU4V,oBAAsB,WAC/C,MAAO,0BAEXgO,EAAmB5jB,UAAUmW,2BAA6B,SAAUR,GAChE,OAAOQ,GAA2BR,IAEtCiO,EAAmB5jB,UAAUqW,cAAgB,SAAU9yD,GACnD,OH1CD,SAAuBA,GAC1B,IAAI4qB,EAAK+qC,GAAsB31D,GAAUkyD,EAAiBtnC,EAAGsnC,eAAgB4D,EAAsBlrC,EAAGkrC,oBAClGjD,EAAgB,GAChBlK,EAAKoN,GAAkB7D,EAAgBW,GAAgB4L,EAAyB9V,EAAG8V,uBAAwBE,EAA6BhW,EAAGgW,2BAC3IE,EAAcJ,EAAuB,KAAM,GAAI,EAAG,eAClDK,EAAWH,EAA2B,KAAM,GAAI,EAAG,YACnDI,EAAWJ,EAA2B,KAAM,GAAI,EAAG,YACnDK,EAAWL,EAA2B,KAAM,GAAI,EAAG,YACnDM,EAAcN,EAA2B,MAAO,GAAI,EAAG,eAAe,GACtEO,EAAWP,EAA2B,MAAO,GAAI,EAAG,YACpDQ,EAAWR,EAA2B,MAAO,GAAI,EAAG,YACpDS,EAAWT,EAA2B,MAAO,GAAI,EAAG,YACpDU,EAAeV,EAA2B,OAAQ,IAAK,EAAG,gBAAgB,GAC1EW,EAAYX,EAA2B,OAAQ,IAAK,EAAG,aACvDY,EAAYZ,EAA2B,OAAQ,IAAK,EAAG,aACvDa,EAAeb,EAA2B,OAAQ,IAAK,EAAG,gBAAgB,GAC1Ec,EAAYd,EAA2B,OAAQ,IAAK,EAAG,aACvDe,EAAYf,EAA2B,OAAQ,IAAK,EAAG,aACvDgB,EAAmBhB,EAA2B,OAAQ,IAAK,EAAG,oBAC9D76D,EAAKm/C,IAAQ,WAAc,OAAOsb,GAAarJ,GAAYhD,EAAe,OAAY,CAAC,IAAK,MAAO,CAAC,EAAG,OAE3G,GADAW,EAAc9sE,KAAK,CAAEmrE,UAAW,OACK,IAAjC4E,IAAsBpxE,OACtB,MAAM,IAAIiB,MAAM,kCAAoCmwE,IAAsBpxE,QAoB9E,MAAO,CAAEm/B,OAlBI,CACTg7C,YAAaA,EACbC,SAAUA,EACVC,SAAUA,EACVC,SAAUA,EACVC,YAAaA,EACbC,SAAUA,EACVC,SAAUA,EACVC,SAAUA,EACVC,aAAcA,EACdC,UAAWA,EACXC,UAAWA,EACXC,aAAcA,EACdC,UAAWA,EACXC,UAAWA,EACXC,iBAAkBA,EAClB77D,GAAIA,GAEiB+uD,cAAeA,GGA7BC,CAAc9yD,IAElBqgE,GACTxP,ICxFK,SAAS6P,GAAyBxZ,EAAWyZ,GAChD,IAAIxZ,EAAY,CAAEwZ,WAAYA,GAC9B,OAAOxgF,OAAOka,OAAO,GAAI6sD,EAAWC,GCCjC,SAASyZ,GAAc1Z,EAAWyU,GACrC,IAAIxU,EAAY,CAAEwU,IAAKA,GACvB,OAAOx7E,OAAOka,OAAO,GAAI6sD,EAAWC,GCCjC,SAAS0Z,GAAiB3Z,EAAW2U,EAAQS,GAChD,IAAInV,EAAY,CAAE0U,OAAQA,EAAQS,kBAAmBA,GACrD,OAAOn8E,OAAOka,OAAO,GAAI6sD,EAAWC,GCRxC,IAAI2Z,GAA8B,WAC9B,SAASA,EAAal2C,GAClB,IAAI+9B,OAAY,IAAP/9B,EAAgB,GAAKA,EAAIm2C,EAAcpY,EAAGoY,YAAaC,EAAcrY,EAAGqY,YAAaC,EAAetY,EAAGsY,aAAcC,EAAkBvY,EAAGuY,gBAAiBC,EAAaxY,EAAGwY,WAOpL,GANA51E,KAAKulE,MAAQ,eACbvlE,KAAK61E,aAAeL,GAAe,GACnCx1E,KAAK81E,aAAeL,GAAe,KACnCz1E,KAAK+1E,cAAgBL,GAAgB,GACrC11E,KAAKg2E,iBAAmBL,GAAmB,CAAC,GAAK,GAAK,IACtD31E,KAAKi2E,YAAcL,EACc,iBAAtB51E,KAAK61E,cAA6B71E,KAAK61E,aAAe,EAC7D,MAAM,IAAIz7E,MAAM4F,KAAKulE,MAAQ,8CAEjC,GAAiC,iBAAtBvlE,KAAK81E,cAA6B91E,KAAK81E,cAAgB,GAAK91E,KAAK81E,cAAgB,EACxF,MAAM,IAAI17E,MAAM4F,KAAKulE,MAAQ,0DAEjC,GAAkC,iBAAvBvlE,KAAK+1E,eAA8B/1E,KAAK+1E,cAAgB,EAC/D,MAAM,IAAI37E,MAAM4F,KAAKulE,MAAQ,+CAEjC,IAAK/lE,MAAMi1B,QAAQz0B,KAAKg2E,mBACgB,IAAjCh2E,KAAKg2E,iBAAiB78E,QACtB6G,KAAKg2E,iBAAiBnyB,MAAK,SAAUqyB,GAAM,MAAqB,iBAAPA,KAC5D,MAAM,IAAI97E,MAAM4F,KAAKulE,MAAQ,qEAEjC,GAAIvlE,KAAKi2E,eACAz2E,MAAMi1B,QAAQz0B,KAAKi2E,cAAgBj2E,KAAKi2E,YAAYpyB,MAAK,SAAUqyB,GAAM,MAAqB,iBAAPA,MAC5F,MAAM,IAAI97E,MAAM4F,KAAKulE,MAAQ,oDA4BrC,OAzBA3wE,OAAOkrC,eAAey1C,EAAarkB,UAAW,cAAe,CACzDt5B,IAAK,WAAc,OAAO53B,KAAK61E,cAC/B7iB,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAey1C,EAAarkB,UAAW,cAAe,CACzDt5B,IAAK,WAAc,OAAO53B,KAAK81E,cAC/B9iB,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAey1C,EAAarkB,UAAW,eAAgB,CAC1Dt5B,IAAK,WAAc,OAAO53B,KAAK+1E,eAC/B/iB,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAey1C,EAAarkB,UAAW,kBAAmB,CAC7Dt5B,IAAK,WAAc,OAAO53B,KAAKg2E,kBAC/BhjB,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAey1C,EAAarkB,UAAW,aAAc,CACxDt5B,IAAK,WAAc,OAAO53B,KAAKi2E,aAC/BjjB,YAAY,EACZ7jB,cAAc,IAEXomC,KCnDX,SAAS/K,GAAkB7D,EAAgBW,GAgBvC,SAASmD,EAAkBrB,EAAYC,EAAannB,EAAYonB,EAAc6M,GAC1E,IAAI9N,EAAUkB,GAAY5C,EAAeyC,EAAaC,EAAcnnB,EAAaA,GAAa,CAACA,EAAYA,EAAYknB,EAAYC,IAC/Hh3D,EAAOm3D,GAAY7C,EAAe0C,IAEtC,OADA/B,EAAc9sE,KAAK,CAAEmrE,UAAW2D,EAAe,YAAc,CAAE3D,UAAW2D,EAAe,KAAO6M,EAAkB,oBAAsB,UACjI,CAAE9N,QAASA,EAASh2D,KAAMA,GAErC,SAAS+jE,EAA2BhN,EAAYC,EAAannB,EAAYonB,GACrE,IAAIjqC,EAAKorC,EAAkBrB,EAAYC,EAAannB,EAAYonB,GAAc,GAC9E,MAAO,CACHjB,QAF2FhpC,EAAGgpC,QAG9FgO,kBAH8Gh3C,EAAGhtB,MAMzH,SAASikE,EAAsBlN,EAAYC,EAAaC,GAGpD,MAAO,CAAEiN,eA/Bb,SAAoC92B,EAAa6pB,GAC7C,IAAIjB,EAAUkB,GAAY5C,EAAe,EAAQlnB,GAAc,CAAC,EAAG,EAAGA,EAAa,IAC/E+2B,EAAmBhN,GAAY7C,EAAelnB,IAC9C42B,EAAoB7M,GAAY7C,EAAelnB,IAC/Cg3B,EAAkBjN,GAAY7C,EAAelnB,IAC7Ci3B,EAAsBlN,GAAY7C,EAAelnB,IAErD,OADA6nB,EAAc9sE,KAAK,CAAEmrE,UAAW2D,EAAe,YAAc,CAAE3D,UAAW2D,EAAe,qBAAuB,CAAE3D,UAAW2D,EAAe,sBAAwB,CAAE3D,UAAW2D,EAAe,oBAAsB,CAAE3D,UAAW2D,EAAe,yBAC3O,CACHjB,QAASA,EACTmO,iBAAkBA,EAClBH,kBAAmBA,EACnBI,gBAAiBA,EACjBC,oBAAqBA,GAiBJC,CAA2BvN,EAAYE,EAAe,mBAElCsN,eADpBR,EAA2BhN,EAAYC,EAAa,EAAGC,EAAe,oBAiG/F,MAAO,CACHuN,yBA/FJ,WAeI,MAAO,CACHC,OAfSV,EAA2B,EAAG,GAAI,EAAG,sBAgB9CW,OAfST,EAAsB,GAAI,GAAI,sBAgBvCU,OAfSV,EAAsB,GAAI,IAAK,sBAgBxCW,OAfSX,EAAsB,IAAK,IAAK,sBAgBzCY,OAfSZ,EAAsB,IAAK,IAAK,sBAgBzCa,OAfSb,EAAsB,IAAK,IAAK,sBAgBzCc,OAfSd,EAAsB,IAAK,IAAK,sBAgBzCe,OAfSf,EAAsB,IAAK,IAAK,sBAgBzCgB,OAfShB,EAAsB,IAAK,IAAK,sBAgBzCiB,OAfSjB,EAAsB,IAAK,IAAK,sBAgBzCkB,QAfUlB,EAAsB,IAAK,IAAK,uBAgB1CmB,QAfUnB,EAAsB,IAAK,IAAK,uBAgB1CoB,QAfUpB,EAAsB,IAAK,KAAM,uBAgB3CqB,QAfUrB,EAAsB,KAAM,KAAM,yBAkFhDsB,6BAhEJ,WA6CI,MAAO,CACHd,OA7CSV,EAA2B,KAAM,IAAK,EAAG,2BA8ClDW,OA7CSX,EAA2B,IAAK,IAAK,EAAG,2BA8CjDY,OA7CSZ,EAA2B,IAAK,IAAK,EAAG,2BA8CjDa,OA7CSb,EAA2B,IAAK,IAAK,EAAG,2BA8CjDc,OA7CSd,EAA2B,IAAK,IAAK,EAAG,2BA8CjDe,OA7CSf,EAA2B,IAAK,IAAK,EAAG,2BA8CjDgB,OA7CShB,EAA2B,IAAK,GAAI,EAAG,2BA8ChDiB,OA7CSjB,EAA2B,GAAI,IAAK,EAAG,2BA8ChDyB,gBAjCkB,CAClBC,uBAb2BrN,EAAkB,IAAK,GAAI,EAAG,2DAczDsN,gBAboBtN,EAAkB,IAAK,EAAG,EAAG,qDA6CjDuN,gBA9BkB,CAClBF,uBAf2BrN,EAAkB,KAAM,GAAI,EAAG,2DAgB1DsN,gBAfoBtN,EAAkB,KAAM,GAAI,EAAG,qDA4CnDwN,gBA3BkB,CAClBH,uBAjB2BrN,EAAkB,IAAK,GAAI,EAAG,2DAkBzDsN,gBAjBoBtN,EAAkB,IAAK,GAAI,EAAG,qDA2ClDyN,gBAxBkB,CAClBJ,uBAnB2BrN,EAAkB,IAAK,GAAI,EAAG,2DAoBzDsN,gBAnBoBtN,EAAkB,IAAK,GAAI,EAAG,qDA0ClD0N,gBArBkB,CAClBL,uBArB2BrN,EAAkB,IAAK,GAAI,EAAG,2DAsBzDsN,gBArBoBtN,EAAkB,IAAK,GAAI,EAAG,qDAyClD2N,gBAlBkB,CAClBN,uBAvB2BrN,EAAkB,IAAK,GAAI,EAAG,2DAwBzDsN,gBAvBoBtN,EAAkB,IAAK,GAAI,EAAG,wDCPvD,SAASpD,GAA2BR,GACvC,IAAIS,EAAgB,GAChBjoC,EAjFR,SAA2BwnC,EAAWS,GAClC,IAAI0C,EAAqBC,GAA0BpD,EAAWS,GAC9D,SAAS8O,EAA2Bl+B,EAAQof,EAAKgS,GAG7C,MAAO,CAAEjB,QAFK2B,EAAmB9xB,EAAS,WAAaof,EAAM,qBAAsB,EAAGgS,EAAe,YAE1E+M,kBADHrM,EAAmB9xB,EAAS,WAAaof,EAAM,mCAAoC,EAAGgS,EAAe,uBAGjI,SAASgN,EAAsBhf,GAC3B,IAAIgS,EAAe,oBAAsBhS,EACrC+gB,EAAsB,sBAAwB/gB,EAAM,aACpDghB,EAA4BhP,EAAe,kBAC3CiP,EAA4BjP,EAAe,kBAM/C,MAAO,CACHiN,eAAgB,CACZlO,QAPM2B,EAAmBqO,EAAsB,qBAAsB,EAAGC,EAA4B,YAQpG9B,iBAPexM,EAAmBqO,EAAsB,mBAAoB,EAAGC,EAA4B,qBAQ3GjC,kBAPgBrM,EAAmBqO,EAAsB,kBAAmB,EAAGC,EAA4B,sBAQ3G7B,gBAPczM,EAAmBqO,EAAsB,yBAA0B,EAAGC,EAA4B,oBAQhH5B,oBAPkB1M,EAAmBqO,EAAsB,6BAA8B,EAAGC,EAA4B,yBAS5H1B,eAAgBR,EAA2B,cAAe9e,EAAKihB,IAqBvE,SAAS9N,EAAkBvyB,EAAQoxB,GAG/B,MAAO,CAAEjB,QAFK2B,EAAmB9xB,EAAS,WAAY,EAAGoxB,EAAe,YAE7Cj3D,KADhB23D,EAAmB9xB,EAAS,UAAW,EAAGoxB,EAAe,UAGxE,SAASkP,EAA0BlhB,GAG/B,MAAO,CAAEwgB,uBAFoBrN,EAAkB,2BAA6BnT,EAAM,wBAAyB,kCAAoCA,EAAM,2BAE5FygB,gBADnCtN,EAAkB,2BAA6BnT,EAAM,kBAAmB,kCAAoCA,EAAM,qBAqB5I,MAAO,CACHuf,yBA/CJ,WACI,MAAO,CACHC,OAAQV,EAA2B,cAAe,EAAG,sBACrDW,OAAQT,EAAsB,GAC9BU,OAAQV,EAAsB,GAC9BW,OAAQX,EAAsB,GAC9BY,OAAQZ,EAAsB,GAC9Ba,OAAQb,EAAsB,GAC9Bc,OAAQd,EAAsB,GAC9Be,OAAQf,EAAsB,GAC9BgB,OAAQhB,EAAsB,GAC9BiB,OAAQjB,EAAsB,GAC9BkB,QAASlB,EAAsB,IAC/BmB,QAASnB,EAAsB,IAC/BoB,QAASpB,EAAsB,IAC/BqB,QAASrB,EAAsB,MAiCnCsB,6BApBJ,WACI,MAAO,CACHd,OAAQV,EAA2B,aAAc,EAAG,2BACpDW,OAAQX,EAA2B,aAAc,EAAG,2BACpDY,OAAQZ,EAA2B,aAAc,EAAG,2BACpDa,OAAQb,EAA2B,aAAc,EAAG,2BACpDc,OAAQd,EAA2B,aAAc,EAAG,2BACpDe,OAAQf,EAA2B,aAAc,EAAG,2BACpDgB,OAAQhB,EAA2B,aAAc,EAAG,2BACpDiB,OAAQjB,EAA2B,aAAc,EAAG,2BACpDyB,gBAAiBW,EAA0B,GAC3CR,gBAAiBQ,EAA0B,GAC3CP,gBAAiBO,EAA0B,GAC3CN,gBAAiBM,EAA0B,GAC3CL,gBAAiBK,EAA0B,GAC3CJ,gBAAiBI,EAA0B,MAU1ChO,CAAkB3D,EAAWS,GAAgBuP,EAA2Bx3C,EAAGw3C,yBAA0Be,EAA+Bv4C,EAAGu4C,6BAC5Ia,EAAY5R,EAAU,oBAE1B,GADAS,EAAc9sE,KAAK,CAAE0uE,aAAc,mBAAoBvD,UAAW,4BAC7DxS,GAAWslB,GACZ,MAAM,IAAIr+E,MAAM,yEAA2Eq+E,GAE/F,IAAIngD,EAAS,CACTogD,YAAa7B,IACb8B,iBAAkBf,IAClBgB,aAAc,CACVH,UAAWA,IAInB,OADAzP,GAA2BnC,EAAWS,GAC/B,CAAEhvC,OAAQA,EAAQgvC,cAAeA,GChGrC,SAASuR,GAAmBnxE,EAAG4wB,EAAQrC,GAC1C,OAAOyhC,IAAQ,WACX,IAAIrwB,EAAM8gC,GAAUzgE,EAAG4wB,EAAO+vC,QAASpyC,EAAS,QAEhD,OADAoR,EAAMwgC,GAAOxgC,EAAK/O,EAAO+9C,mBAClByC,GAAezxC,EAAK,EAAG,MCQ/B,SAAS0xC,GAAYrxE,EAAG4wB,GAC3B,OAAOo/B,IAAQ,WACX,IAAIshB,EAAS,KACT3xC,EAAMwxC,GAAmBnxE,EAAG4wB,EAAOw+C,OAAQ,CAAC,EAAG,IAyBnD,GAxBqB,CACjBx+C,EAAOy+C,OACPz+C,EAAO0+C,OACP1+C,EAAO2+C,OACP3+C,EAAO4+C,OACP5+C,EAAO6+C,OACP7+C,EAAO8+C,OACP9+C,EAAO++C,OACP/+C,EAAOg/C,OACPh/C,EAAOi/C,OACPj/C,EAAOk/C,QACPl/C,EAAOm/C,QACPn/C,EAAOo/C,QACPp/C,EAAOq/C,SAEI3iF,SAAQ,SAAUmsD,EAAOjoD,GACpC,IAAI+/E,EAAW//E,EAAI,EACfggF,EAxBhB,SAA+BD,GAC3B,MAAO,CAAC,EAAG,EAAG,EAAG,IAAIp1B,MAAK,SAAUyT,GAAO,OAAOA,IAAQ2hB,KAAe,CAAC,EAAG,GAAK,CAAC,EAAG,GAuBnDE,CAAsBF,GAEjD5xC,EAAMwxC,GADNxxC,EAhCZ,SAA4B3/B,EAAG4wB,EAAQrC,GACnC,OAAOyhC,IAAQ,WACX,IAAIrwB,EAAM+xC,GAAmB1xE,EAAG4wB,EAAO+vC,QAASpyC,EAAS,QAEzD,OADAoR,EAAMgyC,GAAahyC,EAAK/O,EAAOm+C,gBAAiBn+C,EAAOo+C,oBAAqBp+C,EAAO+9C,kBAAmB/9C,EAAOk+C,iBAJvG,sBAKCsC,GAAezxC,EAAK,EAAG,MA4BpBiyC,CAAmBjyC,EAAK8Z,EAAMo1B,eAAgB2C,GACtB/3B,EAAMy1B,eAAgB,CAAC,EAAG,IACvC,KAAbqC,IACAD,EAAS3xC,MAGF,OAAX2xC,EACA,MAAM,IAAI5+E,MAAM,iDAEpB,MAAO,CACHitC,IAAKA,EACL2xC,OAAQA,MChBpB,SAASO,GAAIjxB,EAAOpvD,EAAGgK,GACnB,IAAIs2E,EAAYlxB,EAAMr0C,YAClBi4C,EAAQ7lD,KAAKW,IAAIwyE,EAAUtgF,GAAG,GAAIsgF,EAAUtgF,GAAG,IAC/CizD,EAAQ9lD,KAAKW,IAAIwyE,EAAUtgF,GAAG,GAAIsgF,EAAUtgF,GAAG,IAC/CkzD,EAAQ/lD,KAAKQ,IAAI2yE,EAAUtgF,GAAG,GAAIsgF,EAAUtgF,GAAG,IAC/CmzD,EAAQhmD,KAAKQ,IAAI2yE,EAAUtgF,GAAG,GAAIsgF,EAAUtgF,GAAG,IAC/CozD,EAAQjmD,KAAKW,IAAIwyE,EAAUt2E,GAAG,GAAIs2E,EAAUt2E,GAAG,IAC/CqpD,EAAQlmD,KAAKW,IAAIwyE,EAAUt2E,GAAG,GAAIs2E,EAAUt2E,GAAG,IAC/CspD,EAAQnmD,KAAKQ,IAAI2yE,EAAUt2E,GAAG,GAAIs2E,EAAUt2E,GAAG,IAC/CupD,EAAQpmD,KAAKQ,IAAI2yE,EAAUt2E,GAAG,GAAIs2E,EAAUt2E,GAAG,IAC/CwpD,GAASN,EAAQF,IAAUG,EAAQF,GACnCQ,GAASH,EAAQF,IAAUG,EAAQF,GACvC,GAAIG,GAAS,GAAKC,GAAS,EACvB,OAAO,EAEX,IAAIC,EAAmBvmD,KAAKQ,IAAIqlD,EAAOI,GACnCO,EAAmBxmD,KAAKQ,IAAIslD,EAAOI,GACnCO,EAAmBzmD,KAAKW,IAAIolD,EAAOI,GACnCO,EAAmB1mD,KAAKW,IAAIqlD,EAAOI,GACnCO,EAAmB3mD,KAAKQ,IAAIimD,EAAmBF,EAAkB,GACjEvmD,KAAKQ,IAAIkmD,EAAmBF,EAAkB,GAClD,OAAOG,GAAoBN,EAAQC,EAAQK,GCnC/C,SAASysB,GAAiBC,EAAIC,GAC1B,IAAIt6C,EAhBR,SAA2C33B,GACvC,IAAIkyE,EAAMlM,GAAWsF,GAAatrE,EAAG,CAAC,EAAG,KACrCmyE,EAAQ,CACR5hB,GAAO2hB,EAAI,GAAIA,EAAI,IACnB3hB,GAAO2hB,EAAI,GAAIA,EAAI,KAMvB,MAAO,CACHC,MAAOA,EACP1gB,QANU,CACV0O,GAAO+R,EAAI,GAAIE,GAAOD,EAAM,GAAI5O,GAAU,KAC1CpD,GAAO+R,EAAI,GAAIE,GAAOD,EAAM,GAAI5O,GAAU,OAQrC8O,CAAkCL,GAAKG,EAAQx6C,EAAGw6C,MAAO1gB,EAAU95B,EAAG85B,QAC3EygB,EAAMlM,GAAWsF,GAAa2G,EAAI,CAAC,EAAG,KACtCK,EAAWF,GAAOnH,GAAOsH,GAAOH,GAAOF,EAAI,GAAI3O,GAAU,KAAM4O,EAAM,IAAK5O,GAAU,IACpFiP,EAAWrS,GAAO8K,GAAOmH,GAAOF,EAAI,GAAI3O,GAAU,KAAM4O,EAAM,IAAK1gB,EAAQ,IAC3EghB,EAAWL,GAAOnH,GAAOsH,GAAOH,GAAOF,EAAI,GAAI3O,GAAU,KAAM4O,EAAM,IAAK5O,GAAU,IACpFmP,EAAWvS,GAAO8K,GAAOmH,GAAOF,EAAI,GAAI3O,GAAU,KAAM4O,EAAM,IAAK1gB,EAAQ,IAC/E,OAAO6Z,GAAa1P,GAAS,CACzBrL,GAAOiiB,EAAUF,GACjB/hB,GAAOmiB,EAAUD,GACjBtS,GAAOqS,EAAUF,GACjBnS,GAAOuS,EAAUD,KACjB,CAAC,EAAG,IC1BL,SAASE,GAAmB3yE,EAAG4wB,GAClC,OAAOo/B,IAAQ,WACX,IAAI6J,EAAY75D,EAAE+L,MAAM,GAGxB,MAAO,CACH6mE,sBAHwBC,GAAWzR,GAAUphE,EAAG4wB,EAAOw/C,wBAAyB,CAACvW,GAAY,EAAG,EAAG,IAInGiZ,gBAHkBD,GAAWzR,GAAUphE,EAAG4wB,EAAOy/C,iBAAkB,CAACxW,GAAY,EAAG,QCN/F,ICAWkZ,GDAPC,GAAuC,WACvC,SAASA,EAAsBr7C,GAC3B,IAAI+9B,OAAY,IAAP/9B,EAAgB,GAAKA,EAAI4uC,EAAgB7Q,EAAG6Q,cAAe0M,EAAavd,EAAGud,WAIpF,GAHA36E,KAAKulE,MAAQ,wBACbvlE,KAAK46E,eAAiB3M,GAAiB,GACvCjuE,KAAK66E,YAAcF,GAAc,IACE,iBAAxB36E,KAAK46E,gBAA+B56E,KAAK46E,gBAAkB,GAAK56E,KAAK46E,gBAAkB,EAC9F,MAAM,IAAIxgF,MAAM4F,KAAKulE,MAAQ,4DAEjC,GAAgC,iBAArBvlE,KAAK66E,YACZ,MAAM,IAAIzgF,MAAM4F,KAAKulE,MAAQ,yCAarC,OAVA3wE,OAAOkrC,eAAe46C,EAAsBxpB,UAAW,gBAAiB,CACpEt5B,IAAK,WAAc,OAAO53B,KAAK46E,gBAC/B5nB,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAe46C,EAAsBxpB,UAAW,aAAc,CACjEt5B,IAAK,WAAc,OAAO53B,KAAK66E,aAC/B7nB,YAAY,EACZ7jB,cAAc,IAEXurC,KEVPI,GAAgC,SAAU7kB,GAE1C,SAAS6kB,IACL,OAAO7kB,EAAO56D,KAAK2E,KAAM,mBAAqBA,KAwFlD,OA1FAoxD,GAAU0pB,EAAgB7kB,GAI1B6kB,EAAe5pB,UAAU8Z,aAAe,SAAUvyE,GAC9C,IAAI6/B,EAASt4B,KAAKs4B,OAClB,IAAKA,EACD,MAAM,IAAIl+B,MAAM,gDAEpB,OAAOs9D,IAAQ,WACX,IAAIqjB,EAActiF,EAAM0pE,cAAc,KAAK,GAAOY,UAE9ClrC,EAAWkhD,GADP9gB,GAAO0a,GAAOoI,EAAa9P,GAAU,sBAAwBA,GAAU,IACjD3yC,EAAOogD,aACjCr5C,ECxBT,SAAyB33B,EAAGsxE,EAAQ1gD,GACvC,OAAOo/B,IAAQ,WACX,IAAI0Q,EAAQyQ,GAAmBnxE,EAAG4wB,EAAOw+C,OAAQ,CAAC,EAAG,IACjDvO,EAAQsQ,GAAmBzQ,EAAO9vC,EAAOy+C,OAAQ,CAAC,EAAG,IACrDtO,EAAQoQ,GAAmBtQ,EAAOjwC,EAAO0+C,OAAQ,CAAC,EAAG,IACrDnO,EAAQgQ,GAAmBpQ,EAAOnwC,EAAO2+C,OAAQ,CAAC,EAAG,IACrD+D,EAAQnC,GAAmBhQ,EAAOvwC,EAAO4+C,OAAQ,CAAC,EAAG,IACrD+D,EAAQpC,GAAmBmC,EAAO1iD,EAAO6+C,OAAQ,CAAC,EAAG,IACrD+D,EAAQrC,GAAmBoC,EAAO3iD,EAAO8+C,OAAQ,CAAC,EAAG,IACrD+D,EAAQtC,GAAmBqC,EAAO5iD,EAAO++C,OAAQ,CAAC,EAAG,IACrD+D,EAAiBf,GAAmBrB,EAAQ1gD,EAAOu/C,iBACnDwD,EAAiBhB,GAAmB3yE,EAAG4wB,EAAO0/C,iBAC9CsD,EAAiBjB,GAAmB9R,EAAOjwC,EAAO2/C,iBAClDsD,EAAiBlB,GAAmBxR,EAAOvwC,EAAO4/C,iBAClDsD,EAAiBnB,GAAmBY,EAAO3iD,EAAO6/C,iBAClDsD,EAAiBpB,GAAmBc,EAAO7iD,EAAO8/C,iBAiBtD,MAAO,CACHsD,eAjBiB1jB,GAAU,CAC3BojB,EAAed,sBACfe,EAAef,sBACfgB,EAAehB,sBACfiB,EAAejB,sBACfkB,EAAelB,sBACfmB,EAAenB,uBAChB,GAWCqB,iBAVmB3jB,GAAU,CAC7BojB,EAAeZ,gBACfa,EAAeb,gBACfc,EAAed,gBACfe,EAAef,gBACfgB,EAAehB,gBACfiB,EAAejB,iBAChB,ODPUoB,CAAgB/jD,EAASwP,IAAKxP,EAASmhD,OAAQ1gD,EAAOqgD,kBAC/D,OJEL,SAAqB+C,EAAgBC,EAAkBrjD,GAC1D,OAAOo/B,IAAQ,WACX,IAAI6J,EAAYma,EAAejoE,MAAM,GACjC60C,EAAQmxB,GAAiBc,GAAWsB,GAAQvjD,EAAOmgD,UAAW,CAAClX,EAAW,EAAG,IAAK,EAAE,EAAG,IAAKgZ,GAAWmB,EAAgB,EAAE,EAAG,KAChIpzB,EAAQiyB,GAAWjyB,EAAO,CAACiZ,EAAYjZ,EAAM70C,MAAM,GAAK8tD,EAAY,IACpE,IAAIua,EAAmBC,GAAWC,GAASL,EAAkB,CAAC,EAAG,EAAG,GAAI,EAAE,GAAI,GAAI,KAC9EhyB,EAASqyB,GAASF,EAAkB,CAAC,EAAG,EAAG,GAAI,EAAE,GAAI,EAAG,IAI5D,OAHAnyB,EAAS4wB,GAAW5wB,EAAQ,CAAC4X,EAAW5X,EAAOl2C,MAAM,KAG9C,CACH60C,MAHeolB,GAAWplB,GAI1BqB,OAHgB+jB,GAAW/jB,OIXpBsyB,CAD4F58C,EAAGq8C,eAAmCr8C,EAAGs8C,iBACvFrjD,EAAOsgD,kBAGpEkC,EAAe5pB,UAAUqa,QAAU,SAAU9yE,GACzC,OAAOg5D,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIq/B,EACJ,OAAO2yB,GAAYhyD,MAAM,SAAUo9D,GAC/B,OAAQA,EAAGnL,OACP,KAAK,EAED,OADA5yB,EAAKr/B,KAAKgrE,aACH,CAAC,EAAaxH,GAAW/qE,IACpC,KAAK,EAAG,MAAO,CAAC,EAAc4mC,EAAGv4B,MAAM9G,KAAM,CAACo9D,EAAGlL,kBAKjE4oB,EAAe5pB,UAAUgrB,YAAc,SAAUzjF,EAAOZ,GAEpD,YADgB,IAAZA,IAAsBA,EAAU,IAC7B45D,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIq/B,EAAIs7C,EAAY1M,EAAehK,EAAU7G,EAAI+e,EAAQC,EAAS9zB,EAAOqB,EAAQzwD,EAAGmjF,EAAYpV,EAAIC,EAAkBhhE,EAASo2E,EAAcra,EAAWlN,EAAMC,EAAMwkB,EAAW+C,EAC/K,OAAOvqB,GAAYhyD,MAAM,SAAUw8E,GAC/B,OAAQA,EAAGvqB,OACP,KAAK,EAED,OADA5yB,EAAK,IAAIq7C,GAAsB7iF,GAAU8iF,EAAat7C,EAAGs7C,WAAY1M,EAAgB5uC,EAAG4uC,cACjF,CAAC,EAAazK,GAAW/qE,IACpC,KAAK,EAKD,IAJAwrE,EAAWuY,EAAGtqB,OACdkL,EAAKp9D,KAAKgrE,aAAa/G,GAAWkY,EAAS/e,EAAG9U,MAAO8zB,EAAUhf,EAAGzT,OAClErB,EAAQ6zB,EAAO,GACfxyB,EAASyyB,EAAQ,GACZljF,EAAI,EAAGA,EAAIijF,EAAOhjF,OAAQD,IAC3BijF,EAAOjjF,GAAGmqC,UACV+4C,EAAQljF,GAAGmqC,UAGf,OADA6jC,GAAMD,EAAKznE,OAAOC,KACX,CAAC,EAAakqD,EAAOryD,QAChC,KAAK,EA0BD,OAzBA+kF,EAAanV,EAAGpgE,MAAMmgE,EAAI,CAACuV,EAAGtqB,SACf,GACfhsD,ELnEjB,SAA2BoiD,EAAOqB,EAAQC,EAAeC,EAAcC,GAC1E,IAAIhB,EAAWR,EAAM70C,MAAM,GACvBgpE,EAAap2E,KAAKW,IAAI4iD,EAAed,GACrCkC,EAAarB,EACZ5rD,KAAI,SAAUktD,EAAOC,GAAY,OAAUD,MAAOA,EAAOC,SAAUA,MACnEltD,QAAO,SAAU7H,GAAK,OAAOA,EAAE80D,MAAQnB,KACvCh1C,MAAK,SAAUm4C,EAAIC,GAAM,OAAOA,EAAGjC,MAAQgC,EAAGhC,SAE/C3xD,EAAW,GAoBf,OAnBA0xD,EAAWh2D,SAAQ,SAAUmB,GACzB,KAAImD,EAASH,QAAUsjF,GAAvB,CAIA,IADA,IAAIjxB,EAAgBr1D,EAAE80D,MACb/nD,EAAI5J,EAASH,OAAS,EAAG+J,GAAK,IAAKA,EAAG,CAC3C,IAAIwoD,EAAM6tB,GAAIjxB,EAAOnyD,EAAE+0D,SAAU5xD,EAAS4J,IAC1C,GAAY,IAARwoD,IAGJv1D,EAAE80D,OAAsBS,GAZc7B,EAAe,EAAI,EAarD1zD,EAAE80D,OAASnB,GACX,MAGJ0B,IAAkBr1D,EAAE80D,OACpB3xD,EAASkB,KAAKrE,EAAE+0D,cAGjB5xD,EKuCuB2wD,CAAkB3B,EAAO+zB,EAAY1B,EADhC,GAC0D1M,GACzEqO,EAAerY,EAASvC,2BAA2B,GACnDO,EAAYgC,EAAShC,UACrBlN,EAAOkN,EAAYqa,EAAa75E,MAChCuyD,EAAOiN,EAAYqa,EAAa95E,OAChCg3E,EAAYlxB,EAAMr0C,YAClBsoE,EAAUr2E,EACLnI,KAAI,SAAUu5D,GACf,IAAIj4B,EAAK,CACLh5B,KAAKQ,IAAI,EAAG2yE,EAAUliB,GAAK,IAC3BjxD,KAAKW,IAAI,EAAKwyE,EAAUliB,GAAK,KAC/Bv5D,KAAI,SAAUyW,GAAO,OAAOA,EAAMwgD,KAAUjmD,EAAMswB,EAAG,GAAI3mB,EAAS2mB,EAAG,GACnE+9B,EAAK,CACL/2D,KAAKQ,IAAI,EAAG2yE,EAAUliB,GAAK,IAC3BjxD,KAAKW,IAAI,EAAKwyE,EAAUliB,GAAK,KAC/Bv5D,KAAI,SAAUyW,GAAO,OAAOA,EAAMugD,KAAU/lD,EAAOouD,EAAG,GAAIzkD,EAAQykD,EAAG,GACvE,OAAO,IAAIxG,GAAcylB,EAAW/kB,GAAM,IAAIY,GAAKlpD,EAAMD,EAAK4J,EAAQ3J,EAAM0J,EAAS3J,GAAM,CACvFvM,OAAQyhE,EAASlC,eAAe,GAChCt/D,MAAOwhE,EAASjC,cAAc,QAGtC1Z,EAAMjlB,UACNsmB,EAAOtmB,UACA,CAAC,EAAck5C,WAK1CzB,EAAe5pB,UAAU4V,oBAAsB,WAC3C,MAAO,yBAEXgU,EAAe5pB,UAAUmW,2BAA6B,SAAUR,GAC5D,OAAOQ,GAA2BR,IAEtCiU,EAAe5pB,UAAUqW,cAAgB,SAAU9yD,GAC/C,OTiCD,SAAuBA,GAC1B,IAAI6yD,EAAgB,GAChBjoC,EAAK+qC,GAAsB31D,GAAUkyD,EAAiBtnC,EAAGsnC,eAAgB4D,EAAsBlrC,EAAGkrC,oBAClGnN,EAAKoN,GAAkB7D,EAAgBW,GAAgBuP,EAA2BzZ,EAAGyZ,yBAA0Be,EAA+Bxa,EAAGwa,6BACjJc,EAAc7B,IACd8B,EAAmBf,IAEnBgB,EAAe,CACfH,UAFYiE,GAAY/V,EAAe,OAAW,CAAC,EAAG,KAAM,KAKhE,GADAW,EAAc9sE,KAAK,CAAEmrE,UAAW,2BACK,IAAjC4E,IAAsBpxE,OACtB,MAAM,IAAIiB,MAAM,kCAAoCmwE,IAAsBpxE,QAE9E,MAAO,CACHm/B,OAAQ,CACJogD,YAAaA,EACbC,iBAAkBA,EAClBC,aAAcA,GAElBtR,cAAeA,GSrDRC,CAAc9yD,IAElBqmE,GACTxV,IEvGSqX,ICW2B,SAAU1mB,GAE5C,SAAS2mB,IACL,OAAkB,OAAX3mB,GAAmBA,EAAOnvD,MAAM9G,KAAMwxD,YAAcxxD,KAF/DoxD,GAAUwrB,EAAkB3mB,IAK9B6kB,IDjBuB,CACrB,IAAInnB,GAAM,QAAU,SACpB,IAAIA,GAAM,QAAS,SACnB,IAAIA,GAAM,QAAS,SACnB,IAAIA,GAAM,OAAQ,SAClB,IAAIA,GAAM,QAAS,WAEZkpB,GAAwB,CAC/B,IAAIlpB,GAAM,SAAU,UACpB,IAAIA,GAAM,SAAU,UACpB,IAAIA,GAAM,SAAU,UACpB,IAAIA,GAAM,SAAU,UACpB,IAAIA,GAAM,SAAU,WAEbmpB,GAAqB,CAAC,QAAS,QAAS,QEhB/CC,GAAW,SAAUl9D,GAAO,MAAsB,iBAARA,GCCvC,SAASm9D,GAAMt1E,GAClB,OAAOgwD,IAAQ,WACX,IAAI1wD,EAAM2rE,GAAOjrE,EAAGujE,GAAU,qBAC9B,OAAOpD,GAAOK,GAAQjQ,GAAOvwD,EAAGV,IAAOA,MCFxC,SAASi2E,GAAkBv1E,EAAG4wB,GACjC,OAAOo/B,IAAQ,WACX,IAAIrwB,EAAM61C,GAAOx1E,EAAG,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAKjD,OAJA2/B,EAAM8gC,GAAU9gC,EAAK/O,EAAOlgB,KAAKiwD,QAAS,CAAC,EAAG,GAAI,SAClDhhC,EAAM4wB,GAAO5wB,EAAK/O,EAAO6kD,GAAGn3B,KAC5B3e,EAAMsrC,GAAOtrC,EAAK/O,EAAO6kD,GAAGC,SAErBJ,GADP31C,EAAMwgC,GAAOxgC,EAAK/O,EAAOlgB,KAAK/F,UCN/B,SAASo1D,GAAuB//D,EAAG4wB,GACtC,OAAOo/B,IAAQ,WACX,IAAIrwB,EAAM61C,GAAOx1E,EAAG,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAGjD,OAFA2/B,EAAMqgC,GAAmBrgC,EAAK/O,EAAOqvC,iBAAkBrvC,EAAOsvC,iBAAkB,CAAC,EAAG,GAAI,SAEjFoV,GADP31C,EAAMwgC,GAAOxgC,EAAK/O,EAAOjmB,UCFjC,SAASm4D,GAAkB7D,EAAgBW,GACvC,IAAImD,EAAoBtB,GAAyBxC,EAAgBW,GAYjE,IAAIoD,EAA6BZ,GAAkCnD,EAAgBW,GACnF,MAAO,CACHmD,kBAAmBA,EACnB4S,+BARJ,SAAwCjU,EAAYC,EAAaC,GAG7D,MAAO,CAAElxD,KAFEqyD,EAAkBrB,EAAYC,EAAa,EAAGC,EAAe,SAEnD6T,GATzB,SAAgC7mF,EAAMgzE,GAClC,IAAItjB,EAAMwjB,GAAY7C,EAAerwE,IACjC8mF,EAAU5T,GAAY7C,EAAerwE,IAEzC,OADAgxE,EAAc9sE,KAAK,CAAEmrE,UAAW2D,EAAe,QAAU,CAAE3D,UAAW2D,EAAe,aAC9E,CAAEtjB,IAAKA,EAAKo3B,QAASA,GAInBE,CAAuBjU,EAAaC,EAAe,SAO5DoB,2BAA4BA,GClBpC,SAASF,GAAkB3D,EAAWS,GAClC,IAAI0C,EAAqBC,GAA0BpD,EAAWS,GAM9D,SAASmD,EAAkBvyB,GAGvB,MAAO,CAAEmwB,QAFK2B,EAAmB9xB,EAAS,WAAY,GAE3B7lC,KADhB23D,EAAmB9xB,EAAS,QAAS,IASpD,MAAO,CACHuyB,kBAAmBA,EACnB4S,+BARJ,SAAwCnlC,GAGpC,MAAO,CAAE9/B,KAFEqyD,EAAkBvyB,EAAS,SAEjBilC,GAbzB,SAAgCjlC,GAG5B,MAAO,CAAE8N,IAFCgkB,EAAmB9xB,EAAS,OAAQ,GAE3BklC,QADLpT,EAAmB9xB,EAAS,WAAY,IAU7ColC,CAAuBplC,EAAS,SAOzCwyB,2BAJ6BX,GAA+BC,KVnBpE,SAAWyQ,GACPA,EAAmBA,EAAuB,GAAI,KAAO,KACrDA,EAAmBA,EAAuB,GAAI,KAAO,KACrDA,EAAmBA,EAAuB,GAAI,KAAO,KACrDA,EAAmBA,EAAuB,GAAI,KAAO,KAJzD,CAKGA,KAAuBA,GAAqB,KAC/C,IAAI8C,GAAmC,WACnC,SAASA,EAAkBl+C,GACvB,IAAI+9B,OAAY,IAAP/9B,EAAgB,GAAKA,EAAI4iC,EAAY7E,EAAG6E,UAAWnY,EAAiBsT,EAAGtT,eAIhF,GAHA9pD,KAAKulE,MAAQ,oBACbvlE,KAAKwhE,WAAaS,GAAa,IAC/BjiE,KAAKw9E,gBAAkB1zB,GAAkB,GACV,iBAApB9pD,KAAKwhE,YAA2BxhE,KAAKwhE,WAAa,IAAO,EAChE,MAAM,IAAIpnE,MAAM4F,KAAKulE,MAAQ,wDAEjC,GAAoC,iBAAzBvlE,KAAKw9E,iBAAgCx9E,KAAKw9E,iBAAmB,GAAKx9E,KAAKw9E,iBAAmB,EACjG,MAAM,IAAIpjF,MAAM4F,KAAKulE,MAAQ,6DAarC,OAVA3wE,OAAOkrC,eAAey9C,EAAkBrsB,UAAW,YAAa,CAC5Dt5B,IAAK,WAAc,OAAO53B,KAAKwhE,YAC/BxO,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAey9C,EAAkBrsB,UAAW,iBAAkB,CACjEt5B,IAAK,WAAc,OAAO53B,KAAKw9E,iBAC/BxqB,YAAY,EACZ7jB,cAAc,IAEXouC,KWbPE,GAAgC,SAAUxnB,GAE1C,SAASwnB,EAAezjD,GACpB,IAAIy+B,EAAQxC,EAAO56D,KAAK2E,KAAM,eAAiBA,KAG/C,ONtBD,SAAwBg6B,GAC3B,IAAKA,EACD,MAAM,IAAI5/B,MAAM,mBAAqB4/B,GAEzC,GAAyC,kBAA9BA,EAAO0jD,mBACd,MAAM,IAAItjF,MAAM,wDAA0D4/B,EAAO0jD,oBAErF,IAAKX,GAAS/iD,EAAO6vB,eAAiB7vB,EAAO6vB,aAAe,GAAK7vB,EAAO6vB,aAAe,EACnF,MAAM,IAAIzvD,MAAM,gEAAkE4/B,EAAO6vB,cAE7F,IAAKrqD,MAAMi1B,QAAQuF,EAAO2jD,WAClB3jD,EAAO2jD,QAAQxkF,SACf6gC,EAAO2jD,QAAQ/wC,OAAM,SAAUz2C,GAAK,MAAoB,iBAANA,KACtD,MAAM,IAAIiE,MAAM,kEAAoEi3C,KAAKC,UAAUtX,EAAO2jD,UAE9G,IAAKn+E,MAAMi1B,QAAQuF,EAAO4jD,WAClB5jD,EAAO4jD,QAAQzkF,SACf6gC,EAAO4jD,QAAQ7/E,KAAI,SAAU3I,GAAK,OAAOA,GAAK,MAAOw3C,OAAM,SAAUx3C,GAAK,OAAO2nF,GAAS3nF,EAAEsS,IAAMq1E,GAAS3nF,EAAEuS,MACjH,MAAM,IAAIvN,MAAM,wEAA0Ei3C,KAAKC,UAAUtX,EAAO4jD,UAEpH,GAAI5jD,EAAOy9B,WAAaj4D,MAAMi1B,QAAQuF,EAAOy9B,UACZ,IAA1Bz9B,EAAOy9B,QAAQt+D,SACd6gC,EAAOy9B,QAAQ7qB,MAAMmwC,KACzB,MAAM,IAAI3iF,MAAM,8EAAgFi3C,KAAKC,UAAUtX,EAAOy9B,UMHtHomB,CAAe7jD,GACfy+B,EAAMqlB,QAAU9jD,EACTy+B,EAsPX,OA3PArH,GAAUqsB,EAAgBxnB,GAO1BrhE,OAAOkrC,eAAe29C,EAAevsB,UAAW,SAAU,CACtDt5B,IAAK,WACD,OAAO53B,KAAK89E,SAEhB9qB,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAe29C,EAAevsB,UAAW,kBAAmB,CAC/Dt5B,IAAK,WACD,OAAO53B,KAAKg6B,OAAO+jD,iBAAmB/9E,KAAKg6B,OAAO2jD,QAAQxkF,OAAS,GAEvE65D,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAe29C,EAAevsB,UAAW,kBAAmB,CAC/Dt5B,IAAK,WACD,OAAO,GAAK53B,KAAK+9E,gBAAkB/9E,KAAKg6B,OAAO2jD,QAAQxkF,OAAS,IAEpE65D,YAAY,EACZ7jB,cAAc,IAElBsuC,EAAevsB,UAAU8sB,cAAgB,SAAUt2E,EAAG4wB,GAClD,IAAI+O,EAAM41C,GAAkBv1E,EAAG4wB,EAAO8vC,OActC,OAZA/gC,EAAM41C,GADN51C,EAAMuoC,GAAWvoC,EAAK,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,QACT/O,EAAOiwC,OAEpClhC,EAAM41C,GADN51C,EAAMuoC,GAAWvoC,EAAK,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,QACT/O,EAAOmwC,OAEpCphC,EAAM41C,GADN51C,EAAMuoC,GAAWvoC,EAAK,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,QACT/O,EAAOuwC,OAEpCxhC,EAAM41C,GADN51C,EAAMuoC,GAAWvoC,EAAK,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,QACT/O,EAAO0iD,OAEpC3zC,EAAM41C,GADN51C,EAAMuoC,GAAWvoC,EAAK,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,QACT/O,EAAO2iD,OAEpC5zC,EAAM41C,GADN51C,EAAMuoC,GAAWvoC,EAAK,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,QACT/O,EAAO4iD,OAE7BpS,GADPzhC,EAAM41C,GAAkB51C,EAAK/O,EAAO6iD,OACd7iD,EAAO2lD,MAAO,SAAS,IAEjDR,EAAevsB,UAAUgtB,aAAe,SAAUx2E,EAAG4wB,GACjD,IAAI+O,EAAMrnC,KAAKg6B,OAAOmkD,mBAChBnB,GAAMlU,GAAUphE,EAAG4wB,EAAO8vC,MAAO,SAAS,IAC1CX,GAAuB//D,EAAG4wB,EAAO8vC,OAcvC,OAZA/gC,EAAMogC,GADNpgC,EAAMuoC,GAAWvoC,EAAK,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,QACJ/O,EAAOiwC,OAEzClhC,EAAMogC,GADNpgC,EAAMuoC,GAAWvoC,EAAK,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,QACJ/O,EAAOmwC,OAEzCphC,EAAMogC,GADNpgC,EAAMuoC,GAAWvoC,EAAK,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,QACJ/O,EAAOuwC,OAEzCxhC,EAAMogC,GADNpgC,EAAMuoC,GAAWvoC,EAAK,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,QACJ/O,EAAO0iD,OAEzC3zC,EAAMogC,GADNpgC,EAAMuoC,GAAWvoC,EAAK,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,QACJ/O,EAAO2iD,OACzC5zC,EAAMuoC,GAAWvoC,EAAK,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,QACtCA,EAAM/O,EAAO4iD,MAAQzT,GAAuBpgC,EAAK/O,EAAO4iD,OAAS7zC,EAE1DyhC,GADPzhC,EAAM/O,EAAO6iD,MAAQ1T,GAAuBpgC,EAAK/O,EAAO6iD,OAAS9zC,EAC3C/O,EAAO2lD,MAAO,SAAS,IAEjDR,EAAevsB,UAAU8Z,aAAe,SAAUvyE,EAAOwpE,GACrD,IAAIxJ,EAAQz4D,KACRs4B,EAASt4B,KAAKs4B,OAClB,IAAKA,EACD,MAAM,IAAIl+B,MAAM,4CAEpB,OAAOs9D,IAAQ,WACX,IAAIqjB,EAActiF,EAAM0pE,cAAcF,GAAW,GAAOc,UAKxD,OADAgY,GAHAA,EAActiB,EAAMz+B,OAAOy9B,QACrB/hD,GAAUqlE,EAAatiB,EAAMz+B,OAAOy9B,SACpCsjB,GACoBj6B,IAAImqB,GAAU,MACjCxS,EAAMz+B,OAAO0jD,mBACdjlB,EAAMylB,aAAanD,EAAaziD,GAChCmgC,EAAMulB,cAAcjD,EAAaziD,OAG/CmlD,EAAevsB,UAAUqa,QAAU,SAAU9yE,EAAOwpE,GAChD,OAAOxQ,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIq/B,EACJ,OAAO2yB,GAAYhyD,MAAM,SAAUo9D,GAC/B,OAAQA,EAAGnL,OACP,KAAK,EAED,OADA5yB,EAAKr/B,KAAKgrE,aACH,CAAC,EAAaxH,GAAW/qE,IACpC,KAAK,EAAG,MAAO,CAAC,EAAa4mC,EAAGv4B,MAAM9G,KAAM,CAACo9D,EAAGlL,OAAQ+P,KACxD,KAAK,EAAG,MAAO,CAAC,EAAc7E,EAAGlL,gBAKjDurB,EAAevsB,UAAUktB,OAAS,SAAU3lF,EAAO4lF,GAE/C,YADsB,IAAlBA,IAA4BA,EAAgB,IACzC5sB,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIq/B,EAAI4iC,EAAWnY,EAAgBma,EAAU58B,EAAKi3C,EAAMhN,EAAiBiL,EAASj0B,EAAOqB,EAAQ40B,EAAaC,EAAYt4E,EACtHuyD,EAAQz4D,KACZ,OAAOgyD,GAAYhyD,MAAM,SAAUo9D,GAC/B,OAAQA,EAAGnL,OACP,KAAK,EAED,OADA5yB,EAAK,IAAIk+C,GAAkBc,GAAgBpc,EAAY5iC,EAAG4iC,UAAWnY,EAAiBzqB,EAAGyqB,eAClF,CAAC,EAAa0Z,GAAW/qE,IACpC,KAAK,EAED,OADAwrE,EAAW7G,EAAGlL,OACP,CAAC,EAAalyD,KAAKgrE,aAAa/G,EAAUhC,IACrD,KAAK,EAOD,OANA56B,EAAM+1B,EAAGlL,OACTosB,EAAO5mB,IAAQ,WAAc,OAAOgW,GAAWrmC,GAAK,GAAG6d,gBACvDosB,EAAkB,CACd7uE,MAAOwhE,EAASjC,cAAc,GAC9Bx/D,OAAQyhE,EAASlC,eAAe,IAE7B,CAAC,EAAa/hE,KAAKy+E,aAAaH,EAAMra,EAASvC,2BAA2B,GAAI5X,IACzF,KAAK,EAYD,OAXAyyB,EAAUnf,EAAGlL,OACb7qB,EAAIhE,UACJi7C,EAAKj7C,UACLilB,EAAQi0B,EAAQx+E,KAAI,SAAU6nC,GAAO,OAAOA,EAAIwuB,OAChDzK,EAAS4yB,EAAQx+E,KAAI,SAAU6nC,GAAO,OAAOA,EAAIqlB,SACjDszB,EAAchC,EAAQx+E,KAAI,SAAU6nC,GAAO,OAAOA,EAAIuwB,cACtDqoB,EAAajC,EAAQx+E,KAAI,SAAU6nC,GAAO,OAAO6yB,EAAMz+B,OAAO2jD,QAAQ/3C,EAAIqsB,UAC1E/rD,EAAU+jD,GAAkB3B,EAAMvqD,KAAI,SAAUq2D,GAAO,OAAOA,EAAIQ,QAAQqN,MAAgBtY,EAAQ3pD,KAAKg6B,OAAO6vB,cAAc,GAIrH,CAAC,EAHK3jD,EAAQnI,KAAI,SAAUu5D,GAC/B,OAAO,IAAIpB,GAAgBvM,EAAO2N,GAAMinB,EAAYjnB,GAAMknB,EAAWlnB,GAAMhP,EAAMgP,GAAMga,eAO/GmM,EAAevsB,UAAU4V,oBAAsB,WAC3C,MAAO,IAEX2W,EAAevsB,UAAUmW,2BAA6B,SAAUR,GAC5D,ODhID,SAAoCA,EAAW7sC,GAClD,IAEI1B,EAFAgvC,EAAgB,GAChBjoC,EAAKmrC,GAAkB3D,EAAWS,GAAgBmD,EAAoBprC,EAAGorC,kBAAmB4S,EAAiCh+C,EAAGg+C,+BAAgC3S,EAA6BrrC,EAAGqrC,2BAEpM,GAAI1wC,EAAO0jD,mBAAoB,CAC3B,IAAI3K,EAAc/4C,EAAO0kD,aAAe1kD,EAAO0kD,YAAYvlF,QAAU,EACrEm/B,EAAS,CACL8vC,MAAOpuC,EAAOmkD,mBAAqB1T,EAAkB,SAAWC,EAA2B,SAC3FnC,MAAOmC,EAA2B,SAClCjC,MAAOiC,EAA2B,SAClC7B,MAAO6B,EAA2B,SAClCsQ,MAAOtQ,EAA2B,SAClCuQ,MAAOvQ,EAA2B,SAClCwQ,MAAOnI,EAAa,EAAIrI,EAA2B,cAAW/wE,EAC9DwhF,MAAOpI,EAAa,EAAIrI,EAA2B,cAAW/wE,EAC9DskF,MAAOxT,EAAkB,eAI7BnyC,EAAS,CACL8vC,MAAOiV,EAA+B,SACtC9U,MAAO8U,EAA+B,SACtC5U,MAAO4U,EAA+B,SACtCxU,MAAOwU,EAA+B,SACtCrC,MAAOqC,EAA+B,SACtCpC,MAAOoC,EAA+B,SACtCnC,MAAOmC,EAA+B,SACtClC,MAAOkC,EAA+B,SACtCY,MAAOxT,EAAkB,UAIjC,OADAzB,GAA2BnC,EAAWS,GAC/B,CAAEhvC,OAAQA,EAAQgvC,cAAeA,GCgG7BD,CAA2BR,EAAW7mE,KAAKg6B,SAEtDyjD,EAAevsB,UAAUqW,cAAgB,SAAU9yD,GAC/C,IAAIiqE,EAAc1+E,KAAKg6B,OAAO0kD,aAAejB,EAAekB,qBACxD5L,EAAa2L,EAAcA,EAAYvlF,YAASQ,EACpD,GAAmB,IAAfo5E,GAAmC,IAAfA,GAAmC,IAAfA,EACxC,MAAM,IAAI34E,MAAM,oEAAsE24E,EAAa,0BAEvG,OF3ID,SAAuBt+D,EAASulB,EAAQ4kD,EAAiBF,GAC5D,IAGIpmD,EAHA+G,EAAK+qC,GAAsB31D,GAAUkyD,EAAiBtnC,EAAGsnC,eAAgB4D,EAAsBlrC,EAAGkrC,oBAClGjD,EAAgB,GAChBlK,EAAKoN,GAAkB7D,EAAgBW,GAAgBmD,EAAoBrN,EAAGqN,kBAAmB4S,EAAiCjgB,EAAGigB,+BAAgC3S,EAA6BtN,EAAGsN,2BAEzM,GAAI1wC,EAAO0jD,mBAAoB,CAC3B,IAAImB,EAAKH,EAAY,GAAII,EAAKJ,EAAY,GAAIK,EAAKL,EAAY,GAAIM,EAAKN,EAAY,GAAIO,EAAKP,EAAY,GAAIQ,EAAKR,EAAY,GAAIS,EAAKT,EAAY,GAAIU,EAAKV,EAAY,GAAIW,EAAKX,EAAY,GAY7LpmD,EAAS,CAAE8vC,MAXCpuC,EAAOmkD,mBACb1T,EAAkBoU,EAAIC,EAAI,EAAG,SAC7BpU,EAA2BmU,EAAIC,EAAI,SAShBvW,MARbmC,EAA2BoU,EAAIC,EAAI,SAQRtW,MAP3BiC,EAA2BqU,EAAIC,EAAI,SAOMnW,MANzC6B,EAA2BsU,EAAIC,EAAI,SAMoBjE,MALvDtQ,EAA2BuU,EAAIC,EAAI,SAKkCjE,MAJrEvQ,EAA2BwU,EAAIC,EAAI,SAIgDjE,MAHnFkE,EAAK1U,EAA2ByU,EAAIC,EAAI,cAAWzlF,EAG8CwhF,MAFjGkE,EAAK3U,EAA2B0U,EAAIC,EAAI,cAAW1lF,EAE4DskF,MAD/GxT,EAAkB4U,GAAMD,GAAMD,EAAI,EAAIP,EAAiB,EAAG,cAGrE,CACGC,EAAKH,EAAY,GAAII,EAAKJ,EAAY,GAAIK,EAAKL,EAAY,GAAIM,EAAKN,EAAY,GAAIO,EAAKP,EAAY,GAAIQ,EAAKR,EAAY,GAAIS,EAAKT,EAAY,GAAIU,EAAKV,EAAY,GAAIW,EAAKX,EAAY,GAU7LpmD,EAAS,CAAE8vC,MATCiV,EAA+BwB,EAAIC,EAAI,SAS1BvW,MARb8U,EAA+ByB,EAAIC,EAAI,SAQZtW,MAP3B4U,EAA+B0B,EAAIC,EAAI,SAOEnW,MANzCwU,EAA+B2B,EAAIC,EAAI,SAMgBjE,MALvDqC,EAA+B4B,EAAIC,EAAI,SAK8BjE,MAJrEoC,EAA+B6B,EAAIC,EAAI,SAI4CjE,MAHnFmC,EAA+B8B,EAAIC,EAAI,SAG0DjE,MAFjGkC,EAA+B+B,EAAIC,EAAI,SAEwEpB,MAD/GxT,EAAkB4U,EAAI,EAAIT,EAAiB,EAAG,UAG9D,GAAqC,IAAjCrU,IAAsBpxE,OACtB,MAAM,IAAIiB,MAAM,kCAAoCmwE,IAAsBpxE,QAE9E,MAAO,CAAEm/B,OAAQA,EAAQgvC,cAAeA,GEuG7BC,CAAc9yD,EAASzU,KAAKg6B,OAAQh6B,KAAK4+E,gBAAiBF,IAErEjB,EAAevsB,UAAUutB,aAAe,SAAUa,EAAcC,EAAqBz1B,GACjF,OAAO2H,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIyC,EAAOD,EAAQy/D,EAAWud,EAAmBC,EAAmBC,EAAU52B,EAAUzpB,EAAIsgD,EAAaC,EAAcC,EAAmBtD,EAASF,EAAY7C,EAAW72E,EAAK8E,EAAK7Q,EAAQq0D,EAAO60B,EAAKC,EAAKC,EAASC,EAAUv4E,EAAGC,EAAGmlB,EAAKswC,EAAIjH,EAAYlE,EAAOgV,EAC9PxO,EAAQz4D,KACZ,OAAOgyD,GAAYhyD,MAAM,SAAUknE,GAC/B,OAAQA,EAAGjV,OACP,KAAK,EAiBD,OAhBAxvD,EAAQ88E,EAAoB98E,MAAOD,EAAS+8E,EAAoB/8E,OAChEy/D,EAAY57D,KAAKQ,IAAIpE,EAAOD,GAC5Bg9E,EAAoBvd,EAAYx/D,EAChCg9E,EAAoBxd,EAAYz/D,EAChCk9E,EAAWJ,EAAa7rE,MAAM,GAC9Bq1C,EAAW9oD,KAAKg6B,OAAO4jD,QAAQzkF,OAC/BkmC,EAAKq4B,IAAQ,WACT,IAAIwoB,EAAWZ,EAAax9B,QAAQ,CAAC49B,EAAUA,EAAU52B,EAAU2P,EAAMmmB,kBAMzE,MAAO,CALKsB,EAAS9kF,MAAM,CAAC,EAAG,EAAG,EAAG,GAAI,CAACskF,EAAUA,EAAU52B,EAAU,IAC3Do3B,EAAS9kF,MAAM,CAAC,EAAG,EAAG,EAAG,GAAI,CAACskF,EAAUA,EAAU52B,EAAU,IACvD2P,EAAMslB,gBAClBzQ,GAAW4S,EAAS9kF,MAAM,CAAC,EAAG,EAAG,EAAG,GAAI,CAACskF,EAAUA,EAAU52B,EAAU2P,EAAMz+B,OAAO2jD,QAAQxkF,SAAU,GACtG8xE,GAAU,OAEhB0U,EAActgD,EAAG,GAAIugD,EAAevgD,EAAG,GAAIwgD,EAAoBxgD,EAAG,GACtEk9C,EAAU,GACH,CAAC,EAAaqD,EAAal9E,SACtC,KAAK,EAED,OADA25E,EAAanV,EAAGhV,OACT,CAAC,EAAaytB,EAAYj9E,SACrC,KAAK,EACD82E,EAAYtS,EAAGhV,OACfvvD,EAAM,EACNukE,EAAGjV,MAAQ,EACf,KAAK,EACD,KAAMtvD,EAAM+8E,GAAW,MAAO,CAAC,EAAa,IAC5Cj4E,EAAM,EACNy/D,EAAGjV,MAAQ,EACf,KAAK,EACD,KAAMxqD,EAAMi4E,GAAW,MAAO,CAAC,EAAa,IAC5C9oF,EAAS,EACTswE,EAAGjV,MAAQ,EACf,KAAK,EACD,OAAMr7D,EAASkyD,GACfmC,EAAQxI,GAAQ45B,EAAW15E,GAAK8E,GAAK7Q,GAAQ,KACtCkzD,GAAkBmB,EAAQnB,GACjCg2B,GAAQr4E,EAAMg7C,GAAQ+2B,EAAU72E,GAAK8E,GAAK7Q,GAAQ,KAAO8oF,EAAYF,EACrEO,GAAQp9E,EAAM8/C,GAAQ+2B,EAAU72E,GAAK8E,GAAK7Q,GAAQ,KAAO8oF,EAAYD,EACrEO,EAAY35E,KAAK2+C,IAAIw0B,EAAU72E,GAAK8E,GAAK7Q,GAAQ,IAAMoJ,KAAKg6B,OAAO4jD,QAAQhnF,GAAQ8Q,EAAKg4E,EAAYF,EACpGS,EAAa55E,KAAK2+C,IAAIw0B,EAAU72E,GAAK8E,GAAK7Q,GAAQ,IAAMoJ,KAAKg6B,OAAO4jD,QAAQhnF,GAAQ+Q,EAAK+3E,EAAYD,EACrG/3E,EAAKo4E,EAAOE,EAAU,EACtBr4E,EAAKo4E,EAAOE,EAAW,EACvBnzD,EAAM,CAAEnqB,IAAKA,EAAK8E,IAAKA,EAAK7Q,OAAQA,GAC/BoJ,KAAK+9E,gBACH,CAAC,EAAa/9E,KAAKmgF,sBAAsBN,EAAmB/yD,IADjC,CAAC,EAAa,IARS,CAAC,EAAa,IAFtC,CAAC,EAAa,IAYnD,KAAK,EAED,OADAm6C,EAAKC,EAAGhV,OACD,CAAC,EAAa,GACzB,KAAK,EACD+U,EAAK,CAAE9Q,WAAY,EAAGlE,MAAO,GAC7BiV,EAAGjV,MAAQ,EACf,KAAK,EACQkE,GAATiH,EAAK6J,GAAoB9Q,WAAYlE,EAAQmL,EAAGnL,MAChDsqB,EAAQ/hF,KAAK+2D,GAAS,CAAE6C,IAAK,IAAI4B,GAAYtuD,EAAGC,EAAGD,EAAIs4E,EAASr4E,EAAIs4E,GAAWh1B,MAAOA,EAAOkL,WAAYlL,EAAQkL,EAAYlE,MAAOA,GAASnlC,IAC7Io6C,EAAGjV,MAAQ,EACf,KAAK,EAED,OADAr7D,IACO,CAAC,EAAa,GACzB,KAAK,GAED,OADA6Q,IACO,CAAC,EAAa,GACzB,KAAK,GAED,OADA9E,IACO,CAAC,EAAa,GACzB,KAAK,GAID,OAHAg9E,EAAYt8C,UACZu8C,EAAav8C,UACbw8C,EAAkBx8C,UACX,CAAC,EAAck5C,WAK1CkB,EAAevsB,UAAUivB,sBAAwB,SAAUC,EAAetzD,GACtE,OAAO2kC,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAI2C,EAAK8E,EAAK7Q,EAAQypF,EACtB,OAAOruB,GAAYhyD,MAAM,SAAUq/B,GAC/B,OAAQA,EAAG4yB,OACP,KAAK,EAED,OADAtvD,EAAMmqB,EAAInqB,IAAK8E,EAAMqlB,EAAIrlB,IAAK7Q,EAASk2B,EAAIl2B,OACpC,CAAC,EAAawpF,EAAc19E,SACvC,KAAK,EAED,OADA29E,EAAchhD,EAAG6yB,OACV,CAAC,EAAc1yD,MAAMQ,KAAKg6B,OAAO2jD,QAAQxkF,QAAQkF,KAAK,GACpDN,KAAI,SAAU2S,EAAGxX,GAAK,OAAOmnF,EAAY19E,GAAK8E,GAAK7Q,GAAQsC,MAC3D6E,KAAI,SAAUo4D,EAAYlE,GAAS,OACpCkE,WAAYA,EACZlE,MAAOA,MAEN9rD,QAAO,SAAUU,EAAKwwD,GAAQ,OAAOxwD,EAAIsvD,WAAakB,EAAKlB,WAAatvD,EAAMwwD,cAK3GomB,EAAekB,qBAAuB,CAClC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,KAAM,MAEjClB,GACTnY,IC1QEgb,GAA4B,SAAUrqB,GAEtC,SAASqqB,EAAW5C,QACW,IAAvBA,IAAiCA,GAAqB,GAC1D,IACI1jD,EAASplC,OAAOka,OAAO,GAAI,CAC3B4uE,mBAAoBA,EACpB7zB,aTVe,GSWf8zB,QAAS,CAAC,SACXD,EACG,CACEE,QAASf,GACTplB,QAASqlB,IAEX,CACEc,QAASjB,GACToB,iBAAiB,IAGzB,OADQ9nB,EAAO56D,KAAK2E,KAAMg6B,IAAWh6B,KAoCzC,OArDAoxD,GAAUkvB,EAAYrqB,GAoBtBrhE,OAAOkrC,eAAewgD,EAAWpvB,UAAW,qBAAsB,CAC9Dt5B,IAAK,WACD,OAAO53B,KAAKg6B,OAAO0jD,oBAEvB1qB,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAewgD,EAAWpvB,UAAW,UAAW,CACnDt5B,IAAK,WACD,OAAO53B,KAAKg6B,OAAO4jD,SAEvB5qB,YAAY,EACZ7jB,cAAc,IAElBmxC,EAAWpvB,UAAUgrB,YAAc,SAAUzjF,EAAO4lF,GAChD,OAAO5sB,GAAUzxD,UAAM,OAAQ,GAAQ,WAEnC,OAAOgyD,GAAYhyD,MAAM,SAAUq/B,GAC/B,OAAQA,EAAG4yB,OACP,KAAK,EAAG,MAAO,CAAC,EAAajyD,KAAKo+E,OAAO3lF,EAAO4lF,IAChD,KAAK,EAED,MAAO,CAAC,EADWh/C,EAAG6yB,OACiBn0D,KAAI,SAAUomE,GAAO,OAAO,IAAIvN,GAAcuN,EAAIlZ,MAAOkZ,EAAI9N,YAAa,CAAE5zD,MAAO0hE,EAAI9sD,WAAY7U,OAAQ2hE,EAAI7sD,0BAK1KgpE,EAAWpvB,UAAU4V,oBAAsB,WACvC,OAAO9mE,KAAK09E,mBTnC2B,mCADf,qBSsC5B4C,EAAWpvB,UAAUmW,2BAA6B,SAAUR,GACxD,OAAO5Q,EAAO/E,UAAUmW,2BAA2BhsE,KAAK2E,KAAM6mE,IAE3DyZ,GACT7C,ICzDE8C,GAAyC,SAAUtqB,GAEnD,SAASsqB,IACL,IAAI9nB,EAAmB,OAAXxC,GAAmBA,EAAOnvD,MAAM9G,KAAMwxD,YAAcxxD,KAEhE,OADAy4D,EAAM8M,MAAQ,0BACP9M,EAEX,OANArH,GAAUmvB,EAAyBtqB,GAM5BsqB,GACThD,ICTEiD,GAAgC,WAChC,SAASA,KAsBT,OApBAA,EAAetvB,UAAU9yD,KAAO,SAAUqiF,GACtC,OAAOhvB,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIq/B,EACJ,OAAO2yB,GAAYhyD,MAAM,SAAUo9D,GAC/B,OAAQA,EAAGnL,OACP,KAAK,EAED,OADA5yB,EAAKohD,EACE,CAAC,EAAazgF,KAAKvL,OAC9B,KAAK,EAAG,MAAO,CAAC,EAAc4qC,EAAGv4B,WAAM,EAAQ,CAACs2D,EAAGlL,kBAKnEsuB,EAAetvB,UAAUz8D,IAAM,WAC3B,OAAOg9D,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,OAAOgyD,GAAYhyD,MAAM,SAAUq/B,GAC/B,MAAM,IAAIjlC,MAAM,kDAIrBomF,KCpBJ,SAASE,GAAiCC,EAAeloF,EAAOmoF,EAAgBC,EAAgBC,GAKnG,YAJ4B,IAAxBA,IAAkCA,EAAsB,SAAUzhD,GAElE,OADkBA,EAAGovC,cAGlBhd,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAI+gF,EAAWC,EAAO3hD,EAAI+9B,EAAImf,EAC9B,OAAOvqB,GAAYhyD,MAAM,SAAUinE,GAC/B,OAAQA,EAAGhV,OACP,KAAK,EAOD,OANA8uB,EAAYJ,EAAc5iF,KAAI,SAAUkjF,GACpC,OAAO5S,GAAoB4S,GACrBH,EAAoBG,GACpBA,EAAanoB,cAEvBz5B,EAAKwhD,GACU,CAAC,EAAa,GACvBpoF,aAAiBy6D,GAChB,CAAC,EAAamR,GAAmB5rE,EAAOsoF,IADL,CAAC,EAAa,GAE5D,KAAK,EAED,OADA3jB,EAAK6J,EAAG/U,OACD,CAAC,EAAa,GACzB,KAAK,EAAG,MAAO,CAAC,EAAa6R,GAAatrE,EAAOsoF,IACjD,KAAK,EACD3jB,EAAK6J,EAAG/U,OACR+U,EAAGhV,MAAQ,EACf,KAAK,EACD5yB,IACA4nC,EAAGhV,MAAQ,EACf,KAAK,EAED,MAAO,CAAC,EAAa2uB,EADrBI,EAAQ3hD,IAEZ,KAAK,EAGD,OAFAk9C,EAAUtV,EAAG/U,OACb8uB,EAAMhsF,SAAQ,SAAUqB,GAAK,OAAOA,aAAa68D,IAAa78D,EAAEgtC,aACzD,CAAC,EAAck5C,UAKnC,SAAS2E,GAAkCD,EAAcxoF,EAAO0oF,EAAeN,EAAgBC,GAClG,OAAOrvB,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIy4D,EAAQz4D,KACZ,OAAOgyD,GAAYhyD,MAAM,SAAUq/B,GAC/B,MAAO,CAAC,EAAcqhD,GAAiC,CAACO,GAAexoF,GAAO,SAAUuoF,GAAS,OAAOvvB,GAAUgH,OAAO,OAAQ,GAAQ,WAAc,OAAOzG,GAAYhyD,MAAM,SAAUq/B,GAClL,MAAO,CAAC,EAAc8hD,EAAcH,EAAM,aACnCH,EAAgBC,UCEpC,SAASvZ,GAAc9yD,GAC1B,IAAI4qB,EAAK+qC,GAAsB31D,GAAUkyD,EAAiBtnC,EAAGsnC,eAAgB4D,EAAsBlrC,EAAGkrC,oBAClGjD,EAAgB,GAChBlK,EApDR,SAA2BuJ,EAAgBW,GACvC,IAAImD,EAAoBtB,GAAyBxC,EAAgBW,GAC7D+E,EAAkB5C,GAAuB9C,EAAgBW,GAC7D,SAAS8Z,EAAmB9qF,EAAMqvE,GAC9B,IAAI0b,EAAQ7X,GAAY7C,EAAerwE,IAEvC,OADAgxE,EAAc9sE,KAAK,CAAEmrE,UAAWA,IACzB0b,EAEX,SAASC,EAAoBvO,EAAYzJ,EAAciY,GAQnD,YAPe,IAAXA,IAAqBA,GAAS,GAO3B,CAAEhZ,MANGkC,EAAkBsI,EAAW,GAAIA,EAAW,GAAI,EAAGzJ,EAAe,UAMvDkY,aALJJ,EAAmBrO,EAAW,GAAIzJ,EAAe,iBAKjBb,MAJvCgC,EAAkBsI,EAAW,GAAIA,EAAW,GAAI,EAAGzJ,EAAe,UAIbmY,aAH9CL,EAAmBrO,EAAW,GAAIzJ,EAAe,iBAGyBT,MAFjF4B,EAAkBsI,EAAW,GAAIA,EAAW,GAAIwO,EAAS,EAAI,EAAGjY,EAAe,UAEgBoY,aADxFN,EAAmBrO,EAAW,GAAIzJ,EAAe,kBA4BxE,MAAO,CACHqY,kBA1BJ,WACI,IAAIC,EAAeN,EAAoB,CAAC,EAAG,GAAI,GAAI,IAAK,QACpDO,EAAUpX,EAAkB,GAAI,EAAG,EAAG,gBACtCqX,EAAUrX,EAAkB,GAAI,EAAG,EAAG,gBAC1C,OAAOlZ,GAASA,GAAS,GAAIqwB,GAAe,CAAEC,QAASA,EAASC,QAASA,KAuBzEC,kBArBJ,WACI,IAAIH,EAAeN,EAAoB,CAAC,EAAG,GAAI,GAAI,IAAK,QAAQ,GAC5DU,EAAM3V,EAAgB,IAAK,IAAK,YAChC4V,EAAeb,EAAmB,IAAK,qBACvCc,EAAQ7V,EAAgB,IAAK,EAAG,cAChC8V,EAAQ9V,EAAgB,IAAK,EAAG,cACpC,OAAO9a,GAASA,GAAS,GAAIqwB,GAAe,CAAEI,IAAKA,EAAKC,aAAcA,EAAcC,MAAOA,EAAOC,MAAOA,KAgBzGC,kBAdJ,WACI,IAAIR,EAAeN,EAAoB,CAAC,EAAG,GAAI,GAAI,IAAK,QACpDtG,EAAQvQ,EAAkB,GAAI,IAAK,EAAG,cACtCwX,EAAeb,EAAmB,IAAK,qBACvCY,EAAM3V,EAAgB,KAAM,IAAK,YACjCgW,EAAejB,EAAmB,IAAK,qBACvCc,EAAQ7V,EAAgB,IAAK,EAAG,cAChC8V,EAAQ9V,EAAgB,IAAK,EAAG,cAChCiW,EAAQjW,EAAgB,IAAK,GAAI,cACrC,OAAO9a,GAASA,GAAS,GAAIqwB,GAAe,CAAE5G,MAAOA,EAAOiH,aAAcA,EAAcD,IAAKA,EAAKK,aAAcA,EAAcH,MAAOA,EAAOC,MAAOA,EAAOG,MAAOA,MAW5J9X,CAAkB7D,EAAgBW,GAAgBqa,EAAoBvkB,EAAGukB,kBAAmBI,EAAoB3kB,EAAG2kB,kBAAmBK,EAAoBhlB,EAAGglB,kBAClKG,EAAOZ,IACPa,EAAOT,IACPU,EAAOL,IACX,GAAqC,IAAjC7X,IAAsBpxE,OACtB,MAAM,IAAIiB,MAAM,kCAAoCmwE,IAAsBpxE,QAE9E,MAAO,CAAEm/B,OAAQ,CAAEiqD,KAAMA,EAAMC,KAAMA,EAAMC,KAAMA,GAAQnb,cAAeA,GCLrE,SAASD,GAA2BR,GACvC,IAAIS,EAAgB,GAChBjoC,EAzDR,SAA2BwnC,EAAWS,GAClC,IAAI0C,EAAqBC,GAA0BpD,EAAWS,GAC9D,SAASmD,EAAkBvyB,GAGvB,MAAO,CAAEmwB,QAFK2B,EAAmB9xB,EAAS,WAAY,EAAGA,EAAS,YAEvC7lC,KADhB23D,EAAmB9xB,EAAS,QAAS,IAGpD,SAASm0B,EAAgBn0B,GAGrB,MAAO,CAAEzjC,QAFKu1D,EAAmB9xB,EAAS,WAAY,GAE3B7lC,KADhB23D,EAAmB9xB,EAAS,QAAS,IAGpD,SAASkpC,EAAmBzb,GACxB,OAAOqE,EAAmBrE,EAAW,GAEzC,SAAS2b,EAAoBppC,GAOzB,MAAO,CAAEqwB,MANGkC,EAAkBvyB,EAAS,UAMhBspC,aALJJ,EAAmBlpC,EAAS,iBAKIuwB,MAJvCgC,EAAkBvyB,EAAS,UAI0BupC,aAH9CL,EAAmBlpC,EAAS,iBAG8C2wB,MAFjF4B,EAAkBvyB,EAAS,UAEoEwpC,aADxFN,EAAmBlpC,EAAS,kBA4BnD,MAAO,CACHypC,kBA1BJ,WACI,IAAIC,EAAeN,EAAoB,QACnCO,EAAUpX,EAAkB,gBAC5BqX,EAAUrX,EAAkB,gBAChC,OAAOlZ,GAASA,GAAS,GAAIqwB,GAAe,CAAEC,QAASA,EAASC,QAASA,KAuBzEC,kBArBJ,WACI,IAAIH,EAAeN,EAAoB,QACnCU,EAAM3V,EAAgB,YACtB4V,EAAeb,EAAmB,qBAClCc,EAAQ7V,EAAgB,cACxB8V,EAAQ9V,EAAgB,cAC5B,OAAO9a,GAASA,GAAS,GAAIqwB,GAAe,CAAEI,IAAKA,EAAKC,aAAcA,EAAcC,MAAOA,EAAOC,MAAOA,KAgBzGC,kBAdJ,WACI,IAAIR,EAAeN,EAAoB,QACnCtG,EAAQvQ,EAAkB,cAC1BwX,EAAeb,EAAmB,qBAClCY,EAAM3V,EAAgB,YACtBgW,EAAejB,EAAmB,qBAClCc,EAAQ7V,EAAgB,cACxB8V,EAAQ9V,EAAgB,cACxBiW,EAAQjW,EAAgB,cAC5B,OAAO9a,GAASA,GAAS,GAAIqwB,GAAe,CAAE5G,MAAOA,EAAOiH,aAAcA,EAAcD,IAAKA,EAAKK,aAAcA,EAAcH,MAAOA,EAAOC,MAAOA,EAAOG,MAAOA,MAU5J9X,CAAkB3D,EAAWS,GAAgBqa,EAAoBtiD,EAAGsiD,kBAAmBI,EAAoB1iD,EAAG0iD,kBAAmBK,EAAoB/iD,EAAG+iD,kBAC7JG,EAAOZ,IACPa,EAAOT,IACPU,EAAOL,IAEX,OADApZ,GAA2BnC,EAAWS,GAC/B,CAAEhvC,OAAQ,CAAEiqD,KAAMA,EAAMC,KAAMA,EAAMC,KAAMA,GAAQnb,cAAeA,GChErE,SAASob,GAAiBxrE,EAAOmoB,GACpC,IAAI78B,EAAS68B,EAAG,GAAI58B,EAAQ48B,EAAG,GAC/B,MAAO,CACH78B,OAAQ6D,KAAKC,MAAM9D,EAAS0U,GAC5BzU,MAAO4D,KAAKC,MAAM7D,EAAQyU,ICFlC,IAAIyrE,GAA0B,SAAU1sB,GAEpC,SAAS0sB,EAAS3zE,EAAMD,EAAK4J,EAAOD,GAChC,OAAOu9C,EAAO56D,KAAK2E,KAAM,CAAEgP,KAAMA,EAAMD,IAAKA,EAAK4J,MAAOA,EAAOD,OAAQA,IAAU,IAAS1Y,KAE9F,OAJAoxD,GAAUuxB,EAAU1sB,GAIb0sB,GACT1uB,ICPK,SAASv+C,GAAUhO,GACtB,OAAOgwD,IAAQ,WAAc,OAAOib,GAAO1a,GAAOvwD,EAAGujE,GAAU,QAASA,GAAU,cCD/E,SAAS2X,GAAMl7E,EAAG25E,GACrB,OAAO3pB,IAAQ,WACX,OAAOmQ,GAAOK,GAAQxgE,GAAIirE,GAAO0O,EAAOwB,GAAO3a,GAAQ2a,GAAOn7E,UCA/D,SAASo7E,GAAYp7E,EAAG4wB,EAAQyqD,GAEnC,YADe,IAAXA,IAAqBA,GAAS,GAC3BrrB,IAAQ,WACX,IAAIrwB,EAAMyhC,GAAUphE,EAAG4wB,EAAOiwC,MAAO,SAQrC,OAPAlhC,EAAMu7C,GAAMv7C,EAAK/O,EAAOkpD,cAGxBn6C,EAAMu7C,GADNv7C,EAAMyhC,GADNzhC,EAAMuoC,GAAWvoC,EAAK07C,EAAS,CAAC,EAAG,GAAK,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,QACnCzqD,EAAOmwC,MAAO,SAClBnwC,EAAOmpD,cAGxBp6C,EAAMu7C,GADNv7C,EAAMyhC,GADNzhC,EAAM07C,EAAS17C,EAAMuoC,GAAWvoC,EAAK,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,SAChC/O,EAAOuwC,MAAO,SAClBvwC,EAAOopD,iBC2BzB,SAASsB,GAAOviB,EAAWwiB,EAAQn5B,EAAgBxxB,EAAQ4qD,GAC9DA,EAAMF,OAAS,GACf,IA+BIG,EA/BcF,EAAOllF,KAAI,SAAUmZ,GAAS,OAAOwgD,IAAQ,WAC3D,IAAI0rB,EAAgB,CAAElsE,MAAOA,GACzBmsE,EApCZ,SAA6B37E,EAAGwP,GAC5B,OAAOwgD,IAAQ,WACX,IAAIr4B,EAAKqjD,GAAiBxrE,EAAOxP,EAAE+L,MAAMrY,MAAM,IAAKoH,EAAS68B,EAAG78B,OAAQC,EAAQ48B,EAAG58B,MAE/EutE,EAAat6D,GADHutD,GAAS9U,eAAezmD,EAAG,CAAClF,EAAQC,KAElD,OAAOuwE,GAAahD,EAAY,CAAC,EAAG,EAAG,EAAG,OA+B5BsT,CAAoB7iB,EAAWvpD,GACzCqsE,EAAK5tF,KAAKF,MACV4pC,EC3CL,SAAc33B,EAAG4wB,GACpB,OAAOo/B,IAAQ,WACX,IAAIrwB,EAAMy7C,GAAYp7E,EAAG4wB,GAAQ,GAC7BlgB,EAAO0wD,GAAUzhC,EAAK/O,EAAOupD,QAAS,SACtCh7E,EAAM28E,GAAcC,GAAOrrE,EAAM,GAAI,GAGzC,MAAO,CAAEsrE,KAFEpW,GAAWrV,GAAO7/C,EAAMvR,GAAM,GAEpB88E,QADP7a,GAAUzhC,EAAK/O,EAAOwpD,QAAS,aDqCpC8B,CAAKP,EAAS/qD,GAASorD,EAAOrkD,EAAGqkD,KAAMC,EAAUtkD,EAAGskD,QAI7D,OAHAP,EAAcb,KAAO5sF,KAAKF,MAAQ8tF,EAG3B,CACH3D,aAHelS,GAAWA,GAAWgW,EAAM,GAAG,IAAI,GAIlDG,cAHgBnW,GAAWiW,GAAS,GAIpCzsE,MAAOA,EACPksE,cAAeA,SAGSrlF,KAAI,SAAUshC,GAC1C,IAAIugD,EAAevgD,EAAGugD,aAAciE,EAAgBxkD,EAAGwkD,cAAe3sE,EAAQmoB,EAAGnoB,MAAOksE,EAAgB/jD,EAAG+jD,cACvGU,EA3CZ,SAA8BlE,EAAciE,EAAe3sE,EAAO4yC,GAI9D,IAFA,IAAI5jD,EAAU,GACVm2E,EAAauD,EAAa3rE,YACrBtM,EAAI,EAAGA,EAAIi4E,EAAansE,MAAM,GAAI9L,IACvC,IAAK,IAAID,EAAI,EAAGA,EAAIk4E,EAAansE,MAAM,GAAI/L,IACnC20E,EAAW10E,GAAGD,IAAMoiD,GACpB5jD,EAAQ1L,KAAK,IAAIm5D,GAAMjsD,EAAGC,IAetC,OAXoBzB,EAAQnI,KAAI,SAAUu5D,GACtC,IAAIysB,EAAO,IAAI/tB,GAAY3vD,KAAKmB,OE5Bf,EF4BsB8vD,EAAI3vD,EAAkB,GAAKuP,GAAQ7Q,KAAKmB,OE5B9D,EF4BqE8vD,EAAI5vD,EAAkB,GAAKwP,GAAQ7Q,KAAKmB,OE5B7G,EF4BoH8vD,EAAI3vD,EE3B1H,IF2ByJuP,GAAQ7Q,KAAKmB,OE5BpK,EF4B2K8vD,EAAI5vD,EE3BjL,IF2BgNwP,IAC3N+zC,EAAQoxB,EAAW/kB,EAAI3vD,GAAG2vD,EAAI5vD,GAC9Bs8E,EAAcH,EAAc5vE,YAEhC,MAAO,CACH8vE,KAAMA,EACN94B,MAAOA,EACP8K,OAJS,IAAI4sB,GAASqB,EAAY1sB,EAAI3vD,GAAG2vD,EAAI5vD,GAAG,GAAIs8E,EAAY1sB,EAAI3vD,GAAG2vD,EAAI5vD,GAAG,GAAIs8E,EAAY1sB,EAAI3vD,GAAG2vD,EAAI5vD,GAAG,GAAIs8E,EAAY1sB,EAAI3vD,GAAG2vD,EAAI5vD,GAAG,QA4B1Hu8E,CAAqBrE,EAAciE,EAAe3sE,EAAO4yC,GAG7E,GAFA81B,EAAav8C,UACbwgD,EAAcxgD,WACTygD,EAAc3qF,OAEf,OADA+pF,EAAMF,OAAOxoF,KAAK4oF,GACX,GAEX,IAAIG,EAAK5tF,KAAKF,MACVyQ,EAAU+jD,GAAkB65B,EAAc/lF,KAAI,SAAUqvB,GAAQ,OAAOA,EAAK22D,QAAUD,EAAc/lF,KAAI,SAAUqvB,GAAQ,OAAOA,EAAK69B,SAAW,IAIrJ,OAHAm4B,EAAcc,IAAMvuF,KAAKF,MAAQ8tF,EACjCH,EAAct6B,SAAW5iD,EAAQ/M,OACjC+pF,EAAMF,OAAOxoF,KAAK4oF,GACXl9E,EAAQnI,KAAI,SAAUomF,GAAU,OAAOL,EAAcK,SAEnCh+E,QAAO,SAAU81B,EAAKqsB,GAAS,OAAOrsB,EAAIrW,OAAO0iC,KAAW,IACrF87B,EAAa,GACbC,EAAc,GAClB,GAAIlB,EAAShqF,OAAS,EAAG,CACrB,IAAIoqF,EAAK5tF,KAAKF,MACVyQ,EAAU+jD,GAAkBk5B,EAASplF,KAAI,SAAUqvB,GAAQ,OAAOA,EAAK22D,QAAUZ,EAASplF,KAAI,SAAUqvB,GAAQ,OAAOA,EAAK69B,SAAW,IAC3Ii4B,EAAMoB,WAAa3uF,KAAKF,MAAQ8tF,EAChCc,EAAcn+E,EAAQnI,KAAI,SAAUu5D,GAAO,OAAO6rB,EAAS7rB,GAAKrM,SAChEm5B,EAAal+E,EACRnI,KAAI,SAAUu5D,GAAO,OAAO6rB,EAAS7rB,MACrCv5D,KAAI,SAAUshC,GACf,IAAI0kD,EAAO1kD,EAAG0kD,KAAMhuB,EAAS12B,EAAG02B,OAChC,OAAO,IAAIC,GAAY+tB,EAAK/0E,KAAQ+mD,EAAO/mD,KAAO+0E,EAAKthF,MAAQshF,EAAKh1E,IAAOgnD,EAAOhnD,IAAMg1E,EAAKvhF,OAASuhF,EAAKprE,MAASo9C,EAAOp9C,MAAQorE,EAAKthF,MAAQshF,EAAKrrE,OAAUq9C,EAAOr9C,OAASqrE,EAAKvhF,QAASkyD,WAAWltD,WAGhN,MAAO,CACH8gD,MAAO87B,EACPz6B,OAAQ06B,GGrFT,SAASE,GAAoBxlC,EAAKuJ,EAAOjpB,GAC5C,IAAI58B,EAAQ48B,EAAG58B,MAAOD,EAAS68B,EAAG78B,OAClC,OAAOivD,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIwkF,EAAQC,EAASC,EACjBjsB,EAAQz4D,KACZ,OAAOgyD,GAAYhyD,MAAM,SAAUo9D,GAC/B,OAAQA,EAAGnL,OACP,KAAK,EAED,OADAuyB,EAASlnB,GAAoBve,GACtB,CAAC,EAAapjD,QAAQsgC,IAAIqsB,EAAMvqD,KAAI,SAAUq2D,GAAO,OAAO3C,GAAUgH,OAAO,OAAQ,GAAQ,WAC5F,IAAIp5B,EAAI13B,EAAGkuD,EAAInuD,EAAGm+B,EAAI8+C,EAAOC,EAAOC,EACpC,OAAO7yB,GAAYhyD,MAAM,SAAUo9D,GAK/B,OAJA/9B,EAAK+0B,EAAIqB,aAAa1W,EAAIv8C,OAAQu8C,EAAIt8C,OAAQkF,EAAI03B,EAAG13B,EAAGkuD,EAAKx2B,EAAGw2B,GAAInuD,EAAI23B,EAAG33B,EAAGm+B,EAAKxG,EAAGwG,GACtF8+C,EAAQj9E,EAAI,EACZk9E,EAAQj9E,EAAI,EACZk9E,EAAUL,EAAOz2E,aAAa42E,EAAOC,EAAQ/+C,EAAK8+C,EAAS9uB,EAAK+uB,GACzD,CAAC,EAAcxtD,GAAIylC,WAAayD,GAAsBukB,GAAWC,kBAAkBD,eAG1G,KAAK,EAiBD,OAhBAJ,EAAUrnB,EAAGlL,OACbwyB,EAAoB,GACpBD,EAAQzvF,SAAQ,SAAU+vF,GACtB,IACIC,EAAW1nB,GADH+C,GAAa,CAAE59D,MAAOA,EAAOD,OAAQA,KAEjDwiF,EAASl3E,UAAUi3E,EAAK,EAAG,EAAGtiF,EAAOD,GAIrC,IAHA,IAAIlL,EAAO0tF,EAASj3E,aAAa,EAAG,EAAGtL,EAAOD,GAAQlL,KAClD2tF,EAAW,GAEN/rF,EAAI,EAAGA,EAAI5B,EAAK6B,OAAQD,GAAK,EAClC+rF,EAASzqF,KAAKlD,EAAK4B,EAAI,IACvB+rF,EAASzqF,KAAKlD,EAAK4B,EAAI,IACvB+rF,EAASzqF,KAAKlD,EAAK4B,IAEvBwrF,EAAkBlqF,KAAKyqF,MAEpB,CAAC,EAAcP,EAAkB3mF,KAAI,SAAUzG,GAK9C,OAJQogE,IAAQ,WAEZ,OAAOhiD,GADgBs9D,GAAazJ,GAAYjyE,EAAM,CAAC,EAAGmL,EAAOD,EAAQ,IAAK,CAAC,EAAG,EAAG,EAAG,IAAIugE,yBCrCrH,SAASmiB,GAAOnmC,EAAKomC,EAAYr7B,EAAgBxxB,EAAQ4qD,GAC5D,OAAOzxB,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIujF,EAAI6B,EAAYC,EAAUzF,EAAcj2B,EAAQtqB,EAAI+9B,EAAIl3D,EAASo/E,EAAeC,EAAgBnB,EAAYC,EAAamB,EAAYC,EACzI,OAAOzzB,GAAYhyD,MAAM,SAAUinE,GAC/B,OAAQA,EAAGhV,OACP,KAAK,EAED,OADAsxB,EAAK5tF,KAAKF,MACH,CAAC,EAAa8uF,GAAoBxlC,EAAKomC,EAAY,CAAE1iF,MAAO,GAAID,OAAQ,MACnF,KAAK,EAcD,OAbA4iF,EAAane,EAAG/U,OAChBgxB,EAAMwC,2BAA6B/vF,KAAKF,MAAQ8tF,EAChDA,EAAK5tF,KAAKF,MACV4vF,EAAWD,EAAWrnF,KAAI,SAAU4nF,GAChC,IAAIt+C,ECfrB,SAAc3/B,EAAG4wB,GACpB,OAAOo/B,IAAQ,WACX,IAAIkuB,EAAU9C,GAAYp7E,EAAG4wB,GAGzButD,EAASjD,GADHpX,GADO+O,GAAWqL,EAAS,CAACA,EAAQnyE,MAAM,GAAI6kB,EAAO0pD,IAAIvtE,QAAQhB,MAAM,KACvC6kB,EAAO0pD,KACzB1pD,EAAO2pD,cAC3BC,EAAQ1W,GAAoBqa,EAAQvtD,EAAO4pD,OAC3Cr7E,EAAM28E,GAAcC,GAAOvB,EAAO,GAAI,GACtCwB,EAAOpW,GAAWrV,GAAOiqB,EAAOr7E,GAAM,GACtC88E,EAAUnY,GAAoBqa,EAAQvtD,EAAO6pD,OAEjD,MAAO,CAAEx4B,OADI+jB,GAAWgW,EAAM,GAAG,GACRC,QAASA,MDIRmC,CAAKH,EAAWrtD,GAE1B,OADAqtD,EAAUtiD,UACHgE,KAEX67C,EAAM6C,YAAcpwF,KAAKF,MAAQ8tF,EACjC3D,EAAeyF,EAASlsF,OAAS,EAC3B6+D,GAAUqtB,EAAStnF,KAAI,SAAUspC,GAAO,OAAOA,EAAIsiB,WACnD07B,EAAS,GAAG17B,OAClByT,GAAM/9B,EAAK7/B,OAAOC,KACX,CAAC,EAAamgF,EAAatoF,QACtC,KAAK,EA6BD,OA5BAqyD,EAASyT,EAAGt2D,MAAMu4B,EAAI,CAAC4nC,EAAG/U,SAC1B0tB,EAAav8C,UACbn9B,EAAUyjD,EACL5rD,KAAI,SAAUktD,EAAOqM,GAAO,OAAUrM,MAAOA,EAAOqM,IAAKA,MACzDt5D,QAAO,SAAU7H,GAAK,OAAOA,EAAE80D,MAAQnB,KACvC/rD,KAAI,SAAUshC,GAEf,OADUA,EAAGi4B,OAGjBguB,EAAgBp/E,EAAQnI,KAAI,SAAUu5D,GAAO,OAAO6tB,EAAW7tB,MAC/DiuB,EAAiBr/E,EAAQnI,KAAI,SAAUu5D,GAAO,OAAO3N,EAAO2N,MAC5D8sB,EAAa,GACbC,EAAc,GACViB,EAAcnsF,OAAS,IACvBoqF,EAAK5tF,KAAKF,MACV+vF,EAAav7B,GAAkBq7B,EAAeC,EAAgB,IAC9DrC,EAAM8C,WAAarwF,KAAKF,MAAQ8tF,EAChCkC,EAAYD,EAAWznF,KAAI,SAAUu5D,GACjC,IAAI0sB,EAAcqB,EAASn/E,EAAQoxD,IAAMqsB,QAAQ1vE,YACjD,OAAO,IAAI0uE,GAASqB,EAAY,GAAG,GAAIA,EAAY,GAAG,GAAIA,EAAY,GAAG,GAAIA,EAAY,GAAG,OAEhGK,EAAcmB,EAAWznF,KAAI,SAAUu5D,GAAO,OAAOiuB,EAAejuB,MACpE8sB,EAAaoB,EAAWznF,KAAI,SAAUu5D,EAAKp+D,GAAK,OAAOosF,EAAchuB,GAAKxB,UAAU2vB,EAAUvsF,QAElGmsF,EAASrwF,SAAQ,SAAUib,GACvBA,EAAE0zE,QAAQtgD,UACVpzB,EAAE05C,OAAOtmB,aAEN,CAAC,EAAc,CACdilB,MAAO87B,EACPz6B,OAAQ06B,WErD7B,SAAS4B,GAAOlnC,EAAKomC,EAAYr7B,EAAgBxxB,EAAQ4qD,GAC5D,OAAOzxB,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIujF,EAAI2C,EAAYC,EAAUvG,EAAcj2B,EAAQtqB,EAAI+9B,EAAIl3D,EAASkgF,EAAiBd,EAAeC,EAAgBnB,EAAYC,EAAagC,EAAQb,EACtJ,OAAOxzB,GAAYhyD,MAAM,SAAUinE,GAC/B,OAAQA,EAAGhV,OACP,KAAK,EAED,OADAsxB,EAAK5tF,KAAKF,MACH,CAAC,EAAa8uF,GAAoBxlC,EAAKomC,EAAY,CAAE1iF,MAAO,GAAID,OAAQ,MACnF,KAAK,EAcD,OAbA0jF,EAAajf,EAAG/U,OAChBgxB,EAAMoD,2BAA6B3wF,KAAKF,MAAQ8tF,EAChDA,EAAK5tF,KAAKF,MACV0wF,EAAWD,EAAWnoF,KAAI,SAAUwoF,GAChC,IAAIl/C,ECfrB,SAAc3/B,EAAG4wB,GACpB,OAAOo/B,IAAQ,WACX,IAAIrwB,EAAMy7C,GAAYp7E,EAAG4wB,GAGzB+O,EAAMu7C,GADNv7C,EAAMyhC,GADNzhC,EAAMuoC,GAAWvoC,EAAK,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,QACjB/O,EAAO0iD,MAAO,SAClB1iD,EAAO2pD,cACxB,IAEIuE,EAAS5D,GADHpX,GADO+O,GAAWlzC,EAAK,CAACA,EAAI5zB,MAAM,GAAI6kB,EAAO0pD,IAAIvtE,QAAQhB,MAAM,KAC/B6kB,EAAO0pD,KACzB1pD,EAAO+pD,cAC3BH,EAAQ1W,GAAoBgb,EAAQluD,EAAO4pD,OAC3Cr7E,EAAM28E,GAAcC,GAAOvB,EAAO,GAAI,GACtCwB,EAAOpW,GAAWrV,GAAOiqB,EAAOr7E,GAAM,GACtC88E,EAAUnY,GAAoBgb,EAAQluD,EAAO6pD,OAC7CkE,EAAS7a,GAAoBgb,EAAQluD,EAAOgqD,OAEhD,MAAO,CAAE34B,OADI+jB,GAAWgW,EAAM,GAAG,GACRC,QAASA,EAAS0C,OAAQA,MDAzBI,CAAKF,EAAWjuD,GAE1B,OADAiuD,EAAUljD,UACHgE,KAEX67C,EAAMwD,YAAc/wF,KAAKF,MAAQ8tF,EACjC3D,EAAeuG,EAAShtF,OAAS,EAC3B6+D,GAAUmuB,EAASpoF,KAAI,SAAUspC,GAAO,OAAOA,EAAIsiB,WACnDw8B,EAAS,GAAGx8B,OAClByT,GAAM/9B,EAAK7/B,OAAOC,KACX,CAAC,EAAamgF,EAAatoF,QACtC,KAAK,EAsCD,OArCAqyD,EAASyT,EAAGt2D,MAAMu4B,EAAI,CAAC4nC,EAAG/U,SAC1B0tB,EAAav8C,UACbn9B,EAAUyjD,EACL5rD,KAAI,SAAUktD,EAAOqM,GAAO,OAAUrM,MAAOA,EAAOqM,IAAKA,MACzDt5D,QAAO,SAAU7H,GAAK,OAAOA,EAAE80D,MAAQnB,KACvC/rD,KAAI,SAAUshC,GAEf,OADUA,EAAGi4B,OAGjB8uB,EAAkBlgF,EAAQnI,KAAI,SAAUu5D,GACpC,IAAI0sB,EAAcmC,EAAS7uB,GAAKqsB,QAAQ1vE,YACxC,OAAO,IAAI0uE,GAASqB,EAAY,GAAG,GAAIA,EAAY,GAAG,GAAIA,EAAY,GAAG,GAAIA,EAAY,GAAG,OAEhGsB,EAAgBp/E,EACXnI,KAAI,SAAUu5D,EAAKp+D,GAAK,OAAOisF,EAAW7tB,GAAKxB,UAAUswB,EAAgBltF,OAC9EqsF,EAAiBr/E,EAAQnI,KAAI,SAAUu5D,GAAO,OAAO3N,EAAO2N,MAC5D8sB,EAAa,GACbC,EAAc,GACdgC,EAAS,GACLf,EAAcnsF,OAAS,IACvBoqF,EAAK5tF,KAAKF,MACV+vF,EAAav7B,GAAkBq7B,EAAeC,EAAgB,IAAK,GACnErC,EAAMyD,WAAahxF,KAAKF,MAAQ8tF,EAChCa,EAAaoB,EAAWznF,KAAI,SAAUu5D,GAAO,OAAOguB,EAAchuB,MAClE+sB,EAAcmB,EAAWznF,KAAI,SAAUu5D,GAAO,OAAOiuB,EAAejuB,MACpE+uB,EAASb,EAAWznF,KAAI,SAAUu5D,EAAKp+D,GACnC,OAAOsG,MAAM,GAAGnB,KAAK,GAAGN,KAAI,SAAU2S,EAAGk2E,GACrC,IAAIC,EAAaV,EAAS7uB,GAAK+uB,OAAOpyE,YACtC,OAAO,IAAI0/C,GAAQkzB,EAAW,GAAGD,IAAUxC,EAAWlrF,GAAGuJ,MAAQ,GAAM2hF,EAAWlrF,GAAG8V,KAAS63E,EAAW,GAAGD,EAAQ,IAAMxC,EAAWlrF,GAAGsJ,OAAS,GAAM4hF,EAAWlrF,GAAG6V,YAIjLo3E,EAASnxF,SAAQ,SAAUib,GACvBA,EAAE0zE,QAAQtgD,UACVpzB,EAAE05C,OAAOtmB,UACTpzB,EAAEo2E,OAAOhjD,aAEN,CAAC,EAAc,CACdilB,MAAO87B,EACPz6B,OAAQ06B,EACRgC,OAAQA,WErDpC,IAAIS,GAAuB,SAAU7wB,GAEjC,SAAS6wB,IACL,OAAO7wB,EAAO56D,KAAK2E,KAAM,UAAYA,KAgIzC,OAlIAoxD,GAAU01B,EAAO7wB,GAIjB6wB,EAAM51B,UAAUuV,KAAO,SAAUC,GAC7B,OAAOjV,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,OAAOgyD,GAAYhyD,MAAM,SAAUq/B,GAE/B,OADAt8B,QAAQu0B,KAAK,gDACN,CAAC,EAAc2+B,EAAO/E,UAAUuV,KAAKprE,KAAK2E,KAAM0mE,WAInEogB,EAAM51B,UAAU8V,aAAe,SAAUxK,GACrC,OAAO/K,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,OAAOgyD,GAAYhyD,MAAM,SAAUq/B,GAE/B,OADAt8B,QAAQu0B,KAAK,gDACN,CAAC,EAAc2+B,EAAO/E,UAAU8V,aAAa3rE,KAAK2E,KAAMw8D,WAI3EsqB,EAAM51B,UAAU8Z,aAAe,SAAUvyE,EAAO4lF,GAE5C,YADsB,IAAlBA,IAA4BA,EAAgB,IACzC5sB,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIs4B,EAAQ8qC,EAAa8f,EAAO6D,EAAStmB,EAAWumB,EAAU3nD,EAAI78B,EAAQC,EAAO26D,EAAIoY,EAAaC,EAAaC,EAAcC,EAAiBC,EAAYqN,EAAQM,EAAItb,EAAMK,EAAME,EAAM+T,EACxL,OAAOvqB,GAAYhyD,MAAM,SAAUinE,GAC/B,OAAQA,EAAGhV,OACP,KAAK,EAED,KADA35B,EAASt4B,KAAKs4B,QAEV,MAAM,IAAIl+B,MAAM,uCAGpB,KADAgpE,EAAc3qE,EAAMmpE,SAAS,IAEzB,MAAM,IAAIxnE,MAAM,+GAwBpB,OAtBA8oF,EAAQ,GACR6D,EAAUpxF,KAAKF,MACfgrE,EAAY/I,IAAQ,WAChB,OCxDrB,SAAwBzvB,GAC3B,OAAOyvB,IAAQ,WAAc,OAAO4L,GAASoK,GAAWzlC,EAAQ,GAAGwW,UAAW,MDuD/CwoC,CAAezD,GAActgB,GAAsBE,IAAcL,cAE5EikB,EAAW,SAAUzK,GAIjB,OAFA9b,EAAUp9B,UACV6/C,EAAM98E,MAAQzQ,KAAKF,MAAQsxF,EACpBxK,GAEXl9C,EAAKohC,EAAUhtD,MAAMrY,MAAM,GAAIoH,EAAS68B,EAAG,GAAI58B,EAAQ48B,EAAG,GAC1D+9B,EAAK,IAAImY,GAAa8I,GAAgB7I,EAAcpY,EAAGoY,YAAaC,EAAcrY,EAAGqY,YAAaC,EAAetY,EAAGsY,aAAcC,EAAkBvY,EAAGuY,gBAAiBC,EAAaxY,EAAGwY,WACxLqN,GAAUrN,GElE3B,SAAqBJ,EAAaC,EAAalV,GAMlD,IALA,IAAI/9D,EAAS+9D,EAAK,GAAI99D,EAAQ89D,EAAK,GAC/B1iE,ERFe,GQEC23E,EAChByN,EAAS,GACTiE,EAAW7gF,KAAKW,IAAIxE,EAAQC,GAAS5E,EACrCmnD,EAAM,EACHkiC,GAAY,IACfjE,EAAOzoF,KAAKqD,EAAIwI,KAAK6J,IAAIulE,EAAazwB,IACtCkiC,GAAsBzR,EACtBzwB,GAAO,EAEX,OAAOi+B,EFuDqCkE,CAAY3R,EAAaC,EAAa,CAACjzE,EAAQC,KAClEzE,QAAO,SAAUkZ,GAClB,IAAI2iE,EAAQ6I,GAAiBxrE,EAAO,CAAC1U,EAAQC,IAC7C,OAAO4D,KAAKW,IAAI6yE,EAAMp3E,MAAOo3E,EAAMr3E,QNrExC,MMuEMpH,MAAM,EAAGs6E,GACdwN,EAAMD,OAASA,EACfC,EAAMkE,QAAUnE,EAAOllF,KAAI,SAAUmZ,GAAS,OAAOwrE,GAAiBxrE,EAAO,CAAC1U,EAAQC,OACtF8gF,EAAK5tF,KAAKF,MACH,CAAC,EAAautF,GAAOviB,EAAWwiB,EAAQtN,EAAgB,GAAIr9C,EAAOiqD,KAAMW,IACpF,KAAK,EAGD,OAFAjb,EAAOhB,EAAG/U,OACVgxB,EAAMmE,aAAe1xF,KAAKF,MAAQ8tF,EAC7Btb,EAAK3f,MAAMnvD,QAGhB+pF,EAAMoE,qBAAuBrf,EAAK3f,MAAMnvD,OAGxCoqF,EAAK5tF,KAAKF,MACH,CAAC,EAAayvF,GAAO9hB,EAAa6E,EAAK3f,MAAOqtB,EAAgB,GAAIr9C,EAAOkqD,KAAMU,KAN3E,CAAC,EAAc8D,EAAS,CAAEzK,QAAS,GAAI2G,MAAOA,KAO7D,KAAK,EAGD,OAFA5a,EAAOrB,EAAG/U,OACVgxB,EAAMqE,aAAe5xF,KAAKF,MAAQ8tF,EAC7Bjb,EAAKhgB,MAAMnvD,QAGhB+pF,EAAMsE,qBAAuBlf,EAAKhgB,MAAMnvD,OACxCoqF,EAAK5tF,KAAKF,MACH,CAAC,EAAawwF,GAAO7iB,EAAakF,EAAKhgB,MAAOqtB,EAAgB,GAAIr9C,EAAOmqD,KAAMS,KAJ3E,CAAC,EAAc8D,EAAS,CAAEzK,QAAS,GAAI2G,MAAOA,KAK7D,KAAK,EAOD,OANA1a,EAAOvB,EAAG/U,OACVgxB,EAAMuE,aAAe9xF,KAAKF,MAAQ8tF,EAClChH,EAAU/T,EAAKlgB,MAAMvqD,KAAI,SAAUq2D,EAAKkD,GAAO,OAAOgX,GAAwB5S,GAAwB,GAAI,IAAI9E,GAAc4R,EAAK7e,OAAO2N,GAAM,IAAIY,GAAK9D,EAAIplD,KAAOvM,EAAO2xD,EAAIrlD,IAAMvM,EAAQ4xD,EAAI3xD,MAAQA,EAAO2xD,EAAI5xD,OAASA,GAAS,CAChOA,OAAQA,EACRC,MAAOA,KACN,IAAIu3D,GAAewO,EAAK6d,OAAO/uB,GAAKv5D,KAAI,SAAU21D,GAAM,OAAOA,EAAG1N,IAAI,IAAI2N,GAAMS,EAAIplD,KAAMolD,EAAIrlD,MAAM+xC,IAAI,IAAI6S,GAAMS,EAAI3xD,MAAO2xD,EAAI5xD,YAAc,CAAEC,MAAO2xD,EAAI3xD,MAAOD,OAAQ4xD,EAAI5xD,aAC7K,CAAC,EAAcwkF,EAAS,CAAEzK,QAASA,EAAS2G,MAAOA,aAK9E4D,EAAM51B,UAAUqa,QAAU,SAAU9yE,EAAO4lF,GAEvC,YADsB,IAAlBA,IAA4BA,EAAgB,IACzC5sB,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIq/B,EACJ,OAAO2yB,GAAYhyD,MAAM,SAAUo9D,GAC/B,OAAQA,EAAGnL,OACP,KAAK,EAED,OADA5yB,EAAKr/B,KAAKgrE,aACH,CAAC,EAAaxH,GAAW/qE,IACpC,KAAK,EAAG,MAAO,CAAC,EAAa4mC,EAAGv4B,MAAM9G,KAAM,CAACo9D,EAAGlL,OACxCmsB,KACR,KAAK,EAAG,MAAO,CAAC,EAAejhB,EAAGlL,OAAQqqB,iBAK1DuK,EAAM51B,UAAUw2B,iBAAmB,SAAUjvF,EAAO4lF,GAEhD,YADsB,IAAlBA,IAA4BA,EAAgB,IACzC5sB,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIq/B,EACJ,OAAO2yB,GAAYhyD,MAAM,SAAUo9D,GAC/B,OAAQA,EAAGnL,OACP,KAAK,EAED,OADA5yB,EAAKr/B,KAAKgrE,aACH,CAAC,EAAaxH,GAAW/qE,IACpC,KAAK,EAAG,MAAO,CAAC,EAAc4mC,EAAGv4B,MAAM9G,KAAM,CAACo9D,EAAGlL,OACzCmsB,aAKxByI,EAAM51B,UAAU4V,oBAAsB,WAClC,MAAO,eAEXggB,EAAM51B,UAAUmW,2BAA6B,SAAUR,GACnD,OAAOQ,GAA2BR,IAEtCigB,EAAM51B,UAAUqW,cAAgB,SAAU9yD,GACtC,OAAO8yD,GAAc9yD,IAElBqyE,GACTxhB,IGpJSqX,GAAc,CACrB,IAAIhpB,GAAM,SAAU,UACpB,IAAIA,GAAM,SAAU,UACpB,IAAIA,GAAM,SAAU,UACpB,IAAIA,GAAM,SAAU,UACpB,IAAIA,GAAM,SAAU,WAEbg0B,GAAW,CAAC,QAAS,QAAS,QCLrCC,GAAkC,SAAU3xB,GAE5C,SAAS2xB,IACL,IACI5tD,EAAS,CACT0jD,oBAAoB,EACpB7zB,aDTe,GCUf8zB,QAAS,CAAC,QACVC,QAASjB,GACTllB,QAASkwB,GACTxJ,oBAAoB,EACpBO,YAAa,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,MAG3C,OADQzoB,EAAO56D,KAAK2E,KAAMg6B,IAAWh6B,KA6BzC,OAzCAoxD,GAAUw2B,EAAkB3xB,GAe5BrhE,OAAOkrC,eAAe8nD,EAAiB12B,UAAW,UAAW,CACzDt5B,IAAK,WACD,OAAO53B,KAAKg6B,OAAO4jD,SAEvB5qB,YAAY,EACZ7jB,cAAc,IAElBy4C,EAAiB12B,UAAUgrB,YAAc,SAAUzjF,EAAO4lF,GACtD,OAAO5sB,GAAUzxD,UAAM,OAAQ,GAAQ,WAEnC,OAAOgyD,GAAYhyD,MAAM,SAAUq/B,GAC/B,OAAQA,EAAG4yB,OACP,KAAK,EAAG,MAAO,CAAC,EAAajyD,KAAKo+E,OAAO3lF,EAAO4lF,IAChD,KAAK,EAED,MAAO,CAAC,EADWh/C,EAAG6yB,OACiBn0D,KAAI,SAAUomE,GAAO,OAAO,IAAIvN,GAAcuN,EAAIlZ,MAAOkZ,EAAI9N,YAAa,CAAE5zD,MAAO0hE,EAAI9sD,WAAY7U,OAAQ2hE,EAAI7sD,0BAK1KswE,EAAiB12B,UAAU4V,oBAAsB,WAC7C,MAAO,4BAEX8gB,EAAiB12B,UAAUmW,2BAA6B,SAAUR,GAC9D,OAAO5Q,EAAO/E,UAAUmW,2BAA2BhsE,KAAK2E,KAAM6mE,IAE3D+gB,GACTnK,ICtCSoK,GAAO,CACdC,eAAgB,IAAIhN,GACpBiN,iBAAkB,IAAIH,GACtBI,WAAY,IAAI1H,GAChB2H,MAAO,IAAInB,GACXoB,kBAAmB,IAAI7V,GACvB8V,sBAAuB,IAAI1V,GAC3B2V,mBAAoB,IAAItT,GACxBuT,kBAAmB,IAAIhb,GACvBib,aAAc,IAAIpY,ICXlBqY,GAAgD,SAAUtyB,GAE1D,SAASsyB,EAA+BC,EAAY/vF,EAAOooF,GACvD,IAAIpoB,EAAQxC,EAAO56D,KAAK2E,OAASA,KAIjC,OAHAy4D,EAAM+vB,WAAaA,EACnB/vB,EAAMhgE,MAAQA,EACdggE,EAAMooB,eAAiBA,EAChBpoB,EAEX,OARArH,GAAUm3B,EAAgCtyB,GAQnCsyB,GACT/H,IAEEiI,GAA+C,SAAUxyB,GAEzD,SAASwyB,IACL,OAAkB,OAAXxyB,GAAmBA,EAAOnvD,MAAM9G,KAAMwxD,YAAcxxD,KA6B/D,OA/BAoxD,GAAUq3B,EAA+BxyB,GAIzCwyB,EAA8Bv3B,UAAUz8D,IAAM,WAC1C,OAAOg9D,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAI2gF,EAAe+H,EACfjwB,EAAQz4D,KACZ,OAAOgyD,GAAYhyD,MAAM,SAAUq/B,GAC/B,OAAQA,EAAG4yB,OACP,KAAK,EAAG,MAAO,CAAC,EAAajyD,KAAKwoF,YAClC,KAAK,EAED,MAAO,CAAC,EAAa9H,GADrBC,EAAgBthD,EAAG6yB,OACkDlyD,KAAKvH,OAAO,SAAUuoF,GAAS,OAAOvvB,GAAUgH,OAAO,OAAQ,GAAQ,WACpI,OAAOzG,GAAYhyD,MAAM,SAAUq/B,GAC/B,OAAQA,EAAG4yB,OACP,KAAK,EAAG,MAAO,CAAC,EAAat2D,QAAQsgC,IAAI+kD,EAAMjjF,KAAI,SAAU4qF,GAAQ,OAAOd,GAAKQ,kBAAkB9a,mBAAmBob,QACtH,KAAK,EAAG,MAAO,CAAC,EAActpD,EAAG6yB,iBAGtClyD,KAAK6gF,iBACpB,KAAK,EAED,OADA6H,EAAwBrpD,EAAG6yB,OACpB,CAAC,EAAcyuB,EAAc5iF,KAAI,SAAUkjF,EAAc/nF,GAAK,OAAO20E,GAA0BoT,EAAcyH,EAAsBxvF,gBAK9JuvF,EAA8Bv3B,UAAU03B,iBAAmB,WACvD,OAAO,IAAIC,GAA2B7oF,KAAMA,KAAKvH,QAE9CgwF,GACTF,IAEEO,GAAkD,SAAU7yB,GAE5D,SAAS6yB,IACL,OAAkB,OAAX7yB,GAAmBA,EAAOnvD,MAAM9G,KAAMwxD,YAAcxxD,KAwB/D,OA1BAoxD,GAAU03B,EAAkC7yB,GAI5C6yB,EAAiC53B,UAAUz8D,IAAM,WAC7C,OAAOg9D,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIihF,EAAcjT,EAClB,OAAOhc,GAAYhyD,MAAM,SAAUq/B,GAC/B,OAAQA,EAAG4yB,OACP,KAAK,EAAG,MAAO,CAAC,EAAajyD,KAAKwoF,YAClC,KAAK,EAED,OADAvH,EAAe5hD,EAAG6yB,QAIX,CAAC,EAAagvB,GAAkCD,EAAcjhF,KAAKvH,OAAO,SAAUkwF,GAAQ,OAAOd,GAAKQ,kBAAkB9a,mBAAmBob,KAAU3oF,KAAK6gF,iBAFxJ,CAAC,GAGhB,KAAK,EAED,OADA7S,EAAkB3uC,EAAG6yB,OACd,CAAC,EAAc2b,GAA0BoT,EAAcjT,YAKlF8a,EAAiC53B,UAAU03B,iBAAmB,WAC1D,OAAO,IAAIG,GAA8B/oF,KAAMA,KAAKvH,QAEjDqwF,GACTP,IAEES,GAAgE,SAAU/yB,GAE1E,SAAS+yB,IACL,OAAkB,OAAX/yB,GAAmBA,EAAOnvD,MAAM9G,KAAMwxD,YAAcxxD,KAQ/D,OAVAoxD,GAAU43B,EAAgD/yB,GAI1D+yB,EAA+C93B,UAAU03B,iBAAmB,WACxE,OAAO,IAAIK,GAA4CjpF,KAAMA,KAAKvH,QAEtEuwF,EAA+C93B,UAAUg4B,oBAAsB,WAC3E,OAAO,IAAIC,GAA8BnpF,KAAMA,KAAKvH,QAEjDuwF,GACTP,IAEEW,GAAmE,SAAUnzB,GAE7E,SAASmzB,IACL,OAAkB,OAAXnzB,GAAmBA,EAAOnvD,MAAM9G,KAAMwxD,YAAcxxD,KAQ/D,OAVAoxD,GAAUg4B,EAAmDnzB,GAI7DmzB,EAAkDl4B,UAAU03B,iBAAmB,WAC3E,OAAO,IAAIS,GAA+CrpF,KAAMA,KAAKvH,QAEzE2wF,EAAkDl4B,UAAUo4B,mBAAqB,WAC7E,OAAO,IAAIC,GAAgCvpF,KAAMA,KAAKvH,QAEnD2wF,GACTN,ICtGEU,GAA6C,SAAUvzB,GAEvD,SAASuzB,EAA4BhB,EAAY/vF,EAAOooF,GACpD,IAAIpoB,EAAQxC,EAAO56D,KAAK2E,OAASA,KAIjC,OAHAy4D,EAAM+vB,WAAaA,EACnB/vB,EAAMhgE,MAAQA,EACdggE,EAAMooB,eAAiBA,EAChBpoB,EAEX,OARArH,GAAUo4B,EAA6BvzB,GAQhCuzB,GACThJ,IAEEqI,GAA4C,SAAU5yB,GAEtD,SAAS4yB,IACL,OAAkB,OAAX5yB,GAAmBA,EAAOnvD,MAAM9G,KAAMwxD,YAAcxxD,KAgC/D,OAlCAoxD,GAAUy3B,EAA4B5yB,GAItC4yB,EAA2B33B,UAAUz8D,IAAM,WACvC,OAAOg9D,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAI2gF,EAAe8I,EACfhxB,EAAQz4D,KACZ,OAAOgyD,GAAYhyD,MAAM,SAAUq/B,GAC/B,OAAQA,EAAG4yB,OACP,KAAK,EAAG,MAAO,CAAC,EAAajyD,KAAKwoF,YAClC,KAAK,EAED,MAAO,CAAC,EAAa9H,GADrBC,EAAgBthD,EAAG6yB,OACkDlyD,KAAKvH,OAAO,SAAUuoF,GAAS,OAAOvvB,GAAUgH,OAAO,OAAQ,GAAQ,WACpI,OAAOzG,GAAYhyD,MAAM,SAAUq/B,GAC/B,OAAQA,EAAG4yB,OACP,KAAK,EAAG,MAAO,CAAC,EAAat2D,QAAQsgC,IAAI+kD,EAAMjjF,KAAI,SAAU4qF,GAAQ,OAAOd,GAAKS,aAAa/X,oBAAoBoY,QAClH,KAAK,EAAG,MAAO,CAAC,EAActpD,EAAG6yB,iBAGtClyD,KAAK6gF,iBACpB,KAAK,EAED,OADA4I,EAAqBpqD,EAAG6yB,OACjB,CAAC,EAAcyuB,EAAc5iF,KAAI,SAAUkjF,EAAc/nF,GACxD,IAAImmC,EAAKoqD,EAAmBvwF,GAAIk3E,EAAM/wC,EAAG+wC,IACzC,OAAOiF,GAAcC,GAAiB2L,EADiB5hD,EAAGixC,OAA4BjxC,EAAG0xC,mBACTX,eAM5GyY,EAA2B33B,UAAUw4B,oBAAsB,WACvD,OAAO,IAAIjB,GAA8BzoF,KAAMA,KAAKvH,QAEjDowF,GACTW,IAEET,GAA+C,SAAU9yB,GAEzD,SAAS8yB,IACL,OAAkB,OAAX9yB,GAAmBA,EAAOnvD,MAAM9G,KAAMwxD,YAAcxxD,KAwB/D,OA1BAoxD,GAAU23B,EAA+B9yB,GAIzC8yB,EAA8B73B,UAAUz8D,IAAM,WAC1C,OAAOg9D,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIihF,EAAc5hD,EAAI+wC,EAAKE,EAAQS,EACnC,OAAO/e,GAAYhyD,MAAM,SAAUo9D,GAC/B,OAAQA,EAAGnL,OACP,KAAK,EAAG,MAAO,CAAC,EAAajyD,KAAKwoF,YAClC,KAAK,EAED,OADAvH,EAAe7jB,EAAGlL,QAIX,CAAC,EAAagvB,GAAkCD,EAAcjhF,KAAKvH,OAAO,SAAUkwF,GAAQ,OAAOd,GAAKS,aAAa/X,oBAAoBoY,KAAU3oF,KAAK6gF,iBAFpJ,CAAC,GAGhB,KAAK,EAED,OADAxhD,EAAK+9B,EAAGlL,OAAQke,EAAM/wC,EAAG+wC,IAAKE,EAASjxC,EAAGixC,OAAQS,EAAoB1xC,EAAG0xC,kBAClE,CAAC,EAAcsE,GAAcC,GAAiB2L,EAAc3Q,EAAQS,GAAoBX,YAKnH2Y,EAA8B73B,UAAUw4B,oBAAsB,WAC1D,OAAO,IAAIZ,GAAiC9oF,KAAMA,KAAKvH,QAEpDswF,GACTS,IAEEP,GAA6D,SAAUhzB,GAEvE,SAASgzB,IACL,OAAkB,OAAXhzB,GAAmBA,EAAOnvD,MAAM9G,KAAMwxD,YAAcxxD,KAQ/D,OAVAoxD,GAAU63B,EAA6ChzB,GAIvDgzB,EAA4C/3B,UAAUw4B,oBAAsB,WACxE,OAAO,IAAIV,GAA+ChpF,KAAMA,KAAKvH,QAEzEwwF,EAA4C/3B,UAAUg4B,oBAAsB,WACxE,OAAO,IAAIC,GAA8BnpF,KAAMA,KAAKvH,QAEjDwwF,GACTJ,IAEEQ,GAAgE,SAAUpzB,GAE1E,SAASozB,IACL,OAAkB,OAAXpzB,GAAmBA,EAAOnvD,MAAM9G,KAAMwxD,YAAcxxD,KAQ/D,OAVAoxD,GAAUi4B,EAAgDpzB,GAI1DozB,EAA+Cn4B,UAAUw4B,oBAAsB,WAC3E,OAAO,IAAIN,GAAkDppF,KAAMA,KAAKvH,QAE5E4wF,EAA+Cn4B,UAAUo4B,mBAAqB,WAC1E,OAAO,IAAIC,GAAgCvpF,KAAMA,KAAKvH,QAEnD4wF,GACTN,IC3GEY,GAAgD,SAAU1zB,GAE1D,SAAS0zB,EAA+BnB,EAAY/vF,GAChD,IAAIggE,EAAQxC,EAAO56D,KAAK2E,OAASA,KAGjC,OAFAy4D,EAAM+vB,WAAaA,EACnB/vB,EAAMhgE,MAAQA,EACPggE,EAEX,OAPArH,GAAUu4B,EAAgC1zB,GAOnC0zB,GACTnJ,IAEE2I,GAA+C,SAAUlzB,GAEzD,SAASkzB,IACL,OAAkB,OAAXlzB,GAAmBA,EAAOnvD,MAAM9G,KAAMwxD,YAAcxxD,KA0B/D,OA5BAoxD,GAAU+3B,EAA+BlzB,GAIzCkzB,EAA8Bj4B,UAAUz8D,IAAM,WAC1C,OAAOg9D,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAI2gF,EACJ,OAAO3uB,GAAYhyD,MAAM,SAAUq/B,GAC/B,OAAQA,EAAG4yB,OACP,KAAK,EAAG,MAAO,CAAC,EAAajyD,KAAKwoF,YAClC,KAAK,EAED,MAAO,CAAC,EAAa9H,GADrBC,EAAgBthD,EAAG6yB,OACkDlyD,KAAKvH,OAAO,SAAUuoF,GAAS,OAAOrlF,QAAQsgC,IAAI+kD,EAAMjjF,KAAI,SAAU4qF,GACnI,OAAOd,GAAKO,mBAAmBpT,sBAAsB2T,SACjD,MAAM,SAAU1H,GAAgB,OAAOA,EAAazS,UAAU3V,MAAM,KAAM,CAAEE,kBAAkB,QAC9G,KAAK,EAED,MAAO,CAAC,EADM15B,EAAG6yB,OACiBn0D,KAAI,SAAUq3E,EAAYl8E,GAAK,OAAOi8E,GAAyBwL,EAAcznF,GAAIk8E,eAKvI+T,EAA8Bj4B,UAAUw4B,oBAAsB,WAC1D,OAAO,IAAIV,GAA+ChpF,KAAMA,KAAKvH,QAEzE0wF,EAA8Bj4B,UAAU03B,iBAAmB,WACvD,OAAO,IAAIK,GAA4CjpF,KAAMA,KAAKvH,QAE/D0wF,GACTQ,IAEEJ,GAAiD,SAAUtzB,GAE3D,SAASszB,IACL,OAAkB,OAAXtzB,GAAmBA,EAAOnvD,MAAM9G,KAAMwxD,YAAcxxD,KA2B/D,OA7BAoxD,GAAUm4B,EAAiCtzB,GAI3CszB,EAAgCr4B,UAAUz8D,IAAM,WAC5C,OAAOg9D,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIihF,EAAc7L,EAClB,OAAOpjB,GAAYhyD,MAAM,SAAUq/B,GAC/B,OAAQA,EAAG4yB,OACP,KAAK,EAAG,MAAO,CAAC,EAAajyD,KAAKwoF,YAClC,KAAK,EAED,OADAvH,EAAe5hD,EAAG6yB,QAIX,CAAC,EAAagvB,GAAkCD,EAAcjhF,KAAKvH,OAAO,SAAUkwF,GAAQ,OAAOd,GAAKO,mBAAmBpT,sBAAsB2T,KAAU,MAAM,SAAU1H,GAAgB,OAAOA,EAAazS,UAAU3V,MAAM,KAAM,CAAEE,kBAAkB,QAFrP,CAAC,GAGhB,KAAK,EAED,OADAqc,EAAa/1C,EAAG6yB,OACT,CAAC,EAAcijB,GAAyB8L,EAAc7L,YAKjFmU,EAAgCr4B,UAAUw4B,oBAAsB,WAC5D,OAAO,IAAIN,GAAkDppF,KAAMA,KAAKvH,QAE5E8wF,EAAgCr4B,UAAU03B,iBAAmB,WACzD,OAAO,IAAIS,GAA+CrpF,KAAMA,KAAKvH,QAElE8wF,GACTI,ICxEEC,GAA6C,SAAU3zB,GAEvD,SAAS2zB,EAA4BpB,EAAY/vF,EAAOoxF,GACpD,IAAIpxB,EAAQxC,EAAO56D,KAAK2E,OAASA,KAIjC,OAHAy4D,EAAM+vB,WAAaA,EACnB/vB,EAAMhgE,MAAQA,EACdggE,EAAMoxB,mBAAqBA,EACpBpxB,EAWX,OAjBArH,GAAUw4B,EAA6B3zB,GAQvCrhE,OAAOkrC,eAAe8pD,EAA4B14B,UAAW,cAAe,CACxEt5B,IAAK,WACD,OAAO53B,KAAK6pF,mBACNhC,GAAKM,sBACLN,GAAKK,mBAEfl1B,YAAY,EACZ7jB,cAAc,IAEXy6C,GACTpJ,IAEEsJ,GAA4C,SAAU7zB,GAEtD,SAAS6zB,IACL,OAAkB,OAAX7zB,GAAmBA,EAAOnvD,MAAM9G,KAAMwxD,YAAcxxD,KA2C/D,OA7CAoxD,GAAU04B,EAA4B7zB,GAItC6zB,EAA2B54B,UAAUz8D,IAAM,WACvC,OAAOg9D,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAI2gF,EAAe3c,EAAYgd,EAAO3hD,EAAI0qD,EACtCtxB,EAAQz4D,KACZ,OAAOgyD,GAAYhyD,MAAM,SAAUo9D,GAC/B,OAAQA,EAAGnL,OACP,KAAK,EAAG,MAAO,CAAC,EAAajyD,KAAKwoF,YAClC,KAAK,EAGD,OAFA7H,EAAgBvjB,EAAGlL,OACnB8R,EAAa2c,EAAc5iF,KAAI,SAAU6nC,GAAO,OAAOA,EAAIkzB,aACrD94D,KAAKvH,iBAAiBy6D,GACrB,CAAC,EAAamR,GAAmBrkE,KAAKvH,MAAOurE,IADL,CAAC,EAAa,GAEjE,KAAK,EAED,OADA3kC,EAAK+9B,EAAGlL,OACD,CAAC,EAAa,GACzB,KAAK,EAAG,MAAO,CAAC,EAAa6R,GAAa/jE,KAAKvH,MAAOurE,IACtD,KAAK,EACD3kC,EAAK+9B,EAAGlL,OACRkL,EAAGnL,MAAQ,EACf,KAAK,EAED,OADA+uB,EAAQ3hD,EACD,CAAC,EAAa1jC,QAAQsgC,IAAI+kD,EAAMjjF,KAAI,SAAU4qF,GAAQ,OAAOlwB,EAAMuxB,YAAYlY,gBAAgB6W,QAC1G,KAAK,EAGD,OAFAoB,EAAsB3sB,EAAGlL,OACzB8uB,EAAMhsF,SAAQ,SAAUqB,GAAK,OAAOA,aAAa68D,IAAa78D,EAAEgtC,aACzD,CAAC,EAAcs9C,EAAc5iF,KAAI,SAAUkjF,EAAc/nF,GACxD,OAAOo1E,GAAwB2S,EAAc8I,EAAoB7wF,gBAM7F4wF,EAA2B54B,UAAUw4B,oBAAsB,WACvD,OAAO,IAAIV,GAA+ChpF,KAAMA,KAAKvH,QAEzEqxF,EAA2B54B,UAAU03B,iBAAmB,WACpD,OAAO,IAAIK,GAA4CjpF,KAAMA,KAAKvH,QAEtEqxF,EAA2B54B,UAAUg4B,oBAAsB,WACvD,OAAO,IAAIC,GAA8BnpF,KAAMA,KAAKvH,QAEjDqxF,GACTF,IAEEK,GAA+C,SAAUh0B,GAEzD,SAASg0B,IACL,OAAkB,OAAXh0B,GAAmBA,EAAOnvD,MAAM9G,KAAMwxD,YAAcxxD,KA2C/D,OA7CAoxD,GAAU64B,EAA+Bh0B,GAIzCg0B,EAA8B/4B,UAAUz8D,IAAM,WAC1C,OAAOg9D,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIihF,EAAcnoB,EAAWkoB,EAAO3hD,EAAImvC,EACxC,OAAOxc,GAAYhyD,MAAM,SAAUo9D,GAC/B,OAAQA,EAAGnL,OACP,KAAK,EAAG,MAAO,CAAC,EAAajyD,KAAKwoF,YAClC,KAAK,EAED,OADAvH,EAAe7jB,EAAGlL,SAIlB4G,EAAYmoB,EAAanoB,UACnB94D,KAAKvH,iBAAiBy6D,GACrB,CAAC,EAAamR,GAAmBrkE,KAAKvH,MAAO,CAACqgE,KADN,CAAC,EAAa,IAHlD,CAAC,GAKhB,KAAK,EAED,OADAz5B,EAAK+9B,EAAGlL,OACD,CAAC,EAAa,GACzB,KAAK,EAAG,MAAO,CAAC,EAAa6R,GAAa/jE,KAAKvH,MAAO,CAACqgE,KACvD,KAAK,EACDz5B,EAAK+9B,EAAGlL,OACRkL,EAAGnL,MAAQ,EACf,KAAK,EAED,OADA+uB,EAAQ3hD,EACD,CAAC,EAAar/B,KAAKgqF,YAAYlY,gBAAgBkP,EAAM,KAChE,KAAK,EAGD,OAFAxS,EAAYpR,EAAGlL,OACf8uB,EAAMhsF,SAAQ,SAAUqB,GAAK,OAAOA,aAAa68D,IAAa78D,EAAEgtC,aACzD,CAAC,EAAcirC,GAAwB2S,EAAczS,YAKhFyb,EAA8B/4B,UAAUw4B,oBAAsB,WAC1D,OAAO,IAAIN,GAAkDppF,KAAMA,KAAKvH,QAE5EwxF,EAA8B/4B,UAAU03B,iBAAmB,WACvD,OAAO,IAAIS,GAA+CrpF,KAAMA,KAAKvH,QAEzEwxF,EAA8B/4B,UAAUo4B,mBAAqB,WACzD,OAAO,IAAIC,GAAgCvpF,KAAMA,KAAKvH,QAEnDwxF,GACTL,ICnHEM,GAAqC,SAAUj0B,GAE/C,SAASi0B,EAAoBzxF,EAAOZ,QAChB,IAAZA,IAAsBA,EAAU,IAAI6iF,IACxC,IAAIjiB,EAAQxC,EAAO56D,KAAK2E,OAASA,KAGjC,OAFAy4D,EAAMhgE,MAAQA,EACdggE,EAAM5gE,QAAUA,EACT4gE,EAEX,OARArH,GAAU84B,EAAqBj0B,GAQxBi0B,GACT1J,IAEE2J,GAAoC,SAAUl0B,GAE9C,SAASk0B,IACL,OAAkB,OAAXl0B,GAAmBA,EAAOnvD,MAAM9G,KAAMwxD,YAAcxxD,KAqD/D,OAvDAoxD,GAAU+4B,EAAoBl0B,GAI9Bk0B,EAAmBj5B,UAAUz8D,IAAM,WAC/B,OAAOg9D,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIq/B,EAAI5mC,EAAOZ,EAASuyF,EACxB,OAAOp4B,GAAYhyD,MAAM,SAAUo9D,GAC/B,OAAQA,EAAGnL,OACP,KAAK,EAED,OADWx5D,GAAX4mC,EAAKr/B,MAAiBvH,OAAOZ,EAAUwnC,EAAGxnC,mBACjB09E,GAClB,CAAC,EAAasS,GAAKI,MAAM1c,QAAQ9yE,EAAOZ,IADA,CAAC,EAAa,GAEjE,KAAK,EAAG,MAAO,CAAC,EAAeulE,EAAGlL,OACzBn0D,KAAI,SAAUkF,GAAU,OAAOA,EAAO61D,cAC/C,KAAK,EAQD,KAPAsxB,EAAwBvyF,aAAmB0oF,GACrC,SAAU9nF,GAAS,OAAOovF,GAAKE,iBAAiB7L,YAAYzjF,EAAOZ,IAClEA,aAAmB6iF,GAChB,SAAUjiF,GAAS,OAAOovF,GAAKC,eAAe5L,YAAYzjF,EAAOZ,IAChEA,aAAmB0lF,GAChB,SAAU9kF,GAAS,OAAOovF,GAAKG,WAAW9L,YAAYzjF,EAAOZ,IAC7D,MAEV,MAAM,IAAIuC,MAAM,uIAEpB,MAAO,CAAC,EAAcgwF,EAAsB3xF,YAKhE0xF,EAAmBj5B,UAAUm5B,+BAAiC,WAC1D,IAAI5xB,EAAQz4D,KACZ,OAAO,IAAIrE,SAAQ,SAAUiqC,GAAO,OAAO6rB,GAAUgH,OAAO,OAAQ,GAAQ,WACxE,IAAIuL,EACJ,OAAOhS,GAAYhyD,MAAM,SAAUq/B,GAC/B,OAAQA,EAAG4yB,OACP,KAAK,EAAG,MAAO,CAAC,EAAajyD,KAAKvL,OAClC,KAAK,EAED,OADAuvE,EAAa3kC,EAAG6yB,OACT,CAAC,EAActsB,EAAIo+B,EAAWjmE,KAAI,SAAU+6D,GAAa,OAAO4C,GAAwB,GAAI5C,mBAKvHqxB,EAAmBj5B,UAAUo5B,kBAAoB,SAAUT,GAEvD,YAD2B,IAAvBA,IAAiCA,GAAqB,GACnD,IAAIC,GAA2B9pF,KAAKqqF,iCAAkCrqF,KAAKvH,MAAOoxF,IAE7FM,EAAmBj5B,UAAUw4B,oBAAsB,WAC/C,OAAO,IAAIjB,GAA8BzoF,KAAKqqF,iCAAkCrqF,KAAKvH,QAEzF0xF,EAAmBj5B,UAAU03B,iBAAmB,WAC5C,OAAO,IAAIC,GAA2B7oF,KAAKqqF,iCAAkCrqF,KAAKvH,QAE/E0xF,GACTD,IAEEK,GAAsC,SAAUt0B,GAEhD,SAASs0B,IACL,OAAkB,OAAXt0B,GAAmBA,EAAOnvD,MAAM9G,KAAMwxD,YAAcxxD,KA6C/D,OA/CAoxD,GAAUm5B,EAAsBt0B,GAIhCs0B,EAAqBr5B,UAAUz8D,IAAM,WACjC,OAAOg9D,GAAUzxD,UAAM,OAAQ,GAAQ,WACnC,IAAIwqF,EAAgBC,EACpB,OAAOz4B,GAAYhyD,MAAM,SAAUq/B,GAC/B,OAAQA,EAAG4yB,OACP,KAAK,EAAG,MAAO,CAAC,EAAa,IAAIk4B,GAAmBnqF,KAAKvH,MAAOuH,KAAKnI,UACrE,KAAK,EAQD,OAPA2yF,EAAiBnrD,EAAG6yB,OACpBu4B,EAAgCD,EAAe,GAC/CA,EAAex1F,SAAQ,SAAU01F,GACzBA,EAAcz/B,MAAQw/B,EAA8Bx/B,QACpDw/B,EAAgCC,MAGjC,CAAC,EAAcD,WAK1CF,EAAqBr5B,UAAUy5B,8BAAgC,WAC3D,IAAIlyB,EAAQz4D,KACZ,OAAO,IAAIrE,SAAQ,SAAUiqC,GAAO,OAAO6rB,GAAUgH,OAAO,OAAQ,GAAQ,WACxE,IAAIK,EACJ,OAAO9G,GAAYhyD,MAAM,SAAUq/B,GAC/B,OAAQA,EAAG4yB,OACP,KAAK,EAAG,MAAO,CAAC,EAAajyD,KAAKvL,OAClC,KAAK,EAED,OADAqkE,EAAYz5B,EAAG6yB,OACR,CAAC,EAActsB,EAAIkzB,EAAY4C,GAAwB,GAAI5C,QAAan/D,eAKnG4wF,EAAqBr5B,UAAUo5B,kBAAoB,SAAUT,GAEzD,YAD2B,IAAvBA,IAAiCA,GAAqB,GACnD,IAAII,GAA8BjqF,KAAK2qF,gCAAiC3qF,KAAKvH,MAAOoxF,IAE/FU,EAAqBr5B,UAAUw4B,oBAAsB,WACjD,OAAO,IAAIZ,GAAiC9oF,KAAK2qF,gCAAiC3qF,KAAKvH,QAE3F8xF,EAAqBr5B,UAAU03B,iBAAmB,WAC9C,OAAO,IAAIG,GAA8B/oF,KAAK2qF,gCAAiC3qF,KAAKvH,QAEjF8xF,GACTL,KChI+B,WAC7B,SAASU,EAAYzvD,EAAQ0vD,QACC,IAAtBA,IAAgCA,EAAoB,IACxD7qF,KAAK8qF,mBAAqBD,EAC1B,IAAIlnB,EAAankE,MAAMi1B,QAAQ0G,GAAUA,EAAS,CAACA,GACnD,IAAKwoC,EAAWxqE,OACZ,MAAM,IAAIiB,MAAM,2DAEpB,IAAI2wF,EAAQ,EACRC,EAAoB,WAAc,MAAO,UAAYD,KACzD/qF,KAAKirF,oBAAsBtnB,EAAW5lE,KAAI,SAAUm9D,GAChD,GAAIA,aAAgBF,GAChB,OAAOE,EAEX,GAAIA,aAAgBhmC,aAChB,OAAO,IAAI8lC,GAAuBgwB,IAAqB,CAAC9vB,IAE5D,GAAIA,EAAKka,YAAcla,EAAKka,sBAAsBlgD,aAC9C,OAAO,IAAI8lC,GAAuBgwB,IAAqB,CAAC9vB,EAAKka,aAEjE,MAAM,IAAIh7E,MAAM,0MAGxBxF,OAAOkrC,eAAe8qD,EAAY15B,UAAW,qBAAsB,CAC/Dt5B,IAAK,WAAc,OAAO53B,KAAKirF,qBAC/Bj4B,YAAY,EACZ7jB,cAAc,IAElBv6C,OAAOkrC,eAAe8qD,EAAY15B,UAAW,oBAAqB,CAC9Dt5B,IAAK,WAAc,OAAO53B,KAAK8qF,oBAC/B93B,YAAY,EACZ7jB,cAAc,IAElBy7C,EAAY15B,UAAUg6B,oBAAsB,SAAUC,EAAiBlwB,GACnE,OAAOA,EACFl9D,KAAI,SAAUP,GAAK,OCtCzB,SAA2B4tF,EAAMC,GACpC,GAAID,EAAKjyF,SAAWkyF,EAAKlyF,OACrB,MAAM,IAAIiB,MAAM,kDACpB,IAAIkxF,EAAQ9rF,MAAMC,KAAK2rF,GACnBG,EAAQ/rF,MAAMC,KAAK4rF,GACvB,OAAOhlF,KAAK2tD,KAAKs3B,EACZvtF,KAAI,SAAUyW,EAAKtb,GAAK,OAAOsb,EAAM+2E,EAAMryF,MAC3CiN,QAAO,SAAUy/B,EAAK+uB,GAAQ,OAAO/uB,EAAMv/B,KAAK6J,IAAIykD,EAAM,KAAO,ID+BnC62B,CAAkBhuF,EAAG2tF,MAC/ChlF,QAAO,SAAUslF,EAAIC,GAAM,OAAOD,EAAKC,IAAO,IAC5CzwB,EAAY9hE,QAAU,IAEjCyxF,EAAY15B,UAAUy6B,gBAAkB,SAAUR,GAC9C,IAAI1yB,EAAQz4D,KACZ,OAAOA,KAAK4rF,mBACP7tF,KAAI,SAAUshC,GACf,IAAI47B,EAAc57B,EAAG47B,YAAahJ,EAAQ5yB,EAAG4yB,MAC7C,OAAO,IAAIwI,GAAUxI,EAAOwG,EAAMyyB,oBAAoBC,EAAiBlwB,OAEtE90D,QAAO,SAAU0lF,EAAMx0B,GAAQ,OAAOw0B,EAAKnxB,SAAWrD,EAAKqD,SAAWmxB,EAAOx0B,MAEtFuzB,EAAY15B,UAAU46B,cAAgB,SAAUX,GAC5C,IAAIY,EAAY/rF,KAAK2rF,gBAAgBR,GACrC,OAAOY,EAAUrxB,SAAW16D,KAAK6qF,kBAC3BkB,EACA,IAAItxB,GAAU,UAAWsxB,EAAUrxB,WAE7CkwB,EAAY15B,UAAUkK,OAAS,WAC3B,MAAO,CACHyvB,kBAAmB7qF,KAAK6qF,kBACxBe,mBAAoB5rF,KAAK4rF,mBAAmB7tF,KAAI,SAAUiuF,GAAM,OAAOA,EAAG5wB,cAGlFwvB,EAAYvvB,SAAW,SAAUC,GAG7B,OAAO,IAAIsvB,EAFctvB,EAAKswB,mBACzB7tF,KAAI,SAAUiuF,GAAM,OAAOhxB,GAAuBK,SAAS2wB,MACrB1wB,EAAKuvB,wJE6CpDl0F,4EADKkG,iIAFMA,+VALflG,SACIJ,OACQA,cAGJA,2CAKJA,OACIA,sBAGAA,iB3R8jBR,SAA6BE,EAAM/B,GAEC,WADTu3F,iBAAiBx1F,GACrBi3B,WACfj3B,EAAKoC,MAAM60B,SAAW,YAE1B,MAAMw+D,EAASj1F,EAAQ,UACvBi1F,EAAO7zF,aAAa,QAAS,+JAE7B6zF,EAAO7zF,aAAa,cAAe,QACnC6zF,EAAOC,UAAY,EACnB,MAAM3yF,EAAcE,IACpB,IAAI0yF,EAeJ,OAdI5yF,GACA0yF,EAAOj+E,IAAM,kFACbm+E,EAAc10F,EAAOlC,OAAQ,UAAYmC,IACjCA,EAAM8a,SAAWy5E,EAAOG,eACxB33F,QAIRw3F,EAAOj+E,IAAM,cACbi+E,EAAO79E,OAAS,KACZ+9E,EAAc10F,EAAOw0F,EAAOG,cAAe,SAAU33F,KAG7D6B,EAAOE,EAAMy1F,GACN,MACC1yF,GAGK4yF,GAAeF,EAAOG,gBAF3BD,IAKJt1F,EAAOo1F,yC2R5mBkDrvF,2BAUdA,gCANpCA,MAENA,iJAjGChF,MAAcy0F,IAAkCrqB,UAFtC,IAEiDnY,eAD5C,SAGjByiC,EACAC,EACAC,EACAC,EAAY,mBACZC,EAAc,KACdC,EAAS,KACTC,GAAU,EACVC,GAAY,+BRqGiB,IAAU9+E,MQhGvC6+E,GAAU,SAEJE,GAAahF,iBAAiBthB,KAAK,oBR8FFz4D,EQ7FD,aR6Fe65E,GAAKQ,kBAAkB5hB,KAAKz4D,IQ3F7E8+E,GASAF,EAAOI,YAAYh4F,kBAAiB80C,GAChCA,EAAMlpC,WACN8rF,EAAY,2BAEhBC,EAAYM,QAAS,SACrBR,EAASQ,QAAS,KAClBH,GAAY,MACZD,GAAU,KAfVD,QAAej+C,UAAUu+C,aAAaC,cAAcC,OAAO,EAAKC,OAAM,QACtEV,EAAYW,UAAYV,KACxBD,EAAYY,OACZT,GAAY,MACZH,EAAYM,QAAS,SACrBR,EAASQ,QAAS,SAClBP,EAAY,gCAeLc,UAELvqF,QCtDP,SAA0BxK,EAAOZ,GAEpC,YADgB,IAAZA,IAAsBA,EAAU,IAAI6iF,IACjC,IAAI6P,GAAqB9xF,EAAOZ,GDoDd41F,CAAyBd,EAAa90F,GAAS6xF,yBAEhEzmF,SAKMyqF,EE1DX,SAASC,EAAcpR,EAASqR,GACnC,IAAIvuD,EAAK,IAAIuzB,GAAWg7B,EAAWnrF,MAAOmrF,EAAWprF,QAASC,EAAQ48B,EAAG58B,MAAOD,EAAS68B,EAAG78B,OAC5F,GAAIC,GAAS,GAAKD,GAAU,EACxB,MAAM,IAAIpI,MAAM,uCAAyCi3C,KAAKC,UAAU,CAAE7uC,MAAOA,EAAOD,OAAQA,KAEpG,GAAIhD,MAAMi1B,QAAQ8nD,GACd,OAAOA,EAAQx+E,KAAI,SAAUuC,GAAO,OAAOqtF,EAAcrtF,EAAK,CAAEmC,MAAOA,EAAOD,OAAQA,OAE1F,GAAI6rE,GAAoBkO,GAAU,CAC9B,IAAIsR,EAAmBtR,EAAQzjB,UAAUnC,QAAQl0D,EAAOD,GACpDsrF,EAAmBvR,EAAQhO,mBAAmB5X,QAAQk3B,EAAiBz5B,IAAI3xD,MAAOorF,EAAiBz5B,IAAI5xD,QAC3G,OAAO8rE,GAAwB5S,GAAwB6gB,EAASsR,GAAmBC,GAEvF,OAAIryB,GAAoB8gB,GACb7gB,GAAwB6gB,EAASA,EAAQzjB,UAAUnC,QAAQl0D,EAAOD,IAEzE+5E,aAAmBpkB,IAAiBokB,aAAmB3lB,GAChD2lB,EAAQ5lB,QAAQl0D,EAAOD,GAE3B+5E,EFuCuBwR,CAAsB9qF,EG9DjD,SAAyBxK,EAAOu1F,EAAWC,QACnB,IAAvBA,IAAiCA,GAAqB,GAC1D,IAAI5uD,EAAK4uD,EACH/tB,GAAmB8tB,GACnBA,EAAWvrF,EAAQ48B,EAAG58B,MAAOD,EAAS68B,EAAG78B,OAG/C,OAFA/J,EAAMgK,MAAQA,EACdhK,EAAM+J,OAASA,EACR,CAAEC,MAAOA,EAAOD,OAAQA,GHqDV0rF,CAAwBzB,GAAWhqF,MAAO+pF,EAAahqF,OAAQ+pF,KAGtEte,EAAgB,II3DH1Q,EJ6DSkvB,EI7DEzoB,EJ6DQ0pB,GI5DxBluF,MAAMi1B,QAAQuvC,GAAcA,EAAa,CAACA,IAChDhvE,SAAQ,SAAUmvE,GAC9B,IAAIlZ,EAAQkZ,aAAevN,GACrBuN,EAAIlZ,MACHwQ,GAAoB0I,GAAOA,EAAIrL,UAAU7N,WAAQtxD,EACpDy6D,EAAM+P,aAAevN,GACnBuN,EAAI/P,IACHqH,GAAoB0I,GAAOA,EAAIrL,UAAU1E,IAAM,IAAIH,GAAIkQ,GAC1DlS,EAAQhH,EAAQ,GAAKzjD,GAAMyjD,QAAStxD,EACxC,IAAIimE,GAAQxL,EAAK,CAAEnC,MAAOA,IAAS6M,KAAKvB,MJoDpC4wB,GAAiC1B,EAAUiB,EAAezf,OAC1D4e,GAAU,GI/Df,IAAwBtvB,EAAWyG,EJkE/B8oB,GACCsB,eAAiBZ,6CA0C2Cb,qDAGhCF,gwHKtEa5vF,KAAckS,iIAFSlS,KAAckS,oBAAclS,mBAAxGlG,SACEJ,OACIA,OACIA,OACIA,OACIA,OACIA,OACIA,cACAA,OACIA,cAQRA,OACIA,cACAA,cACAA,OACIA,cASZA,OACIA,OACIA,cACAA,iCAKZA,cAOJA,OACIA,OACIA,OACIA,cACAA,OACIA,eACAA,gBACAA,gBACAA,2DA5C2E+L,GAAYxB,IAAI,yDA4C3BuB,GAAevB,KAAKjE,QAApBwF,GAAevB,KAAKjE,8EAnDzDA,KAAckS,kCAFSlS,KAAckS,gCAAclS,oHApChGkS,GAAM,0BAHNkD,EACAo8E,EAIAC,EAEJjsF,GAAenB,UAAUhJ,QACrBo2F,EAAiBp2F,qFAoDiF8Z,IAAwB/a,QAAS,6XC/B3IN,SACIJ,0BAGAA,0BAGAA,4tBCrCJI,q7BCiCAA,yfCpCY,sEAAQ,CACnBH,OAAQW,SAASkY,KACjB3Q,MAAO"}